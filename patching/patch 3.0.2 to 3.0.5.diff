From 787f4fa2e9eabd93026753f3b4df33d6f231fc85 Mon Sep 17 00:00:00 2001
From: InspireUI <minh@inspireui.com>
Date: Fri, 5 Aug 2022 22:21:00 +0700
Subject: [PATCH] =?UTF-8?q?=F0=9F=9A=80=20Release=20v3.0.5?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 android/Gemfile.lock                          |  182 -
 android/app/src/main/AndroidManifest.xml      |    9 +-
 assets/icons/payment/apple-pay-mark.svg       |   84 +
 assets/icons/payment/google-pay-mark.png      |  Bin 0 -> 34146 bytes
 assets/icons/payment/paypal.png               |  Bin 2320 -> 0 bytes
 assets/icons/payment/paypal.svg               |   55 +
 assets/icons/payment/razorpay.png             |  Bin 1310 -> 0 bytes
 assets/icons/payment/razorpay.svg             |   12 +
 assets/icons/payment/stripe.png               |  Bin 1843 -> 0 bytes
 assets/icons/payment/stripe.svg               |    4 +
 assets/images/country/da.svg                  |    1 +
 assets/images/country/er.png                  |  Bin 0 -> 9752 bytes
 assets/images/empty_shipping.png              |  Bin 0 -> 17169 bytes
 assets/images/get_notified.json               |    1 +
 ios/Gemfile.lock                              |  182 -
 ios/Podfile                                   |   25 +-
 ios/Runner/Info.plist                         |    2 +-
 ios/Runner/Info.plist.printer.backup          |  161 +
 ios/Runner/Runner.entitlements                |    4 +
 lib/app.dart                                  |   36 +-
 lib/app_init.dart                             |    8 +-
 lib/common/config.dart                        |    1 -
 lib/common/config/configurations.dart         |   30 +-
 lib/common/config/default_env.dart            |   32 +-
 lib/common/config/general.dart                |    2 +
 lib/common/config/languages.dart              |  106 +-
 lib/common/config/models/advanced_config.dart |    6 +
 .../config/models/age_restriction_config.dart |   77 +
 .../config/models/color_override/index.dart   |    2 +
 .../product_filter_color_config.dart          |   42 +
 .../color_override/stock_color_config.dart    |   29 +
 .../config/models/color_override_config.dart  |   57 +-
 .../config/models/general_setting_item.dart   |   52 +-
 .../in_app_update_for_android_config.dart     |   40 +
 lib/common/config/models/index.dart           |    2 +
 lib/common/config/models/payment_config.dart  |   24 +
 .../config/models/product_card_config.dart    |   85 +
 .../config/models/product_detail_config.dart  |   20 +
 lib/common/config/payments.dart               |    4 +
 lib/common/config/products.dart               |    7 +-
 lib/common/constants.dart                     |    1 -
 lib/common/constants/local_storage_key.dart   |    1 +
 lib/common/constants/platform.dart            |   16 -
 lib/common/constants/vendors.dart             |    5 +-
 lib/common/theme/colors.dart                  |    2 -
 lib/common/theme/fonts.dart                   |   18 +-
 lib/common/tools/flash.dart                   |  132 +-
 lib/common/tools/image_tools.dart             |   35 +-
 .../tools/in_app_update_for_android.dart      |   38 +
 lib/common/tools/navigate_tools.dart          |   22 +
 lib/common/tools/price_tools.dart             |    2 +-
 lib/common/tools/tools.dart                   |    4 +-
 lib/config/config_en.json                     |   17 +-
 lib/config/config_ti.json                     |  235 ++
 lib/env.dart                                  |  174 +-
 lib/frameworks/frameworks.dart                |  163 +-
 lib/frameworks/product_variant_mixin.dart     |  181 +-
 lib/frameworks/woocommerce/index.dart         |   91 +-
 .../woocommerce/product_addons_mixin.dart     |  579 ++-
 .../woocommerce/services/woo_commerce.dart    |  142 +-
 lib/frameworks/wordpress/index.dart           |   51 -
 .../screens/home_blog_search_screen.dart      |    6 +-
 .../widgets/blog_list_layout.dart             |   14 +-
 .../widgets/horizontal_slider_list.dart       |   14 +-
 .../widgets/related_blog_list.dart            |    8 +-
 .../presentation/widgets/slider_item.dart     |   14 +-
 .../widgets/vertical/vertical.dart            |    5 +-
 lib/generated/intl/messages_all.dart          |    4 +
 lib/generated/intl/messages_ar.dart           |   20 +-
 lib/generated/intl/messages_bn.dart           |   15 +-
 lib/generated/intl/messages_cs.dart           |   16 +-
 lib/generated/intl/messages_da.dart           |   15 +-
 lib/generated/intl/messages_de.dart           |   15 +-
 lib/generated/intl/messages_el.dart           |   16 +-
 lib/generated/intl/messages_en.dart           |   34 +-
 lib/generated/intl/messages_es.dart           |   15 +-
 lib/generated/intl/messages_fa.dart           |   11 +
 lib/generated/intl/messages_fi.dart           |   16 +-
 lib/generated/intl/messages_fr.dart           |   55 +-
 lib/generated/intl/messages_he.dart           |   13 +-
 lib/generated/intl/messages_hi.dart           |   15 +-
 lib/generated/intl/messages_hu.dart           |   15 +-
 lib/generated/intl/messages_id.dart           |   16 +-
 lib/generated/intl/messages_it.dart           |   16 +-
 lib/generated/intl/messages_ja.dart           |   14 +-
 lib/generated/intl/messages_km.dart           |   16 +-
 lib/generated/intl/messages_ko.dart           |   13 +-
 lib/generated/intl/messages_lo.dart           |   16 +-
 lib/generated/intl/messages_ms.dart           |   16 +-
 lib/generated/intl/messages_my.dart           |   15 +-
 lib/generated/intl/messages_nl.dart           |   16 +-
 lib/generated/intl/messages_pl.dart           |   16 +-
 lib/generated/intl/messages_pt.dart           |   15 +-
 lib/generated/intl/messages_ro.dart           |   15 +-
 lib/generated/intl/messages_ru.dart           |   16 +-
 lib/generated/intl/messages_sk.dart           |   16 +-
 lib/generated/intl/messages_sq.dart           |   15 +-
 lib/generated/intl/messages_sr.dart           |   16 +-
 lib/generated/intl/messages_sv.dart           |   15 +-
 lib/generated/intl/messages_sw.dart           |   15 +-
 lib/generated/intl/messages_ta.dart           |   16 +-
 lib/generated/intl/messages_th.dart           |   15 +-
 lib/generated/intl/messages_ti.dart           | 1125 +++++
 lib/generated/intl/messages_tr.dart           |   15 +-
 lib/generated/intl/messages_uk.dart           |   16 +-
 lib/generated/intl/messages_uz.dart           |   15 +-
 lib/generated/intl/messages_vi.dart           |   16 +-
 lib/generated/intl/messages_zh.dart           |   12 +-
 lib/generated/intl/messages_zh_CN.dart        |   12 +-
 lib/generated/intl/messages_zh_TW.dart        |   12 +-
 lib/generated/l10n.dart                       |  177 +-
 .../languages/cupertino/cupertino_ti.dart     |  164 +
 lib/generated/languages/cupertino/index.dart  |   23 +-
 lib/generated/languages/ku_language.dart      |  704 ----
 .../local_widgets_localizations.dart          |    4 +-
 .../languages/material/datetime/index.dart    |    1 +
 .../languages/material/datetime/ku.dart       |  320 +-
 .../languages/material/datetime/ti.dart       |  240 ++
 lib/generated/languages/material/index.dart   |  101 +-
 .../languages/material/material_ku.dart       |  796 ++--
 .../languages/material/material_ti.dart       |  487 +++
 lib/l10n/intl_ar.arb                          |   28 +-
 lib/l10n/intl_bn.arb                          |   10 +-
 lib/l10n/intl_cs.arb                          |   10 +-
 lib/l10n/intl_da.arb                          |   10 +-
 lib/l10n/intl_de.arb                          |   10 +-
 lib/l10n/intl_el.arb                          |   10 +-
 lib/l10n/intl_en.arb                          |   24 +-
 lib/l10n/intl_es.arb                          |   10 +-
 lib/l10n/intl_fa.arb                          |   10 +-
 lib/l10n/intl_fi.arb                          |   10 +-
 lib/l10n/intl_fr.arb                          |   48 +-
 lib/l10n/intl_he.arb                          |   10 +-
 lib/l10n/intl_hi.arb                          |   10 +-
 lib/l10n/intl_hu.arb                          |   10 +-
 lib/l10n/intl_id.arb                          |   10 +-
 lib/l10n/intl_it.arb                          |   10 +-
 lib/l10n/intl_ja.arb                          |   10 +-
 lib/l10n/intl_km.arb                          |   10 +-
 lib/l10n/intl_ko.arb                          |   10 +-
 lib/l10n/intl_lo.arb                          |   10 +-
 lib/l10n/intl_ms.arb                          |   10 +-
 lib/l10n/intl_my.arb                          |   10 +-
 lib/l10n/intl_nl.arb                          |   10 +-
 lib/l10n/intl_pl.arb                          |   10 +-
 lib/l10n/intl_pt.arb                          |   10 +-
 lib/l10n/intl_ro.arb                          |   10 +-
 lib/l10n/intl_ru.arb                          |   10 +-
 lib/l10n/intl_sk.arb                          |   10 +-
 lib/l10n/intl_sq.arb                          |   10 +-
 lib/l10n/intl_sr.arb                          |   10 +-
 lib/l10n/intl_sv.arb                          |   10 +-
 lib/l10n/intl_sw.arb                          |   10 +-
 lib/l10n/intl_ta.arb                          |   10 +-
 lib/l10n/intl_th.arb                          |   10 +-
 lib/l10n/intl_ti.arb                          |  812 ++++
 lib/l10n/intl_tr.arb                          |   10 +-
 lib/l10n/intl_uk.arb                          |   10 +-
 lib/l10n/intl_uz.arb                          |   10 +-
 lib/l10n/intl_vi.arb                          |   10 +-
 lib/l10n/intl_zh.arb                          |   10 +-
 lib/l10n/intl_zh_CN.arb                       |   10 +-
 lib/l10n/intl_zh_TW.arb                       |   10 +-
 lib/main.dart                                 |   17 +-
 lib/main_layout/main_layout.dart              |   17 +-
 lib/menu/appbar.dart                          |  585 +--
 lib/menu/maintab.dart                         |   33 +-
 lib/menu/maintab_delegate.dart                |    2 +-
 lib/menu/side_menu.dart                       |   18 +-
 lib/menu/sidebar.dart                         |   44 +-
 lib/models/app_model.dart                     |   13 +-
 lib/models/cart/cart_model_bigcommerce.dart   |    3 +-
 lib/models/cart/cart_model_magento.dart       |   17 +-
 lib/models/cart/cart_model_shopify.dart       |    6 +-
 lib/models/cart/cart_model_woo.dart           |   15 +-
 lib/models/cart/mixin/address_mixin.dart      |    2 +-
 lib/models/cart/mixin/cart_mixin.dart         |   14 +-
 lib/models/cart/mixin/coupon_mixin.dart       |    2 +-
 lib/models/cart/mixin/currency_mixin.dart     |   28 +-
 lib/models/cart/mixin/local_mixin.dart        |    2 +-
 lib/models/cart/mixin/vendor_mixin.dart       |    4 +-
 lib/models/category_model.dart                |   17 +-
 lib/models/entities/blog.dart                 |   26 +-
 lib/models/entities/category.dart             |    2 +-
 lib/models/entities/coupon.dart               |    6 +-
 lib/models/entities/fstore_notification.dart  |   16 +-
 .../entities/fstore_notification_item.dart    |    5 +
 lib/models/entities/payment_method.dart       |    7 +
 lib/models/entities/product.dart              |   58 +-
 lib/models/entities/product_addons.dart       |    2 +
 lib/models/entities/product_attribute.dart    |    2 +-
 lib/models/entities/product_variation.dart    |   18 +-
 lib/models/entities/review.dart               |    2 +-
 lib/models/entities/tag.dart                  |    4 +-
 lib/models/entities/tax.dart                  |    5 +
 lib/models/mixins/language_mixin.dart         |    2 +-
 lib/models/notification_model.dart            |    6 +
 lib/models/order/fee_item.dart                |   11 +
 lib/models/order/order.dart                   |   73 +-
 lib/models/order/product_item.dart            |    4 +-
 lib/models/payment_method_model.dart          |   37 +-
 lib/models/product_model.dart                 |   35 +-
 lib/models/search_model.dart                  |    4 +-
 lib/models/user_model.dart                    |    2 +-
 lib/models/vendor/vendor_shipping_model.dart  |    6 +-
 .../audio/views/widgets/open_container.dart   |  867 ----
 .../views/login_sms_screen.dart               |   40 +-
 .../dynamic_layout/config/app_config.dart     |    9 +
 .../dynamic_layout/config/app_setting.dart    |   13 +
 .../dynamic_layout/config/header_config.dart  |    4 +
 .../dynamic_layout/config/product_config.dart |   47 +-
 .../dynamic_layout/dynamic_layout.dart        |   73 +-
 .../dynamic_layout/geo_search/geo_search.dart |    4 +-
 .../dynamic_layout/header/header_type.dart    |   65 +-
 .../helper/countdown_timer.dart               |   61 +-
 lib/modules/dynamic_layout/helper/helper.dart |   46 +-
 lib/modules/dynamic_layout/index.dart         |    1 -
 .../instagram_story/instagram_story.dart      |    6 +-
 .../product/future_builder.dart               |  106 +-
 .../dynamic_layout/product/product_grid.dart  |   84 +-
 .../product/product_list_tile.dart            |    2 +-
 .../search/home_search_page.dart              |  284 --
 .../slider_testimonial/index.dart             |    3 +-
 .../dynamic_layout/story/story_card.dart      |   27 +-
 .../dynamic_layout/tabbar/tabbar_icon.dart    |    8 +
 .../dynamic_layout/tiktok/tiktok_videos.dart  |    6 +-
 .../vertical/pinterest_card.dart              |    8 +-
 .../vertical/product_select_card.dart         |    4 +-
 .../dynamic_layout/vertical/vertical.dart     |    7 +-
 .../vertical/vertical_layout.dart             |  123 +-
 .../firebase/dynamic_link_service.dart        |   53 +-
 .../firebase_notification_service.dart        |    6 +
 .../native_payment/flutterwave/services.dart  |  105 +
 lib/modules/native_payment/index.dart         |    4 -
 .../native_payment/mercado_pago/index.dart    |   65 +-
 lib/modules/native_payment/paypal/index.dart  |    2 +-
 .../native_payment/paystack/services.dart     |   98 +
 .../native_payment/paytm/services.dart        |    4 +-
 .../product_reviews_model.dart                |   14 +-
 .../tera_wallet/views/my_wallet_screen.dart   |   10 +-
 .../tera_wallet/views/partial_payment.dart    |   13 +-
 .../tera_wallet/views/transfer_screen.dart    |   14 +-
 .../views/widgets/payment_method_item.dart    |    8 +-
 .../vendor_location_information_screen.dart   |   47 +-
 .../vendor_onboarding_services.dart           |    9 +-
 lib/modules_ext/booking/booking.dart          |    6 +
 .../booking/booking_constants.dart            |    6 +
 .../WooAPIBooking.postman_collection.json     | 3751 +++++++++++++++++
 .../WooAPIBooking.postman_environment.json    |   29 +
 lib/modules_ext/booking/run_test.sh           |   67 +
 .../services/booking_service_mixin.dart       |   17 +
 .../booking/viewmodel/booking_viewmodel.dart  |   82 +
 .../booking/views/booking_widget.dart         |  199 +
 .../booking/views/product_booking_layout.dart |   78 +
 .../views/widgets/calendar/calendar.dart      |   91 +
 .../choose_time/choose_time_constants.dart    |   22 +
 .../choose_time/choose_time_widget.dart       |  153 +
 .../membership_ultimate/common/constants.dart |    3 +
 .../membership_ultimate/models/plan.dart      |   21 +
 .../membership_ultimate/route.dart            |   39 +
 .../membership_ultimate/services/index.dart   |   84 +
 .../membership_ultimate_service_mixin.dart    |    9 +
 .../views/bankinfo_screen.dart                |   50 +
 .../views/plans_screen.dart                   |  233 +
 .../views/signup_screen.dart                  |  429 ++
 .../native_payment/myfatoorah/index.dart      |  318 ++
 .../native_payment/myfatoorah/utils.dart      |   26 +
 .../native_payment/stripe/index.dart          |  221 +
 .../native_payment/stripe/services.dart       |  110 +
 .../native_payment/stripe_v2/index.dart       |  187 +
 lib/modules_ext/native_payment/tap/index.dart |  136 +
 .../native_payment/tap/services.dart          |   33 +
 .../paid_membership_pro/common/constants.dart |    3 +
 .../paid_membership_pro/models/invoice.dart   |   43 +
 .../paid_membership_pro/models/plan.dart      |   26 +
 .../paid_membership_pro/route.dart            |   40 +
 .../paid_membership_pro/services/index.dart   |   79 +
 .../paid_membership_service_mixin.dart        |    9 +
 .../views/confirmation_screen.dart            |  116 +
 .../views/plans_screen.dart                   |  232 +
 .../views/signup_screen.dart                  |  379 ++
 lib/routes/flux_navigate.dart                 |   14 +
 lib/routes/route.dart                         |   18 +-
 lib/screens/base_screen.dart                  |    7 +-
 lib/screens/brand/brand_backdrop.dart         |   24 +
 lib/screens/cart/my_cart_screen.dart          |   38 +-
 .../cart/widgets/shopping_cart_sumary.dart    |   22 +-
 lib/screens/cart/widgets/wishlist.dart        |   25 +-
 lib/screens/categories/categories_screen.dart |    5 +-
 .../categories/category_search_screen.dart    |    7 +-
 lib/screens/categories/layouts/side_menu.dart |    3 +
 lib/screens/categories/layouts/sub.dart       |   10 +-
 lib/screens/chat/bottom_sheet_smart_chat.dart |   10 +-
 lib/screens/chat/chat_mixin.dart              |    5 +-
 lib/screens/chat/fab_circle_smart_chat.dart   |    8 +-
 lib/screens/chat/vendor_chat.dart             |    6 +-
 lib/screens/checkout/review_screen.dart       |    4 +-
 .../checkout/widgets/payment_method_item.dart |    6 +-
 .../checkout/widgets/payment_methods.dart     |  298 +-
 .../checkout/widgets/shipping_method.dart     |   26 +-
 lib/screens/common/app_bar_mixin.dart         |    8 +-
 lib/screens/common/delete_account_mixin.dart  |   34 +
 .../common/permission_request_mixin.dart      |   74 +
 lib/screens/custom/static_site.dart           |   12 +-
 lib/screens/detail/product_detail_screen.dart |   66 +-
 .../detail/themes/half_size_image_type.dart   |    7 +-
 lib/screens/detail/themes/simple_type.dart    |   15 +-
 lib/screens/detail/widgets/index.dart         |    1 +
 .../detail/widgets/listing_booking.dart       |    4 +-
 .../widgets/product_detail_categories.dart    |    2 +-
 .../detail/widgets/product_grouped.dart       |   39 +-
 .../detail/widgets/product_image_slider.dart  |   29 +-
 .../widgets/product_image_thumbnail.dart      |    4 +-
 .../detail/widgets/product_variant.dart       |   20 +-
 .../detail/widgets/related_product.dart       |  116 +-
 .../related_product_from_same_store.dart      |  119 +
 lib/screens/detail/widgets/video_feature.dart |   14 +-
 lib/screens/home/change_language_mixin.dart   |    3 +-
 lib/screens/home/home_screen.dart             |    2 +-
 .../home/notification_request_screen.dart     |  110 +-
 lib/screens/home/privacy_term_screen.dart     |   63 +-
 lib/screens/login_sms/login_sms_screen.dart   |  335 +-
 .../login_sms/login_sms_viewmodel.dart        |   78 +
 lib/screens/login_sms/pin_code_widget.dart    |  119 -
 .../views/order_history_detail_screen.dart    |   71 +-
 .../views/widgets/order_list_item.dart        |   11 +-
 .../views/widgets/order_price.dart            |    6 +-
 .../views/widgets/product_order_item.dart     |   10 +-
 lib/screens/posts/posts_backdrop.dart         |    4 +-
 lib/screens/products/products_flatview.dart   |   86 +-
 lib/screens/products/products_mixin.dart      |   44 +
 lib/screens/products/products_screen.dart     |   70 +-
 lib/screens/products/products_searchview.dart |  431 ++
 lib/screens/request/camera_permission.dart    |   77 +
 lib/screens/search/search_screen.dart         |  286 +-
 .../search/widgets/filters/filter_search.dart |  103 +-
 .../recent/recent_products_custom.dart        |   10 +-
 lib/screens/search/widgets/search_box.dart    |  100 +-
 lib/screens/search/widgets/search_widget.dart |  299 ++
 lib/screens/settings/currencies_screen.dart   |    9 +
 lib/screens/settings/language_screen.dart     |  140 +-
 lib/screens/settings/notification_screen.dart |   31 +-
 lib/screens/settings/rate_myapp_mixin.dart    |   70 +
 lib/screens/settings/settings_screen.dart     |  413 +-
 .../user_update/user_update_screen.dart       |    6 +-
 .../user_update/user_update_woo_screen.dart   |  835 ++--
 lib/screens/users/age_restriction_screen.dart |  198 +
 lib/screens/users/delete_account_screen.dart  |   20 +-
 lib/screens/users/forgot_password_screen.dart |    1 +
 lib/screens/users/login_screen.dart           |  430 +-
 lib/screens/users/pin_code_widget.dart        |  142 +
 lib/screens/users/registration_screen.dart    |   62 +-
 lib/screens/users/user_point_screen.dart      |    4 +-
 lib/screens/wishlist/empty_wishlist.dart      |    4 +-
 lib/services/base_services.dart               |   75 +-
 .../notification/notification_service.dart    |   32 +-
 lib/services/paging/base_page_repository.dart |    4 +-
 .../paging/paging_with_user_repository.dart   |    7 +-
 lib/services/service_config.dart              |   73 +-
 lib/services/services.dart                    |   10 +-
 .../asymmetric/asymmetric_columns.dart        |    4 +-
 lib/widgets/asymmetric/asymmetric_view.dart   |   17 +-
 lib/widgets/backdrop/backdrop.dart            |   34 +-
 lib/widgets/backdrop/backdrop_menu.dart       |   25 +-
 lib/widgets/blog/banner/blog_list_view.dart   |    8 +-
 lib/widgets/blog/blog_list_backdrop.dart      |    8 +-
 lib/widgets/blog/blog_share_button.dart       |   11 +
 lib/widgets/blog/detailed_blog_mixin.dart     |   29 +-
 lib/widgets/common/animated_splash.dart       |   92 +-
 lib/widgets/common/common_setting_item.dart   |   38 +-
 lib/widgets/common/drag_handler.dart          |   30 +
 .../common/edit_product_info_widget.dart      |    4 +-
 lib/widgets/common/flare_loading.dart         |   12 +-
 lib/widgets/common/flare_splash_screen.dart   |   55 +-
 lib/widgets/common/lottie_splashscreen.dart   |   33 +-
 lib/widgets/common/paging_list.dart           |   18 +-
 lib/widgets/common/rive_splashscreen.dart     |   70 +-
 lib/widgets/common/splash_screen.dart         |   48 +-
 lib/widgets/common/static_splashscreen.dart   |   55 +-
 lib/widgets/common/webview_inapp.dart         |   11 +
 .../general/general_banner_widget.dart        |   49 +
 .../general/general_blog_category_widget.dart |   36 +
 lib/widgets/general/general_blog_widget.dart  |   37 +
 .../general/general_category_widget.dart      |   36 +
 .../general/general_product_widget.dart       |   37 +
 lib/widgets/general/general_title_widget.dart |    5 +-
 lib/widgets/general/general_widget.dart       |   75 +
 lib/widgets/general/index.dart                |    7 +-
 lib/widgets/home/preview_overlay.dart         |    2 +-
 lib/widgets/home/preview_reload.dart          |    4 +-
 lib/widgets/html/index.dart                   |    6 +-
 lib/widgets/overlay/custom_overlay_state.dart |   30 +-
 .../overlay/mixin/smart_chat_mixin.dart       |    4 +-
 lib/widgets/product/action_button_mixin.dart  |   81 +-
 lib/widgets/product/product_item_tile.dart    |   14 +-
 lib/widgets/product/product_list.dart         |   40 +-
 .../widgets/cart_button_with_quantity.dart    |   16 +-
 lib/widgets/product/widgets/pricing.dart      |    2 +-
 .../product/widgets/quantity_selection.dart   |    5 +-
 lib/widgets/product/widgets/stock_status.dart |    9 +-
 lib/widgets/scanner/scanner.dart              |   23 +-
 lib/widgets/scanner/scanner_button.dart       |   62 +-
 lib/widgets/web_layout/appbar_web.dart        |    8 +-
 .../web_layout/widgets/button_language.dart   |  177 +-
 pubspec.yaml                                  |  129 +-
 .../flutter/generated_plugin_registrant.cc    |    3 +
 windows/flutter/generated_plugins.cmake       |    1 +
 407 files changed, 20695 insertions(+), 7107 deletions(-)
 delete mode 100644 android/Gemfile.lock
 create mode 100755 assets/icons/payment/apple-pay-mark.svg
 create mode 100644 assets/icons/payment/google-pay-mark.png
 delete mode 100755 assets/icons/payment/paypal.png
 create mode 100644 assets/icons/payment/paypal.svg
 delete mode 100755 assets/icons/payment/razorpay.png
 create mode 100644 assets/icons/payment/razorpay.svg
 delete mode 100755 assets/icons/payment/stripe.png
 create mode 100644 assets/icons/payment/stripe.svg
 create mode 100644 assets/images/country/da.svg
 create mode 100644 assets/images/country/er.png
 create mode 100644 assets/images/empty_shipping.png
 create mode 100644 assets/images/get_notified.json
 delete mode 100644 ios/Gemfile.lock
 create mode 100644 ios/Runner/Info.plist.printer.backup
 create mode 100644 lib/common/config/models/age_restriction_config.dart
 create mode 100644 lib/common/config/models/color_override/index.dart
 create mode 100644 lib/common/config/models/color_override/product_filter_color_config.dart
 create mode 100644 lib/common/config/models/color_override/stock_color_config.dart
 create mode 100644 lib/common/config/models/in_app_update_for_android_config.dart
 create mode 100644 lib/common/config/models/product_card_config.dart
 delete mode 100644 lib/common/constants/platform.dart
 create mode 100644 lib/common/tools/in_app_update_for_android.dart
 create mode 100644 lib/config/config_ti.json
 create mode 100644 lib/generated/intl/messages_ti.dart
 create mode 100644 lib/generated/languages/cupertino/cupertino_ti.dart
 delete mode 100644 lib/generated/languages/ku_language.dart
 create mode 100644 lib/generated/languages/material/datetime/ti.dart
 create mode 100644 lib/generated/languages/material/material_ti.dart
 create mode 100644 lib/l10n/intl_ti.arb
 create mode 100644 lib/models/order/fee_item.dart
 delete mode 100644 lib/modules/audio/views/widgets/open_container.dart
 delete mode 100644 lib/modules/dynamic_layout/search/home_search_page.dart
 create mode 100644 lib/modules/native_payment/flutterwave/services.dart
 delete mode 100644 lib/modules/native_payment/index.dart
 create mode 100644 lib/modules/native_payment/paystack/services.dart
 create mode 100644 lib/modules_ext/booking/booking.dart
 create mode 100644 lib/modules_ext/booking/booking_constants.dart
 create mode 100644 lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_collection.json
 create mode 100644 lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_environment.json
 create mode 100644 lib/modules_ext/booking/run_test.sh
 create mode 100644 lib/modules_ext/booking/services/booking_service_mixin.dart
 create mode 100644 lib/modules_ext/booking/viewmodel/booking_viewmodel.dart
 create mode 100644 lib/modules_ext/booking/views/booking_widget.dart
 create mode 100644 lib/modules_ext/booking/views/product_booking_layout.dart
 create mode 100644 lib/modules_ext/booking/views/widgets/calendar/calendar.dart
 create mode 100644 lib/modules_ext/booking/views/widgets/choose_time/choose_time_constants.dart
 create mode 100644 lib/modules_ext/booking/views/widgets/choose_time/choose_time_widget.dart
 create mode 100644 lib/modules_ext/membership_ultimate/common/constants.dart
 create mode 100644 lib/modules_ext/membership_ultimate/models/plan.dart
 create mode 100644 lib/modules_ext/membership_ultimate/route.dart
 create mode 100644 lib/modules_ext/membership_ultimate/services/index.dart
 create mode 100644 lib/modules_ext/membership_ultimate/services/membership_ultimate_service_mixin.dart
 create mode 100644 lib/modules_ext/membership_ultimate/views/bankinfo_screen.dart
 create mode 100644 lib/modules_ext/membership_ultimate/views/plans_screen.dart
 create mode 100644 lib/modules_ext/membership_ultimate/views/signup_screen.dart
 create mode 100644 lib/modules_ext/native_payment/myfatoorah/index.dart
 create mode 100644 lib/modules_ext/native_payment/myfatoorah/utils.dart
 create mode 100644 lib/modules_ext/native_payment/stripe/index.dart
 create mode 100644 lib/modules_ext/native_payment/stripe/services.dart
 create mode 100644 lib/modules_ext/native_payment/stripe_v2/index.dart
 create mode 100644 lib/modules_ext/native_payment/tap/index.dart
 create mode 100644 lib/modules_ext/native_payment/tap/services.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/common/constants.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/models/invoice.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/models/plan.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/route.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/services/index.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/services/paid_membership_service_mixin.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/views/confirmation_screen.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/views/plans_screen.dart
 create mode 100644 lib/modules_ext/paid_membership_pro/views/signup_screen.dart
 create mode 100644 lib/screens/common/delete_account_mixin.dart
 create mode 100644 lib/screens/common/permission_request_mixin.dart
 create mode 100644 lib/screens/detail/widgets/related_product_from_same_store.dart
 create mode 100644 lib/screens/login_sms/login_sms_viewmodel.dart
 delete mode 100644 lib/screens/login_sms/pin_code_widget.dart
 create mode 100644 lib/screens/products/products_mixin.dart
 create mode 100644 lib/screens/products/products_searchview.dart
 create mode 100644 lib/screens/request/camera_permission.dart
 create mode 100644 lib/screens/search/widgets/search_widget.dart
 create mode 100644 lib/screens/settings/rate_myapp_mixin.dart
 create mode 100644 lib/screens/users/age_restriction_screen.dart
 create mode 100644 lib/screens/users/pin_code_widget.dart
 create mode 100644 lib/widgets/common/drag_handler.dart
 create mode 100644 lib/widgets/general/general_banner_widget.dart
 create mode 100644 lib/widgets/general/general_blog_category_widget.dart
 create mode 100644 lib/widgets/general/general_blog_widget.dart
 create mode 100644 lib/widgets/general/general_category_widget.dart
 create mode 100644 lib/widgets/general/general_product_widget.dart
 create mode 100644 lib/widgets/general/general_widget.dart

diff --git a/android/Gemfile.lock b/android/Gemfile.lock
deleted file mode 100644
index 8c068fab..00000000
--- a/android/Gemfile.lock
+++ /dev/null
@@ -1,182 +0,0 @@
-GEM
-  remote: https://rubygems.org/
-  specs:
-    CFPropertyList (3.0.3)
-    addressable (2.7.0)
-      public_suffix (>= 2.0.2, < 5.0)
-    atomos (0.1.3)
-    aws-eventstream (1.1.0)
-    aws-partitions (1.413.0)
-    aws-sdk-core (3.110.0)
-      aws-eventstream (~> 1, >= 1.0.2)
-      aws-partitions (~> 1, >= 1.239.0)
-      aws-sigv4 (~> 1.1)
-      jmespath (~> 1.0)
-    aws-sdk-kms (1.40.0)
-      aws-sdk-core (~> 3, >= 3.109.0)
-      aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.87.0)
-      aws-sdk-core (~> 3, >= 3.109.0)
-      aws-sdk-kms (~> 1)
-      aws-sigv4 (~> 1.1)
-    aws-sigv4 (1.2.2)
-      aws-eventstream (~> 1, >= 1.0.2)
-    babosa (1.0.4)
-    claide (1.0.3)
-    colored (1.2)
-    colored2 (3.1.2)
-    commander-fastlane (4.4.6)
-      highline (~> 1.7.2)
-    declarative (0.0.20)
-    declarative-option (0.1.0)
-    digest-crc (0.6.3)
-      rake (>= 12.0.0, < 14.0.0)
-    domain_name (0.5.20190701)
-      unf (>= 0.0.5, < 1.0.0)
-    dotenv (2.7.6)
-    emoji_regex (3.2.1)
-    excon (0.78.1)
-    faraday (1.2.0)
-      multipart-post (>= 1.2, < 3)
-      ruby2_keywords
-    faraday-cookie_jar (0.0.7)
-      faraday (>= 0.8.0)
-      http-cookie (~> 1.0.0)
-    faraday_middleware (1.0.0)
-      faraday (~> 1.0)
-    fastimage (2.2.1)
-    fastlane (2.170.0)
-      CFPropertyList (>= 2.3, < 4.0.0)
-      addressable (>= 2.3, < 3.0.0)
-      aws-sdk-s3 (~> 1.0)
-      babosa (>= 1.0.3, < 2.0.0)
-      bundler (>= 1.12.0, < 3.0.0)
-      colored
-      commander-fastlane (>= 4.4.6, < 5.0.0)
-      dotenv (>= 2.1.1, < 3.0.0)
-      emoji_regex (>= 0.1, < 4.0)
-      excon (>= 0.71.0, < 1.0.0)
-      faraday (~> 1.0)
-      faraday-cookie_jar (~> 0.0.6)
-      faraday_middleware (~> 1.0)
-      fastimage (>= 2.1.0, < 3.0.0)
-      gh_inspector (>= 1.1.2, < 2.0.0)
-      google-api-client (>= 0.37.0, < 0.39.0)
-      google-cloud-storage (>= 1.15.0, < 2.0.0)
-      highline (>= 1.7.2, < 2.0.0)
-      json (< 3.0.0)
-      jwt (>= 2.1.0, < 3)
-      mini_magick (>= 4.9.4, < 5.0.0)
-      multipart-post (~> 2.0.0)
-      plist (>= 3.1.0, < 4.0.0)
-      rubyzip (>= 2.0.0, < 3.0.0)
-      security (= 0.1.3)
-      simctl (~> 1.6.3)
-      slack-notifier (>= 2.0.0, < 3.0.0)
-      terminal-notifier (>= 2.0.0, < 3.0.0)
-      terminal-table (>= 1.4.5, < 2.0.0)
-      tty-screen (>= 0.6.3, < 1.0.0)
-      tty-spinner (>= 0.8.0, < 1.0.0)
-      word_wrap (~> 1.0.0)
-      xcodeproj (>= 1.13.0, < 2.0.0)
-      xcpretty (~> 0.3.0)
-      xcpretty-travis-formatter (>= 0.0.3)
-    fastlane-plugin-firebase_app_distribution (0.2.4)
-    gh_inspector (1.1.3)
-    google-api-client (0.38.0)
-      addressable (~> 2.5, >= 2.5.1)
-      googleauth (~> 0.9)
-      httpclient (>= 2.8.1, < 3.0)
-      mini_mime (~> 1.0)
-      representable (~> 3.0)
-      retriable (>= 2.0, < 4.0)
-      signet (~> 0.12)
-    google-cloud-core (1.5.0)
-      google-cloud-env (~> 1.0)
-      google-cloud-errors (~> 1.0)
-    google-cloud-env (1.4.0)
-      faraday (>= 0.17.3, < 2.0)
-    google-cloud-errors (1.0.1)
-    google-cloud-storage (1.29.2)
-      addressable (~> 2.5)
-      digest-crc (~> 0.4)
-      google-api-client (~> 0.33)
-      google-cloud-core (~> 1.2)
-      googleauth (~> 0.9)
-      mini_mime (~> 1.0)
-    googleauth (0.14.0)
-      faraday (>= 0.17.3, < 2.0)
-      jwt (>= 1.4, < 3.0)
-      memoist (~> 0.16)
-      multi_json (~> 1.11)
-      os (>= 0.9, < 2.0)
-      signet (~> 0.14)
-    highline (1.7.10)
-    http-cookie (1.0.3)
-      domain_name (~> 0.5)
-    httpclient (2.8.3)
-    jmespath (1.4.0)
-    json (2.5.1)
-    jwt (2.2.2)
-    memoist (0.16.2)
-    mini_magick (4.11.0)
-    mini_mime (1.0.2)
-    multi_json (1.15.0)
-    multipart-post (2.0.0)
-    nanaimo (0.3.0)
-    naturally (2.2.0)
-    os (1.1.1)
-    plist (3.5.0)
-    public_suffix (4.0.6)
-    rake (13.0.3)
-    representable (3.0.4)
-      declarative (< 0.1.0)
-      declarative-option (< 0.2.0)
-      uber (< 0.2.0)
-    retriable (3.1.2)
-    rouge (2.0.7)
-    ruby2_keywords (0.0.2)
-    rubyzip (2.3.0)
-    security (0.1.3)
-    signet (0.14.0)
-      addressable (~> 2.3)
-      faraday (>= 0.17.3, < 2.0)
-      jwt (>= 1.5, < 3.0)
-      multi_json (~> 1.10)
-    simctl (1.6.8)
-      CFPropertyList
-      naturally
-    slack-notifier (2.3.2)
-    terminal-notifier (2.0.0)
-    terminal-table (1.8.0)
-      unicode-display_width (~> 1.1, >= 1.1.1)
-    tty-cursor (0.7.1)
-    tty-screen (0.8.1)
-    tty-spinner (0.9.3)
-      tty-cursor (~> 0.7)
-    uber (0.1.0)
-    unf (0.1.4)
-      unf_ext
-    unf_ext (0.0.7.7)
-    unicode-display_width (1.7.0)
-    word_wrap (1.0.0)
-    xcodeproj (1.19.0)
-      CFPropertyList (>= 2.3.3, < 4.0)
-      atomos (~> 0.1.3)
-      claide (>= 1.0.2, < 2.0)
-      colored2 (~> 3.1)
-      nanaimo (~> 0.3.0)
-    xcpretty (0.3.0)
-      rouge (~> 2.0.7)
-    xcpretty-travis-formatter (1.0.0)
-      xcpretty (~> 0.2, >= 0.0.7)
-
-PLATFORMS
-  ruby
-
-DEPENDENCIES
-  fastlane
-  fastlane-plugin-firebase_app_distribution
-
-BUNDLED WITH
-   1.17.2
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
index d58a9164..7e8a847a 100644
--- a/android/app/src/main/AndroidManifest.xml
+++ b/android/app/src/main/AndroidManifest.xml
@@ -8,14 +8,17 @@
     <uses-permission android:name="android.permission.WAKE_LOCK" />
     <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
+    <!-- Use for showing notification -->
+    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
+
 
     <!-- Use for take photo and photo gallery feature -->
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
 
-    <!-- Use for printer feature -->
-    <uses-permission android:name="android.permission.BLUETOOTH" />
-    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
+    <!-- Use for printer POS feature -->
+<!--    <uses-permission android:name="android.permission.BLUETOOTH" />-->
+<!--    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />-->
 
     <!-- Use for SmartChat feature -->
     <queries>
diff --git a/assets/icons/payment/apple-pay-mark.svg b/assets/icons/payment/apple-pay-mark.svg
new file mode 100755
index 00000000..0c6ecafe
--- /dev/null
+++ b/assets/icons/payment/apple-pay-mark.svg
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 21.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Artwork" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 width="165.52107px" height="105.9651px" viewBox="0 0 165.52107 105.9651" enable-background="new 0 0 165.52107 105.9651"
+	 xml:space="preserve">
+<g>
+	<path id="XMLID_4_" d="M150.69807,0H14.82318c-0.5659,0-1.1328,0-1.69769,0.0033c-0.47751,0.0034-0.95391,0.0087-1.43031,0.0217
+		c-1.039,0.0281-2.0869,0.0894-3.1129,0.2738c-1.0424,0.1876-2.0124,0.4936-2.9587,0.9754
+		c-0.9303,0.4731-1.782,1.0919-2.52009,1.8303c-0.73841,0.7384-1.35721,1.5887-1.83021,2.52
+		c-0.4819,0.9463-0.7881,1.9166-0.9744,2.9598c-0.18539,1.0263-0.2471,2.074-0.2751,3.1119
+		c-0.0128,0.4764-0.01829,0.9528-0.0214,1.4291c-0.0033,0.5661-0.0022,1.1318-0.0022,1.6989V91.142
+		c0,0.5671-0.0011,1.13181,0.0022,1.69901c0.00311,0.4763,0.0086,0.9527,0.0214,1.4291
+		c0.028,1.03699,0.08971,2.08469,0.2751,3.11069c0.1863,1.0436,0.4925,2.0135,0.9744,2.9599
+		c0.473,0.9313,1.0918,1.7827,1.83021,2.52c0.73809,0.7396,1.58979,1.3583,2.52009,1.8302
+		c0.9463,0.4831,1.9163,0.7892,2.9587,0.9767c1.026,0.1832,2.0739,0.2456,3.1129,0.2737c0.4764,0.0108,0.9528,0.0172,1.43031,0.0194
+		c0.56489,0.0044,1.13179,0.0044,1.69769,0.0044h135.87489c0.5649,0,1.13181,0,1.69659-0.0044
+		c0.47641-0.0022,0.95282-0.0086,1.4314-0.0194c1.0368-0.0281,2.0845-0.0905,3.11301-0.2737
+		c1.041-0.1875,2.0112-0.4936,2.9576-0.9767c0.9313-0.4719,1.7805-1.0906,2.52011-1.8302c0.7372-0.7373,1.35599-1.5887,1.8302-2.52
+		c0.48299-0.9464,0.78889-1.9163,0.97429-2.9599c0.1855-1.026,0.2457-2.0737,0.2738-3.11069
+		c0.013-0.4764,0.01941-0.9528,0.02161-1.4291c0.00439-0.5672,0.00439-1.1319,0.00439-1.69901V14.8242
+		c0-0.5671,0-1.1328-0.00439-1.6989c-0.0022-0.4763-0.00861-0.9527-0.02161-1.4291c-0.02811-1.0379-0.0883-2.0856-0.2738-3.1119
+		c-0.18539-1.0432-0.4913-2.0135-0.97429-2.9598c-0.47421-0.9313-1.093-1.7816-1.8302-2.52
+		c-0.73961-0.7384-1.58881-1.3572-2.52011-1.8303c-0.9464-0.4818-1.9166-0.7878-2.9576-0.9754
+		c-1.0285-0.1844-2.0762-0.2457-3.11301-0.2738c-0.47858-0.013-0.95499-0.0183-1.4314-0.0217C151.82988,0,151.26297,0,150.69807,0
+		L150.69807,0z"/>
+	<path id="XMLID_3_" fill="#FFFFFF" d="M150.69807,3.532l1.67149,0.0032c0.4528,0.0032,0.90561,0.0081,1.36092,0.0205
+		c0.79201,0.0214,1.71849,0.0643,2.58209,0.2191c0.7507,0.1352,1.38029,0.3408,1.9845,0.6484
+		c0.5965,0.3031,1.14301,0.7003,1.62019,1.1768c0.479,0.4797,0.87671,1.0271,1.18381,1.6302
+		c0.30589,0.5995,0.51019,1.2261,0.64459,1.9823c0.1544,0.8542,0.1971,1.7832,0.21881,2.5801
+		c0.01219,0.4498,0.01819,0.8996,0.0204,1.3601c0.00429,0.5569,0.0042,1.1135,0.0042,1.6715V91.142
+		c0,0.558,0.00009,1.1136-0.0043,1.6824c-0.00211,0.4497-0.0081,0.8995-0.0204,1.3501c-0.02161,0.7957-0.0643,1.7242-0.2206,2.5885
+		c-0.13251,0.7458-0.3367,1.3725-0.64429,1.975c-0.30621,0.6016-0.70331,1.1484-1.18022,1.6251
+		c-0.47989,0.48-1.0246,0.876-1.62819,1.1819c-0.5997,0.3061-1.22821,0.51151-1.97151,0.6453
+		c-0.88109,0.157-1.84639,0.2002-2.57339,0.2199c-0.4574,0.0103-0.9126,0.01649-1.37889,0.0187
+		c-0.55571,0.0043-1.1134,0.0042-1.6692,0.0042H14.82318c-0.0074,0-0.0146,0-0.0221,0c-0.5494,0-1.0999,0-1.6593-0.0043
+		c-0.4561-0.00211-0.9112-0.0082-1.3512-0.0182c-0.7436-0.0201-1.7095-0.0632-2.5834-0.2193
+		c-0.74969-0.1348-1.3782-0.3402-1.9858-0.6503c-0.59789-0.3032-1.1422-0.6988-1.6223-1.1797
+		c-0.4764-0.4756-0.8723-1.0207-1.1784-1.6232c-0.3064-0.6019-0.5114-1.2305-0.64619-1.9852
+		c-0.15581-0.8626-0.19861-1.7874-0.22-2.5777c-0.01221-0.4525-0.01731-0.9049-0.02021-1.3547l-0.0022-1.3279l0.0001-0.3506V14.8242
+		l-0.0001-0.3506l0.0021-1.3251c0.003-0.4525,0.0081-0.9049,0.02031-1.357c0.02139-0.7911,0.06419-1.7163,0.22129-2.5861
+		c0.1336-0.7479,0.3385-1.3765,0.6465-1.9814c0.3037-0.5979,0.7003-1.1437,1.17921-1.6225
+		c0.477-0.4772,1.02309-0.8739,1.62479-1.1799c0.6011-0.3061,1.2308-0.5116,1.9805-0.6465c0.8638-0.1552,1.7909-0.198,2.5849-0.2195
+		c0.4526-0.0123,0.9052-0.0172,1.3544-0.0203l1.6771-0.0033H150.69807"/>
+	<g>
+		<g>
+			<path d="M45.1862,35.64053c1.41724-1.77266,2.37897-4.15282,2.12532-6.58506c-2.07464,0.10316-4.60634,1.36871-6.07207,3.14276
+				c-1.31607,1.5192-2.4809,3.99902-2.17723,6.3293C41.39111,38.72954,43.71785,37.36345,45.1862,35.64053"/>
+			<path d="M47.28506,38.98252c-3.38211-0.20146-6.25773,1.91951-7.87286,1.91951c-1.61602,0-4.08931-1.81799-6.76438-1.76899
+				c-3.48177,0.05114-6.71245,2.01976-8.4793,5.15079c-3.63411,6.2636-0.95904,15.55471,2.57494,20.65606
+				c1.71618,2.5238,3.78447,5.30269,6.50976,5.20287c2.57494-0.10104,3.58421-1.66732,6.71416-1.66732
+				c3.12765,0,4.03679,1.66732,6.76252,1.61681c2.82665-0.05054,4.59381-2.52506,6.30997-5.05132
+				c1.96878-2.877,2.77473-5.65498,2.82542-5.80748c-0.0507-0.05051-5.45058-2.12204-5.50065-8.33358
+				c-0.05098-5.20101,4.23951-7.6749,4.44144-7.82832C52.3832,39.4881,48.5975,39.08404,47.28506,38.98252"/>
+		</g>
+		<g>
+			<path d="M76.73385,31.94381c7.35096,0,12.4697,5.06708,12.4697,12.44437c0,7.40363-5.22407,12.49704-12.65403,12.49704h-8.13892
+				v12.94318h-5.88037v-37.8846H76.73385z M68.41059,51.9493h6.74732c5.11975,0,8.0336-2.75636,8.0336-7.53479
+				c0-4.77792-2.91385-7.50845-8.00727-7.50845h-6.77365V51.9493z"/>
+			<path d="M90.73997,61.97864c0-4.8311,3.70182-7.79761,10.26583-8.16526l7.56061-0.44614v-2.12639
+				c0-3.07185-2.07423-4.90959-5.53905-4.90959c-3.28251,0-5.33041,1.57492-5.82871,4.04313h-5.35574
+				c0.31499-4.98859,4.56777-8.66407,11.3941-8.66407c6.69466,0,10.97377,3.54432,10.97377,9.08388v19.03421h-5.43472v-4.54194
+				h-0.13065c-1.60125,3.07185-5.09341,5.01441-8.71623,5.01441C94.52078,70.30088,90.73997,66.94038,90.73997,61.97864z
+				 M108.56641,59.4846v-2.17905l-6.8,0.41981c-3.38683,0.23649-5.30306,1.73291-5.30306,4.09579
+				c0,2.41504,1.99523,3.99046,5.04075,3.99046C105.46823,65.81161,108.56641,63.08108,108.56641,59.4846z"/>
+			<path d="M119.34167,79.9889v-4.5946c0.4193,0.10483,1.36425,0.10483,1.83723,0.10483c2.6252,0,4.04313-1.10245,4.90908-3.9378
+				c0-0.05267,0.49931-1.68025,0.49931-1.70658l-9.97616-27.64562h6.14268l6.98432,22.47371h0.10432l6.98433-22.47371h5.9857
+				l-10.34483,29.06304c-2.36186,6.69517-5.0924,8.84789-10.81577,8.84789C121.17891,80.12006,119.76098,80.06739,119.34167,79.9889
+				z"/>
+		</g>
+	</g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+</svg>
diff --git a/assets/icons/payment/google-pay-mark.png b/assets/icons/payment/google-pay-mark.png
new file mode 100644
index 0000000000000000000000000000000000000000..77b6a6574c925d5cd2f408b78993452263e17a8a
GIT binary patch
literal 34146
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
aBf{IdzfRh8_SnG4AxMhKeJ&B!|NcKUOg29N

literal 0
HcmV?d00001

diff --git a/assets/icons/payment/paypal.png b/assets/icons/payment/paypal.png
deleted file mode 100755
index a07988bf3028f5f39559dbbf1e0811cffe8179e5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2320
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
NxjIrDM0;u6{{axVEinK9

diff --git a/assets/icons/payment/paypal.svg b/assets/icons/payment/paypal.svg
new file mode 100644
index 00000000..64adc6b6
--- /dev/null
+++ b/assets/icons/payment/paypal.svg
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 16.0.4, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 width="124px" height="33px" viewBox="0 -10 124 53" enable-background="new 0 0 124 33" xml:space="preserve">
+<path fill="#253B80" d="M46.211,6.749h-6.839c-0.468,0-0.866,0.34-0.939,0.802l-2.766,17.537c-0.055,0.346,0.213,0.658,0.564,0.658
+	h3.265c0.468,0,0.866-0.34,0.939-0.803l0.746-4.73c0.072-0.463,0.471-0.803,0.938-0.803h2.165c4.505,0,7.105-2.18,7.784-6.5
+	c0.306-1.89,0.013-3.375-0.872-4.415C50.224,7.353,48.5,6.749,46.211,6.749z M47,13.154c-0.374,2.454-2.249,2.454-4.062,2.454
+	h-1.032l0.724-4.583c0.043-0.277,0.283-0.481,0.563-0.481h0.473c1.235,0,2.4,0,3.002,0.704C47.027,11.668,47.137,12.292,47,13.154z"
+	/>
+<path fill="#253B80" d="M66.654,13.075h-3.275c-0.279,0-0.52,0.204-0.563,0.481l-0.145,0.916l-0.229-0.332
+	c-0.709-1.029-2.29-1.373-3.868-1.373c-3.619,0-6.71,2.741-7.312,6.586c-0.313,1.918,0.132,3.752,1.22,5.031
+	c0.998,1.176,2.426,1.666,4.125,1.666c2.916,0,4.533-1.875,4.533-1.875l-0.146,0.91c-0.055,0.348,0.213,0.66,0.562,0.66h2.95
+	c0.469,0,0.865-0.34,0.939-0.803l1.77-11.209C67.271,13.388,67.004,13.075,66.654,13.075z M62.089,19.449
+	c-0.316,1.871-1.801,3.127-3.695,3.127c-0.951,0-1.711-0.305-2.199-0.883c-0.484-0.574-0.668-1.391-0.514-2.301
+	c0.295-1.855,1.805-3.152,3.67-3.152c0.93,0,1.686,0.309,2.184,0.892C62.034,17.721,62.232,18.543,62.089,19.449z"/>
+<path fill="#253B80" d="M84.096,13.075h-3.291c-0.314,0-0.609,0.156-0.787,0.417l-4.539,6.686l-1.924-6.425
+	c-0.121-0.402-0.492-0.678-0.912-0.678h-3.234c-0.393,0-0.666,0.384-0.541,0.754l3.625,10.638l-3.408,4.811
+	c-0.268,0.379,0.002,0.9,0.465,0.9h3.287c0.312,0,0.604-0.152,0.781-0.408L84.564,13.97C84.826,13.592,84.557,13.075,84.096,13.075z
+	"/>
+<path fill="#179BD7" d="M94.992,6.749h-6.84c-0.467,0-0.865,0.34-0.938,0.802l-2.766,17.537c-0.055,0.346,0.213,0.658,0.562,0.658
+	h3.51c0.326,0,0.605-0.238,0.656-0.562l0.785-4.971c0.072-0.463,0.471-0.803,0.938-0.803h2.164c4.506,0,7.105-2.18,7.785-6.5
+	c0.307-1.89,0.012-3.375-0.873-4.415C99.004,7.353,97.281,6.749,94.992,6.749z M95.781,13.154c-0.373,2.454-2.248,2.454-4.062,2.454
+	h-1.031l0.725-4.583c0.043-0.277,0.281-0.481,0.562-0.481h0.473c1.234,0,2.4,0,3.002,0.704
+	C95.809,11.668,95.918,12.292,95.781,13.154z"/>
+<path fill="#179BD7" d="M115.434,13.075h-3.273c-0.281,0-0.52,0.204-0.562,0.481l-0.145,0.916l-0.23-0.332
+	c-0.709-1.029-2.289-1.373-3.867-1.373c-3.619,0-6.709,2.741-7.311,6.586c-0.312,1.918,0.131,3.752,1.219,5.031
+	c1,1.176,2.426,1.666,4.125,1.666c2.916,0,4.533-1.875,4.533-1.875l-0.146,0.91c-0.055,0.348,0.213,0.66,0.564,0.66h2.949
+	c0.467,0,0.865-0.34,0.938-0.803l1.771-11.209C116.053,13.388,115.785,13.075,115.434,13.075z M110.869,19.449
+	c-0.314,1.871-1.801,3.127-3.695,3.127c-0.949,0-1.711-0.305-2.199-0.883c-0.484-0.574-0.666-1.391-0.514-2.301
+	c0.297-1.855,1.805-3.152,3.67-3.152c0.93,0,1.686,0.309,2.184,0.892C110.816,17.721,111.014,18.543,110.869,19.449z"/>
+<path fill="#179BD7" d="M119.295,7.23l-2.807,17.858c-0.055,0.346,0.213,0.658,0.562,0.658h2.822c0.469,0,0.867-0.34,0.939-0.803
+	l2.768-17.536c0.055-0.346-0.213-0.659-0.562-0.659h-3.16C119.578,6.749,119.338,6.953,119.295,7.23z"/>
+<path fill="#253B80" d="M7.266,29.154l0.523-3.322l-1.165-0.027H1.061L4.927,1.292C4.939,1.218,4.978,1.149,5.035,1.1
+	c0.057-0.049,0.13-0.076,0.206-0.076h9.38c3.114,0,5.263,0.648,6.385,1.927c0.526,0.6,0.861,1.227,1.023,1.917
+	c0.17,0.724,0.173,1.589,0.007,2.644l-0.012,0.077v0.676l0.526,0.298c0.443,0.235,0.795,0.504,1.065,0.812
+	c0.45,0.513,0.741,1.165,0.864,1.938c0.127,0.795,0.085,1.741-0.123,2.812c-0.24,1.232-0.628,2.305-1.152,3.183
+	c-0.482,0.809-1.096,1.48-1.825,2c-0.696,0.494-1.523,0.869-2.458,1.109c-0.906,0.236-1.939,0.355-3.072,0.355h-0.73
+	c-0.522,0-1.029,0.188-1.427,0.525c-0.399,0.344-0.663,0.814-0.744,1.328l-0.055,0.299l-0.924,5.855l-0.042,0.215
+	c-0.011,0.068-0.03,0.102-0.058,0.125c-0.025,0.021-0.061,0.035-0.096,0.035H7.266z"/>
+<path fill="#179BD7" d="M23.048,7.667L23.048,7.667L23.048,7.667c-0.028,0.179-0.06,0.362-0.096,0.55
+	c-1.237,6.351-5.469,8.545-10.874,8.545H9.326c-0.661,0-1.218,0.48-1.321,1.132l0,0l0,0L6.596,26.83l-0.399,2.533
+	c-0.067,0.428,0.263,0.814,0.695,0.814h4.881c0.578,0,1.069-0.42,1.16-0.99l0.048-0.248l0.919-5.832l0.059-0.32
+	c0.09-0.572,0.582-0.992,1.16-0.992h0.73c4.729,0,8.431-1.92,9.513-7.476c0.452-2.321,0.218-4.259-0.978-5.622
+	C24.022,8.286,23.573,7.945,23.048,7.667z"/>
+<path fill="#222D65" d="M21.754,7.151c-0.189-0.055-0.384-0.105-0.584-0.15c-0.201-0.044-0.407-0.083-0.619-0.117
+	c-0.742-0.12-1.555-0.177-2.426-0.177h-7.352c-0.181,0-0.353,0.041-0.507,0.115C9.927,6.985,9.675,7.306,9.614,7.699L8.05,17.605
+	l-0.045,0.289c0.103-0.652,0.66-1.132,1.321-1.132h2.752c5.405,0,9.637-2.195,10.874-8.545c0.037-0.188,0.068-0.371,0.096-0.55
+	c-0.313-0.166-0.652-0.308-1.017-0.429C21.941,7.208,21.848,7.179,21.754,7.151z"/>
+<path fill="#253B80" d="M9.614,7.699c0.061-0.393,0.313-0.714,0.652-0.876c0.155-0.074,0.326-0.115,0.507-0.115h7.352
+	c0.871,0,1.684,0.057,2.426,0.177c0.212,0.034,0.418,0.073,0.619,0.117c0.2,0.045,0.395,0.095,0.584,0.15
+	c0.094,0.028,0.187,0.057,0.278,0.086c0.365,0.121,0.704,0.264,1.017,0.429c0.368-2.347-0.003-3.945-1.272-5.392
+	C20.378,0.682,17.853,0,14.622,0h-9.38c-0.66,0-1.223,0.48-1.325,1.133L0.01,25.898c-0.077,0.49,0.301,0.932,0.795,0.932h5.791
+	l1.454-9.225L9.614,7.699z"/>
+</svg>
diff --git a/assets/icons/payment/razorpay.png b/assets/icons/payment/razorpay.png
deleted file mode 100755
index 26793be988777de35f576ad9b25017acca2402d6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1310
zcmXX_eKgZ+93RSNsW_`OSxjsrVqWrg$=eVav+bv(+ZKmwIW@ZFs--P)k!qNk*EVi+
z??KchB*)vtJ%=-IJH5E>LPED|A#qfG_t`!7obU5}`+T0y_xt?u<kG`~ccS;B5eUT2
zkYiK^h$Y|<P<p_>%JSO*!aO~U6$m0l1UpG!XJAFJQxWW3tj#GB*hvaI6~h!U?D8L~
zr4|3rq)1_uH62N0>62I}0v+)6EtyD?w$$b%<~A#qix_qi!_HzDNn+}gAS98gm6gFe
zh!BE62TXk;1ZHg~LP&s;Sw;l<b}|c;C@bI@;5y)FA;2U<Kod!3f{DOT+CB?KWatA;
zu&@LM9h3zFBnDOh1>>0DMQBSVSO5j|$<Q_N0S<U7?GhuLi697hn&d8+B2fD(n~X#p
zHG$A2Bq-^yKqm9`71GtR{Cp#dky57QG$tD*Q+zo>jk>9kt`;c;8jeh<5t=t9v*r2p
zd=Ag9k6nR4=#_?0{a9%_Ln8sYR6oOQBb)E{Pr5D%dVVuYl08d^(%A}Sv=z;5$A{`h
zXZXxj)OS~&yTizKzC&s}^|9vlJ6f<`>-w0vJ5Fk7@yl|D!H|^)kzSksYNHPyg)Wrz
z7e3CYhlXn%CO1rZXNmb8ofo*)Ubo|g3u$BPhPKZ>ox<Kq`9i_HFds<E-5nL`d`x<;
z{8IZ^Ps#e0^7p~b!<6S=p13|C#>fVjzBTw=J93}-;0lct(99M+sD3##Td+@aE+<{+
zMw6K<uJpJzue9yq9V$mIS7GFZY2y=KU3%_j6#|0z&{SmXWWGguG1TIU4yoKbzPVnI
zbKTGrdR;(En0|R<S6*BLDtFCo#^4<p8d)n7VLTcH10;_)l<WNEEHxuG#<Ssd2796}
zXXmZ>1Y^V0?ofp-(gp9xCXraG?6_oHB6+CS-r-A>{fF|FvrygfE3DP4^{WikkNr2y
zPI;t3#z^eJIL<|%7k&vVoo8Y?_@8NExSr!Jb&j?+x{`$y&Uorq)wAH`w!CvScj?@S
z=MBddDN#64v<-GJ{#%RXYW3}Sm!LEUs!2_%#Xkz}-BQwN&#ns^V^dSAy?gJ^Z?+yb
z9jUGjy4GIGO$sFj=I|rd#=n0_t$aG2Yyufs-?MqNibF2UWtOdcH>z{VQbe|mEW$qG
zk{_DjZH)60PMGFJ)Cf}?+?_{TS7QIZd}rR>$|QL7{FByW3sXxo6Q^@>K0fFj>Ya_2
z*F>nM-Xz+fA>EGo$@Rfq!Ghh{6`y!*`yfoNao+h4AAfDV8G~9vZ&-T#`Nr4!rb;l(
zS7dctCo$xS)y?w5iP$h>GsZ;Iq5*rX&2EqX0n&Z8+z_vcJmFpOD6_=PGczMK^CYII
zeK|a&K$nl3R0W)U9~1f4X)i?7ReQlob7!7q9M3@g(@gyh?!a8_4#E;f;}#&@yg*~v
zVX{XSs}hx5`{qIM$X-I{eZ?7LK67A(nH1Qag|e$&-``$J`T;-MpLAPygV}$Qc#yM7
zoA>sw-14gOmS9w6Yi6NuYo|LL$pRZiT_JI^p%308^G)jZVZ>7RUOuq;v{QAlBtmb|
zUq4+6IpXR*53K~vdVlkv2mFC?z}}Nej`E1ZLz2YluPJT4=>a|IK~;+pYU$^MZH~o9
zGPb^Av2U-Z%YC|Z%Hq8@bi_xa`3K`a4dX{`2OgjC3MsUbG|o<Cmsj`mGuFHN&-=>4
Q!0$(d1cp-|`g1b=1@b{lAOHXW

diff --git a/assets/icons/payment/razorpay.svg b/assets/icons/payment/razorpay.svg
new file mode 100644
index 00000000..f48f81a2
--- /dev/null
+++ b/assets/icons/payment/razorpay.svg
@@ -0,0 +1,12 @@
+<svg width="847" height="180" viewBox="0 -20 847 220" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path d="M223.833 67.1063C226.646 56.5688 225.484 48.5063 220.345 42.9188C215.207 37.3313 206.224 34.5188 193.398 34.4813H144.247L114.617 145.65H138.414L150.397 100.65H166.112C168.987 100.506 171.852 101.093 174.438 102.356C175.488 103.013 176.363 103.913 176.99 104.981C177.617 106.048 177.977 107.251 178.039 108.488L182.333 145.65H207.837L203.674 111.131C202.849 103.425 199.305 98.8876 193.154 97.5189C200.596 95.4659 207.387 91.5412 212.882 86.1189C218.191 80.893 221.977 74.3204 223.833 67.1063ZM201.049 67.5001C200.023 72.0579 197.231 76.0227 193.285 78.5251C189.534 80.8876 184.059 82.0501 177.101 82.0501H155.011L162.774 53.0063H184.884C191.822 53.0063 196.586 54.1876 199.211 56.5313C201.836 58.8751 202.399 62.5876 201.049 67.5001Z" fill="#0C2651"/>
+<path d="M292.544 66.1875L289.524 77.4375C288.266 73.4169 285.604 69.9828 282.023 67.7625C277.847 65.2563 273.032 64.0185 268.165 64.2C261.337 64.2018 254.627 65.9856 248.7 69.375C242.248 73.0744 236.676 78.1279 232.366 84.1875C227.616 90.7391 224.137 98.1228 222.108 105.956C219.98 112.928 219.53 120.303 220.795 127.481C221.761 133.151 224.795 138.261 229.309 141.825C234.216 145.333 240.161 147.09 246.187 146.813C251.568 146.825 256.888 145.673 261.782 143.437C266.676 141.2 271.028 137.932 274.541 133.856L271.428 145.594H294.625L315.778 66.1875H292.544ZM282.005 105.563C280.57 112.028 277.377 117.972 272.778 122.738C270.798 124.676 268.451 126.201 265.876 127.225C263.3 128.248 260.547 128.75 257.776 128.7C251.869 128.7 247.893 126.825 245.755 122.831C243.618 118.838 243.561 113.269 245.512 105.956C246.995 99.433 250.238 93.441 254.888 88.6313C256.875 86.6345 259.24 85.0539 261.845 83.9819C264.45 82.9098 267.242 82.3678 270.059 82.3875C275.835 82.3875 279.773 84.3938 281.798 88.3875C283.824 92.3813 284.03 98.025 282.042 105.544L282.005 105.563Z" fill="#0C2651"/>
+<path d="M398.534 66.2437H331.718L326.786 84.7687H365.679L314.54 129.375L310.171 145.744H379.181L384.113 127.219H342.388L394.371 81.9749L398.534 66.2437Z" fill="#0C2651"/>
+<path d="M471.614 69.1501C465.409 65.605 458.332 63.8766 451.192 64.1626C443.138 64.0929 435.167 65.7956 427.845 69.1501C420.723 72.4705 414.465 77.3925 409.561 83.5314C404.438 89.9708 400.738 97.4217 398.703 105.394C396.514 112.484 396.243 120.027 397.915 127.256C399.45 133.257 403.264 138.423 408.548 141.656C413.924 144.969 420.8 146.625 429.176 146.625C437.144 146.695 445.028 144.998 452.261 141.656C459.361 138.335 465.589 133.405 470.451 127.256C475.584 120.821 479.291 113.369 481.328 105.394C483.521 98.3039 483.786 90.7579 482.097 83.5314C480.62 77.5504 476.856 72.387 471.614 69.1501ZM458.074 105.356C455.993 113.156 452.936 119.006 448.81 122.869C444.829 126.661 439.512 128.73 434.014 128.625C421.888 128.625 417.893 120.869 422.031 105.356C424.069 97.6564 427.195 91.8501 431.408 87.9376C435.44 84.0812 440.831 81.9721 446.41 82.0689C452.186 82.0689 456.124 83.9439 458.149 87.9376C460.175 91.9314 460.118 97.6501 458.074 105.356Z" fill="#0C2651"/>
+<path d="M724.213 66.1875L721.194 77.4375C719.936 73.4169 717.274 69.9828 713.693 67.7625C709.524 65.2336 704.708 63.9759 699.835 64.1438C692.995 64.1586 686.278 65.962 680.351 69.375C673.894 73.0736 668.315 78.1271 663.998 84.1875C659.256 90.7434 655.777 98.1257 653.74 105.956C651.631 112.931 651.181 120.302 652.428 127.481C653.394 133.151 656.427 138.261 660.942 141.825C665.913 145.362 671.932 147.119 678.025 146.813C683.286 146.793 688.483 145.655 693.271 143.475C698.212 141.258 702.599 137.973 706.117 133.856L703.004 145.594H726.201L747.373 66.1875H724.213ZM713.618 105.563C712.19 112.026 709.004 117.97 704.41 122.738C702.426 124.67 700.079 126.191 697.504 127.215C694.93 128.238 692.178 128.743 689.408 128.7C683.482 128.7 679.507 126.825 677.369 122.831C675.231 118.838 675.194 113.269 677.125 105.956C678.616 99.4361 681.858 93.4461 686.502 88.6313C688.493 86.6357 690.862 85.056 693.469 83.9841C696.077 82.9122 698.872 82.3695 701.691 82.3875C707.467 82.3875 711.38 84.3875 713.431 88.3875C715.606 92.2688 715.662 98.025 713.618 105.544V105.563Z" fill="#0C2651"/>
+<path d="M554.182 87.5628L560.108 65.9441C557.609 64.8129 554.88 64.28 552.138 64.3878C546.778 64.3939 541.509 65.7755 536.836 68.4003C532.574 70.7348 528.875 73.973 525.997 77.8878L529.053 66.2441H505.875L484.534 145.65H508.05L519.096 104.194C520.39 98.6623 523.419 93.6891 527.741 90.0003C532.185 86.5295 537.707 84.7309 543.343 84.9191C547.118 84.9033 550.839 85.8109 554.182 87.5628Z" fill="#0C2651"/>
+<path d="M636.132 69.5437C631.334 65.8774 625.4 64.0126 619.367 64.275C613.497 64.2816 607.712 65.6825 602.49 68.3625C597.257 70.9353 592.746 74.7691 589.363 79.5187L589.457 78.975L593.413 66.2437H570.348L564.459 88.3125C564.459 88.5562 564.328 88.8187 564.272 89.0625L540.081 180H563.709L575.917 134.175C577.084 138.218 579.773 141.652 583.418 143.756C587.649 146.186 592.476 147.382 597.352 147.206C604.201 147.225 610.946 145.523 616.967 142.256C623.375 138.725 628.906 133.797 633.151 127.837C637.82 121.319 641.235 113.987 643.221 106.219C645.364 99.143 645.852 91.6692 644.646 84.375C643.659 78.5774 640.641 73.3201 636.132 69.5437ZM619.424 105.844C617.982 112.207 614.809 118.047 610.253 122.719C606.222 126.574 600.829 128.677 595.251 128.569C589.438 128.569 585.5 126.562 583.418 122.606C581.337 118.65 581.224 112.95 583.268 105.431C584.729 98.9159 587.976 92.9362 592.645 88.1625C594.628 86.2258 596.974 84.699 599.548 83.6695C602.123 82.64 604.875 82.1279 607.647 82.1625C613.273 82.1625 617.192 84.2625 619.236 88.4062C621.28 92.55 621.411 98.4187 619.424 105.844Z" fill="#0C2651"/>
+<path d="M846.013 63.5999H821.634L817.884 71.4374C817.584 71.8311 817.302 72.2249 816.965 72.7124L816.571 73.3499L786.566 115.312L780.341 66.2436H755.737L768.245 141.506L740.585 180H764.269L771.114 170.231C771.321 169.931 771.527 169.687 771.714 169.369L779.722 157.95L779.984 157.65L815.746 106.631L846.013 63.5999Z" fill="#0C2651"/>
+<path d="M54.3828 47.1751L47.2567 73.1251L87.4627 47.0438L61.2088 145.65H87.8565L126.656 6.10352e-05L54.3828 47.1751Z" fill="#3395FF"/>
+<path d="M11.0641 104.175L0 145.65H54.6643L77.0364 61.2748L11.0641 104.175Z" fill="#0C2651"/>
+</svg>
diff --git a/assets/icons/payment/stripe.png b/assets/icons/payment/stripe.png
deleted file mode 100755
index 49411b39ebc607b1c7ec3c919bd37c48153c979c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1843
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

diff --git a/assets/icons/payment/stripe.svg b/assets/icons/payment/stripe.svg
new file mode 100644
index 00000000..99652e86
--- /dev/null
+++ b/assets/icons/payment/stripe.svg
@@ -0,0 +1,4 @@
+<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 468 222.5"
+     xml:space="preserve">
+    <path fill="#635bff" class="st0"
+          d="M414 113.4c0-25.6-12.4-45.8-36.1-45.8-23.8 0-38.2 20.2-38.2 45.6 0 30.1 17 45.3 41.4 45.3 11.9 0 20.9-2.7 27.7-6.5v-20c-6.8 3.4-14.6 5.5-24.5 5.5-9.7 0-18.3-3.4-19.4-15.2h48.9c0-1.3.2-6.5.2-8.9zm-49.4-9.5c0-11.3 6.9-16 13.2-16 6.1 0 12.6 4.7 12.6 16h-25.8zM301.1 67.6c-9.8 0-16.1 4.6-19.6 7.8l-1.3-6.2h-22v116.6l25-5.3.1-28.3c3.6 2.6 8.9 6.3 17.7 6.3 17.9 0 34.2-14.4 34.2-46.1-.1-29-16.6-44.8-34.1-44.8zm-6 68.9c-5.9 0-9.4-2.1-11.8-4.7l-.1-37.1c2.6-2.9 6.2-4.9 11.9-4.9 9.1 0 15.4 10.2 15.4 23.3 0 13.4-6.2 23.4-15.4 23.4zM223.8 61.7l25.1-5.4V36l-25.1 5.3zM223.8 69.3h25.1v87.5h-25.1zM196.9 76.7l-1.6-7.4h-21.6v87.5h25V97.5c5.9-7.7 15.9-6.3 19-5.2v-23c-3.2-1.2-14.9-3.4-20.8 7.4zM146.9 47.6l-24.4 5.2-.1 80.1c0 14.8 11.1 25.7 25.9 25.7 8.2 0 14.2-1.5 17.5-3.3V135c-3.2 1.3-19 5.9-19-8.9V90.6h19V69.3h-19l.1-21.7zM79.3 94.7c0-3.9 3.2-5.4 8.5-5.4 7.6 0 17.2 2.3 24.8 6.4V72.2c-8.3-3.3-16.5-4.6-24.8-4.6C67.5 67.6 54 78.2 54 95.9c0 27.6 38 23.2 38 35.1 0 4.6-4 6.1-9.6 6.1-8.3 0-18.9-3.4-27.3-8v23.8c9.3 4 18.7 5.7 27.3 5.7 20.8 0 35.1-10.3 35.1-28.2-.1-29.8-38.2-24.5-38.2-35.7z"/></svg>
\ No newline at end of file
diff --git a/assets/images/country/da.svg b/assets/images/country/da.svg
new file mode 100644
index 00000000..917dad49
--- /dev/null
+++ b/assets/images/country/da.svg
@@ -0,0 +1 @@
+<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37 28"><path fill="#c8102e" d="M0,0H37V28H0Z"/><path fill="#fff" d="M0,12H12V0H16V12H37V16H16V28H12V16H0Z"/></svg>
diff --git a/assets/images/country/er.png b/assets/images/country/er.png
new file mode 100644
index 0000000000000000000000000000000000000000..1e14ada8513921aa6a7767357676ce3cb8dac7d7
GIT binary patch
literal 9752
zcmc(_RajeH7bkv#7x&^)AV{#_?i7j?ibE;xTHGNNDTPv?lww8RA}#K&E$-Grafc$o
z0|`2LzwdwXznOXFW@au{PR`luCu{Gu&&hM1ywiQIMubm?4*&qsGj$a`0Kk9&07wB3
z6McoALRJEOz;aa7Rs?{WB!XLOZ1g#ct-78z00e^p02U1Z*XT>IzX0GT2mt$503ekC
z0FPgPX?-DsChOGIGEn_ZCG?LBzr8aL_h&FcIr{;YFq{c``i%d=19JI}`znL;DvJvd
z#d9nwaDXcerxiMa2p(VyACd^2S@9wZId2BoFH^V<aD?ED&?7D=oF00JFLW#>aAwMf
z2<ExU<U-YQ-1Kpv%D_iFf@hYz*DV}ZpSa*OLWiV6r!V-<Uh*Ds3m)+bqMA5R-@phM
z_o*iTA+gY@F5hK5_jM;bB7z6bA&C5k6IIN4A};`E5IVQ!z3FE^QQ(I&LvMQ65s}<S
zV8L^H-eYlr!$-mw-aOas9M|0(r`r4{iu~6<I8F`tE)%&<wfImKVB}ZM3wOw=3O^#2
z8%`wze+)&{fG<CAACe258S~!sv0t}x90>>>k_jQ+aHC4VCvpNu{DP-y{K!1co1g56
zx7?^kjx!U!Q&oOcJsAE3ip=9WmJ~QM<Gt|VIlvP>Boe;*$c6CZxs2mNe&M`EL!!73
z34{(F2_F&)9SaIvrE#6A^Bv#_pUCnfqPefqx!~+jIHeG(jssN=KGo;DaD~8G1&@UU
zPL%jB-*cf#!Iuf#a5m_PlmIf9^THE?ss`WmvLpN;=XSg&$^uuZT<6Zbr-po}O7K-S
z*L52QoB;}_gI;%WoI65Jqy-KsgiznXs46g=1$qn>IJf1!aDyC62wZn?oXGGa3&4nQ
zo?~Ib>t>E)5rJbV0aPjH*(*L|CC8}|@6~56L=ew~2M?SYdS=dx2;jN!g`Dc~oj&D1
zd&PVDoF5U$gK7XHLU<72+~-b^Qw@GZ7&ju6=Q5cKnZtSR06Ep+JG0<DRp&p|=DSSd
zKH?IDvqF*ioJV|uN1TEeUXXJa$W;m#vWWBC26DtJaPb;~@aH*w&W8x&K^AZ#Vz?K`
zRcfHFZwxc^gZgC>mS!oRm56(Xo8-I*?tgfAu-2F+K({!^MpI2?@5PMTC-e!f?=x*x
z+#OsHHNb7IRk;NKPmG_bC>jJVz;mvYDF;>ux^!s2ejkjar&Njh$5i)4uRjjaAJQqS
zqCYl-pQG!PDG9!t6tJ-JTzU}tKk6q>ghI1QpHgVs<lf6f^w-seUHM=AQLYPEy17&S
zBP1P=9wsTAmpQR3{D2&gzdP@`g<#DWMvxl8NNcGS6!7MWSy-aoa7js(8Zq(kSQkN9
z(aCTCLut?-0I}Lh!_aAr{}0jtas@nW8MHdu3LZKDv^R8s&}IP^7A*7t#{Zc?K<Pi4
z03PUHO%MwfUN#3zv8vvQcB#~lUIFhe5s0lP@~e*c`EwE4Zh<&aP`M#ad4UFrnZ95w
zkoF7bD;_!Ejj8d%2-gb52!Yht&Us8N`{nJY^is#~&6fo{LEB$}wCJo-5;unrMHgN^
zKBX5-PF9Rsl-#TFiCc;CWPhYO6H8pM3xC_0nG3=L<u|OaoRG<=vZ>WL7U*LY3k|3w
z6PrFy>92|Bv~W(7<qyAoY0aA_X#;YsdK9horB{$U^+rok6Az#->s@!oP@1pL&dGv&
z+1^fl<Gk^xN6T2m?FAI0T2h$7&H+-RzQU_SzEZ4Kx4IX3L<5Lv)a}IGV$Jv;yejE~
zurJqf+-9_#e<Ddtt(>q_7z}}K%-^W?Ht1Gc=t03)Fs8H`btPx0sKbE9t$pfGt;{YC
z`0vI6J=Cnw<2}9{EsN*zF9`~Mo^l9k0r@TXpVj|f#9K|sC;xB}x7ZK&F)rsVs^(!b
zPkTb~$A`(3FQ?oqMUQMh*A=RR2aJiR)&^vLW<3ltl`Kf}S>7*s6uO6?@7?t_YvrLH
zw%-u*_^2bMMmiv}E@96BE(7J)m<vU`Y(DZXi|-ia$XS7_?_M>A4N|R+N1snf3T0MA
zM<0Es)HFgE$TX(9L!wke3u<gI03uQC;@Fp7^hFz0Qkj<YsPFwKsJLm5#bVzCU9DRA
z4^54?i3=_4eHBx@cG<IhdVD60m@u3L4&j*(^rYi2qC~u}K4xX1c&#))&n(*RIVEQk
zY87s_P2Ua`>{U;ZiENF@LWg%<uE@`V(*nhCTn7MM<D1KoQHK1o)()C5cy4!^e79dC
z?tFo=xpcZ$hNNB&6Q%FPpW;n51Cr`HVM*59UczWhOyF0%6a%3li_gbo#Z)4sG<l($
zppG94dt|mKyW%q(9l<=(T5}sAesT*DK)2`uNjDq&nkO!ZtxLZcq$R5w{s!rs`OLj#
ziX}B$;R9Sea7V;-+AVqfjpq6=HejEIu+0#S4lQNxk7JK@&g7NN;5hp<d}mMev6T!*
z2fiv5o)jt;|FRP^8c5z}hf9c)&Z!5u*^E1BFBGn9OsiqA_C%ZR8;_q+gdc7nrD?HU
zWF;g=Hq?;4cEN_Re-So0A9CX3(3IYOoBZBKn(ClySD?9Y_IQInx;K6YdbO%iDLLjs
z7@3ZTf?4x(l6H}@guVm9M?o(vH1>bT*@cU};GGuS9Nv|b9I3RRFAns;72aik_opC~
zJ+aH@u06I9B`zmj(IWC8S;ZgAv?URl0IZLI1i#>J_$U>Z;SJ3ntpE5xxOp2o{9@b0
z>%(h^jj!tz!-oU&2W-bW23Pd+)K3YgI%0f_LY|x@bR7uiGU+5x&(yaUelNTKLoYF3
z*2kj3d*7jR!+#4GS7+Anlf)K;e$^<v`-zf=H?!|YWIC{(fc1KV&zjI!g}QmZ0&aA1
zcQNuMz{M=A{O0hb2WFej^6*k__POD)Axe$pMOS8WpuMZ9#?eU`dr9vx7M>*~O!BJ_
zGwW18wX){j+pgKqH-i;}kNeYhQVUA$sT62nz>c(iM4Bhzi;`)Q2sYXPbmxv#sGmyp
zn8|}b$lQN7#5>i;mWtNKsjgG+u~O<3RqRtxb?HHAc1ZS{7ntc#=&><au!NT@#8#I8
zJDMWCY#;QW7V>h7Ra*CZsQz#b<~X7?Jb3>J9Da#Q_F$B+^v3|Wc_vcN0#8)fGj%Xh
zRX<*%DZ)%_TM;is(n<1Tw^2M8vnc&h0lp2c;QZL?1c4#=GL`HksLF65KZe8dV+Ws^
z{GE!zB;R(J2mv--v^LfW6>aQNerId)D6!|3cg5ySk=Bvi-OI<Nz6Z~TlK)BK9D5px
zWlaGx7-tpuQX&1|U4Pn86V(C1X_`hXW69I9F<-HaJ&VM!)(5`4{(kX3>#eZ-?RPUm
z(}iPB2-Uc4hUag6!4ySB>z_7f?%#-Era4=i{}i@xld`yBz#e@|h?qroj@q%(@hh3O
zAv%8_8gc)sPW#lF!Dua)ygz99b?yh`>(lsW!UjHXCqsZM2YHsdUm_=<&#WZJ1O1iE
zdh0RYR;b5^G@S1Ir@dBzB2Y(-Uv6f^tmL%T?=P$ublqWTTAVR&W#$0>bWdj9u4C0A
zP2?Z8Qak>q9SQx50vm{_Hk&e?FA~u9PW@Fl)CG{|95WfCQt||8F?0(a4B0ejU#o9y
zm6`A42aNDEwBu?+n||u?OZ)ytY?_Yhj!NhlNLN1pmdMURhzBV1*9nBOO??>NsYLnS
zCb}+%2PIk)hfs*9xNcYM419?q61Dz0{KjGY4<eeN*4A+B_WC96lyceM+F_J@eDbjR
zbo=immJ9Ok9~UudAD8<vYkfUSiy&>DUcxh)sO{~qF5Gf<Sf0f4+YB|IwR46t8Ey>D
zqvTUa!4hvoLPR<7Ixv%y*oRsAy*!J3p2$lRdg!iZT>S;@{@Lb*jHS5VYICs#V-@GD
zwx5>~cny=lwTDB++;Le#BLS%$pJVCLU&&pPMEjiM+?$-QM(xtW`%KN<a@6PXwx67Q
ze3G)F)uVIw0q3!Cm;#3C7)YrK;N4nn8nIVVdf$k-Qs1I3x>&0c5!5Vj?4%RlLM>)&
zZD-t=hTlhr5ttNR`|!$G2}Av!_#biLDPE0Q%G>wqNbQ?J6^8~Jw@aoTEH&B&nDKnq
zas$=)axoO<E1Fw4Bj583Hk8MDfzw^{RV_3Fgcr8Vx0W#Kj<NwQCh*S+Q~zCB6~3&R
ztpeW=*_Xt6M@=k0YyR>XnxwuqWce=)ZZq6z6Gr?dy-nUH)!KW@BOp^z+RxPFIqKD`
zb-OVfB6`Pzh}Q&>OM&DWXKHvIz)8xXZ17W(D6e2hH*U#`(@nT#CFOLRa<d)7QPJNO
z!U(*G?VYNo>?w1a0)jQ7@Zh*{U7Ye;A|(N!oky+JZ}uOnq{<r~uZk_XWJEIMq+k-|
zm6b-;aueH)an07^K5yUgH}NRLprGS}mVUtw)w&?zM@}e;=vfeNnqKbb)YT={zmC=4
zW(V-;gJjpI-3Ym+slV2Z^LE`(B3|VNZ{8uznyL$=gHxddy}j4t4eXQK0;FcRy2Q#h
zjfTxJmi=`6Oc1k%j9&~fSMQa04Vx&9KDbzwfNq={Lo$O@Ms4p!BX2R44gjMO0U5KJ
z7P365g<gm$Z3EM2$no*qd+HLySIS!^nlWZAM7*gFzx;ckw04z$GxUMm|G;=;tX9B$
zp8)eimqy})L9YRq&#i+x?Ounu)loxJ+2;58U9FR<{8N%ul?oH`EcL|sLYTAqEp;*t
zS(=^?Lp(jWuf8oePiytvc3ZUSoGo8EsqfngvUOV6#}1@sjzLvQf|Q*YyI;l|cgBht
zjpL4p-I5LO_W#NDo<R<ASJc}r8$J$v>ZtqFRffUljQ|I|QKm%ThiTBp$HUS*!kt?T
zbZMnXb(^;@2Pl^hU#(;hE2wUY_B5jQZ+>C3COkjw2(JF85MKR_(~**&X2<&5{&rjK
z_NBqp2nonD9Q2PL;F#@Oke(soV}Vl|B~@!Et{nY~$;Ux-Cxq~TlZK9LZ}p^2{0o;}
zuZIWV`X7L(<e?AM%gWplyYM;Ya;mrl+9U&}!l3<3s{4)9cZt_bJsEu7gI-%{BC)8m
z4=xILC`|Nn|5AyQPw{YT8@|jXL2y>3L+j3Y>P$;^lUxmpDqs5yu77wMp29JTr>ajo
zzEM6}X-VAw-{Qn4ZJImuNs266QLtP_F}l0u->=$b3wTsGadQsn?^N%t5>`K(jeLBW
zHEQ|-7-dGU!I}?ZT8(D@PpjTKu~j~KhrO-Gys`&)6U(#v>9FeKzj~#8MY~lZe#e;R
z_W*hdjK5p>EWL4zzfEC#ug}`-a`BOX`|dV)a=*OX>Lld*#CT?3&8$W0z?ma#n}pO1
zyZX~s#uhlx;modAmhmC7CCQ*bqIhLEAc$T1aMzb$x<Aez*8t6|3Z!36*(vLCkI8U}
zpY@V8shyn}YL_(}(rIkj5SPE0lOa?<PYyMx{a$6xuxJWZavAQsnSSjoDca67Y8_(j
zl}a+FH_O9cd*R+GK0-;MLLQlVtn5VAJ(kHq)n9S~DZih7=P5ioU2}WN(-><p%S6)R
zgt5kY#*4*^l8K%Lcr|T_z0to5_lpsEd&4#~yRsfTo)Ry6z(Ktdt#Zg8QHxAwy(Rs(
zzdugD^jjO;Wv$0q3vNC0Us_A!WIWptkDU~`;@dMA4vL)@kb1?})tyL960#5h9+nUv
z#1u-E1jU9jDY*h34jF!SZxmhL)U4bo?XLy9+H=F_Zyu#Ho$*`F=LXn>jgWQ+d&6jf
zaCEvR@Huy*SX^qa^R%n|E~xD<)`}F}0k?0aJ_@nXk~n|8SxE*9_}+BM(!F^=YK9>g
z7a&}sJ`=Rw*3l$sNw%LoUWGy6;O|~At=W_~vnwDT>A}{-w1$+5{tRr1sZ97M=SaEI
zX%9UW{2V~BCA`JFky9%)@ln}UE<z^Dl5R*Mu%~-DqDT%Vx^%Ch3`(q0c6!wP>UI{d
zuzZ$}eySLJSGs5(N8VKm(ei!EDYI#Q?lbTz>`Li5-^?o4`u6iXkn<G#0xu?w<=aVe
z7;baGP3f9Mk+1Cf8?i?Fz?+1HNsU0`pF*rp?8+8?4T+eWLhxtTt7M|G3;kOa5|Yqr
z3gM0lyMiBUo@Y};jq^<0_bys0C(hHXKz~?$9AMuL>S4dyI8JM%@Ge&BB>IN~i0No<
zR7;jhI~X#?kSc4x;}GGVlD=)XDr$gRl;|z{zbNG;yCe-E_=J=|&%qK~`>M%Te7u#R
zfS9z=_h1p2R;Sx;ApWXBT=p&T?+?!i5~9JukMT~u@c2Mn{dq-2kUEw7p=@0FK*o3d
z6^_471_%(1*eh0li&jP7X};=w!Kl%m%s>A+n8Noz0-xGfT$@saYN~GEe`9kY=y`v6
z)W)1n-`yZ(TJ=#Y_!9AxxM$$gOk_|BhYkKn8B5OqYdu!}(hS@~Q>g_x`YG*aM;VVL
z24q1kyJ|>7SZ&+Jr>$bIcTzpP!_K`(NXx!G5XtfV<X?Nu2H`^oPg=}FzhRS<lk!7X
z6{<SV^6JyK>*%znj&1}uvRQP5QwdPC`(f}c(I2|pmvzi>|3Q8~WDYPc6dLtqjV?HH
zPin)a8z*}@9n;)-dz#JTxaVv<j;})tmZf8R$u;u$)Kb7%DULzBfldTn;YuUSZMQAb
zy4X9NBDy|#)O1tr*cfrA62TW$X}9ISW@<1`F5P><zu1}E(Vf2_;H2o~nni1#n*lX{
z{Vv~v<;MW)g*PGB^MLBdjB|w}rQd!1Fjl^<(t>XY7$0xPrhMeo-oqceK1+&v;A($3
z4UMI>s{i_<3Tu_pY%n%~(5IN)GDT)fM|W)#-Tjk%#eYMT%#R1Z@f?49Mi*h{V(IHO
z!Sp=+%BK010)u#>c^Q}%M|y0Hpqx|&msxnUUa^Wh*BlEYlmWfdT4OFP*!b;vvs^-A
z$=H6+yy2*i8VxJYoKDC;aH?p5F6pw}<IvzP#>BsjI_;Toighl!HueTQSN~nIwI@wf
z_;dC>S^|%0cMX5vGhH<+HT}lv<MASX-7kfC`z0?ckPfVVA2IR0gS;{<kY}a+Kiw_9
z+9qRId@@t|GrNRjWb#E%Ve=E#uo5ZVDF3yIcLzzRua?HS;JcR(*bb{)N|%Z51H@7h
zQ}l&OorLISANk@C**q#_xPGv)ozhgB_s|fZOuAy?#S`XGth)q$;5O;<VUizX`QSd#
zXRtYX-^VE%TGWG|RN*ub3O5dp7C%By8-d34ETsbCd57wL{xYVXQD#s4bCb*|0eCbG
zrE$IUR4PhT@;9dJaR}<enQ&vX<c`3=;-wc}1xVsIrNWrT5-DQ&)yLyno1{wnct&DK
zJBkrkt7{6g-3h(ty{%f`)n{t|c7E^OC9(E7OGf2_RsCSGzim};fwKEFaHz99;^yiB
zsgqD5X_nm%_gnaBz0VIdzM$7meZOgY`~CGz2u1rH5m7PlMESE$&y{64F9ve3mk{-<
z;$lJgnuFt^lz!<b%Tr|gZMpEer}RplPR}kj%&zS8V0Os;!8f|4p|*8z?AII^2#*Ya
z&zuBdu9@|`Seq8i*+4mJrE*O=_p+zz+@Q+#N*wMyNm*n1ZyCA!Z!VpYyqN0gQ)V<B
zN6dS-Lrm@_>M`TRpS2+C4j}mC4So1h%gFPcccxa`kv`GvMzk1zaI2P@*6Rq@-cm)g
z>)5>ap&+v5X{dPq^~3U${)B*C|8WsyHCEQ8eS;~R(MOdiQ33kXxgxx(<$pm|*Xwpl
z3tRi0M>0~oZF(te5Vt@-#@%qy5xzvbVqLq~@o=xNl><Yk&vEE_`WXB~F-{oJ9n|AU
z+pVT$`PSvwCuZdvHq%VZE5#JI)j(HV#-H}>-~8Aqmk27SHv3w0?ub8V>)&g%y=G;`
z)<mG9gzG2%1!M7#L)k5M{RUpQJ(00anvE~&+WMwc+{jVrR?}Kv{r5-En&V#B^zKjM
zzb<LAhPf5wW;%EEch4RH-E;riu1WQ>a9sSdhXYTH^3T5No#wCkvm~1?+CqS3Y3SjZ
zNhQU6!N{Ca*eYf}J6mrwOkhe_7jrLLOu#}!R*{WC8cHj7FeAvT#&-VbQS0_j{eXM?
z3B|4)Puhxqzf&N13odO{ZINwRRB!l1EyBxwU=kOa6{ZfZwVmSekgtTdKGHJ{alT^h
zUK=?v#ZAWP+V*3ygPV`t?1W~;O#QQTHKqjxP6V)FO-phdN`K747(&`_rMLCodjAMa
z{}ih3C>tm(`mWP@660DVbQZJ~>+NIGV`I@G6&e?imB-IMkaltMSq{dAGJvgLx8cW2
zr_{3-M!8JyR!`@3J+(M^tvPu~cc*rOe&-WLFLwZ(4Y5tgu-i>m4L=V5(ze(yOYVNG
zR6w~A9mh1Q)<As%aC6LRA?|1AsEUM~L~@e#4oVyxxME^k=4xiWK;0+y$a2i)XMsP2
zO(>LWctYhg>hYU}f3tP$?&Ac%4w_-|9$5JF)KAYW$_b%&M)CG#$tSLuAAH)v#dYao
zxi<3Hu3mCPd42$!>O|>lTy8jcN6_yKv?q+ML;FoC?)#Rk=$o12FUu4DKN<Jx<G-Rl
z`Tew7qxq&m?xQT`KOg_8<y|S)6sP{u*FqM{s0ji`EN<+{Eu2}(pl;@X4G&cW<#Ca#
zqi5_^oVKaqY_gsbb#;d=K2c1<Og41Ijg;{lvEcQmuHa1hwqmCTuGA~ZymxMb8|W<u
z%4d+4+x-v~Z7`GZRV2Jt`BE>=FM@w#>JNl7JUiIvH6P8`*^3+9!N8Jb`(>7sEpfjR
z+)_8fqUn2UHWN)rJKTs{K8aIjWIOOW|4p2z@S~wTNLEMGG~w4x-`{UPtm1gTtBD?x
zF<qojV>dKkrkJKfP^X^za~7@(dE26}LoEQ4uR;W1f!7T7@L&9_DpZUY?POH4#UlYz
zJqU(fMD2=j*QEWra+G6y%+Eq;+!h~W!T|Eo4}?ZzX`A^hma!A`Z-04;c(LT!KjJ>5
zI%U4ml%3mLYp+Kdo#P@ZIFFF_dd%7H`1EMFHDnE2)5qRgcrPygdYn=nEa}2RIf@hs
zT>-wgotQE8w_Uz-S&fUg%T{gZ?%y|Tx)zY*DBSRw{X3q5U*zh2fqPnc|KXTQc#CbF
z^zS12c9ma{<AM7ums>~PO-tL80UF2Xjd?QA`(E4Bx3a~^Vp~6OL*UMo22}p&CCVJN
z^eTVzKPaB`NEuac`DZyIWzeii(=XZ2#IOb3kq#>xgNB8G(P*3C>Bi*~y5n1BSdwSY
zE)|TmjW#J*OI?XgY=ZaRtf`OCLu)_DWIK@rsa3KNX-h+T=8kN~NUl5$nbuXpIrN;0
z3tQmditpx;3c|$28K=+YVGVBvXJ1TKvq^2Qf>h;*^8$d+msfaJg1b}R&@Qj@NbgS!
z-#*}^J*S4{nvNf?ee+_^3AUlTCq{9Fu7K3XrDQ>Yx$XldY~t|P9$WjRtUfnY@-meu
z{?627%j-Yf{8*ha0}<F0jQK+Y>*wSO(?c_DNo;TG6b`s_{5ZTXRn>ybGm4mP`N33$
zw|!dcSAEbqKVbXdB#6Mur08ux-bka74r;t%RNp?Lq}Ie<R|l)9dE)$_4=nWXY0`Es
zWW!SvEC0+7*^ZrDI1m_kLt)~IqRg{e(qDm$Cw3+LVVeG7ZfJe;H!x_V(647v9Reu{
z`YIYqPn7@AvnvWa8tSIKs@7x;>*T};D#)4uQWs(>NqyQTs1P)M_C1?_<Q&tUkKG`P
zuV_Lf#(Kn&WKJl#&=t(TPR{q&d;Mx%3H=JS&W2RCmFmCRS5)c8GNfZw2?F!VihfN<
z4%`wPdXlt<GRqx<*f}({R^@YG^BlSDE}iTn_5#B`Dd?B;Ew+if6;az(l3wTjY+<-R
zZ-GuQpiYbs33>R%d0j3OWn(sDe0#|n+8Q%o_nu%DLSgM8wk^O!9Vg#CM+rQ8LmTN!
zETJdY;b}Bww*9_#sFKju0OD=xfPN%mI^6@7sQ|k@81m$oD~pmp(V&R-8=jErQK;8i
znWp}>?A=s!mlhIqjT@?snaob7+}&5o?LbgBMwsF;U5pRT)=wV_5C5XS|H}5>#t1|F
z0ao=6_!vj=G{KvBYOx}t-#vSwTRbgjVC-uk)l=N2h8+sqdkc_PIEJM@h}};Aqa2nw
z*0xZS*pvc;7N%B?;}N8EqrIG(?$lV6U=l?Ts*Rg0^7mx{#Qxk!YtGT;F~e?uL@{;J
zlOB$|dcGA{7g@oNoYn3t41nFP-h$fOL&y})zA({@ztRz2HT0Hiw*w`(L3MpA>OMi%
zy(<rVPNZs5n`nNmDQ?~JWi#e#L3|~lY<y<CG@GUYQx2-Gebi2ijl9L{ECvRZW`c^U
zduwh#Hc~OD3N#s7O1nAPo=C=v(S*;QX<QW>On7z~%B`J4kXgU5uL{;P=%bk?rixd&
z(=<hL{Jq`_j#aRhMG5sqPSLy|?^^eB6u-p@WtY_@L}tmu^qb#F?ryKVDYNjpc0Au6
z8*kF_YBErx(>@=w{Z$gyKpiJF;Udxj-hD&1V_{aTNj$k2dyn-mQqN}TQ(uHg9G^~7
zCB51Csbbf2-+%?7_!;+!bLUSw>y6`-69W70k+^CaMRWWkIXFlRkb;oGC2S?!Gq&Ee
zx<GtaH0zZj&i1}G2_0y#{&&|+YccggJGa<)?k{n(;w0b0>=9mf5+nwO!kn|8#ZEcn
z+`?hOKg#FLdwaqIOENga2sXbcWLwoi#QXlGIBTNigLXClpz%}MVeMM|o`~%k5ug(W
zBoj`X;(Cp{H+_q3G81mQ|Jo5^*pyq~@JM!Ldi;V+DEgX1!gy{d%wK)$?W#7#&%GTm
zMkfGD_AR$5=PrJ0Au106lQiH<R+VgE(f)*wA@I31{=TjZxQMM1zY>^0EKOi`?lhBo
zk2$Aw-v{S@T||Z~`^qc6?3ou2T6hkhdx*}43BUmMDQeIb=L-=H!$Q-U?}g?s6&r)@
zT!jEj77*9r{%l~8LGv6`Oa767VRPU900%~AH->JV)>Pc{=08>(Die+;x)lw>bD}_}
z0%o#SVhzraa1&kdiMaRD!TpTc?=(f2zzM)EtjGIeL*{$MTE+|BAbMA^aab5kfE2{O
zY+2X)Y{d-jMjX*m*SPZi{PX^+R6HaGg~GJhA98Lrk?c(7ErF&PqnDl~vtJ0iAAd)0
z9v4mh>CKObB|3lczV6(x9uN}av4WCZvlDhYipLcp6><8$wO_M^nrAc|ABjP)@X^Hc
zQAQqB68@swn2}L>`zZco$4|gAA5(pB21T9x?to98tKWPW#8?Sw;{AnaCtAaVm20$t
zO}iaxxB5AErpVdEIoq9!a$mk;1DFBI>-BvJf->*l9Q)Yz;dGLS5iJ5F2O}P4D4+}V
zCuo`sHe6ZPnlqW7leFEYgQQN(w`rhZ1|xoZ^)c&<q|`rL)(iQaZW$n&JU?Q{U?jl)
z_kpo~X)-rvJsuA!;pKQnSr!@c6OaO1n)&hE-^##%i2l;x561u!$j8l=xLCpDJl{zB
z=;tngHkvpc9m%{Zdxo(teP-Nri`R_{RM7UzSI~(f@4DWQI8F>DoE8s_jL0nqd3RwJ
z?9)x2fx3%J*K~C!t0yNX>o|3CZ@*Vp3z~_A&Uo+Z^j0#zGzmPi%buKcS5&me#%9g1
z!+{Ct)2Asu-L&weW-^3Lcmi4$g}Ff`E;S4%pzbd1-KD1GFLD(BepjQFjy9#cpJ?p~
zJ&PuyMb~yulqLSW+mq}#_@T4;eC(VBZP2o{AHT+zJ4T7TBH-Bu(+}el26QC?#vC@i
zp6Ld9qXG<Fs&Qpc2dya&fKcFs!zDYzTD%jM9C^#SYz4M0dwq96`Y%l`bpn0Mw9HKv
zPi-9)g5t=o1wGH9&KpfkzAFU-C2#m{`2z+{GifA@age~8rhYJg&(_!)@mqr4#K#^n
z1PYb7X!dRHYlF|pnxWgv8sn<}qz9I{rlC4T(at-qsIY${h?&`Pa^Kr7D&wLp`tK!H
zT!EN@XtWMiC_s9mhz^iKH}1ayfS9q+fgT|JUk&O4n0QElWi1MW<i8-wKmbDyz(eMD
zWB!*6n+b-N$B^SX`Tuw#aaqvfFcN&3|MKguf&O<WYKhPS^EhZJH#D<iBO1iAh^9<-
zN0SeVp}Fkn(X9X1((bPwZjT?<BQWjK@0pqTeI;r0ES{kMb;9ARYT|2W?Q1V(>urxd
z078O7LVSYae1cE|At5P2K`9X^1pO%}XrJ~2o&Wy>xO>_;I|TjD0hEJ5?f)X4sXkY!
JRI+;WKLGbKF0%jt

literal 0
HcmV?d00001

diff --git a/assets/images/empty_shipping.png b/assets/images/empty_shipping.png
new file mode 100644
index 0000000000000000000000000000000000000000..b3487824dffda2895392373084256a46189f9f75
GIT binary patch
literal 17169
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

literal 0
HcmV?d00001

diff --git a/assets/images/get_notified.json b/assets/images/get_notified.json
new file mode 100644
index 00000000..7dcb2fb8
--- /dev/null
+++ b/assets/images/get_notified.json
@@ -0,0 +1 @@
+{"v":"5.1.13","fr":60,"ip":0,"op":180,"w":1200,"h":1200,"nm":"drawkit-grape-pack-illustration-7-prepped-for-animation","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"head","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.254],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p254_1_0p333_0"],"t":20,"s":[0],"e":[-9]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":40,"s":[-9],"e":[-9]},{"i":{"x":[0.475],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p475_1_0p333_0"],"t":150,"s":[-9],"e":[0]},{"t":170}],"ix":10},"p":{"a":0,"k":[704.205,357.429,0],"ix":2},"a":{"a":0,"k":[81.836,159.935,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3.219,0],[0,-7.456],[7.456,0],[0.628,0.09]],"o":[[2.32,-1.88],[7.456,0],[0,7.456],[-0.652,0],[0,0]],"v":[[-10.997,-10.493],[-2.503,-13.5],[10.997,0],[-2.503,13.5],[-4.424,13.364]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[93.133,81.506],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-7.456],[7.456,0],[0,7.456],[-7.456,0]],"o":[[0,7.456],[-7.456,0],[0,-7.456],[7.456,0]],"v":[[13.5,0],[0,13.5],[-13.5,0],[0,-13.5]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[93.631,85.506],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.329,6.129],[11.913,11.867]],"o":[[1.618,-5.519],[1.121,-20.829],[0,0]],"v":[[5.442,34.541],[8.425,17.016],[-9.546,-34.541]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[98.119,56.839],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[4.908,0.263],[8.612,-21.83],[-3.838,-1.39]],"o":[[-4.378,-1.935],[-20.315,-1.093],[2.789,1.437],[0,0]],"v":[[30.583,-15.946],[16.608,-19.309],[-30.583,16.1],[-20.659,20.402]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[44.282,28.74],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-15.694,0.589],[-1.487,-4.311]],"o":[[10.347,2.318],[-0.042,1.969],[0,0]],"v":[[-20.639,-6.633],[18.269,-3.48],[20.639,6.633]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[57.224,59.524],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3.792,5.854]],"o":[[2.994,-0.066],[0,0]],"v":[[-7.251,5.488],[7.251,-5.488]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[55.342,106.049],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-3.286],[1.798,0],[0,3.285],[-1.799,0]],"o":[[0,3.285],[-1.799,0],[0,-3.286],[1.798,0]],"v":[[3.256,0],[0,5.949],[-3.256,0],[0,-5.949]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[24.738,70.566],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[5.375,0]],"o":[[0,3.712],[0,0]],"v":[[5.887,-8.71],[-5.887,8.71]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[36.585,82.67],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-30.566,1.147],[-6.364,-1.28],[-5.756,-2.31],[-0.329,6.129],[27.049,1.454],[8.611,-21.83]],"o":[[-0.128,6.016],[2.132,0.429],[1.619,-5.519],[1.835,-34.126],[-20.315,-1.093],[11.382,5.866]],"v":[[14.454,6.183],[29.591,36.901],[42.52,41.521],[45.504,23.995],[-0.15,-40.427],[-47.34,-5.019]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.984000052658,0.365000017952,0.39199999641,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[66.04,54.859],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[5.366,0.288],[8.214,10.962]],"o":[[-4.94,1.752],[-13.045,-0.701],[0,0]],"v":[[24.148,6.948],[8.618,9.223],[-24.148,-9.512]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[45.629,123.789],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":2,"cix":2,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.617,11.47],[-27.047,-1.454],[-4.56,-2.108]],"o":[[-3.822,-9.438],[1.834,-34.126],[5.147,0.276],[0,0]],"v":[[-28.041,46.197],[-33.147,14.415],[19.15,-44.743],[33.764,-41.091]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[41.741,54.174],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":2,"cix":2,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.835,-34.126],[27.049,1.454],[-1.834,34.126],[-27.048,-1.454]],"o":[[-1.834,34.126],[-27.048,-1.454],[1.835,-34.126],[27.049,1.454]],"v":[[48.975,2.632],[-3.323,61.79],[-48.975,-2.634],[3.322,-61.79]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[61.57,75.222],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.2,3.908],[0,0],[-1.134,-9.58],[2.805,-0.731]],"o":[[0.65,-6.516],[-0.412,-8.034],[-1.029,9.984],[-1.086,0.947],[0,0]],"v":[[-20.302,4.837],[-19.662,-11.905],[20.302,-27.76],[15.565,25.177],[9.505,27.76]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[74.087,139.297],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":2,"cix":2,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[4.123,4.581]],"o":[[-8.153,0.177],[0,0]],"v":[[10.401,2.857],[-10.401,-3.034]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[60.499,165.859],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","np":2,"cix":2,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.134,-9.58],[8.343,9.27],[0.412,8.035]],"o":[[-1.029,9.984],[-4.842,4.223],[3.502,-9.167],[-0.412,-8.034]],"v":[[22.146,-30.28],[17.408,22.658],[-22.146,21.009],[-17.82,-14.424]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[76.244,145.816],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":2,"cix":2,"ix":15,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.15,-21.402],[1.617,-5.518]],"o":[[12.507,11.793],[-0.329,6.128],[0,0]],"v":[[-10.058,-35.024],[8.908,17.496],[5.936,35.024]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[97.636,56.359],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 16","np":2,"cix":2,"ix":16,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"body","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[683.612,715.504,0],"ix":2},"a":{"a":0,"k":[131.284,377.45,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-24.539,-22.632],[2.366,9.898],[24.539,14.267],[18.761,22.632]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[220.97,667.754],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[32.654,-1.459],[9.588,31.932],[-32.654,31.932],[-6.597,17.043],[-10.481,-18.967],[-25.007,-31.932]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[191.089,714.99],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-5.541,-50.9],[21.364,-18.37],[43.536,-14.001],[-1.294,50.9],[-43.536,50.9],[-17.479,36.01],[-21.363,0],[-35.891,-12.964]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[206.972,701.022],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-10.042,2.295],[4.512,-19.758],[12.602,6.69],[1.079,19.401]],"o":[[2.245,-15.534],[38.116,-8.713],[-12.134,11.824],[-3.379,-6.375],[0,0]],"v":[[-41.399,-22.092],[-23.844,-52.195],[37.919,36.483],[-34.424,54.218],[-42.43,10.499]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[212.16,69.906],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-28.078,6.418],[4.511,-19.759],[12.602,6.689]],"o":[[38.116,-8.712],[-12.135,11.824],[-8.245,-15.558]],"v":[[-19.098,-52.196],[42.666,36.483],[-29.678,54.219]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.275,0.859000052658,0.788000009574,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[212.414,74.906],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.843,3.537],[-1.285,-8.288],[1.595,-6.023],[10.708,-32.824]],"o":[[0.712,-15.924],[-1.772,-7.44],[1.418,11.337],[-0.829,3.132],[0,0]],"v":[[35.247,-30.26],[35.465,-64.701],[-25.117,-46.81],[-14.09,1.882],[-36.308,72.141]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[209.809,166.316],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.486,-1.429],[-0.354,-2.479],[-1.064,10.983],[-0.146,1.918]],"o":[[-6.098,17.962],[1.772,4.251],[5.669,-5.491],[0.105,-1.089],[0,0]],"v":[[-33.13,17.43],[-45.679,50.415],[-34.696,75.923],[45.299,-71.367],[45.679,-75.923]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[197.186,249.484],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.285,-8.288],[1.595,-6.022],[4.606,-4.429],[-0.355,-2.48],[-1.064,10.983],[1.772,7.44]],"o":[[1.418,11.337],[-1.593,6.023],[1.772,4.251],[5.668,-5.491],[1.062,-10.983],[-1.771,-7.44]],"v":[[-14.584,-90.285],[-3.557,-41.595],[-47.77,90.108],[-36.785,115.616],[43.209,-31.675],[45.998,-108.176]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[204.276,214.792],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-31.354,6.399]],"o":[[13.585,-40.636],[0,0]],"v":[[-33.238,40.828],[33.238,-40.828]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[86.406,48.806],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[14.615,-8.943],[23.287,2.476]],"o":[[68.286,42.953],[-5.743,3.515],[0,0]],"v":[[-26.07,-118.946],[6.059,115.431],[-42.215,116.33]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[188.765,134.863],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":2,"cix":2,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[6.534,8.778],[-6.978,34.923]],"o":[[-33.059,-6.204],[-2.01,-20.262],[0,0]],"v":[[36.261,56.554],[-34.251,32.532],[-27.329,-56.554]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[69.378,188.577],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":2,"cix":2,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-76.228,0],[16.571,-10.141],[14.177,19.045]],"o":[[106.65,0],[-16.572,10.141],[-5.521,-55.649]],"v":[[-3.018,-126.758],[61.586,116.617],[-98.111,87.431]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.275,0.859000052658,0.788000009574,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[138.238,138.677],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-12.351,-27.063],[12.351,27.063]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[158.208,314.83],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":2,"cix":2,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[54.692,663.365],[131.73,663.365]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","np":2,"cix":2,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-1.708,2.135],[1.708,-2.135]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[161.458,688.838],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":2,"cix":2,"ix":15,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-14.848,18.56],[14.848,-18.56]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[189.074,654.318],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 16","np":2,"cix":2,"ix":16,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-23.755,29.694],[23.755,-29.694]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[172.598,646.103],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 17","np":2,"cix":2,"ix":17,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-7.655],[27.569,-118.797]],"o":[[0,0],[0,0],[0,4.809],[0,0]],"v":[[-61.969,-42.215],[-56.823,-153.121],[61.969,-131.09],[-2.664,153.121]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[148.007,384.088],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 18","np":2,"cix":2,"ix":18,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[-9.578,41.185],[0,0],[0,0],[0,0]],"v":[[30.488,59.416],[14.411,128.446],[-30.488,128.446],[-18.566,-128.446]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[101.611,534.793],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 19","np":2,"cix":2,"ix":19,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-7.655],[0,0]],"o":[[0,0],[0,0],[0,7.656],[0,0]],"v":[[-69.427,216.135],[-49.366,-216.135],[69.427,-194.105],[-24.529,216.135]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.231000010173,0.216000007181,0.26699999641,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[146.55,453.104],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 20","np":2,"cix":2,"ix":20,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.096,-3.814],[0,0],[0,0],[0,0],[0,0],[0,0],[8.144,-71.5]],"o":[[-1.683,16.764],[5.254,15.763],[0,0],[0,0],[0,0],[0,0],[-2.993,11.974],[0,0]],"v":[[-84.306,0],[-86.883,32.48],[60.71,227.838],[86.979,194.403],[-6.638,0],[9.124,-216.765],[-55.836,-227.838],[-78.596,-52.661]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[94.957,439.222],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 21","np":2,"cix":2,"ix":21,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.477,-19.106],[0,0],[0,0],[0,0],[0,0]],"o":[[-4.776,19.106],[5.254,15.763],[0,0],[0,0],[0,0],[0,0]],"v":[[-55.646,-227.838],[-86.693,32.48],[60.9,227.839],[87.17,194.403],[-6.448,0],[9.314,-216.765]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.231000010173,0.216000007181,0.26699999641,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.766,444.222],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 22","np":2,"cix":2,"ix":22,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"foot","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[12]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":20,"s":[12],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":40,"s":[0],"e":[12]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[12],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":80,"s":[0],"e":[12]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":100,"s":[12],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":120,"s":[0],"e":[12]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":140,"s":[12],"e":[0]},{"t":160}],"ix":10},"p":{"a":0,"k":[661.089,1029.621,0],"ix":2},"a":{"a":0,"k":[99.109,18.332,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[44.802,-24.151],[42.404,-5.953],[50.334,24.151],[-50.334,24.151],[-26.138,5.596]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[58.311,49.536],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-4.712,16.176],[4.551,9.073],[4.712,-16.176]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[56.189,24.153],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[47.097,-32.855],[42.404,2.751],[50.334,32.855],[-50.334,32.855],[2.428,-7.607],[2.589,-32.855]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[63.311,45.832],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[43.583,7.978],[120.622,7.978]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"bubble text","parent":5,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":120,"s":[100],"e":[0]},{"t":140}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[112.298,37.92,0],"ix":2},"a":{"a":0,"k":[42.274,11.91,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[2.5,21.32],[43.591,21.32]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":2,"lj":1,"ml":10,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[2.5,2.5],[82.049,2.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":2,"lj":1,"ml":10,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":40,"s":[0],"e":[100]},{"t":70}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"bubble","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":30,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":120,"s":[100],"e":[0]},{"t":140}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.333,"y":0},"n":"0_1_0p333_0","t":0,"s":[454.694,352.871,0],"e":[454.694,252.871,0],"to":[0,-16.6666660308838,0],"ti":[0,16.6666660308838,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.333,"y":0.333},"n":"0p667_0p667_0p333_0p333","t":40,"s":[454.694,252.871,0],"e":[454.694,252.871,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.333,"y":0},"n":"0_1_0p333_0","t":120,"s":[454.694,252.871,0],"e":[454.694,127.871,0],"to":[0,-20.8333339691162,0],"ti":[0,20.8333339691162,0]},{"t":160}],"ix":2},"a":{"a":0,"k":[86.446,61.907,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.989],[8.989,0],[0,8.989],[-8.989,0]],"o":[[0,8.989],[-8.989,0],[0,-8.989],[8.989,0]],"v":[[16.276,0],[0,16.276],[-16.276,0],[0,-16.276]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[38.743,39.179],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[5.561,0],[0,0],[0,-5.56],[0,0],[-5.561,0],[0,0],[0,0],[0,0],[0,0],[0,5.561],[0,0]],"o":[[0,0],[-5.561,0],[0,0],[0,5.561],[0,0],[0,0],[0,0],[0,0],[5.561,0],[0,0],[0,-5.56]],"v":[[76.128,-61.657],[-76.126,-61.657],[-86.195,-51.588],[-86.195,7.111],[-76.126,17.178],[-33.771,17.178],[0.001,61.657],[33.771,17.178],[76.128,17.178],[86.195,7.111],[86.195,-51.588]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.847000002394,0.875,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[86.445,61.907],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"arm","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":0,"s":[-9],"e":[6]},{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p833_1_0p333_0"],"t":40,"s":[6],"e":[6]},{"i":{"x":[0],"y":[1]},"o":{"x":[0.236],"y":[0]},"n":["0_1_0p236_0"],"t":140,"s":[6],"e":[-9]},{"t":179}],"ix":10},"p":{"a":0,"k":[652.801,378.313,0],"ix":2},"a":{"a":0,"k":[173.183,43.297,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-16.108,-5.015]],"o":[[-7.042,-6.253],[0,0]],"v":[[1.331,7.294],[8.054,-2.279]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16.699,35.88],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-20.621,-6.42]],"o":[[-11.006,-4.963],[0,0]],"v":[[10.311,10.209],[10.311,-3.789]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[19.105,47.531],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-16.108,-5.015]],"o":[[-7.042,-6.253],[0,0]],"v":[[1.331,7.294],[8.054,-2.279]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[20.699,39.88],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-20.621,-6.42]],"o":[[-11.005,-4.963],[0,0]],"v":[[10.311,10.209],[10.311,-3.789]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[23.105,51.531],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[4.902,1.69],[-2.898,-6.593],[-3.55,-2.198]],"o":[[0.169,-6.255],[-4.902,-1.691],[2.898,6.593],[0,0]],"v":[[10.675,17.665],[10.675,-8.029],[-12.678,-11.072],[-4.877,-0.929]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[48.381,36.382],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[4.902,1.691],[-2.898,-6.593],[-3.55,-2.198]],"o":[[0.169,-6.255],[-4.902,-1.691],[2.898,6.593],[0,0]],"v":[[10.675,17.665],[10.675,-8.029],[-12.678,-11.072],[-4.877,-0.929]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[52.381,40.382],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[27.725,29.065],[-0.825,29.876],[-27.725,-29.066],[0.826,-29.876]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.231000010173,0.216000007181,0.26699999641,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[40.702,44.833],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-25.138,-9.101],[20.022,10.946],[3.189,7.229],[-1.411,4.846]],"o":[[13.299,-26.034],[9.931,3.402],[-4.925,-3.08],[0.749,-4.386],[0,0]],"v":[[-27.904,-11.413],[31.734,-49.909],[-17.604,48.065],[-41.665,29.037],[-38.412,15.105]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[136.723,66.988],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[20.021,10.947],[3.19,7.229],[-38.171,-13.821]],"o":[[-4.925,-3.08],[6.132,-35.878],[9.931,3.402]],"v":[[-17.603,50.423],[-41.665,31.398],[31.734,-47.549]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.275,0.859000052658,0.788000009574,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[141.723,69.629],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.764,1.676]],"o":[[-1.018,-3.985],[0,0]],"v":[[2.34,7.936],[-2.34,-7.936]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[35.804,74.546],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":2,"cix":2,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[27.725,29.065],[-0.825,29.876],[-27.725,-29.066],[0.826,-29.876]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[35.702,39.833],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":2,"cix":2,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-10.212,-25.285]],"o":[[1.098,3.539],[0,0]],"v":[[-10.395,-27.507],[10.395,27.507]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[48.539,109.989],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3.129,-2.546],[-1.395,1.862],[0,0],[0,0],[1.828,-5.898]],"o":[[5.92,13.387],[10.003,8.143],[1.397,-1.861],[0,0],[-2.881,7.204],[0,0]],"v":[[-34.178,13.85],[-19.795,40.247],[24.413,27.987],[34.178,-46.064],[-0.719,-48.39],[-8.2,-26.65]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[102.606,146.226],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":2,"cix":2,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.963,2.699]],"o":[[-8.487,-15.331],[0,0]],"v":[[14.636,24.735],[-14.636,-24.735]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.105999995213,0.234999997008,0.528999956916,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.191,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[74.401,93.737],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","np":2,"cix":2,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-10.003,-8.143],[-1.396,1.861],[0,0],[0,0],[1.164,-3.722],[1.163,3.256]],"o":[[2.094,6.747],[10.004,8.142],[1.395,-1.861],[0,0],[-4.187,10.47],[-3.024,-8.143],[0,0]],"v":[[-49.32,-49.328],[-4.654,54.664],[38.154,56.293],[49.32,-31.647],[14.423,-33.974],[5.117,-6.289],[-27.7,-62.806]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[92.464,136.809],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":2,"cix":2,"ix":15,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"rectangle","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[-180]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":90,"s":[-180],"e":[-360]},{"t":179}],"ix":10},"p":{"a":0,"k":[522.761,575.021,0],"ix":2},"a":{"a":0,"k":[237.456,205.504,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[229.956,12.97],[117.653,198.004],[-229.956,-12.97],[-117.653,-198.004]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.917999985639,0.941000007181,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3,"ix":5},"lc":1,"lj":1,"ml":10,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[237.456,205.504],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"triangle","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[180]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":90,"s":[180],"e":[360]},{"t":179}],"ix":10},"p":{"a":0,"k":[207.714,882.157,0],"ix":2},"a":{"a":0,"k":[67.164,66.801,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-66.914,-32.145],[29.797,66.551],[66.914,-66.551]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.917999985639,0.941000007181,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[67.164,66.801],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"wall and floor","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[661.022,596.751,0],"ix":2},"a":{"a":0,"k":[400.402,488.475,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[63.921,483.23],[-63.921,483.23],[-63.921,-483.23],[63.921,-483.23]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.847000002394,0.875,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[497.914,483.48],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[400.152,4.993],[-400.152,4.993],[-400.152,-4.994],[400.152,-4.994]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.847000002394,0.875,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[400.402,971.706],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0}],"markers":[]}
\ No newline at end of file
diff --git a/ios/Gemfile.lock b/ios/Gemfile.lock
deleted file mode 100644
index 8c068fab..00000000
--- a/ios/Gemfile.lock
+++ /dev/null
@@ -1,182 +0,0 @@
-GEM
-  remote: https://rubygems.org/
-  specs:
-    CFPropertyList (3.0.3)
-    addressable (2.7.0)
-      public_suffix (>= 2.0.2, < 5.0)
-    atomos (0.1.3)
-    aws-eventstream (1.1.0)
-    aws-partitions (1.413.0)
-    aws-sdk-core (3.110.0)
-      aws-eventstream (~> 1, >= 1.0.2)
-      aws-partitions (~> 1, >= 1.239.0)
-      aws-sigv4 (~> 1.1)
-      jmespath (~> 1.0)
-    aws-sdk-kms (1.40.0)
-      aws-sdk-core (~> 3, >= 3.109.0)
-      aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.87.0)
-      aws-sdk-core (~> 3, >= 3.109.0)
-      aws-sdk-kms (~> 1)
-      aws-sigv4 (~> 1.1)
-    aws-sigv4 (1.2.2)
-      aws-eventstream (~> 1, >= 1.0.2)
-    babosa (1.0.4)
-    claide (1.0.3)
-    colored (1.2)
-    colored2 (3.1.2)
-    commander-fastlane (4.4.6)
-      highline (~> 1.7.2)
-    declarative (0.0.20)
-    declarative-option (0.1.0)
-    digest-crc (0.6.3)
-      rake (>= 12.0.0, < 14.0.0)
-    domain_name (0.5.20190701)
-      unf (>= 0.0.5, < 1.0.0)
-    dotenv (2.7.6)
-    emoji_regex (3.2.1)
-    excon (0.78.1)
-    faraday (1.2.0)
-      multipart-post (>= 1.2, < 3)
-      ruby2_keywords
-    faraday-cookie_jar (0.0.7)
-      faraday (>= 0.8.0)
-      http-cookie (~> 1.0.0)
-    faraday_middleware (1.0.0)
-      faraday (~> 1.0)
-    fastimage (2.2.1)
-    fastlane (2.170.0)
-      CFPropertyList (>= 2.3, < 4.0.0)
-      addressable (>= 2.3, < 3.0.0)
-      aws-sdk-s3 (~> 1.0)
-      babosa (>= 1.0.3, < 2.0.0)
-      bundler (>= 1.12.0, < 3.0.0)
-      colored
-      commander-fastlane (>= 4.4.6, < 5.0.0)
-      dotenv (>= 2.1.1, < 3.0.0)
-      emoji_regex (>= 0.1, < 4.0)
-      excon (>= 0.71.0, < 1.0.0)
-      faraday (~> 1.0)
-      faraday-cookie_jar (~> 0.0.6)
-      faraday_middleware (~> 1.0)
-      fastimage (>= 2.1.0, < 3.0.0)
-      gh_inspector (>= 1.1.2, < 2.0.0)
-      google-api-client (>= 0.37.0, < 0.39.0)
-      google-cloud-storage (>= 1.15.0, < 2.0.0)
-      highline (>= 1.7.2, < 2.0.0)
-      json (< 3.0.0)
-      jwt (>= 2.1.0, < 3)
-      mini_magick (>= 4.9.4, < 5.0.0)
-      multipart-post (~> 2.0.0)
-      plist (>= 3.1.0, < 4.0.0)
-      rubyzip (>= 2.0.0, < 3.0.0)
-      security (= 0.1.3)
-      simctl (~> 1.6.3)
-      slack-notifier (>= 2.0.0, < 3.0.0)
-      terminal-notifier (>= 2.0.0, < 3.0.0)
-      terminal-table (>= 1.4.5, < 2.0.0)
-      tty-screen (>= 0.6.3, < 1.0.0)
-      tty-spinner (>= 0.8.0, < 1.0.0)
-      word_wrap (~> 1.0.0)
-      xcodeproj (>= 1.13.0, < 2.0.0)
-      xcpretty (~> 0.3.0)
-      xcpretty-travis-formatter (>= 0.0.3)
-    fastlane-plugin-firebase_app_distribution (0.2.4)
-    gh_inspector (1.1.3)
-    google-api-client (0.38.0)
-      addressable (~> 2.5, >= 2.5.1)
-      googleauth (~> 0.9)
-      httpclient (>= 2.8.1, < 3.0)
-      mini_mime (~> 1.0)
-      representable (~> 3.0)
-      retriable (>= 2.0, < 4.0)
-      signet (~> 0.12)
-    google-cloud-core (1.5.0)
-      google-cloud-env (~> 1.0)
-      google-cloud-errors (~> 1.0)
-    google-cloud-env (1.4.0)
-      faraday (>= 0.17.3, < 2.0)
-    google-cloud-errors (1.0.1)
-    google-cloud-storage (1.29.2)
-      addressable (~> 2.5)
-      digest-crc (~> 0.4)
-      google-api-client (~> 0.33)
-      google-cloud-core (~> 1.2)
-      googleauth (~> 0.9)
-      mini_mime (~> 1.0)
-    googleauth (0.14.0)
-      faraday (>= 0.17.3, < 2.0)
-      jwt (>= 1.4, < 3.0)
-      memoist (~> 0.16)
-      multi_json (~> 1.11)
-      os (>= 0.9, < 2.0)
-      signet (~> 0.14)
-    highline (1.7.10)
-    http-cookie (1.0.3)
-      domain_name (~> 0.5)
-    httpclient (2.8.3)
-    jmespath (1.4.0)
-    json (2.5.1)
-    jwt (2.2.2)
-    memoist (0.16.2)
-    mini_magick (4.11.0)
-    mini_mime (1.0.2)
-    multi_json (1.15.0)
-    multipart-post (2.0.0)
-    nanaimo (0.3.0)
-    naturally (2.2.0)
-    os (1.1.1)
-    plist (3.5.0)
-    public_suffix (4.0.6)
-    rake (13.0.3)
-    representable (3.0.4)
-      declarative (< 0.1.0)
-      declarative-option (< 0.2.0)
-      uber (< 0.2.0)
-    retriable (3.1.2)
-    rouge (2.0.7)
-    ruby2_keywords (0.0.2)
-    rubyzip (2.3.0)
-    security (0.1.3)
-    signet (0.14.0)
-      addressable (~> 2.3)
-      faraday (>= 0.17.3, < 2.0)
-      jwt (>= 1.5, < 3.0)
-      multi_json (~> 1.10)
-    simctl (1.6.8)
-      CFPropertyList
-      naturally
-    slack-notifier (2.3.2)
-    terminal-notifier (2.0.0)
-    terminal-table (1.8.0)
-      unicode-display_width (~> 1.1, >= 1.1.1)
-    tty-cursor (0.7.1)
-    tty-screen (0.8.1)
-    tty-spinner (0.9.3)
-      tty-cursor (~> 0.7)
-    uber (0.1.0)
-    unf (0.1.4)
-      unf_ext
-    unf_ext (0.0.7.7)
-    unicode-display_width (1.7.0)
-    word_wrap (1.0.0)
-    xcodeproj (1.19.0)
-      CFPropertyList (>= 2.3.3, < 4.0)
-      atomos (~> 0.1.3)
-      claide (>= 1.0.2, < 2.0)
-      colored2 (~> 3.1)
-      nanaimo (~> 0.3.0)
-    xcpretty (0.3.0)
-      rouge (~> 2.0.7)
-    xcpretty-travis-formatter (1.0.0)
-      xcpretty (~> 0.2, >= 0.0.7)
-
-PLATFORMS
-  ruby
-
-DEPENDENCIES
-  fastlane
-  fastlane-plugin-firebase_app_distribution
-
-BUNDLED WITH
-   1.17.2
diff --git a/ios/Podfile b/ios/Podfile
index 8fa9be5d..fe8e37ba 100644
--- a/ios/Podfile
+++ b/ios/Podfile
@@ -32,8 +32,6 @@ target 'Runner' do
   use_modular_headers!
 
   flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
-
-  pod 'DKImagePickerController/PhotoGallery', :git => 'https://github.com/miguelpruivo/DKImagePickerController.git'
 end
 
 post_install do |installer|
@@ -41,11 +39,24 @@ post_install do |installer|
     flutter_additional_ios_build_settings(target)
     target.build_configurations.each do |config|
       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
-#       config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64 i386"
-      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
-        '$(inherited)',
-        'AUDIO_SESSION_MICROPHONE=0'
-      ]
+      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64 i386"
+
+      if target.name == 'permission_handler_apple'
+        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
+          '$(inherited)',
+
+          ## dart: PermissionGroup.camera
+          'PERMISSION_CAMERA=1',
+
+          ## dart: PermissionGroup.photos
+          'PERMISSION_PHOTOS=1'
+        ]
+      else
+        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
+          '$(inherited)',
+          'AUDIO_SESSION_MICROPHONE=0'
+        ]
+      end
     end
   end
 end
diff --git a/ios/Runner/Info.plist b/ios/Runner/Info.plist
index eaaa8000..a768aba7 100644
--- a/ios/Runner/Info.plist
+++ b/ios/Runner/Info.plist
@@ -102,7 +102,7 @@
 		<true/>
 	</dict>
 	<key>NSCameraUsageDescription</key>
-	<string>This app requires access to take the photo from camera</string>
+	<string>This app requires access to the camera for QR Code or Barcode scanner feature which can be access from the search bar</string>
 	<key>NSLocationAlwaysUsageDescription</key>
 	<string>Need current location access</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
diff --git a/ios/Runner/Info.plist.printer.backup b/ios/Runner/Info.plist.printer.backup
new file mode 100644
index 00000000..ce847d8b
--- /dev/null
+++ b/ios/Runner/Info.plist.printer.backup
@@ -0,0 +1,161 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>en</string>
+	<key>CFBundleDisplayName</key>
+	<string>FluxStore</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+	<key>CFBundleShortVersionString</key>
+	<string>$(FLUTTER_BUILD_NAME)</string>
+	<key>CFBundleSignature</key>
+	<string>????</string>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleTypeRole</key>
+			<string>Editor</string>
+			<key>CFBundleURLName</key>
+			<string>inspireui.com</string>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>fb430258564493822</string>
+			</array>
+		</dict>
+		<dict>
+			<key>CFBundleTypeRole</key>
+			<string>Editor</string>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>com.googleusercontent.apps.412823237422-pf5dr3f75n6r201u24ocioin54u3cseq</string>
+			</array>
+		</dict>
+		<dict>
+			<key>CFBundleTypeRole</key>
+			<string>Editor</string>
+			<key>CFBundleURLName</key>
+			<string>firebaseDynamicLink</string>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>com.inspireui.mstore.flutter</string>
+			</array>
+		</dict>
+		<dict>
+			<key>CFBundleTypeRole</key>
+			<string>Editor</string>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>paytmMID</string>
+			</array>
+		</dict>
+	</array>
+	<key>CFBundleVersion</key>
+	<string>$(FLUTTER_BUILD_NUMBER)</string>
+	<key>FacebookAppID</key>
+	<string>430258564493822</string>
+	<key>FacebookDisplayName</key>
+	<string>FluxStore</string>
+	<key>FirebaseAppDelegateProxyEnabled</key>
+	<true/>
+	<key>FirebaseDeepLinkPasteboardRetrievalEnabled</key>
+	<false/>
+	<key>FirebaseScreenReportingEnabled</key>
+	<true/>
+	<key>GADApplicationIdentifier</key>
+	<string>ca-app-pub-7432665165146018~2664444130</string>
+	<key>ITSAppUsesNonExemptEncryption</key>
+	<false/>
+	<key>LSApplicationQueriesSchemes</key>
+	<array>
+		<string>paytm</string>
+		<string>fbapi</string>
+		<string>fbapi20130214</string>
+		<string>fbapi20130410</string>
+		<string>fbapi20130702</string>
+		<string>fbapi20131010</string>
+		<string>fbapi20131219</string>
+		<string>fbapi20140410</string>
+		<string>fbapi20140116</string>
+		<string>fbapi20150313</string>
+		<string>fbapi20150629</string>
+		<string>fbauth</string>
+		<string>fbauth2</string>
+		<string>fb-messenger-api20140430</string>
+	</array>
+	<key>LSRequiresIPhoneOS</key>
+	<true/>
+	<key>NSAppTransportSecurity</key>
+	<dict>
+		<key>NSAllowsArbitraryLoads</key>
+		<true/>
+		<key>NSAllowsArbitraryLoadsInWebContent</key>
+		<true/>
+	</dict>
+
+	<key>NSBluetoothAlwaysUsageDescription</key>
+	<string>Need BLE permission</string>
+	<key>NSBluetoothPeripheralUsageDescription</key>
+	<string>Need BLE permission</string>
+	<key>NSCameraUsageDescription</key>
+	<string>This app requires access to take the photo from camera</string>
+	<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
+	<string>Need Location permission</string>
+
+	<key>NSLocationAlwaysUsageDescription</key>
+	<string>Need current location access</string>
+	<key>NSLocationWhenInUseUsageDescription</key>
+	<string>Get your current location for delivery</string>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>This app requires access to the photo This app requires access to the photo library to select a profile photo which will be used as a chat image for the Chat Feature.</string>
+    <key>NSUserTrackingUsageDescription</key>
+	<string>This identifier will be used to deliver personalized ads to you. "Ask App Not to track" will limit Advertisement network's ability to deliver relevant ads to you but will not reduce the number of ads you receive.</string>
+	<key>SKAdNetworkItems</key>
+	<array>
+		<dict>
+			<key>SKAdNetworkIdentifier</key>
+			<string>cstr6suwn9.skadnetwork</string>
+		</dict>
+	</array>
+	<key>UIBackgroundModes</key>
+	<array>
+		<string>bluetooth-central</string>
+		<string>bluetooth-peripheral</string>
+		<string>fetch</string>
+		<string>remote-notification</string>
+	</array>
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIMainStoryboardFile</key>
+	<string>Main</string>
+	<key>UIStatusBarHidden</key>
+	<false/>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+		<string>UIInterfaceOrientationPortraitUpsideDown</string>
+	</array>
+	<key>UISupportedInterfaceOrientations~ipad</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationPortraitUpsideDown</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<false/>
+	<key>io.flutter.embedded_views_preview</key>
+	<string>YES</string>
+</dict>
+</plist>
diff --git a/ios/Runner/Runner.entitlements b/ios/Runner/Runner.entitlements
index c2c421b1..2a3666a9 100644
--- a/ios/Runner/Runner.entitlements
+++ b/ios/Runner/Runner.entitlements
@@ -13,6 +13,10 @@
 		<string>applinks:inspireui.com</string>
 		<string>applinks:fluxstoreinspireui.page.link</string>
 	</array>
+	<key>com.apple.developer.in-app-payments</key>
+	<array>
+		<string>merchant.com.inspireui.mstore.flutter</string>
+	</array>
 	<key>com.apple.security.application-groups</key>
 	<array>
 		<string>group.com.inspireui.mstore.flutter.onesignal</string>
diff --git a/lib/app.dart b/lib/app.dart
index 5e5e065f..13a55332 100644
--- a/lib/app.dart
+++ b/lib/app.dart
@@ -179,9 +179,15 @@ class AppState extends State<App>
     super.initState();
   }
 
+  @override
+  void dispose() {
+    WidgetsBinding.instance.removeObserver(this);
+    super.dispose();
+  }
+
   @override
   Future<void> onLoaded(User? user) async {
-    if (!Config().isShopify) {
+    if (!ServerConfig().isShopify) {
       updateDeviceToken(user);
     }
 
@@ -190,16 +196,22 @@ class AppState extends State<App>
 
     /// save logged in user
     cartModel.model.setUser(user);
-    if (user?.cookie != null && user?.loggedIn == true && kAdvanceConfig.enableSyncCartFromWebsite) {
+    if (user?.cookie != null &&
+        user?.loggedIn == true &&
+        kAdvanceConfig.enableSyncCartFromWebsite) {
       await Services()
           .widget
           .syncCartFromWebsite(user?.cookie, cartModel.model, context);
     }
-    if (user?.cookie != null && user?.loggedIn == true && kAdvanceConfig.enableSyncCartToWebsite) {
+    if (user?.cookie != null &&
+        user?.loggedIn == true &&
+        kAdvanceConfig.enableSyncCartToWebsite) {
       await Services().widget.syncCartToWebsite(cartModel.model);
     }
 
-    if (user?.cookie != null && user?.loggedIn == true && kAdvanceConfig.enablePointReward) {
+    if (user?.cookie != null &&
+        user?.loggedIn == true &&
+        kAdvanceConfig.enablePointReward) {
       await _pointModel.getMyPoint(user?.cookie);
     }
 
@@ -231,14 +243,6 @@ class AppState extends State<App>
     _notificationModel.saveMessage(notification);
   }
 
-  @override
-  void didChangeAppLifecycleState(AppLifecycleState state) {
-    super.didChangeAppLifecycleState(state);
-    if (state == AppLifecycleState.resumed) {
-      _notificationModel.checkGranted();
-    }
-  }
-
   @override
   Widget build(BuildContext context) {
     printLog('[AppState] Build app.dart');
@@ -299,14 +303,14 @@ class AppState extends State<App>
                     create: (_) => cartModel.model, lazy: true),
                 Provider<TaxModel>.value(value: _taxModel),
                 ChangeNotifierProvider.value(value: _notificationModel),
-                if (Config().isVendorType()) ...[
+                if (ServerConfig().isVendorType()) ...[
                   ChangeNotifierProvider<StoreModel>(
                       create: (_) => _storeModel),
                   ChangeNotifierProvider<VendorShippingMethodModel>(
                       create: (_) => _vendorShippingMethodModel),
                 ],
                 Provider<PointModel>.value(value: _pointModel),
-                if (Config().isListingType) ...[
+                if (ServerConfig().isListingType) ...[
                   ChangeNotifierProvider<ListingLocationModel>(
                       create: (_) => _listingLocationModel)
                 ],
@@ -362,8 +366,8 @@ class AppState extends State<App>
 
   @override
   void onMessageOpenedApp(FStoreNotificationItem notification) async {
-    if (notification.additionalData?['dynamic_link'] != null) {
-      var url = notification.additionalData!['dynamic_link'];
+    final url = notification.dynamicLink;
+    if (url != null) {
       await DynamicLinkService.handleDynamicLink(
           url, App.fluxStoreNavigatorKey.currentContext!);
     }
diff --git a/lib/app_init.dart b/lib/app_init.dart
index 707a0eef..f33622f3 100644
--- a/lib/app_init.dart
+++ b/lib/app_init.dart
@@ -53,7 +53,7 @@ class _AppInitState extends BaseScreen<AppInit> {
 
       /// set the server config at first loading
       /// Load App model config
-      if (Config().isBuilder) {
+      if (ServerConfig().isBuilder) {
         Services().setAppConfig(serverConfig);
       }
       appConfig = await Provider.of<AppModel>(context, listen: false)
@@ -90,13 +90,13 @@ class _AppInitState extends BaseScreen<AppInit> {
           Provider.of<FilterAttributeModel>(context, listen: false)
               .getFilterAttributes();
 
+          final cartModel = Provider.of<CartModel>(context, listen: false);
           Provider.of<AppModel>(context, listen: false).loadCurrency(
               callback: (currencyRate) {
-            Provider.of<CartModel>(context, listen: false)
-                .changeCurrencyRates(currencyRate);
+                cartModel.changeCurrencyRates(currencyRate);
           });
 
-          if (Config().isListingType) {
+          if (ServerConfig().isListingType) {
             Provider.of<ListingLocationModel>(context, listen: false)
                 .getLocations();
           }
diff --git a/lib/common/config.dart b/lib/common/config.dart
index eac3ab7c..9b403dba 100644
--- a/lib/common/config.dart
+++ b/lib/common/config.dart
@@ -4,7 +4,6 @@ import 'package:firebase_remote_config/firebase_remote_config.dart';
 import 'package:flutter/material.dart';
 
 import '../common/tools.dart';
-import '../generated/l10n.dart';
 import '../modules/dynamic_layout/index.dart';
 import '../services/services.dart';
 import 'config/configuration_utils.dart';
diff --git a/lib/common/config/configurations.dart b/lib/common/config/configurations.dart
index e3a8a029..1073ee89 100644
--- a/lib/common/config/configurations.dart
+++ b/lib/common/config/configurations.dart
@@ -29,8 +29,6 @@ class Configurations {
   static Map _firebaseDynamicLinkConfig =
       DefaultConfig.firebaseDynamicLinkConfig;
   static List<Map> _languagesInfo = DefaultConfig.languagesInfo;
-  static List<String> _unsupportedLanguages =
-      DefaultConfig.unsupportedLanguages;
   static Map _paymentConfig = DefaultConfig.paymentConfig;
   static Map _payments = DefaultConfig.payments;
   static Map _stripeConfig = DefaultConfig.stripeConfig;
@@ -38,6 +36,8 @@ class Configurations {
   static Map _razorpayConfig = DefaultConfig.razorpayConfig;
   static Map _tapConfig = DefaultConfig.tapConfig;
   static Map _payTmConfig = DefaultConfig.payTmConfig;
+  static Map _payStackConfig = DefaultConfig.payStackConfig;
+  static Map _flutterwaveConfig = DefaultConfig.flutterwaveConfig;
   static Map _myFatoorahConfig = DefaultConfig.myFatoorahConfig;
   static Map _mercadoPagoConfig = DefaultConfig.mercadoPagoConfig;
   static Map _afterShip = DefaultConfig.afterShip;
@@ -64,6 +64,8 @@ class Configurations {
   static Map _colorOverrideConfig = DefaultConfig.colorOverrideConfig;
   static GoogleApiKeyConfig _googleApiKey = DefaultConfig.googleApiKey;
   static bool _enableOnBoarding = DefaultConfig.enableOnBoarding;
+  static Map? _managerConfig;
+  static Map? _deliveryConfig;
 
   /// only support firebase remote config
   static Map<String, dynamic>? _layoutDesign;
@@ -122,8 +124,6 @@ class Configurations {
 
   static List<Map> get languagesInfo => _languagesInfo;
 
-  static List<String> get unsupportedLanguages => _unsupportedLanguages;
-
   static Map get paymentConfig => _paymentConfig;
 
   static Map get payments => _payments;
@@ -138,6 +138,10 @@ class Configurations {
 
   static Map get payTmConfig => _payTmConfig;
 
+  static Map get payStackConfig => _payStackConfig;
+
+  static Map get flutterwaveConfig => _flutterwaveConfig;
+
   static Map get myFatoorahConfig => _myFatoorahConfig;
 
   static Map get mercadoPagoConfig => _mercadoPagoConfig;
@@ -190,6 +194,10 @@ class Configurations {
 
   static bool get enableOnBoarding => _enableOnBoarding;
 
+  static Map? get managerConfig => _managerConfig;
+
+  static Map? get deliveryConfig => _deliveryConfig;
+
   void setConfigurationValues(Map<String, dynamic> value) {
     _environment = value['environment'] ?? DefaultConfig.environment;
     _baseUrl = value['baseUrl'] ?? DefaultConfig.baseUrl;
@@ -229,8 +237,6 @@ class Configurations {
         DefaultConfig.firebaseDynamicLinkConfig;
     _languagesInfo =
         List<Map>.from(value['languagesInfo'] ?? DefaultConfig.languagesInfo);
-    _unsupportedLanguages = List<String>.from(
-        value['unsupportedLanguages'] ?? DefaultConfig.unsupportedLanguages);
     _paymentConfig = value['paymentConfig'] ?? DefaultConfig.paymentConfig;
     _payments = value['payments'] ?? DefaultConfig.payments;
     _stripeConfig = value['stripeConfig'] ?? DefaultConfig.stripeConfig;
@@ -238,7 +244,11 @@ class Configurations {
     _razorpayConfig = value['razorpayConfig'] ?? DefaultConfig.razorpayConfig;
     _tapConfig = value['tapConfig'] ?? DefaultConfig.tapConfig;
     _payTmConfig = value['payTmConfig'] ?? DefaultConfig.payTmConfig;
-    _myFatoorahConfig = value['myFatoorahConfig'] ?? DefaultConfig.myFatoorahConfig;
+    _payStackConfig = value['payStackConfig'] ?? DefaultConfig.payStackConfig;
+    _flutterwaveConfig =
+        value['flutterwaveConfig'] ?? DefaultConfig.flutterwaveConfig;
+    _myFatoorahConfig =
+        value['myFatoorahConfig'] ?? DefaultConfig.myFatoorahConfig;
     _mercadoPagoConfig =
         value['mercadoPagoConfig'] ?? DefaultConfig.mercadoPagoConfig;
     _afterShip = value['afterShip'] ?? DefaultConfig.afterShip;
@@ -277,7 +287,10 @@ class Configurations {
         ? DefaultConfig.googleApiKey
         : GoogleApiKeyConfig.fromMap(value['googleApiKey']);
 
-    _enableOnBoarding = value['enableOnBoarding'] ?? DefaultConfig.enableOnBoarding;
+    _enableOnBoarding =
+        value['enableOnBoarding'] ?? DefaultConfig.enableOnBoarding;
+    _managerConfig = value['managerConfig'];
+    _deliveryConfig = value['deliveryConfig'];
   }
 
   void setAlwaysShowTabBar(bool value) {
@@ -374,7 +387,6 @@ class Configurations {
     'adConfig',
     'firebaseDynamicLinkConfig',
     'languagesInfo',
-    'unsupportedLanguages',
     'paymentConfig',
     'payments',
     'stripeConfig',
diff --git a/lib/common/config/default_env.dart b/lib/common/config/default_env.dart
index 463a0346..541d888e 100644
--- a/lib/common/config/default_env.dart
+++ b/lib/common/config/default_env.dart
@@ -195,8 +195,9 @@ class DefaultConfig {
     /// Enable bottom add to cart from product card view
     'EnableBottomAddToCart': false,
 
-    /// enable inappwebview as default the Webview
-    /// otherwise, using webview_flutter
+    /// Disable inAppWebView to use webview_flutter
+    /// so webview can navigate to external app.
+    /// Useful for webview checkout which need to handle payment in another app.
     'inAppWebView': false,
     'AlwaysClearWebViewCache': false,
     'WebViewScript': '',
@@ -344,12 +345,16 @@ class DefaultConfig {
     'iOSAppStoreId': '1469772800'
   };
   static List<Map> languagesInfo = <Map>[];
-  static List<String> unsupportedLanguages = <String>[];
   static Map paymentConfig = {};
   static Map payments = {};
   static Map stripeConfig = {};
   static Map paypalConfig = {};
-  static Map razorpayConfig = {};
+  static Map razorpayConfig = {
+    'keyId': 'rzp_test_SDo2WKBNQXDk5Y',
+    'keySecret': 'RrgfT3oxbJdaeHSzvuzaJRZf',
+    'paymentMethodId': 'razorpay',
+    'enabled': true
+  };
   static Map tapConfig = {};
   static Map payTmConfig = {
     'paymentMethodId': 'paytm',
@@ -357,10 +362,23 @@ class DefaultConfig {
     'production': false,
     'enabled': false
   };
+  static Map payStackConfig = {
+    'paymentMethodId': 'paystack',
+    'publicKey': 'pk_test_a1a37615c9ca90dead5dd84dedbb5e476b640a6f',
+    'production': false,
+    'enabled': false
+  };
+  static Map flutterwaveConfig = {
+    'paymentMethodId': 'rave',
+    'publicKey': 'FLWPUBK_TEST-72b90e0734da8c9e43916adf63cd711e-X',
+    'production': false,
+    'enabled': true
+  };
   static Map myFatoorahConfig = {
     'paymentMethodId': 'myfatoorah_v2',
     'apiToken':
         'rLtt6JWvbUHDDhsZnfpAhpYk4dxYDQkbcPTyGaKp2TYqQgG7FGZ5Th_WD53Oq8Ebz6A53njUoo1w3pjU1D4vs_ZMqFiz_j0urb_BH9Oq9VZoKFoJEDAbRZepGcQanImyYrry7Kt6MnMdgfG5jn4HngWoRdKduNNyP4kzcp3mRv7x00ahkm9LAK7ZRieg7k1PDAnBIOG3EyVSJ5kK4WLMvYr7sCwHbHcu4A5WwelxYK0GMJy37bNAarSJDFQsJ2ZvJjvMDmfWwDVFEVe_5tOomfVNt6bOg9mexbGjMrnHBnKnZR1vQbBtQieDlQepzTZMuQrSuKn-t5XZM7V6fCW7oP-uXGX-sMOajeX65JOf6XVpk29DP6ro8WTAflCDANC193yof8-f5_EYY-3hXhJj7RBXmizDpneEQDSaSz5sFk0sV5qPcARJ9zGG73vuGFyenjPPmtDtXtpx35A-BVcOSBYVIWe9kndG3nclfefjKEuZ3m4jL9Gg1h2JBvmXSMYiZtp9MR5I6pvbvylU_PP5xJFSjVTIz7IQSjcVGO41npnwIxRXNRxFOdIUHn0tjQ-7LwvEcTXyPsHXcMD8WtgBh-wxR8aKX7WPSsT1O8d8reb2aR7K3rkV3K82K_0OgawImEpwSvp9MNKynEAJQS6ZHe_J_l77652xwPNxMRTMASk1ZsJL',
+    'accountCountry': 'KW',
     'production': false,
     'enabled': false
   };
@@ -407,6 +425,12 @@ class DefaultConfig {
     'enable': true,
     'type': 'flare',
     'image': 'assets/images/splashscreen.flr',
+    'boxFit': 'contain',
+    'backgroundColor': '#ffffff',
+    'paddingTop': 0,
+    'paddingBottom': 0,
+    'paddingLeft': 0,
+    'paddingRight': 0,
     'animationName': 'fluxstore',
     'duration': 2000,
   };
diff --git a/lib/common/config/general.dart b/lib/common/config/general.dart
index 9830317d..393135ed 100644
--- a/lib/common/config/general.dart
+++ b/lib/common/config/general.dart
@@ -59,3 +59,5 @@ ColorOverrideConfig get colorOverrideConfig =>
 
 ProductFilterColor? get productFilterColor =>
     colorOverrideConfig.productFilterColor;
+
+StockColor get kStockColor => colorOverrideConfig.stockColor;
diff --git a/lib/common/config/languages.dart b/lib/common/config/languages.dart
index bfd5c6da..ba432d71 100644
--- a/lib/common/config/languages.dart
+++ b/lib/common/config/languages.dart
@@ -3,111 +3,9 @@ part of '../config.dart';
 /// Supported language
 /// Download from https://github.com/hjnilsson/country-flags/tree/master/png100px
 /// https://api.flutter.dev/flutter/flutter_localizations/GlobalMaterialLocalizations-class.html
-List<Map> getLanguages([context]) {
-  var listLang = List<Map>.from(Configurations.languagesInfo);
-  if (context != null) {
-    for (var element in listLang) {
-      element['text'] = getLanguageByContext(context, element['code']);
-    }
-  }
-  return listLang;
+List<Map> getLanguages() {
+  return List<Map>.from(Configurations.languagesInfo);
 }
 
 /// For Vendor Admin
 List<String> unsupportedLanguages = ['ku'];
-
-String getLanguageByContext(BuildContext context, String code) {
-  switch (code) {
-    case 'en':
-      return S.of(context).english;
-    case 'zh':
-      return S.of(context).chinese;
-    case 'hi':
-      return S.of(context).India;
-    case 'es':
-      return S.of(context).spanish;
-    case 'fr':
-      return S.of(context).french;
-    case 'ar':
-      return S.of(context).arabic;
-    case 'ru':
-      return S.of(context).russian;
-    case 'id':
-      return S.of(context).indonesian;
-    case 'ja':
-      return S.of(context).japanese;
-    case 'ko':
-      return S.of(context).Korean;
-    case 'vi':
-      return S.of(context).vietnamese;
-    case 'ro':
-      return S.of(context).romanian;
-    case 'tr':
-      return S.of(context).turkish;
-    case 'it':
-      return S.of(context).italian;
-    case 'de':
-      return S.of(context).german;
-    case 'pt':
-      return S.of(context).brazil;
-    case 'hu':
-      return S.of(context).hungary;
-    case 'he':
-      return S.of(context).hebrew;
-    case 'th':
-      return S.of(context).thailand;
-    case 'nl':
-      return S.of(context).Dutch;
-    case 'sr':
-      return S.of(context).serbian;
-    case 'pl':
-      return S.of(context).Polish;
-    case 'fa':
-      return S.of(context).persian;
-    case 'ta':
-      return S.of(context).Tamil;
-
-    /// Stop support Kudish language due to some build issue and un-support from Flutter
-    /// please refer to https://pub.dev/packages/kurdish_localization
-    case 'ku':
-      return S.of(context).kurdish;
-    case 'bn':
-      return S.of(context).bengali;
-    case 'uk':
-      return S.of(context).ukrainian;
-    case 'cs':
-      return S.of(context).czech;
-    case 'sv':
-      return S.of(context).swedish;
-    case 'fi':
-      return S.of(context).finnish;
-    case 'el':
-      return S.of(context).greek;
-    case 'km':
-      return S.of(context).khmer;
-    case 'kn':
-      return S.of(context).kannada;
-    case 'mr':
-      return S.of(context).marathi;
-    case 'bs':
-      return S.of(context).bosnian;
-    case 'ms':
-      return S.of(context).malay;
-    case 'lo':
-      return S.of(context).lao;
-    case 'sk':
-      return S.of(context).slovak;
-    case 'sw':
-      return S.of(context).swahili;
-    case 'zh_TW':
-      return S.of(context).chineseTraditional;
-    case 'zh_CN':
-      return S.of(context).chineseSimplified;
-    case 'my':
-      return S.of(context).burmese;
-    case 'sq':
-      return S.of(context).albanian;
-    default:
-      return code;
-  }
-}
diff --git a/lib/common/config/models/advanced_config.dart b/lib/common/config/models/advanced_config.dart
index 70760d99..208cb72d 100644
--- a/lib/common/config/models/advanced_config.dart
+++ b/lib/common/config/models/advanced_config.dart
@@ -5,6 +5,7 @@ import '../../../models/entities/social_connect_url.dart';
 import '../../config.dart';
 import '../../constants.dart';
 import 'gdpr_config.dart';
+import 'in_app_update_for_android_config.dart';
 
 class AdvancedConfig {
   final String defaultLanguage;
@@ -66,6 +67,7 @@ class AdvancedConfig {
   final GdprConfig gdprConfig;
   final bool orderNotesWithPrivateNote;
   final bool showRequestNotification;
+  final InAppUpdateForAndroidConfig inAppUpdateForAndroid;
 
   AdvancedConfig({
     required this.defaultLanguage,
@@ -127,6 +129,7 @@ class AdvancedConfig {
     required this.gdprConfig,
     required this.orderNotesWithPrivateNote,
     required this.showRequestNotification,
+    required this.inAppUpdateForAndroid,
   });
 
   factory AdvancedConfig.fromJson(Map<dynamic, dynamic> json) {
@@ -270,6 +273,8 @@ class AdvancedConfig {
           DefaultConfig.advanceConfig['OrderNotesWithPrivateNote'],
       showRequestNotification: json['showRequestNotification'] ??
           DefaultConfig.advanceConfig['showRequestNotification'],
+      inAppUpdateForAndroid: InAppUpdateForAndroidConfig.fromJson(
+          json['inAppUpdateForAndroid'] ?? {}),
     );
   }
 
@@ -337,6 +342,7 @@ class AdvancedConfig {
     data['AjaxSearchURL'] = ajaxSearchURL;
     data['AlwaysClearWebViewCache'] = alwaysClearWebViewCache;
     data['OrderNotesWithPrivateNote'] = orderNotesWithPrivateNote;
+    data['inAppUpdateForAndroid'] = inAppUpdateForAndroid.toJson();
     return data;
   }
 }
diff --git a/lib/common/config/models/age_restriction_config.dart b/lib/common/config/models/age_restriction_config.dart
new file mode 100644
index 00000000..c4225d3f
--- /dev/null
+++ b/lib/common/config/models/age_restriction_config.dart
@@ -0,0 +1,77 @@
+import '../../../modules/dynamic_layout/helper/helper.dart';
+
+class AgeRestrictionConfig {
+  final bool enable;
+  final String imageUrl;
+  final String backgroundImageUrl;
+  final String title;
+  final String deniedMessage;
+  final String hintMessage;
+  final int minimumAge;
+  final bool useLogo;
+  final bool alwaysShowUponOpen;
+
+  AgeRestrictionConfig({
+    this.enable = false,
+    this.imageUrl = '',
+    this.backgroundImageUrl = '',
+    this.title = '',
+    this.deniedMessage = '',
+    this.hintMessage = '',
+    this.minimumAge = 21,
+    this.useLogo = true,
+    this.alwaysShowUponOpen = true,
+  });
+
+  Map<String, dynamic> toMap() {
+    return {
+      'enable': enable,
+      'imageUrl': imageUrl,
+      'backgroundImageUrl': backgroundImageUrl,
+      'title': title,
+      'deniedMessage': deniedMessage,
+      'hintMessage': hintMessage,
+      'minimumAge': minimumAge,
+      'useLogo': useLogo,
+      'alwaysShowUponOpen': alwaysShowUponOpen,
+    };
+  }
+
+  factory AgeRestrictionConfig.fromMap(Map map) {
+    return AgeRestrictionConfig(
+      enable: map['enable'] == true,
+      imageUrl: '${map['imageUrl'] ?? ''}',
+      backgroundImageUrl: '${map['backgroundImageUrl'] ?? ''}',
+      title: '${map['title'] ?? ''}',
+      deniedMessage: '${map['deniedMessage'] ?? ''}',
+      hintMessage: '${map['hintMessage'] ?? ''}',
+      minimumAge: Helper.formatInt(map['minimumAge'] ?? 21) ?? 21,
+      useLogo: map['useLogo'] != false,
+      alwaysShowUponOpen: map['alwaysShowUponOpen'] != false,
+    );
+  }
+
+  AgeRestrictionConfig copyWith({
+    bool? enable,
+    String? imageUrl,
+    String? backgroundImageUrl,
+    String? title,
+    String? deniedMessage,
+    String? hintMessage,
+    int? minimumAge,
+    bool? useLogo,
+    bool? alwaysShowUponOpen,
+  }) {
+    return AgeRestrictionConfig(
+      enable: enable ?? this.enable,
+      imageUrl: imageUrl ?? this.imageUrl,
+      backgroundImageUrl: backgroundImageUrl ?? this.backgroundImageUrl,
+      title: title ?? this.title,
+      deniedMessage: deniedMessage ?? this.deniedMessage,
+      hintMessage: hintMessage ?? this.hintMessage,
+      minimumAge: minimumAge ?? this.minimumAge,
+      useLogo: useLogo ?? this.useLogo,
+      alwaysShowUponOpen: alwaysShowUponOpen ?? this.alwaysShowUponOpen,
+    );
+  }
+}
diff --git a/lib/common/config/models/color_override/index.dart b/lib/common/config/models/color_override/index.dart
new file mode 100644
index 00000000..6c9d160a
--- /dev/null
+++ b/lib/common/config/models/color_override/index.dart
@@ -0,0 +1,2 @@
+export 'product_filter_color_config.dart';
+export 'stock_color_config.dart';
diff --git a/lib/common/config/models/color_override/product_filter_color_config.dart b/lib/common/config/models/color_override/product_filter_color_config.dart
new file mode 100644
index 00000000..cebae301
--- /dev/null
+++ b/lib/common/config/models/color_override/product_filter_color_config.dart
@@ -0,0 +1,42 @@
+class ProductFilterColor {
+  bool useBackgroundColor = false;
+  bool usePrimaryColorLight = false;
+  String? backgroundColor;
+  num backgroundColorOpacity = 1.0;
+  String? labelColor;
+  num labelColorOpacity = 1.0;
+  bool useAccentColor = false;
+
+  ProductFilterColor({
+    this.useBackgroundColor = false,
+    this.usePrimaryColorLight = false,
+    this.backgroundColor,
+    this.backgroundColorOpacity = 1.0,
+    this.labelColor,
+    this.labelColorOpacity = 1.0,
+    this.useAccentColor = false,
+  });
+
+  ProductFilterColor.fromJson(dynamic json) {
+    useBackgroundColor = json['useBackgroundColor'] ?? false;
+    usePrimaryColorLight = json['usePrimaryColorLight'] ?? false;
+    backgroundColor = json['backgroundColor'];
+    backgroundColorOpacity = json['backgroundColorOpacity'] ?? 1.0;
+    labelColor = json['labelColor'];
+    labelColorOpacity = json['labelColorOpacity'] ?? 1.0;
+    useAccentColor = json['useAccentColor'] ?? false;
+  }
+
+  Map<String, dynamic> toJson() {
+    var map = <String, dynamic>{};
+    map['useBackgroundColor'] = useBackgroundColor;
+    map['usePrimaryColorLight'] = usePrimaryColorLight;
+    map['backgroundColor'] = backgroundColor;
+    map['backgroundColorOpacity'] = backgroundColorOpacity;
+    map['labelColor'] = labelColor;
+    map['labelColorOpacity'] = labelColorOpacity;
+    map['useAccentColor'] = useAccentColor;
+    map.removeWhere((key, value) => value == null);
+    return map;
+  }
+}
diff --git a/lib/common/config/models/color_override/stock_color_config.dart b/lib/common/config/models/color_override/stock_color_config.dart
new file mode 100644
index 00000000..10abaa37
--- /dev/null
+++ b/lib/common/config/models/color_override/stock_color_config.dart
@@ -0,0 +1,29 @@
+import 'dart:ui';
+
+import '../../../constants.dart';
+
+class StockColor {
+  Color inStock = const Color(0xff3fc1be);
+  Color outOfStock = const Color(0xffe74c3c);
+  Color backorder = const Color(0xffeaa601);
+
+  StockColor({
+    this.inStock = const Color(0xff3fc1be),
+    this.outOfStock = const Color(0xffe74c3c),
+    this.backorder = const Color(0xffeaa601),
+  });
+
+  StockColor.fromJson(Map config) {
+    inStock = HexColor(config['inStock'] ?? '#3fc1be');
+    outOfStock = HexColor(config['outOfStock'] ?? '#e74c3c');
+    backorder = HexColor(config['backorder'] ?? '#eaa601');
+  }
+
+  Map toJson() {
+    var map = <String, dynamic>{};
+    map['inStock'] = inStock.value.toRadixString(16);
+    map['outOfStock'] = outOfStock.value.toRadixString(16);
+    map['backorder'] = backorder.value.toRadixString(16);
+    return map;
+  }
+}
diff --git a/lib/common/config/models/color_override_config.dart b/lib/common/config/models/color_override_config.dart
index b74e9075..9036b97e 100644
--- a/lib/common/config/models/color_override_config.dart
+++ b/lib/common/config/models/color_override_config.dart
@@ -1,61 +1,30 @@
+import 'color_override/index.dart';
+
+export 'color_override/index.dart';
+
 class ColorOverrideConfig {
   ProductFilterColor? productFilterColor;
+  StockColor stockColor = StockColor();
 
-  ColorOverrideConfig({this.productFilterColor});
+  ColorOverrideConfig({
+    this.productFilterColor,
+    required this.stockColor,
+  });
 
   ColorOverrideConfig.fromJson(dynamic json) {
     if (json['productFilterColor'] != null) {
       productFilterColor =
           ProductFilterColor.fromJson(json['productFilterColor']);
     }
+    if (json['stockColor'] != null) {
+      stockColor = StockColor.fromJson(json['stockColor']);
+    }
   }
 
   Map<String, dynamic> toJson() {
     var map = <String, dynamic>{};
     map['productFilterColor'] = productFilterColor?.toJson();
-    map.removeWhere((key, value) => value == null);
-    return map;
-  }
-}
-
-class ProductFilterColor {
-  bool useBackgroundColor = false;
-  bool usePrimaryColorLight = false;
-  String? backgroundColor;
-  num backgroundColorOpacity = 1.0;
-  String? labelColor;
-  num labelColorOpacity = 1.0;
-  bool useAccentColor = false;
-
-  ProductFilterColor({
-    this.useBackgroundColor = false,
-    this.usePrimaryColorLight = false,
-    this.backgroundColor,
-    this.backgroundColorOpacity = 1.0,
-    this.labelColor,
-    this.labelColorOpacity = 1.0,
-    this.useAccentColor = false,
-  });
-
-  ProductFilterColor.fromJson(dynamic json) {
-    useBackgroundColor = json['useBackgroundColor'] ?? false;
-    usePrimaryColorLight = json['usePrimaryColorLight'] ?? false;
-    backgroundColor = json['backgroundColor'];
-    backgroundColorOpacity = json['backgroundColorOpacity'] ?? 1.0;
-    labelColor = json['labelColor'];
-    labelColorOpacity = json['labelColorOpacity'] ?? 1.0;
-    useAccentColor = json['useAccentColor'] ?? false;
-  }
-
-  Map<String, dynamic> toJson() {
-    var map = <String, dynamic>{};
-    map['useBackgroundColor'] = useBackgroundColor;
-    map['usePrimaryColorLight'] = usePrimaryColorLight;
-    map['backgroundColor'] = backgroundColor;
-    map['backgroundColorOpacity'] = backgroundColorOpacity;
-    map['labelColor'] = labelColor;
-    map['labelColorOpacity'] = labelColorOpacity;
-    map['useAccentColor'] = useAccentColor;
+    map['stockColor'] = stockColor.toJson();
     map.removeWhere((key, value) => value == null);
     return map;
   }
diff --git a/lib/common/config/models/general_setting_item.dart b/lib/common/config/models/general_setting_item.dart
index 960ebb03..f5a809ea 100644
--- a/lib/common/config/models/general_setting_item.dart
+++ b/lib/common/config/models/general_setting_item.dart
@@ -1,5 +1,6 @@
 import 'package:flutter/material.dart';
 
+import '../../../modules/dynamic_layout/helper/helper.dart';
 import '../../tools/tools.dart';
 
 const defaultIcon = 'news';
@@ -15,7 +16,8 @@ class GeneralSettingItem {
   String? webUrl;
   double? fontSize;
   String? titleColor;
-  Offset? verticalPadding;
+  Map? verticalPadding;
+  Map? horizontalPadding;
   bool enableDivider = false;
   bool requiredLogin = false;
   bool webViewMode = false;
@@ -25,6 +27,12 @@ class GeneralSettingItem {
   bool enableClose = false;
   String buttonAlignment = 'centerLeft';
   List<GeneralButton> buttons = [];
+  String? product;
+  String? category;
+  String? banner;
+  num bannerHeight = 15.0;
+  String? blog;
+  String? blogCategory;
 
   GeneralSettingItem({
     this.id = defaultId,
@@ -36,6 +44,7 @@ class GeneralSettingItem {
     this.fontSize,
     this.titleColor,
     this.verticalPadding,
+    this.horizontalPadding,
     this.enableDivider = false,
     this.requiredLogin = false,
     this.webViewMode = false,
@@ -45,6 +54,12 @@ class GeneralSettingItem {
     this.enableClose = false,
     this.buttonAlignment = 'centerLeft',
     this.buttons = const [],
+    this.product,
+    this.category,
+    this.banner,
+    this.bannerHeight = 15.0,
+    this.blog,
+    this.blogCategory,
   });
 
   GeneralSettingItem.fromJson(Map<String, dynamic> json) {
@@ -59,11 +74,8 @@ class GeneralSettingItem {
         ? double.tryParse(json['fontSize'].toString())
         : null;
     titleColor = json['titleColor'];
-    verticalPadding = json['verticalPadding'] != null
-        ? Offset(
-            double.tryParse((json['verticalPadding']['x']).toString()) ?? 0.0,
-            double.tryParse((json['verticalPadding']['y']).toString()) ?? 0.0)
-        : null;
+    verticalPadding = json['verticalPadding'];
+    horizontalPadding = json['horizontalPadding'];
     enableDivider = json['enableDivider'] ?? false;
     requiredLogin = json['requiredLogin'] ?? false;
     webViewMode = json['webViewMode'] ?? false;
@@ -77,6 +89,12 @@ class GeneralSettingItem {
         buttons.add(GeneralButton.fromJson(item));
       }
     }
+    product = json['product']?.toString();
+    category = json['category']?.toString();
+    banner = json['banner']?.toString();
+    bannerHeight = json['bannerHeight'] ?? 15.0;
+    blog = json['blog'];
+    blogCategory = json['blogCategory'];
   }
 
   Map<String, dynamic> toJson() {
@@ -90,12 +108,8 @@ class GeneralSettingItem {
     if (webUrl != null) json['webUrl'] = webUrl;
     if (fontSize != null) json['fontSize'] = fontSize;
     if (titleColor != null) json['titleColor'] = titleColor;
-    if (verticalPadding != null) {
-      json['verticalPadding'] = {
-        'x': verticalPadding?.dx,
-        'y': verticalPadding?.dy,
-      };
-    }
+    json['verticalPadding'] = verticalPadding;
+    json['horizontalPadding'] = horizontalPadding;
     if (enableDivider) json['enableDivider'] = enableDivider;
     if (webViewMode) json['webViewMode'] = webViewMode;
     if (requiredLogin) json['requiredLogin'] = requiredLogin;
@@ -109,6 +123,13 @@ class GeneralSettingItem {
       jsonButtons.add(item.toJson());
     }
     json['buttons'] = jsonButtons;
+    json['product'] = product;
+    json['category'] = category;
+    json['banner'] = banner;
+    json['bannerHeight'] = bannerHeight;
+    json['blog'] = blog;
+    json['blogCategory'] = blogCategory;
+    json.removeWhere((key, value) => value == null);
     return json;
   }
 }
@@ -159,4 +180,11 @@ class GeneralButton {
 extension ExtensionGeneralSettingItem on GeneralSettingItem {
   AlignmentGeometry get displayButtonAlignment =>
       Tools.getAlignment(buttonAlignment);
+
+  EdgeInsets get padding => EdgeInsets.only(
+        left: Helper.formatDouble(horizontalPadding?['x']) ?? 0.0,
+        right: Helper.formatDouble(horizontalPadding?['y']) ?? 0.0,
+        top: Helper.formatDouble(verticalPadding?['x']) ?? 0.0,
+        bottom: Helper.formatDouble(verticalPadding?['y']) ?? 0.0,
+      );
 }
diff --git a/lib/common/config/models/in_app_update_for_android_config.dart b/lib/common/config/models/in_app_update_for_android_config.dart
new file mode 100644
index 00000000..7cb7992c
--- /dev/null
+++ b/lib/common/config/models/in_app_update_for_android_config.dart
@@ -0,0 +1,40 @@
+class InAppUpdateForAndroidConfig {
+  final bool enable;
+  final TypeUpdate typeUpdate;
+
+  const InAppUpdateForAndroidConfig({
+    required this.enable,
+    required this.typeUpdate,
+  });
+
+  Map<String, dynamic> toJson() {
+    final data = <String, dynamic>{};
+    data['enable'] = enable;
+    data['typeUpdate'] = typeUpdate.name;
+    return data;
+  }
+
+  factory InAppUpdateForAndroidConfig.fromJson(Map<String, dynamic> json) {
+    return InAppUpdateForAndroidConfig(
+      enable: json['enable'] ?? false,
+      typeUpdate: '${json['typeUpdate']}'.toTypeUpdate(),
+    );
+  }
+}
+
+enum TypeUpdate {
+  immediate,
+  flexible,
+}
+
+extension on String {
+  TypeUpdate toTypeUpdate() {
+    switch (this) {
+      case 'immediate':
+        return TypeUpdate.immediate;
+      case 'flexible':
+      default:
+        return TypeUpdate.flexible;
+    }
+  }
+}
diff --git a/lib/common/config/models/index.dart b/lib/common/config/models/index.dart
index f66c2253..d75aa25d 100644
--- a/lib/common/config/models/index.dart
+++ b/lib/common/config/models/index.dart
@@ -1,9 +1,11 @@
 export 'advanced_config.dart';
+export 'age_restriction_config.dart';
 export 'color_override_config.dart';
 export 'general_setting_item.dart';
 export 'google_api_key_config.dart';
 export 'loading_config.dart';
 export 'login_config.dart';
 export 'payment_config.dart';
+export 'product_card_config.dart';
 export 'product_detail_config.dart';
 export 'theme_config.dart';
diff --git a/lib/common/config/models/payment_config.dart b/lib/common/config/models/payment_config.dart
index 955ae34c..27c838e0 100644
--- a/lib/common/config/models/payment_config.dart
+++ b/lib/common/config/models/payment_config.dart
@@ -18,6 +18,7 @@ class PaymentConfig {
   bool showOrderNotes = false;
   bool enableRefundCancel = false;
   num? refundPeriod;
+  SmartCODConfig? smartCOD;
 
   PaymentConfig.fromJson(dynamic json) {
     defaultCountryISOCode = json['DefaultCountryISOCode'];
@@ -39,6 +40,7 @@ class PaymentConfig {
     showOrderNotes = json['ShowOrderNotes'] ?? false;
     enableRefundCancel = json['EnableRefundCancel'] ?? false;
     refundPeriod = json['RefundPeriod'];
+    smartCOD = json['SmartCOD'] != null ? SmartCODConfig.fromJson(json['SmartCOD']) : null;
   }
 
   Map toJson() {
@@ -62,6 +64,28 @@ class PaymentConfig {
     map['ShowOrderNotes'] = showOrderNotes;
     map['EnableRefundCancel'] = enableRefundCancel;
     map['RefundPeriod'] = refundPeriod;
+    map['RefundPeriod'] = refundPeriod;
+    map['SmartCOD'] = smartCOD?.toJson();
+    return map;
+  }
+}
+
+class SmartCODConfig {
+  num? extraFee;
+  num? amountStop;
+  bool enabled = false;
+
+  SmartCODConfig.fromJson(dynamic json) {
+    extraFee = json['extraFee'];
+    amountStop = json['amountStop'];
+    enabled = json['enabled'] ?? false;
+  }
+
+  Map toJson() {
+    var map = <String, dynamic>{};
+    map['extraFee'] = extraFee;
+    map['amountStop'] = amountStop;
+    map['enabled'] = enabled;
     return map;
   }
 }
diff --git a/lib/common/config/models/product_card_config.dart b/lib/common/config/models/product_card_config.dart
new file mode 100644
index 00000000..44620abe
--- /dev/null
+++ b/lib/common/config/models/product_card_config.dart
@@ -0,0 +1,85 @@
+import '../../../modules/dynamic_layout/helper/helper.dart';
+
+class ProductCardConfig {
+  bool hidePrice = false;
+  bool hideStore = false;
+  bool hideTitle = false;
+  num? borderRadius;
+  bool enableRating = true;
+  bool showCartButton = false;
+  bool showCartIcon = true;
+  bool showCartIconColor = false;
+  bool showCartButtonWithQuantity = false;
+  bool hideEmptyProductListRating = false;
+  Map? boxShadow;
+  String boxFit = 'cover';
+  String cardDesign = 'card';
+  int? titleLine;
+  String? orderby;
+  num vMargin = 0.0;
+  num hMargin = 6.0;
+
+
+  ProductCardConfig({
+    this.hidePrice = false,
+    this.hideStore = false,
+    this.hideTitle = false,
+    this.borderRadius,
+    this.enableRating = true,
+    this.showCartButton = false,
+    this.showCartIcon = true,
+    this.showCartIconColor = false,
+    this.showCartButtonWithQuantity = false,
+    this.hideEmptyProductListRating = false,
+    this.boxFit = 'cover',
+    this.boxShadow,
+    this.cardDesign = 'card',
+    this.titleLine,
+    this.orderby,
+    this.vMargin = 0.0,
+    this.hMargin = 6.0,
+  });
+
+  ProductCardConfig.fromJson(dynamic json) {
+    hidePrice = json['hidePrice'] ?? false;
+    hideStore = json['hideStore'] ?? false;
+    hideTitle = json['hideTitle'] ?? false;
+    borderRadius = json['borderRadius'];
+    enableRating = json['enableRating'] ?? true;
+    showCartButton = json['showCartButton'] ?? false;
+    showCartIcon = json['showCartIcon'] ?? true;
+    showCartIconColor = json['showCartIconColor'] ?? false;
+    showCartButtonWithQuantity = json['showCartButtonWithQuantity'] ?? false;
+    hideEmptyProductListRating = json['hideEmptyProductListRating'] ?? false;
+    boxShadow = json['boxShadow'];
+    boxFit = json['boxFit'] ?? 'cover';
+    cardDesign = json['cardDesign'] ?? 'card';
+    titleLine = Helper.formatInt(json['titleLine']);
+    orderby = json['orderby'];
+    vMargin = json['vMargin'] ?? 0.0;
+    hMargin = json['hMargin'] ?? 6.0;
+  }
+
+  Map toJson() {
+    var map = <String, dynamic>{};
+    map['hidePrice'] = hidePrice;
+    map['hideStore'] = hideStore;
+    map['hideTitle'] = hideTitle;
+    map['borderRadius'] = borderRadius;
+    map['enableRating'] = enableRating;
+    map['showCartButton'] = showCartButton;
+    map['showCartIcon'] = showCartIcon;
+    map['showCartIconColor'] = showCartIconColor;
+    map['showCartButtonWithQuantity'] = showCartButtonWithQuantity;
+    map['hideEmptyProductListRating'] = hideEmptyProductListRating;
+    map['boxShadow'] = boxShadow;
+    map['boxFit'] = boxFit;
+    map['cardDesign'] = cardDesign;
+    map['titleLine'] = titleLine;
+    map['orderby'] = orderby;
+    map['vMargin'] = vMargin;
+    map['hMargin'] = hMargin;
+    map.removeWhere((key, value) => value == null);
+    return map;
+  }
+}
diff --git a/lib/common/config/models/product_detail_config.dart b/lib/common/config/models/product_detail_config.dart
index d86247de..7926d548 100644
--- a/lib/common/config/models/product_detail_config.dart
+++ b/lib/common/config/models/product_detail_config.dart
@@ -29,6 +29,9 @@ class ProductDetailConfig {
   late final bool sliderShowGoBackButton;
   late final SliderIndicatorType sliderIndicatorType;
   late final int? limitDayBooking;
+  late final String productMetaDataKey;
+  late final bool showRelatedProductFromSameStore;
+  late final bool showRelatedProduct;
 
   ProductDetailConfig({
     required this.height,
@@ -58,6 +61,9 @@ class ProductDetailConfig {
     required this.boxFit,
     required this.sliderShowGoBackButton,
     required this.sliderIndicatorType,
+    required this.productMetaDataKey,
+    required this.showRelatedProductFromSameStore,
+    required this.showRelatedProduct,
     this.limitDayBooking,
   });
 
@@ -93,6 +99,10 @@ class ProductDetailConfig {
     sliderShowGoBackButton = config['SliderShowGoBackButton'] ?? true;
     sliderIndicatorType =
         '${config['SliderIndicatorType']}'.toSliderIndicatorType();
+    productMetaDataKey = config['productMetaDataKey'] ?? '';
+    showRelatedProductFromSameStore =
+        config['showRelatedProductFromSameStore'] ?? true;
+    showRelatedProduct = config['showRelatedProduct'] ?? true;
   }
 
   ProductDetailConfig copyWith({
@@ -124,6 +134,9 @@ class ProductDetailConfig {
     String? boxFit,
     bool? sliderShowGoBackButton,
     SliderIndicatorType? sliderIndicatorType,
+    String? productMetaDataKey,
+    bool? showRelatedProductFromSameStore,
+    bool? showRelatedProduct,
   }) {
     return ProductDetailConfig(
       height: height ?? this.height,
@@ -161,6 +174,10 @@ class ProductDetailConfig {
       sliderShowGoBackButton:
           sliderShowGoBackButton ?? this.sliderShowGoBackButton,
       sliderIndicatorType: sliderIndicatorType ?? this.sliderIndicatorType,
+      productMetaDataKey: productMetaDataKey ?? this.productMetaDataKey,
+      showRelatedProductFromSameStore: showRelatedProductFromSameStore ??
+          this.showRelatedProductFromSameStore,
+      showRelatedProduct: showRelatedProduct ?? this.showRelatedProduct,
     );
   }
 
@@ -194,6 +211,9 @@ class ProductDetailConfig {
       'boxFit': boxFit,
       'SliderShowGoBackButton': sliderShowGoBackButton,
       'SliderIndicatorType': sliderIndicatorType.toShortString(),
+      'productMetaDataKey': productMetaDataKey,
+      'showRelatedProductFromSameStore': showRelatedProductFromSameStore,
+      'showRelatedProduct': showRelatedProduct,
     };
   }
 }
diff --git a/lib/common/config/payments.dart b/lib/common/config/payments.dart
index dc3cfd65..0a0cd4a5 100644
--- a/lib/common/config/payments.dart
+++ b/lib/common/config/payments.dart
@@ -15,6 +15,10 @@ Map get kTapConfig => Configurations.tapConfig;
 
 Map get kPayTmConfig => Configurations.payTmConfig;
 
+Map get kPayStackConfig => Configurations.payStackConfig;
+
+Map get kFlutterwaveConfig => Configurations.flutterwaveConfig;
+
 Map get kMyFatoorahConfig => Configurations.myFatoorahConfig;
 
 Map get kMercadoPagoConfig => Configurations.mercadoPagoConfig;
diff --git a/lib/common/config/products.dart b/lib/common/config/products.dart
index 5f7590db..537275b6 100644
--- a/lib/common/config/products.dart
+++ b/lib/common/config/products.dart
@@ -19,9 +19,6 @@ Map get kSaleOffProduct => Configurations.saleOffProduct;
 
 bool get kNotStrictVisibleVariant => Configurations.notStrictVisibleVariant;
 
-Map get kProductCard => Configurations.productCard;
+ProductCardConfig get kProductCard => ProductCardConfig.fromJson(Configurations.productCard);
 
-BoxFit get kCardFit {
-  var boxFit = Configurations.productCard['fit'];
-  return ImageTools.boxFit(boxFit);
-}
+BoxFit get kCardFit => ImageTools.boxFit(kProductCard.boxFit);
\ No newline at end of file
diff --git a/lib/common/constants.dart b/lib/common/constants.dart
index c39003a8..6e77cb73 100644
--- a/lib/common/constants.dart
+++ b/lib/common/constants.dart
@@ -23,7 +23,6 @@ part 'constants/images.dart';
 part 'constants/layouts.dart';
 part 'constants/loading.dart';
 part 'constants/local_storage_key.dart';
-part 'constants/platform.dart';
 part 'constants/route_list.dart';
 part 'constants/slider.dart';
 part 'constants/vendors.dart';
diff --git a/lib/common/constants/local_storage_key.dart b/lib/common/constants/local_storage_key.dart
index 5f578d0a..75024af8 100644
--- a/lib/common/constants/local_storage_key.dart
+++ b/lib/common/constants/local_storage_key.dart
@@ -19,6 +19,7 @@ class LocalStorageKey {
   static const String seen = 'seen';
   static const String agreePrivacy = 'agreePrivacy';
   static const String posAddress = 'posAddress';
+  static const String askedAgeRestriction = 'askedAgeRestriction';
 }
 
 class FileHelper {
diff --git a/lib/common/constants/platform.dart b/lib/common/constants/platform.dart
deleted file mode 100644
index 7e3fc3d7..00000000
--- a/lib/common/constants/platform.dart
+++ /dev/null
@@ -1,16 +0,0 @@
-part of '../constants.dart';
-
-const kFluxStorePlatform = <String>[
-  'woo',
-  'strapi',
-  'shopify',
-  'presta',
-  'opencart',
-  'magento',
-];
-
-const kFluxStoreMV = <String>['dokan', 'wcfm'];
-
-enum VendorType { single, multi }
-
-enum ListingType { listpro, listeo, mylisting }
diff --git a/lib/common/constants/vendors.dart b/lib/common/constants/vendors.dart
index fbc081a9..73d5fa72 100644
--- a/lib/common/constants/vendors.dart
+++ b/lib/common/constants/vendors.dart
@@ -1,7 +1,8 @@
 part of '../constants.dart';
 
 /// Default Vendor image
-const kDefaultStoreImage = 'assets/images/default-store-banner.png';
+final kDefaultStoreImage = kVendorConfig['DefaultStoreImage'] ??
+    'assets/images/default-store-banner.png';
 
 /// Default status when Add New Product from app
-const kNewProductStatus = 'draft'; // support 'draft', 'pending', 'public'
+final kNewProductStatus = kVendorConfig['NewProductStatus'] ?? 'draft';
diff --git a/lib/common/theme/colors.dart b/lib/common/theme/colors.dart
index 619f4e92..d3691643 100644
--- a/lib/common/theme/colors.dart
+++ b/lib/common/theme/colors.dart
@@ -251,5 +251,3 @@ const kOrderStatusColor = {
 
 /// Color for Product Detail
 const kColorRatingStar = Color(0xfff39c12);
-const kColorOutOfStock = Color(0xFFe74c3c);
-const kColorBackOrder = Color(0xFFEAA601);
diff --git a/lib/common/theme/fonts.dart b/lib/common/theme/fonts.dart
index 20ea97ed..61bebfa7 100644
--- a/lib/common/theme/fonts.dart
+++ b/lib/common/theme/fonts.dart
@@ -15,11 +15,13 @@ TextTheme buildTextTheme(
           fontHeader,
           textStyle: base.headline1!.copyWith(
             fontWeight: FontWeight.w700,
-
-            /// If using the custom font, un-comment below and clone to other headline.., bodyText..
-            /// fontFamily: 'Your-Custom-Font',
           ),
-        ),
+        ).copyWith(
+
+            /// If using the custom font
+            /// un-comment below and clone to other headline.., bodyText..
+            // fontFamily: 'Your Custom Font',
+            ),
         headline2: GoogleFonts.getFont(
           fontHeader,
           textStyle: base.headline1!.copyWith(fontWeight: FontWeight.w700),
@@ -38,8 +40,12 @@ TextTheme buildTextTheme(
         ),
         headline6: GoogleFonts.getFont(
           fontHeader,
-          textStyle: base.headline6!.copyWith(fontSize: 18.0),
-        ),
+          textStyle: base.headline6!.copyWith(
+            fontWeight: FontWeight.normal,
+          ),
+        ).copyWith(
+            // fontFamily: 'Your Custom Font',
+            ),
         caption: GoogleFonts.getFont(
           fontFamily,
           textStyle: base.caption!
diff --git a/lib/common/tools/flash.dart b/lib/common/tools/flash.dart
index bc359029..daae1adf 100644
--- a/lib/common/tools/flash.dart
+++ b/lib/common/tools/flash.dart
@@ -3,6 +3,7 @@ import 'dart:async';
 import 'package:flash/flash.dart';
 import 'package:flutter/material.dart';
 
+import '../../generated/l10n.dart';
 import '../../services/index.dart';
 
 class FlashHelper {
@@ -120,33 +121,38 @@ class FlashHelper {
     );
   }
 
-  static Future<T?> errorBar<T>(
+  static Future<T?>? errorBar<T>(
     BuildContext context, {
     String? title,
     required String message,
     Duration duration = const Duration(seconds: 3),
   }) {
-    return showFlash<T>(
-      context: context,
-      duration: duration,
-      builder: (_, controller) {
-        return Flash(
-          controller: controller,
-          behavior: FlashBehavior.floating,
-          position: FlashPosition.bottom,
-          horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-          backgroundColor: Colors.black87,
-          child: FlashBar(
-            title: title == null
-                ? null
-                : Text(title, style: _titleStyle(context, Colors.white)),
-            content: Text(message, style: _contentStyle(context, Colors.white)),
-            icon: Icon(Icons.warning, color: Colors.red[300]),
-            indicatorColor: Colors.red[300],
-          ),
-        );
-      },
-    );
+    try {
+      return showFlash<T>(
+        context: context,
+        duration: duration,
+        builder: (_, controller) {
+          return Flash(
+            controller: controller,
+            behavior: FlashBehavior.floating,
+            position: FlashPosition.bottom,
+            horizontalDismissDirection: HorizontalDismissDirection.horizontal,
+            backgroundColor: Colors.black87,
+            child: FlashBar(
+              title: title == null
+                  ? null
+                  : Text(title, style: _titleStyle(context, Colors.white)),
+              content:
+                  Text(message, style: _contentStyle(context, Colors.white)),
+              icon: Icon(Icons.warning, color: Colors.red[300]),
+              indicatorColor: Colors.red[300],
+            ),
+          );
+        },
+      );
+    } catch (_) {
+      return null;
+    }
   }
 
   static Future<T?> actionBar<T>(
@@ -196,7 +202,7 @@ class FlashHelper {
   }) {
     return showFlash<T>(
       context: context,
-      persistent: !Config().isBuilder,
+      persistent: !ServerConfig().isBuilder,
       builder: (_, controller) {
         return Flash.dialog(
           controller: controller,
@@ -235,7 +241,7 @@ class FlashHelper {
   }) {
     return showFlash<T>(
       context: context,
-      persistent: !Config().isBuilder,
+      persistent: !ServerConfig().isBuilder,
       onWillPop: () => Future.value(false),
       builder: (_, controller) {
         dismissCompleter.future.then((value) => controller.dismiss(value));
@@ -253,6 +259,84 @@ class FlashHelper {
       },
     );
   }
+
+  static Future<T?>? message<T>(
+    BuildContext context, {
+    IconData? icon,
+    String? title,
+    required String message,
+    Duration duration = const Duration(seconds: 3),
+    bool isError = false,
+  }) {
+    try {
+      return showFlash<T>(
+        context: context,
+        duration: duration,
+        persistent: !ServerConfig().isBuilder,
+        builder: (context, controller) {
+          return Flash(
+            backgroundColor: isError
+                ? Theme.of(context).errorColor
+                : Theme.of(context).primaryColor,
+            controller: controller,
+            behavior: FlashBehavior.floating,
+            position: FlashPosition.top,
+            horizontalDismissDirection: HorizontalDismissDirection.horizontal,
+            child: FlashBar(
+              icon: Icon(
+                icon ?? (isError ? Icons.error_outline : Icons.check),
+                color: Colors.white,
+              ),
+              title: title != null
+                  ? Text(
+                      title,
+                      style: const TextStyle(
+                        color: Colors.white,
+                        fontWeight: FontWeight.w700,
+                        fontSize: 15.0,
+                      ),
+                    )
+                  : null,
+              content: Text(
+                message,
+                style: TextStyle(
+                  color: Colors.white,
+                  fontSize: isError ? 18.0 : 15.0,
+                ),
+              ),
+              primaryAction: TextButton(
+                onPressed: () => controller.dismiss(null),
+                child: Text(
+                  S.of(context).close,
+                  style: const TextStyle(
+                    color: Colors.white,
+                    fontSize: 15.0,
+                  ),
+                ),
+              ),
+            ),
+          );
+        },
+      );
+    } catch (_) {
+      return null;
+    }
+  }
+
+  static Future<T?>? errorMessage<T>(
+    BuildContext context, {
+    IconData? icon,
+    required String message,
+    Duration duration = const Duration(seconds: 3),
+  }) {
+    return FlashHelper.message(
+      context,
+      message: message,
+      icon: icon,
+      duration: duration,
+      isError: true,
+    );
+  }
 }
 
 typedef ActionCallback = void Function(FlashController controller);
diff --git a/lib/common/tools/image_tools.dart b/lib/common/tools/image_tools.dart
index 0fc12c26..a283f08c 100644
--- a/lib/common/tools/image_tools.dart
+++ b/lib/common/tools/image_tools.dart
@@ -16,7 +16,7 @@ import 'package:transparent_image/transparent_image.dart';
 import 'package:wechat_assets_picker/wechat_assets_picker.dart';
 
 import '../../generated/l10n.dart';
-import '../../services/index.dart' show Config, ConfigType;
+import '../../services/index.dart' show ServerConfig, ConfigType;
 import '../config.dart' show kAdvanceConfig;
 import '../constants.dart' show isAndroid, kDefaultImage, kEmptyColor, kIsWeb;
 
@@ -46,11 +46,11 @@ class ImageTools {
   }
 
   static String? formatImage(String? url, [kSize? size = kSize.medium]) {
-    if (Config().type == ConfigType.presta) {
+    if (ServerConfig().type == ConfigType.presta) {
       return prestashopImage(url!, size);
     }
 
-    if (Config().isCacheImage ?? kAdvanceConfig.kIsResizeImage) {
+    if (ServerConfig().isCacheImage ?? kAdvanceConfig.kIsResizeImage) {
       var pathWithoutExt = p.withoutExtension(url!);
       var ext = p.extension(url);
       String? imageURL = url;
@@ -254,7 +254,10 @@ class ImageTools {
     );
   }
 
-  static BoxFit boxFit(String? fit) {
+  static BoxFit boxFit(
+    String? fit, {
+    BoxFit? defaultValue,
+  }) {
     switch (fit) {
       case 'contain':
         return BoxFit.contain;
@@ -266,28 +269,23 @@ class ImageTools {
         return BoxFit.fitWidth;
       case 'scaleDown':
         return BoxFit.scaleDown;
-      default:
+      case 'cover':
         return BoxFit.cover;
+      default:
+        return defaultValue ?? BoxFit.cover;
     }
   }
 
   static Future<file.File> writeToFile(Uint8List? data,
       {String? fileName}) async {
-    var buffer;
-    if (data != null) {
-      buffer = data.buffer;
-    }
     final tempDir = await getTemporaryDirectory();
     final tempPath = tempDir.path;
-
     var filePath = '$tempPath/${fileName ?? 'file_01'}.jpeg';
-
     var f = file.File(filePath);
-    await f.writeAsBytes(buffer.asUint8List());
+    if (data != null) {
+      await f.writeAsBytes(data);
+    }
     return f;
-
-    // return File(filePath).writeAsBytes(
-    //     buffer.asUint8List(data.offsetInBytes, data.lengthInBytes));
   }
 
   static Future<String> compressImage(dynamic image) async {
@@ -350,7 +348,7 @@ class ImageTools {
   }
 }
 
-class CustomAssetPickerTextDelegate extends AssetPickerTextDelegate{
+class CustomAssetPickerTextDelegate extends AssetPickerTextDelegate {
   CustomAssetPickerTextDelegate({required this.context});
   final BuildContext context;
 
@@ -368,9 +366,8 @@ class ImagePicker {
     final result = await AssetPicker.pickAssets(
       context,
       pickerConfig: AssetPickerConfig(
-        maxAssets: maxFiles,
-        textDelegate:CustomAssetPickerTextDelegate(context: context)
-      ),
+          maxAssets: maxFiles,
+          textDelegate: CustomAssetPickerTextDelegate(context: context)),
     );
     return result ?? [];
   }
diff --git a/lib/common/tools/in_app_update_for_android.dart b/lib/common/tools/in_app_update_for_android.dart
new file mode 100644
index 00000000..142230b1
--- /dev/null
+++ b/lib/common/tools/in_app_update_for_android.dart
@@ -0,0 +1,38 @@
+import 'package:in_app_update/in_app_update.dart';
+
+import '../config.dart';
+import '../config/models/in_app_update_for_android_config.dart';
+import '../constants.dart';
+
+class InAppUpdateForAndroid {
+  Future<void> checkForUpdate() async {
+    try {
+      var appInfo = await InAppUpdate.checkForUpdate();
+
+      if (appInfo.updateAvailability == UpdateAvailability.updateAvailable) {
+        switch (kAdvanceConfig.inAppUpdateForAndroid.typeUpdate) {
+          case TypeUpdate.immediate:
+            await immediateUpdate();
+            break;
+          case TypeUpdate.flexible:
+          default:
+            await flexibleUpdate();
+        }
+      }
+    } catch (e) {
+      printLog('In app update for Android error: $e');
+    }
+  }
+
+  Future<void> immediateUpdate() async {
+    await InAppUpdate.performImmediateUpdate();
+  }
+
+  Future<void> flexibleUpdate() async {
+    var appUpdateResult = await InAppUpdate.startFlexibleUpdate();
+
+    if (appUpdateResult == AppUpdateResult.success) {
+      await InAppUpdate.completeFlexibleUpdate();
+    }
+  }
+}
diff --git a/lib/common/tools/navigate_tools.dart b/lib/common/tools/navigate_tools.dart
index f20ec72b..09002388 100644
--- a/lib/common/tools/navigate_tools.dart
+++ b/lib/common/tools/navigate_tools.dart
@@ -17,18 +17,40 @@ import '../../widgets/common/webview.dart';
 import '../config.dart';
 import '../constants.dart';
 import '../tools.dart';
+import 'flash.dart';
 
 class NavigateTools {
+  static final Map<String, dynamic> _pendingAction = {};
+
   static Future onTapNavigateOptions(
       {BuildContext? context,
       required Map config,
       List<Product>? products}) async {
     /// support to show the product detail
     if (config['product'] != null) {
+      if (context != null) {
+        unawaited(
+          FlashHelper.message(
+            context,
+            message: S.of(context).loading,
+            duration: const Duration(seconds: 1),
+          ),
+        );
+      }
+
+      /// Prevent users from tapping multiple times.
+      if (_pendingAction[config['product']] == true) {
+        return;
+      }
+
+      _pendingAction[config['product']] = true;
+
       /// for pre-load the product detail
       final service = Services();
       var product = await service.api.getProduct(config['product']);
 
+      _pendingAction.remove(config['product']);
+
       if (product == null || product.isEmptyProduct()) {
         return;
       }
diff --git a/lib/common/tools/price_tools.dart b/lib/common/tools/price_tools.dart
index f7117ad6..8e612941 100644
--- a/lib/common/tools/price_tools.dart
+++ b/lib/common/tools/price_tools.dart
@@ -77,7 +77,7 @@ class PriceTools {
   static String? getCurrencyFormatted(price, Map<String, dynamic>? rates,
       {currency}) {
     if (kAdvanceConfig.defaultCurrency == null) {
-      return price;
+      return double.tryParse('$price')?.toStringAsFixed(1);
     }
 
     var defaultCurrency =
diff --git a/lib/common/tools/tools.dart b/lib/common/tools/tools.dart
index 85e1f265..8fee2d00 100644
--- a/lib/common/tools/tools.dart
+++ b/lib/common/tools/tools.dart
@@ -9,7 +9,7 @@ import 'package:intl/intl.dart';
 import 'package:universal_platform/universal_platform.dart';
 import 'package:url_launcher/url_launcher.dart';
 
-import '../../services/index.dart' show Config;
+import '../../services/index.dart' show ServerConfig;
 import '../config.dart' show kAdvanceConfig;
 import '../constants.dart' show RegexUtils, isMobile, kIsWeb, printLog;
 
@@ -18,7 +18,7 @@ class Tools {
 
   /// check tablet screen
   static bool isTablet(MediaQueryData query) {
-    if (Config().isBuilder) {
+    if (ServerConfig().isBuilder) {
       return false;
     }
 
diff --git a/lib/config/config_en.json b/lib/config/config_en.json
index 3746c77f..5d555e6a 100644
--- a/lib/config/config_en.json
+++ b/lib/config/config_en.json
@@ -138,7 +138,9 @@
         "colorOpacity":0.1,
         "spreadRadius":10.0,
         "x":0.0,
-        "y":6.0}
+        "y":6.0
+      },        
+      "hideEmptyProductLayout": false
     },
     {
       "name": "Man Collections",
@@ -186,7 +188,18 @@
     "ProductListLayout": "list",
     "StickyHeader": false,
     "ShowChat": true,
-    "useMaterial3": false
+    "useMaterial3": false,
+    "AgeRestriction": {
+      "enable": false,
+      "imageUrl": "",
+      "backgroundImageUrl": "",
+      "title": "Welcome to our shop\nYou must be 21 or older to enter",
+      "deniedMessage": "You are not of legal age to use this application",
+      "hintMessage": "What is your year of birth?",
+      "minimumAge": 21,
+      "useLogo": true,
+      "alwaysShowUponOpen": true
+    }
   },
   "TabBar": [
     {
diff --git a/lib/config/config_ti.json b/lib/config/config_ti.json
new file mode 100644
index 00000000..5d555e6a
--- /dev/null
+++ b/lib/config/config_ti.json
@@ -0,0 +1,235 @@
+{
+  "HorizonLayout": [
+    {
+      "layout": "logo",
+      "showMenu": true,
+      "showSearch": true,
+      "showLogo": true
+    },
+    {
+      "layout": "category",
+      "type": "icon",
+      "wrap": false,
+      "size": 1.0,
+      "radius": 50.0,
+      "items": [
+        {
+          "category": 18,
+          "image": "https://user-images.githubusercontent.com/1459805/62820029-2e679f00-bb88-11e9-80de-fdf115cfd942.png",
+          "colors": [
+            "#3CC2BF",
+            "#3CC2BF"
+          ],
+          "originalColor": false
+        },
+        {
+          "category": 24,
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/48x58/a68d188ae063a20eac903fe2ca00ece5/ic_dress.png",
+          "colors": [
+            "#3E6AB5",
+            "#3E6AB5"
+          ]
+        },
+        {
+          "category": 25,
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x54/93b296bf55ec19d22778158bf06d2dbc/ic_shorts.png",
+          "colors": [
+            "#53A2CC",
+            "#53A2CC"
+          ]
+        },
+        {
+          "category": 28,
+          "label": "Shoes",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x50/bf817e570f9d704dc88dad8bb29386d1/ic_shoes.png",
+          "colors": [
+            "#53688A",
+            "#53688A"
+          ]
+        },
+        {
+          "category": 29,
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/72x38/8c778c1b92f5ca02e00c4a34b562c601/ic_tie.png",
+          "colors": [
+            "#43506A",
+            "#43506A"
+          ]
+        },
+        {
+          "category": 30,
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x34/e20dbfd9e05fb3fbb8991d5d2213a9b0/ic_panties.png",
+          "colors": [
+            "#12B58C",
+            "#12B58C"
+          ]
+        }
+      ]
+    },
+    {
+      "layout": "bannerImage",
+      "isSlider": true,
+      "autoPlay": false,
+      "showNumber": false,
+      "design": "default",
+      "showBackGround": true,
+      "radius": 2.0,
+      "items": [
+        {
+          "category": 29,
+          "image": "https://trello-attachments.s3.amazonaws.com/5f8fe6093cd3ef24d9ede5f5/1185x561/e13d41fd04e4da0833097ab4e893c8c5/Mobile_Template_1b.png",
+          "padding": 15.0
+        },
+        {
+          "category": 28,
+          "image": "https://user-images.githubusercontent.com/1459805/59846818-12672e80-938b-11e9-8184-5f7bfe66f1a2.png",
+          "padding": 15.0
+        },
+        {
+          "product": 30,
+          "image": "https://user-images.githubusercontent.com/1459805/60091808-a19b8a00-976f-11e9-9cc7-576ca05c2442.png",
+          "padding": 15.0
+        }
+      ]
+    },
+    {
+      "key":"v14g5clzc34tf8",
+      "name":"On Sale Today ⚡️",
+      "layout":"saleOff",
+      "isSnapping":true,
+      "rows":1,
+      "columns":0,
+      "imageBoxfit":"cover",
+      "imageRatio":1.2,
+      "hMargin":9.0,
+      "vMargin":30.0,
+      "hPadding":8.0,
+      "vPadding":6.0,
+      "pos":400,
+      "showStockStatus":false,
+      "enableRating":true,
+      "hideTitle":false,
+      "hideStore":false,
+      "onSale":true,
+      "hidePrice":false,
+      "featured":false,
+      "showHeart":true,
+      "showCartButton":false,
+      "cartIconRadius":9.0,
+      "showQuantity":false,
+      "showCartIconColor":false,
+      "showCartIcon":false,
+      "enableBottomAddToCart":false,
+      "cardDesign":"card",
+      "borderRadius":12.0,
+      "backgroundRadius":0.0,
+      "showCartButtonWithQuantity":false,
+      "category":"26",
+      "tag":null,
+      "showCountDown":true,
+      "backgroundColor":"ffF1F8FA",
+      "backgroundImage":"https://trello.com/1/cards/6237d7a3eb71c81e0a45964b/attachments/626281b57aedd4517a682e40/previews/626281b67aedd4517a682e5a/download/sale4.png",
+      "spaceWidth":130.0,
+      "backgroundHeight":288.0,
+      "backgroundBoxFit":"contain",
+      "parallax": true,
+      "parallaxImageRatio": 1.2,
+      "boxShadow":{
+        "blurRadius":14.0,
+        "colorOpacity":0.1,
+        "spreadRadius":10.0,
+        "x":0.0,
+        "y":6.0
+      },        
+      "hideEmptyProductLayout": false
+    },
+    {
+      "name": "Man Collections",
+      "image": "",
+      "layout": "twoColumn",
+      "category": 21
+    },
+    {
+      "layout":"bannerImage",
+      "design":"static",
+      "fit":"fitWidth",
+      "marginLeft":0.0,
+      "items":[
+        {
+          "image":"https://trello-attachments.s3.amazonaws.com/5fb8de4a9ffe12204a2a3607/700x263/f5d6007a5563735691c68eb12563d1e5/image.png",
+          "coupon":"blackf",
+          "padding":15.0,
+          "radius":9.0
+        }
+      ],
+      "marginBottom":0.0,
+      "height":0.15,
+      "marginRight":0.0,
+      "marginTop":20.0
+    },
+    {
+      "name": "Recent View",
+      "layout": "recentView"
+    },
+    {
+      "name": "Our Blog Posts",
+      "layout": "blog"
+    },
+    {
+      "name": "New Collections",
+      "layout": "staggered",
+      "limit": 20,
+      "category": 29
+    }
+  ],
+  "Setting": {
+    "MainColor": "#3FC1BE",
+    "FontFamily": "Roboto",
+    "FontHeader": "Raleway",
+    "ProductListLayout": "list",
+    "StickyHeader": false,
+    "ShowChat": true,
+    "useMaterial3": false,
+    "AgeRestriction": {
+      "enable": false,
+      "imageUrl": "",
+      "backgroundImageUrl": "",
+      "title": "Welcome to our shop\nYou must be 21 or older to enter",
+      "deniedMessage": "You are not of legal age to use this application",
+      "hintMessage": "What is your year of birth?",
+      "minimumAge": 21,
+      "useLogo": true,
+      "alwaysShowUponOpen": true
+    }
+  },
+  "TabBar": [
+    {
+      "layout": "home",
+      "icon": "assets/icons/tabs/icon-home.png"
+    },
+    {
+      "layout": "category",
+      "categoryLayout": "card",
+      "icon": "assets/icons/tabs/icon-category.png"
+    },
+    {
+      "layout": "search",
+      "icon": "assets/icons/tabs/icon-search.png"
+    },
+    {
+      "layout": "cart",
+      "icon": "assets/icons/tabs/icon-cart2.png"
+    },
+    {
+      "layout": "profile",
+      "icon": "assets/icons/tabs/icon-user.png",
+      "showChat": true
+    }
+  ],
+  "searchSuggestion": [
+    "Here are some suggestions:",
+    "Print",
+    "T-Shirt",
+    "Jersey",
+    "Hoodie"
+  ]
+}
\ No newline at end of file
diff --git a/lib/env.dart b/lib/env.dart
index ff236868..bb38d560 100644
--- a/lib/env.dart
+++ b/lib/env.dart
@@ -8,7 +8,6 @@ Map<String, dynamic> environment = {
     'url': 'https://mstore.io',
     'consumerKey': 'ck_c16d601d14a44c8080418c1ab9336b72ae8faff2',
     'consumerSecret': 'cs_1c11c4d0ee3bef861421bf3622f20f6b49c8497a',
-
     'blog':
         'https://mstore.io', //Your website woocommerce. You can remove this line if it same url
     /// remove to use as native screen
@@ -118,6 +117,13 @@ Map<String, dynamic> environment = {
         'symbolBeforeTheNumber': true,
         'currency': 'ARS',
         'currencyCode': 'ARS',
+      },
+      {
+        'symbol': 'R',
+        'decimalDigits': 2,
+        'symbolBeforeTheNumber': true,
+        'currency': 'ZAR',
+        'currencyCode': 'ZAR',
       }
     ],
 
@@ -203,9 +209,10 @@ Map<String, dynamic> environment = {
     /// Enable bottom add to cart from product card view
     "EnableBottomAddToCart": false,
 
-    /// enable inappwebview as default the Webview
-    /// otherwise, using webview_flutter
-    "inAppWebView": true,
+    /// Disable inAppWebView to use webview_flutter
+    /// so webview can navigate to external app.
+    /// Useful for webview checkout which need to handle payment in another app.
+    "inAppWebView": false,
     'AlwaysClearWebViewCache': false,
     "WebViewScript": "",
 
@@ -240,6 +247,13 @@ Map<String, dynamic> environment = {
 
     // Enable the request Notify permission from onboarding
     "showRequestNotification": true,
+
+    "EnableVersionCheck": false,
+    "inAppUpdateForAndroid": {
+      "enable": false,
+      // "flexible, immediate"
+      "typeUpdate": "flexible",
+    }
   },
   "defaultDrawer": {
     "logo": "assets/images/logo.png",
@@ -424,7 +438,7 @@ Map<String, dynamic> environment = {
       "name": "Hindi",
       "icon": "assets/images/country/in.png",
       "code": "hi",
-      "text": "Hindi",
+      "text": "हिन्दी",
       "storeViewCode": "hi"
     },
     // 4 Spanish - es.arb
@@ -432,7 +446,7 @@ Map<String, dynamic> environment = {
       "name": "Spanish",
       "icon": "assets/images/country/es.png",
       "code": "es",
-      "text": "Spanish",
+      "text": "Español",
       "storeViewCode": ""
     },
     // 5 French - fr.arb
@@ -440,7 +454,7 @@ Map<String, dynamic> environment = {
       "name": "French",
       "icon": "assets/images/country/fr.png",
       "code": "fr",
-      "text": "French",
+      "text": "Français",
       "storeViewCode": "fr"
     },
     // 6 Arabic ar.arb
@@ -448,7 +462,7 @@ Map<String, dynamic> environment = {
       "name": "Arabic",
       "icon": "assets/images/country/ar.png",
       "code": "ar",
-      "text": "Arabic",
+      "text": "العربية",
       "storeViewCode": "ar"
     },
     // 7 Russian ru.arb
@@ -464,7 +478,7 @@ Map<String, dynamic> environment = {
       "name": "Indonesian",
       "icon": "assets/images/country/id.png",
       "code": "id",
-      "text": "Indonesian",
+      "text": "Bahasa Indonesia",
       "storeViewCode": "id"
     },
     // 9 Japanese ja.arb
@@ -472,7 +486,7 @@ Map<String, dynamic> environment = {
       "name": "Japanese",
       "icon": "assets/images/country/ja.png",
       "code": "ja",
-      "text": "Japanese",
+      "text": "日本語",
       "storeViewCode": ""
     },
     // 10 Korean ko.arb
@@ -480,7 +494,7 @@ Map<String, dynamic> environment = {
       "name": "Korean",
       "icon": "assets/images/country/ko.png",
       "code": "ko",
-      "text": "Korean",
+      "text": "한국어/조선말",
       "storeViewCode": "ko"
     },
     // 11 Vietnamese vi.arb
@@ -488,7 +502,7 @@ Map<String, dynamic> environment = {
       "name": "Vietnamese",
       "icon": "assets/images/country/vn.png",
       "code": "vi",
-      "text": "Vietnam",
+      "text": "Tiếng Việt",
       "storeViewCode": ""
     },
     // 12 Romanian ro.arb
@@ -496,7 +510,7 @@ Map<String, dynamic> environment = {
       "name": "Romanian",
       "icon": "assets/images/country/ro.png",
       "code": "ro",
-      "text": "Romanian",
+      "text": "Românește",
       "storeViewCode": "ro"
     },
     // 13 Turkish - tr.arb
@@ -504,7 +518,7 @@ Map<String, dynamic> environment = {
       "name": "Turkish",
       "icon": "assets/images/country/tr.png",
       "code": "tr",
-      "text": "Turkish",
+      "text": "Türkçe",
       "storeViewCode": "tr"
     },
     // 14 Italian - it.arb
@@ -512,7 +526,7 @@ Map<String, dynamic> environment = {
       "name": "Italian",
       "icon": "assets/images/country/it.png",
       "code": "it",
-      "text": "Italian",
+      "text": "Italiano",
       "storeViewCode": "it"
     },
     // 15 German - de.arb
@@ -520,7 +534,7 @@ Map<String, dynamic> environment = {
       "name": "German",
       "icon": "assets/images/country/de.png",
       "code": "de",
-      "text": "German",
+      "text": "Deutsch",
       "storeViewCode": "de"
     },
     // 16 Portuguese - pt.arb
@@ -528,7 +542,7 @@ Map<String, dynamic> environment = {
       "name": "Portuguese",
       "icon": "assets/images/country/pt.png",
       "code": "pt",
-      "text": "Portuguese",
+      "text": "Português",
       "storeViewCode": "pt"
     },
     // 17 Hungarian - hu.arb
@@ -536,7 +550,7 @@ Map<String, dynamic> environment = {
       "name": "Hungarian",
       "icon": "assets/images/country/hu.png",
       "code": "hu",
-      "text": "Hungarian",
+      "text": "Magyar nyelv",
       "storeViewCode": "hu"
     },
     // 18 Hebrew - he.arb
@@ -544,7 +558,7 @@ Map<String, dynamic> environment = {
       "name": "Hebrew",
       "icon": "assets/images/country/he.png",
       "code": "he",
-      "text": "Hebrew",
+      "text": "עִבְרִית",
       "storeViewCode": "he"
     },
     // 19 Thai - th.arb
@@ -552,7 +566,7 @@ Map<String, dynamic> environment = {
       "name": "Thai",
       "icon": "assets/images/country/th.png",
       "code": "th",
-      "text": "Thai",
+      "text": "ภาษาไทย",
       "storeViewCode": "th"
     },
     // 20 Dutch - nl.arb
@@ -560,7 +574,7 @@ Map<String, dynamic> environment = {
       "name": "Dutch",
       "icon": "assets/images/country/nl.png",
       "code": "nl",
-      "text": "Dutch",
+      "text": "Nederlands",
       "storeViewCode": "nl"
     },
     // 21 Serbian - sr.arb
@@ -568,7 +582,7 @@ Map<String, dynamic> environment = {
       "name": "Serbian",
       "icon": "assets/images/country/sr.jpeg",
       "code": "sr",
-      "text": "Serbian",
+      "text": "српски",
       "storeViewCode": "sr"
     },
     // 22 Polish - pl.arb
@@ -576,7 +590,7 @@ Map<String, dynamic> environment = {
       "name": "Polish",
       "icon": "assets/images/country/pl.png",
       "code": "pl",
-      "text": "Polish",
+      "text": "Język polski",
       "storeViewCode": "pl"
     },
     // 23 Persian - fa.arb
@@ -584,7 +598,7 @@ Map<String, dynamic> environment = {
       "name": "Persian",
       "icon": "assets/images/country/fa.png",
       "code": "fa",
-      "text": "Persian",
+      "text": "زبان فارسی",
       "storeViewCode": ""
     },
     // 24 Ukrainian - uk.arb
@@ -592,7 +606,7 @@ Map<String, dynamic> environment = {
       "name": "Ukrainian",
       "icon": "assets/images/country/uk.png",
       "code": "uk",
-      "text": "Ukrainian",
+      "text": "Українська мова",
       "storeViewCode": ""
     },
     // 25 Bengali - bn.arb
@@ -600,7 +614,7 @@ Map<String, dynamic> environment = {
       "name": "Bengali",
       "icon": "assets/images/country/bn.png",
       "code": "bn",
-      "text": "Bengali",
+      "text": "বাংলা",
       "storeViewCode": ""
     },
     // 26 Tamil - ta.arb
@@ -608,7 +622,7 @@ Map<String, dynamic> environment = {
       "name": "Tamil",
       "icon": "assets/images/country/ta.png",
       "code": "ta",
-      "text": "Tamil",
+      "text": "தமிழ்",
       "storeViewCode": ""
     },
     // 27 Kurdish - ku.arb
@@ -616,7 +630,7 @@ Map<String, dynamic> environment = {
       "name": "Kurdish",
       "icon": "assets/images/country/ku.png",
       "code": "ku",
-      "text": "Kurdish",
+      "text": "Kurdî / کوردی",
       "storeViewCode": ""
     },
     // 28 Czech - cs.arb
@@ -624,7 +638,7 @@ Map<String, dynamic> environment = {
       "name": "Czech",
       "icon": "assets/images/country/cs.png",
       "code": "cs",
-      "text": "Czech",
+      "text": "Čeština",
       "storeViewCode": "cs"
     },
     // 29 Swedish sv.arb
@@ -632,7 +646,7 @@ Map<String, dynamic> environment = {
       "name": "Swedish",
       "icon": "assets/images/country/sv.png",
       "code": "sv",
-      "text": "Swedish",
+      "text": "Svenska",
       "storeViewCode": ""
     },
     // 30 Finland fi.arb
@@ -640,7 +654,7 @@ Map<String, dynamic> environment = {
       "name": "Finland",
       "icon": "assets/images/country/fi.png",
       "code": "fi",
-      "text": "Finland",
+      "text": "Suomi",
       "storeViewCode": ""
     },
     // 31 Greek el.arb
@@ -648,7 +662,7 @@ Map<String, dynamic> environment = {
       "name": "Greek",
       "icon": "assets/images/country/el.png",
       "code": "el",
-      "text": "Greek",
+      "text": "Ελληνικά",
       "storeViewCode": ""
     },
     // 32 Khmer km.arb
@@ -656,7 +670,7 @@ Map<String, dynamic> environment = {
       "name": "Khmer",
       "icon": "assets/images/country/km.png",
       "code": "km",
-      "text": "Khmer",
+      "text": "ភាសាខ្មែរ",
       "storeViewCode": ""
     },
     // 33 Kannada intl_kn.arb
@@ -664,7 +678,7 @@ Map<String, dynamic> environment = {
       "name": "Kannada",
       "icon": "assets/images/country/kn.png",
       "code": "kn",
-      "text": "Kannada",
+      "text": "ಕನ್ನಡ",
       "storeViewCode": ""
     },
     // 34 Marathi intl_mr.arb
@@ -672,7 +686,7 @@ Map<String, dynamic> environment = {
       "name": "Marathi",
       "icon": "assets/images/country/mr.jpeg",
       "code": "mr",
-      "text": "Marathi",
+      "text": "मराठी भाषा",
       "storeViewCode": ""
     },
     // 35 Malay intl_ms.arb
@@ -680,7 +694,7 @@ Map<String, dynamic> environment = {
       "name": "Malay",
       "icon": "assets/images/country/ms.jpeg",
       "code": "ms",
-      "text": "Malay",
+      "text": "بهاس ملايو",
       "storeViewCode": ""
     },
     // 36 Bosnian intl_bs.arb
@@ -688,7 +702,7 @@ Map<String, dynamic> environment = {
       "name": "Bosnian",
       "icon": "assets/images/country/bs.png",
       "code": "bs",
-      "text": "Bosnian",
+      "text": "босански",
       "storeViewCode": ""
     },
     // 37 Lao intl_lo.arb
@@ -696,7 +710,7 @@ Map<String, dynamic> environment = {
       "name": "Lao",
       "icon": "assets/images/country/lo.png",
       "code": "lo",
-      "text": "Lao",
+      "text": "ພາສາລາວ",
       "storeViewCode": ""
     },
     // 38 Slovak intl_sk.arb
@@ -704,7 +718,7 @@ Map<String, dynamic> environment = {
       "name": "Slovak",
       "icon": "assets/images/country/sk.png",
       "code": "sk",
-      "text": "Slovak",
+      "text": "Slovaščina",
       "storeViewCode": ""
     },
     // 39 Swahili intl_sw.arb
@@ -712,7 +726,7 @@ Map<String, dynamic> environment = {
       "name": "Swahili",
       "icon": "assets/images/country/sw.png",
       "code": "sw",
-      "text": "Swahili",
+      "text": "كِيْسَوَاحِيْلِيْ",
       "storeViewCode": ""
     },
     // 2 zh-Chinese
@@ -720,7 +734,7 @@ Map<String, dynamic> environment = {
       "name": "Chinese",
       "icon": "assets/images/country/zh.png",
       "code": "zh",
-      "text": "Chinese",
+      "text": "中文",
       "storeViewCode": ""
     },
     // 40 Chinese Traditional intl_zh_Hant.arb
@@ -728,7 +742,7 @@ Map<String, dynamic> environment = {
       "name": "Chinese (traditional)",
       "icon": "assets/images/country/zh.png",
       "code": "zh_TW",
-      "text": "Chinese (traditional)",
+      "text": "漢語",
       "storeViewCode": ""
     },
     // 41 Chinese Simplified intl_zh_Hans.arb
@@ -736,7 +750,7 @@ Map<String, dynamic> environment = {
       "name": "Chinese (simplified)",
       "icon": "assets/images/country/zh.png",
       "code": "zh_CN",
-      "text": "Chinese (simplified)",
+      "text": "汉语",
       "storeViewCode": ""
     },
     // 42 Burmese intl_my.arb
@@ -744,7 +758,7 @@ Map<String, dynamic> environment = {
       "name": "Burmese",
       "icon": "assets/images/country/my.png",
       "code": "my",
-      "text": "Burmese",
+      "text": "မြန်မာဘာသာစကား",
       "storeViewCode": ""
     },
     // 43 Albanian intl_sq.arb
@@ -752,11 +766,26 @@ Map<String, dynamic> environment = {
       "name": "Albanian",
       "icon": "assets/images/country/sq.png",
       "code": "sq",
-      "text": "Albanian",
+      "text": "Shqip",
       "storeViewCode": ""
-    }
+    },
+    // 44 Danish intl_da.arb
+    {
+      "name": "Danish",
+      "icon": "assets/images/country/da.svg",
+      "code": "da",
+      "text": "Dansk",
+      "storeViewCode": ""
+    },
+    // 45 Tigrinya intl_ti.arb
+    {
+      "name": "Tigrinya",
+      "icon": "assets/images/country/er.png",
+      "code": "ti",
+      "text": "ትግርኛ",
+      "storeViewCode": "ti"
+    },
   ],
-  "unsupportedLanguages": ['ku'],
 
   /// ➡️  lib/common/config/payments.dart
   "paymentConfig": {
@@ -808,12 +837,18 @@ Map<String, dynamic> environment = {
     "EnableRefundCancel": true,
 
     /// If the order completed date is after this period (days), the refund button will be hidden.
-    "RefundPeriod": 7
+    "RefundPeriod": 7,
+
+    /// Apply the extra fee for the COD method
+    /// amountStop: Amount to stop charge the extra fee
+    "SmartCOD": {"enabled": true, "extraFee": 10, "amountStop": 200},
   },
   "payments": {
-    "paypal": "assets/icons/payment/paypal.png",
-    "stripe": "assets/icons/payment/stripe.png",
-    "razorpay": "assets/icons/payment/razorpay.png",
+    "stripe_v2_apple_pay": "assets/icons/payment/apple-pay-mark.svg",
+    "stripe_v2_google_pay": "assets/icons/payment/google-pay-mark.png",
+    "paypal": "assets/icons/payment/paypal.svg",
+    "stripe": "assets/icons/payment/stripe.svg",
+    "razorpay": "assets/icons/payment/razorpay.svg",
     "tap": "assets/icons/payment/tap.png"
   },
   "stripeConfig": {
@@ -870,10 +905,24 @@ Map<String, dynamic> environment = {
     "production": false,
     "enabled": true
   },
+  "payStackConfig": {
+    'paymentMethodId': 'paystack',
+    'publicKey': 'pk_test_a1a37615c9ca90dead5dd84dedbb5e476b640a6f',
+    'production': false,
+    'enabled': true
+  },
+  "flutterwaveConfig": {
+    'paymentMethodId': 'rave',
+    'publicKey': 'FLWPUBK_TEST-72b90e0734da8c9e43916adf63cd711e-X',
+    'production': false,
+    'enabled': true
+  },
   "myFatoorahConfig": {
     "paymentMethodId": "myfatoorah_v2",
     "apiToken":
         "rLtt6JWvbUHDDhsZnfpAhpYk4dxYDQkbcPTyGaKp2TYqQgG7FGZ5Th_WD53Oq8Ebz6A53njUoo1w3pjU1D4vs_ZMqFiz_j0urb_BH9Oq9VZoKFoJEDAbRZepGcQanImyYrry7Kt6MnMdgfG5jn4HngWoRdKduNNyP4kzcp3mRv7x00ahkm9LAK7ZRieg7k1PDAnBIOG3EyVSJ5kK4WLMvYr7sCwHbHcu4A5WwelxYK0GMJy37bNAarSJDFQsJ2ZvJjvMDmfWwDVFEVe_5tOomfVNt6bOg9mexbGjMrnHBnKnZR1vQbBtQieDlQepzTZMuQrSuKn-t5XZM7V6fCW7oP-uXGX-sMOajeX65JOf6XVpk29DP6ro8WTAflCDANC193yof8-f5_EYY-3hXhJj7RBXmizDpneEQDSaSz5sFk0sV5qPcARJ9zGG73vuGFyenjPPmtDtXtpx35A-BVcOSBYVIWe9kndG3nclfefjKEuZ3m4jL9Gg1h2JBvmXSMYiZtp9MR5I6pvbvylU_PP5xJFSjVTIz7IQSjcVGO41npnwIxRXNRxFOdIUHn0tjQ-7LwvEcTXyPsHXcMD8WtgBh-wxR8aKX7WPSsT1O8d8reb2aR7K3rkV3K82K_0OgawImEpwSvp9MNKynEAJQS6ZHe_J_l77652xwPNxMRTMASk1ZsJL",
+    'accountCountry': 'KW',
+    // KW (KUWAIT), SA (SAUDI_ARABIA), BH (BAHRAIN), AR (UNITED_ARAB_EMIRATES), QA (QATAR), OM (OMAN), JO (JORDAN), EG (EGYPT)
     "production": false,
     "enabled": true
   },
@@ -943,7 +992,11 @@ Map<String, dynamic> environment = {
     /// For example:
     ///  Today is October 11, 2020 and limitDayBooking is 7 days.
     /// --> So users can only book appointments from October 11, 2020 to October 18, 2020
-    "limitDayBooking": 14
+    "limitDayBooking": 14,
+
+    // Hide or show related products in product detail screen.
+    "showRelatedProductFromSameStore": true,
+    "showRelatedProduct": true,
   },
   "blogDetail": {
     'showComment': true,
@@ -978,7 +1031,6 @@ Map<String, dynamic> environment = {
     /// - which is NOT recommended.
     /// Instead, try to use a plugin like https://wordpress.org/plugins/wp-extra-file-types
     /// to allow custom file types.
-
     /// Allow selecting multiple files for upload. Default: false.
     "allowMultiple": false,
 
@@ -1094,6 +1146,13 @@ Map<String, dynamic> environment = {
     /// The publish status will be removed.
     "DisablePendingProduct": false,
 
+    /// Default status when Add New Product from MV app.
+    /// Support 'draft', 'pending', 'public'.
+    "NewProductStatus": "draft",
+
+    /// Default Vendor image.
+    "DefaultStoreImage": "assets/images/default-store-banner.png",
+
     /// Set this to true to automatically approve the vendor application.
     /// When it is set to false, these are the cases:
     /// - For WCFM - It will set the registered role to subscribe with the meta "wcfm_membership_application_status": "pending".
@@ -1119,6 +1178,13 @@ Map<String, dynamic> environment = {
     "image": "assets/images/splashscreen.flr",
 
     /// AnimationName's is used for 'rive' and 'flare' type
-    "animationName": "fluxstore"
+    "animationName": "fluxstore",
+
+    "boxFit": "contain",
+    "backgroundColor": "#ffffff",
+    "paddingTop": 0,
+    "paddingBottom": 0,
+    "paddingLeft": 0,
+    "paddingRight": 0,
   }
 };
diff --git a/lib/frameworks/frameworks.dart b/lib/frameworks/frameworks.dart
index 6a89dc8b..d76a61e9 100644
--- a/lib/frameworks/frameworks.dart
+++ b/lib/frameworks/frameworks.dart
@@ -253,8 +253,75 @@ abstract class BaseFrameworks {
 //Sync cart to website
   Future<void>? syncCartToWebsite(CartModel cartModel) => null;
 
-  Widget renderTaxes(TaxModel taxModel, BuildContext context) =>
-      const SizedBox();
+  Widget renderTaxes(TaxModel taxModel, BuildContext context) {
+    final currencyRate =
+        Provider.of<AppModel>(context, listen: false).currencyRate;
+    final currency =
+        Provider.of<CartModel>(context, listen: false).currencyCode;
+
+    if (taxModel.taxes != null && taxModel.taxes!.isNotEmpty) {
+      var list = <Widget>[];
+      for (var element in taxModel.taxes!) {
+        list.add(Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          crossAxisAlignment: CrossAxisAlignment.center,
+          children: <Widget>[
+            Text(
+              element.title!,
+              style: TextStyle(
+                fontSize: 14,
+                color: Theme.of(context).colorScheme.secondary,
+              ),
+            ),
+            Text(
+              PriceTools.getCurrencyFormatted(element.amount, currencyRate,
+                  currency: currency)!,
+              style: Theme.of(context).textTheme.subtitle1!.copyWith(
+                    fontSize: 14,
+                    color: Theme.of(context).colorScheme.secondary,
+                    fontWeight: FontWeight.w600,
+                  ),
+            )
+          ],
+        ));
+      }
+
+      return Padding(
+        padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
+        child: Column(
+          children: list,
+        ),
+      );
+    } else if (taxModel.taxesTotal > 0) {
+      return Padding(
+        padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
+        child: Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          crossAxisAlignment: CrossAxisAlignment.center,
+          children: <Widget>[
+            Text(
+              S.of(context).tax,
+              style: TextStyle(
+                fontSize: 14,
+                color: Theme.of(context).colorScheme.secondary,
+              ),
+            ),
+            Text(
+              PriceTools.getCurrencyFormatted(taxModel.taxesTotal, currencyRate,
+                  currency: currency)!,
+              style: Theme.of(context).textTheme.subtitle1!.copyWith(
+                    fontSize: 14,
+                    color: Theme.of(context).colorScheme.secondary,
+                    fontWeight: FontWeight.w600,
+                  ),
+            )
+          ],
+        ),
+      );
+    } else {
+      return const SizedBox();
+    }
+  }
 
   /// For Vendor
   Product updateProductObject(Product product, Map? json) => product;
@@ -330,7 +397,7 @@ abstract class BaseFrameworks {
     final currencyRate = Provider.of<AppModel>(context).currencyRate;
     final model = Provider.of<CartModel>(context);
 
-    return model.isEnabledShipping()
+    return model.isEnabledShipping() && model.shippingMethod != null
         ? Padding(
             padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
             child: Row(
@@ -346,7 +413,7 @@ abstract class BaseFrameworks {
                 Text(
                   PriceTools.getCurrencyFormatted(
                       model.getShippingCost(), currencyRate,
-                      currency: model.currency)!,
+                      currency: model.currencyCode)!,
                   style: Theme.of(context).textTheme.subtitle1!.copyWith(
                         fontSize: 14,
                         color: Theme.of(context).colorScheme.secondary,
@@ -650,7 +717,7 @@ abstract class BaseFrameworks {
 
   Widget renderHomeSearchScreen() => ChangeNotifierProvider(
         create: (context) => SearchModel(),
-        child: const HomeSearchPage(),
+        child: const SearchScreen(),
       );
 
   Widget renderCommentLayout(dynamic postId, kBlogLayout type) {
@@ -746,9 +813,53 @@ abstract class BaseFrameworks {
     BuildContext context, {
     FilterSortBy? filterSortBy,
     required Function(FilterSortBy? filterSortBy) onFilterChanged,
+    bool showDivider = true,
+    bool isBlog = false,
   }) {
+    if (isBlog) {
+      return ExpansionWidget(
+        showDivider: showDivider,
+        padding: const EdgeInsets.only(
+          left: 15,
+          right: 15,
+          top: 15,
+          bottom: 10,
+        ),
+        title: Text(
+          S.of(context).sortBy,
+          style: Theme.of(context).textTheme.titleLarge!.copyWith(
+                fontWeight: FontWeight.w700,
+              ),
+        ),
+        children: [
+          GroupCheckBoxWidget<String>(
+            numberOfRow: 2,
+            childAspectRatio: 16 / 4,
+            defaultValue: filterSortBy?.groupOrderBy,
+            onChanged: (selectedItem) {
+              final filterData = selectedItem?.value.split('-');
+              final orderBy = filterData?[0];
+              final order = filterData?[1];
+              filterSortBy =
+                  filterSortBy?.applyOrderBy(orderBy).applyOrder(order);
+              onFilterChanged(filterSortBy);
+            },
+            values: <GroupCheckBoxItem<String>>{
+              GroupCheckBoxItem(
+                title: S.of(context).dateLatest,
+                value: 'date-desc',
+              ),
+              GroupCheckBoxItem(
+                title: S.of(context).dateOldest,
+                value: 'date-asc',
+              ),
+            },
+          ),
+        ],
+      );
+    }
     return ExpansionWidget(
-      showDivider: true,
+      showDivider: showDivider,
       padding: const EdgeInsets.only(
         left: 15,
         right: 15,
@@ -826,4 +937,44 @@ abstract class BaseFrameworks {
       ],
     );
   }
+
+  Widget renderCODExtraFee(BuildContext context) {
+    final cartModel = Provider.of<CartModel>(context, listen: false);
+    final enabled = (kPaymentConfig.smartCOD?.enabled ?? false) &&
+        ((cartModel.paymentMethod?.id?.contains('cod') ?? false) ||
+            (cartModel.paymentMethod?.id?.contains('cashondelivery') ?? false));
+    final extraFee = kPaymentConfig.smartCOD?.extraFee ?? 0;
+    final amountStop = kPaymentConfig.smartCOD?.amountStop ?? 0;
+    final subtotal = cartModel.getSubTotal() ?? 0;
+
+    if (enabled && extraFee > 0 && subtotal < amountStop) {
+      return Padding(
+        padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
+        child: Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          crossAxisAlignment: CrossAxisAlignment.center,
+          children: <Widget>[
+            Text(
+              S.of(context).codExtraFee,
+              style: TextStyle(
+                fontSize: 14,
+                color: Theme.of(context).colorScheme.secondary,
+              ),
+            ),
+            Text(
+              PriceTools.getCurrencyFormatted(extraFee, cartModel.currencyRates,
+                  currency: cartModel.currencyCode)!,
+              style: Theme.of(context).textTheme.subtitle1!.copyWith(
+                    fontSize: 14,
+                    color: Theme.of(context).colorScheme.secondary,
+                    fontWeight: FontWeight.w600,
+                  ),
+            )
+          ],
+        ),
+      );
+    } else {
+      return const SizedBox();
+    }
+  }
 }
diff --git a/lib/frameworks/product_variant_mixin.dart b/lib/frameworks/product_variant_mixin.dart
index 394fa553..f9795ecb 100644
--- a/lib/frameworks/product_variant_mixin.dart
+++ b/lib/frameworks/product_variant_mixin.dart
@@ -1,10 +1,10 @@
 import 'package:collection/collection.dart' show IterableExtension;
-import 'package:flash/flash.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../common/config.dart';
 import '../common/constants.dart';
+import '../common/tools/flash.dart';
 import '../common/tools/tools.dart';
 import '../generated/l10n.dart';
 import '../models/index.dart'
@@ -12,7 +12,6 @@ import '../models/index.dart'
 import '../routes/flux_navigate.dart';
 import '../screens/cart/cart_screen.dart';
 import '../screens/detail/widgets/index.dart' show ProductShortDescription;
-import '../services/service_config.dart';
 import '../services/services.dart';
 import '../widgets/common/webview.dart';
 import '../widgets/product/widgets/quantity_selection.dart';
@@ -164,7 +163,7 @@ mixin ProductVariantMixin {
                   ? Text(
                       S.of(context).backOrder,
                       style: Theme.of(context).textTheme.subtitle2!.copyWith(
-                            color: kColorBackOrder,
+                            color: kStockColor.backorder,
                             fontWeight: FontWeight.w600,
                           ),
                     )
@@ -174,8 +173,8 @@ mixin ProductVariantMixin {
                           : S.of(context).outOfStock,
                       style: Theme.of(context).textTheme.subtitle2!.copyWith(
                             color: inStock
-                                ? Theme.of(context).primaryColor
-                                : kColorOutOfStock,
+                                ? kStockColor.inStock
+                                : kStockColor.outOfStock,
                             fontWeight: FontWeight.w600,
                           ),
                     )
@@ -331,46 +330,16 @@ mixin ProductVariantMixin {
       const SizedBox(height: 10),
 
       /// Action Buttons: Buy Now, Add To Cart
-      Row(
-        children: <Widget>[
-          if (!ignoreBuyOrOutOfStockButton)
-            Expanded(
-              child: GestureDetector(
-                onTap: isAvailable
-                    ? () => addToCart(true, inStock || allowBackorder)
-                    : null,
-                child: buyOrOutOfStockButton,
-              ),
-            ),
-          if (!ignoreBuyOrOutOfStockButton) const SizedBox(width: 10),
-          if (isAvailable &&
-              (inStock || allowBackorder) &&
-              !isExternal &&
-              !isVariationLoading)
-            Expanded(
-              child: GestureDetector(
-                onTap: () => addToCart(false, inStock || allowBackorder),
-                child: Container(
-                  height: 44,
-                  decoration: BoxDecoration(
-                    borderRadius: BorderRadius.circular(3),
-                    color: Theme.of(context).primaryColorLight,
-                  ),
-                  child: Center(
-                    child: Text(
-                      S.of(context).addToCart.toUpperCase(),
-                      style: TextStyle(
-                        color: Theme.of(context).colorScheme.secondary,
-                        fontWeight: FontWeight.bold,
-                        fontSize: 12,
-                      ),
-                    ),
-                  ),
-                ),
-              ),
-            ),
-        ],
-      )
+      actionButton(
+          ignoreBuyOrOutOfStockButton,
+          isAvailable,
+          addToCart,
+          inStock,
+          allowBackorder,
+          buyOrOutOfStockButton,
+          isExternal,
+          isVariationLoading,
+          context)
     ];
   }
 
@@ -408,35 +377,7 @@ mixin ProductVariantMixin {
         options: mapAttr);
 
     if (message.isNotEmpty) {
-      showFlash(
-        context: context,
-        duration: const Duration(seconds: 3),
-        persistent: !Config().isBuilder,
-        builder: (context, controller) {
-          return Flash(
-            borderRadius: BorderRadius.circular(3.0),
-            backgroundColor: Theme.of(context).errorColor,
-            controller: controller,
-            behavior: FlashBehavior.floating,
-            position: FlashPosition.top,
-            horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-            child: FlashBar(
-              icon: const Icon(
-                Icons.check,
-                color: Colors.white,
-              ),
-              content: Text(
-                message,
-                style: const TextStyle(
-                  color: Colors.white,
-                  fontSize: 18.0,
-                  fontWeight: FontWeight.w700,
-                ),
-              ),
-            ),
-          );
-        },
-      );
+      FlashHelper.errorMessage(context, message: message);
     } else {
       if (buyNow) {
         FluxNavigate.pushNamed(
@@ -444,41 +385,10 @@ mixin ProductVariantMixin {
           arguments: CartScreenArgument(isModal: true, isBuyNow: true),
         );
       }
-      showFlash(
-        context: context,
-        duration: const Duration(seconds: 3),
-        persistent: !Config().isBuilder,
-        builder: (context, controller) {
-          return Flash(
-            borderRadius: BorderRadius.circular(3.0),
-            backgroundColor: Theme.of(context).primaryColor,
-            controller: controller,
-            behavior: FlashBehavior.floating,
-            position: FlashPosition.top,
-            horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-            child: FlashBar(
-              icon: const Icon(
-                Icons.check,
-                color: Colors.white,
-              ),
-              title: Text(
-                product.name!,
-                style: const TextStyle(
-                  color: Colors.white,
-                  fontWeight: FontWeight.w700,
-                  fontSize: 15.0,
-                ),
-              ),
-              content: Text(
-                S.of(context).addToCartSucessfully,
-                style: const TextStyle(
-                  color: Colors.white,
-                  fontSize: 15.0,
-                ),
-              ),
-            ),
-          );
-        },
+      FlashHelper.message(
+        context,
+        title: product.name,
+        message: S.of(context).addToCartSucessfully,
       );
     }
   }
@@ -515,3 +425,56 @@ mixin ProductVariantMixin {
     );
   }
 }
+
+Widget actionButton(
+  bool ignoreBuyOrOutOfStockButton,
+  bool isAvailable,
+  Function addToCart,
+  bool inStock,
+  bool allowBackorder,
+  Widget buyOrOutOfStockButton,
+  bool isExternal,
+  bool isVariationLoading,
+  BuildContext context,
+) {
+  return Row(
+    children: <Widget>[
+      if (!ignoreBuyOrOutOfStockButton)
+        Expanded(
+          child: GestureDetector(
+            onTap: isAvailable
+                ? () => addToCart(true, inStock || allowBackorder)
+                : null,
+            child: buyOrOutOfStockButton,
+          ),
+        ),
+      if (!ignoreBuyOrOutOfStockButton) const SizedBox(width: 10),
+      if (isAvailable &&
+          (inStock || allowBackorder) &&
+          !isExternal &&
+          !isVariationLoading)
+        Expanded(
+          child: GestureDetector(
+            onTap: () => addToCart(false, inStock || allowBackorder),
+            child: Container(
+              height: 44,
+              decoration: BoxDecoration(
+                borderRadius: BorderRadius.circular(3),
+                color: Theme.of(context).primaryColorLight,
+              ),
+              child: Center(
+                child: Text(
+                  S.of(context).addToCart.toUpperCase(),
+                  style: TextStyle(
+                    color: Theme.of(context).colorScheme.secondary,
+                    fontWeight: FontWeight.bold,
+                    fontSize: 12,
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ),
+    ],
+  );
+}
diff --git a/lib/frameworks/woocommerce/index.dart b/lib/frameworks/woocommerce/index.dart
index a787fb15..56e75d5b 100644
--- a/lib/frameworks/woocommerce/index.dart
+++ b/lib/frameworks/woocommerce/index.dart
@@ -23,7 +23,6 @@ import '../../models/index.dart'
         Product,
         ProductVariation,
         ShippingMethodModel,
-        TaxModel,
         User,
         UserModel;
 import '../../models/order/index.dart';
@@ -67,26 +66,32 @@ class WooWidget extends BaseFrameworks
     return isBooking;
   }
 
+  Discount _makeDiscount(
+      Coupons? coupons, String couponCode, CartModel cartModel) {
+    var coupon =
+        coupons!.coupons.firstWhere((element) => element.code == couponCode);
+    final discountValue = coupon.discountType == 'percent'
+        ? cartModel.getSubTotal()! * coupon.amount! / 100.0
+        : coupon.amount!;
+    return Discount(coupon: coupon, discountValue: discountValue);
+  }
+
   Future<Discount?> checkValidCoupon(
       BuildContext context, String couponCode, Coupons? coupons) async {
     final cartModel = Provider.of<CartModel>(context, listen: false);
     final isBooking = isBookingProduct(cartModel);
     Discount? discount;
     if (isBooking) {
-      var coupon =
-          coupons!.coupons.firstWhere((element) => element.code == couponCode);
-      final discountValue = coupon.discountType == 'percent'
-          ? cartModel.getSubTotal()! * coupon.amount! / 100.0
-          : coupon.amount!;
-      discount = Discount(coupon: coupon, discountValue: discountValue);
+      discount = _makeDiscount(coupons, couponCode, cartModel);
     } else {
       discount = await Coupons.getDiscount(
         cartModel: cartModel,
         couponCode: couponCode,
       );
+      discount ??= _makeDiscount(coupons, couponCode, cartModel);
     }
 
-    if (discount?.discountValue != null) {
+    if (discount.discountValue != null) {
       await cartModel.updateDiscount(discount: discount);
       return discount;
     }
@@ -634,76 +639,6 @@ class WooWidget extends BaseFrameworks
     return null;
   }
 
-  @override
-  Widget renderTaxes(TaxModel taxModel, BuildContext context) {
-    final currencyRate =
-        Provider.of<AppModel>(context, listen: false).currencyRate;
-    final currency = Provider.of<CartModel>(context, listen: false).currency;
-
-    if (taxModel.taxes != null && taxModel.taxes!.isNotEmpty) {
-      var list = <Widget>[];
-      for (var element in taxModel.taxes!) {
-        list.add(Row(
-          mainAxisAlignment: MainAxisAlignment.spaceBetween,
-          crossAxisAlignment: CrossAxisAlignment.center,
-          children: <Widget>[
-            Text(
-              element.title!,
-              style: TextStyle(
-                fontSize: 14,
-                color: Theme.of(context).colorScheme.secondary,
-              ),
-            ),
-            Text(
-              PriceTools.getCurrencyFormatted(element.amount, currencyRate,
-                  currency: currency)!,
-              style: Theme.of(context).textTheme.subtitle1!.copyWith(
-                    fontSize: 14,
-                    color: Theme.of(context).colorScheme.secondary,
-                    fontWeight: FontWeight.w600,
-                  ),
-            )
-          ],
-        ));
-      }
-
-      return Padding(
-        padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
-        child: Column(
-          children: list,
-        ),
-      );
-    } else if (taxModel.taxesTotal > 0) {
-      return Padding(
-        padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
-        child: Row(
-          mainAxisAlignment: MainAxisAlignment.spaceBetween,
-          crossAxisAlignment: CrossAxisAlignment.center,
-          children: <Widget>[
-            Text(
-              S.of(context).tax,
-              style: TextStyle(
-                fontSize: 14,
-                color: Theme.of(context).colorScheme.secondary,
-              ),
-            ),
-            Text(
-              PriceTools.getCurrencyFormatted(taxModel.taxesTotal, currencyRate,
-                  currency: currency)!,
-              style: Theme.of(context).textTheme.subtitle1!.copyWith(
-                    fontSize: 14,
-                    color: Theme.of(context).colorScheme.secondary,
-                    fontWeight: FontWeight.w600,
-                  ),
-            )
-          ],
-        ),
-      );
-    } else {
-      return const SizedBox();
-    }
-  }
-
   @override
   Future<Product?>? getProductDetail(BuildContext context, Product? product) {
     return Services().api.getProduct(product!.id);
diff --git a/lib/frameworks/woocommerce/product_addons_mixin.dart b/lib/frameworks/woocommerce/product_addons_mixin.dart
index ab9b18f7..dbeaf3f4 100644
--- a/lib/frameworks/woocommerce/product_addons_mixin.dart
+++ b/lib/frameworks/woocommerce/product_addons_mixin.dart
@@ -13,6 +13,7 @@ import '../../common/tools.dart';
 import '../../generated/l10n.dart' show S;
 import '../../models/index.dart'
     show AddonsOption, AppModel, Product, ProductAddons, UserModel;
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../../services/index.dart';
 
 mixin ProductAddonsMixin {
@@ -85,7 +86,9 @@ mixin ProductAddonsMixin {
     Function? onSelectProductAddons,
     int quantity = 1,
   }) {
-    final rates = Provider.of<AppModel>(context).currencyRate;
+    final model = Provider.of<AppModel>(context);
+    final rates = model.currencyRate;
+    final currency = model.currency;
     final listWidget = <Widget>[];
     if (product.addOns?.isNotEmpty ?? false) {
       listWidget.add(
@@ -164,30 +167,51 @@ mixin ProductAddonsMixin {
                 crossAxisAlignment: CrossAxisAlignment.end,
                 children: [
                   Expanded(
-                    child: Text(item.name!,
-                        style: Theme.of(context).textTheme.subtitle1!.copyWith(
-                              color: selected.isNotEmpty
-                                  ? null
-                                  : Theme.of(context)
-                                      .colorScheme
-                                      .secondary
-                                      .withOpacity(0.7),
-                            )),
-                  ),
-                  (item.isRadioButtonType && item.required!)
-                      ? Text(
-                          S.of(context).mustSelectOneItem,
-                          style: TextStyle(
-                            fontSize: 10,
-                            color: selected.isNotEmpty
-                                ? Theme.of(context).colorScheme.secondary
-                                : Theme.of(context)
-                                    .colorScheme
-                                    .secondary
-                                    .withOpacity(0.7),
+                    child: Row(
+                      mainAxisSize: MainAxisSize.min,
+                      children: [
+                        Text(
+                          item.name!,
+                          style:
+                              Theme.of(context).textTheme.subtitle1!.copyWith(
+                                    color: selected.isNotEmpty
+                                        ? null
+                                        : Theme.of(context)
+                                            .colorScheme
+                                            .secondary
+                                            .withOpacity(0.7),
+                                  ),
+                        ),
+                        if (item.isTextType)
+                          Text(
+                            ' (${PriceTools.getCurrencyFormatted(item.price, rates)})',
+                            style:
+                                Theme.of(context).textTheme.subtitle1?.copyWith(
+                                      color: selected.isNotEmpty
+                                          ? null
+                                          : Theme.of(context)
+                                              .colorScheme
+                                              .secondary
+                                              .withOpacity(0.7),
+                                      fontSize: 13,
+                                    ),
                           ),
-                        )
-                      : const Text('')
+                      ],
+                    ),
+                  ),
+                  if (item.isRadioButtonType && item.required!)
+                    Text(
+                      S.of(context).mustSelectOneItem,
+                      style: TextStyle(
+                        fontSize: 10,
+                        color: selected.isNotEmpty
+                            ? Theme.of(context).colorScheme.secondary
+                            : Theme.of(context)
+                                .colorScheme
+                                .secondary
+                                .withOpacity(0.7),
+                      ),
+                    ),
                 ],
               ),
               subtitle: selected.isNotEmpty
@@ -203,204 +227,331 @@ mixin ProductAddonsMixin {
             ),
             children: [
               Wrap(
-                children: List.generate(item.options!.length, (index) {
-                  final option = item.options![index];
-                  final isSelected = selected[option.label] != null;
-                  void onTap() {
-                    if (item.isRadioButtonType) {
-                      selected.clear();
-                      selected[option.label!] = option;
-                      onSelectProductAddons!(selectedOptions: selectedOptions);
-                      return;
-                    }
-                    if (item.isCheckboxType) {
-                      if (isSelected) {
-                        selected.remove(option.label);
-                      } else {
-                        selected[option.label!] = option;
-                      }
-                      onSelectProductAddons!(selectedOptions: selectedOptions);
-                      return;
-                    }
-                  }
-
-                  return Container(
-                    constraints: BoxConstraints(
-                      minWidth: MediaQuery.of(context).size.width * 0.45,
-                    ),
-                    child: item.isFileUploadType
-                        ? Padding(
-                            padding: const EdgeInsets.only(
-                              left: 8.0,
-                              right: 8.0,
-                              bottom: 8.0,
+                children: [
+                  if (item.isRadioButtonType && !item.required!)
+                    Container(
+                      constraints: BoxConstraints(
+                        minWidth: MediaQuery.of(context).size.width * 0.45,
+                      ),
+                      child: InkWell(
+                        onTap: () {
+                          selected.clear();
+                          onSelectProductAddons!(
+                              selectedOptions: selectedOptions);
+                        },
+                        child: Row(
+                          mainAxisSize: MainAxisSize.min,
+                          children: [
+                            IgnorePointer(
+                              child: Radio(
+                                visualDensity: VisualDensity.compact,
+                                groupValue: selected.keys.isNotEmpty
+                                    ? selected.keys.first
+                                    : null,
+                                value: null,
+                                onChanged: (dynamic _) {},
+                                activeColor: Theme.of(context).primaryColor,
+                              ),
                             ),
-                            child: Row(
-                              children: [
-                                Expanded(
-                                  child: StatefulBuilder(
-                                      builder: (context, StateSetter setState) {
-                                    return TextButton.icon(
-                                      onPressed: isUploading
-                                          ? null
-                                          : () => _showOption(context,
-                                                  onFileUploadStart: () {
-                                                isUploading = true;
-                                                setState(() {});
-                                              }, onFileUploadFailed: () {
-                                                isUploading = false;
-                                                setState(() {});
-                                              }, onFileUploaded:
-                                                      (List<String?> fileUrls) {
-                                                isUploading = false;
-                                                setState(() {});
-                                                for (var url in fileUrls) {
-                                                  /// Overwrite previous file if multiple files not allowed.
-                                                  var key = kProductDetail
-                                                          .allowMultiple
-                                                      ? url!.split('/').last
-                                                      : item.name;
-                                                  selected[key!] = AddonsOption(
-                                                      parent: item.name,
-                                                      label: url,
-                                                      type: item.type,
-                                                      display: item.display,
-                                                      fieldName:
-                                                          item.fieldName);
-                                                  onSelectProductAddons!(
-                                                      selectedOptions:
-                                                          selectedOptions);
-                                                }
-                                              }),
-                                      icon: isUploading
-                                          ? SizedBox(
-                                              height: 20,
-                                              width: 20,
-                                              child: CircularProgressIndicator(
-                                                strokeWidth: 2.0,
-                                                valueColor:
-                                                    AlwaysStoppedAnimation<
-                                                            Color>(
-                                                        Theme.of(context)
-                                                            .primaryColor),
-                                              ),
-                                            )
-                                          : const Icon(
-                                              CupertinoIcons.doc_text,
-                                            ),
-                                      label: Text(
-                                        (isUploading
-                                                ? S.of(context).uploading
-                                                : S.of(context).uploadFile)
-                                            .toUpperCase(),
-                                      ),
-                                    );
-                                  }),
+                            Text(
+                              S.of(context).none,
+                              style: Theme.of(context)
+                                  .textTheme
+                                  .subtitle1!
+                                  .copyWith(
+                                    fontWeight: selected.isEmpty
+                                        ? FontWeight.bold
+                                        : null,
+                                  ),
+                            )
+                          ],
+                        ),
+                      ),
+                    ),
+                  ...List.generate(
+                    item.isCustomPriceType ? 1 : item.options!.length,
+                    (index) {
+                      if (item.isCustomPriceType) {
+                        return Expanded(
+                          child: Padding(
+                            padding: const EdgeInsets.only(bottom: 8.0),
+                            child: TextField(
+                              onChanged: (text) {
+                                if (text.isEmpty) {
+                                  selected.remove(item.name);
+                                  onSelectProductAddons!(
+                                      selectedOptions: selectedOptions);
+                                  return;
+                                }
+
+                                text = text.replaceAll(',', '');
+                                final price = double.tryParse(text);
+                                if (price == null) {
+                                  return;
+                                }
+
+                                final formattedPrice =
+                                    PriceTools.getCurrencyFormatted(
+                                            price, rates,
+                                            currency: currency) ??
+                                        text;
+
+                                if (selected[item.name] != null) {
+                                  selected[item.name]!.label = formattedPrice;
+                                  selected[item.name]!.price =
+                                      '${Helper.formatDouble(text) ?? 0.0}';
+                                } else {
+                                  selected[item.name!] = AddonsOption(
+                                      parent: item.name,
+                                      type: item.type,
+                                      label: formattedPrice,
+                                      price:
+                                          '${Helper.formatDouble(text) ?? 0.0}',
+                                      display: item.display,
+                                      fieldName: item.fieldName);
+                                }
+                                onSelectProductAddons!(
+                                    selectedOptions: selectedOptions);
+                              },
+                              keyboardType:
+                                  const TextInputType.numberWithOptions(
+                                signed: false,
+                                decimal: true,
+                              ),
+                              decoration: InputDecoration(
+                                contentPadding: const EdgeInsets.all(8),
+                                border: OutlineInputBorder(
+                                  borderSide: BorderSide(
+                                      color: Theme.of(context)
+                                          .colorScheme
+                                          .secondary),
+                                  borderRadius: BorderRadius.circular(5),
                                 ),
-                              ],
+                                hintText: PriceTools.getCurrencyFormatted(
+                                  0,
+                                  null,
+                                  currency: currency,
+                                ),
+                              ),
+                              minLines: 1,
+                              maxLines: 1,
                             ),
-                          )
-                        : InkWell(
-                            onTap: onTap,
-                            child: Row(
-                              mainAxisAlignment: MainAxisAlignment.start,
-                              mainAxisSize: MainAxisSize.min,
-                              children: [
-                                if (item.isRadioButtonType)
-                                  Radio(
-                                    visualDensity: VisualDensity.compact,
-                                    groupValue: selected.keys.isNotEmpty
-                                        ? selected.keys.first
-                                        : '',
-                                    value: option.label,
-                                    onChanged: (dynamic _) => onTap(),
-                                    activeColor: Theme.of(context).primaryColor,
-                                  ),
-                                if (item.isCheckboxType)
-                                  Checkbox(
-                                    visualDensity: VisualDensity.compact,
-                                    onChanged: (_) => onTap(),
-                                    activeColor: Theme.of(context).primaryColor,
-                                    checkColor: Colors.white,
-                                    value: isSelected,
-                                  ),
-                                if (item.isTextType)
-                                  Expanded(
-                                    child: Padding(
-                                      padding:
-                                          const EdgeInsets.only(bottom: 8.0),
-                                      child: TextField(
-                                        onChanged: (text) {
-                                          if (text.isEmpty) {
-                                            selected.remove(item.name);
-                                            onSelectProductAddons!(
-                                                selectedOptions:
-                                                    selectedOptions);
-                                            return;
-                                          }
+                          ),
+                        );
+                      }
+                      final option = item.options![index];
+                      final isSelected = selected[option.label] != null;
+                      void onTap() {
+                        if (item.isRadioButtonType) {
+                          selected.clear();
+                          selected[option.label!] = option;
+                          onSelectProductAddons!(
+                              selectedOptions: selectedOptions);
+                          return;
+                        }
+                        if (item.isCheckboxType) {
+                          if (isSelected) {
+                            selected.remove(option.label);
+                          } else {
+                            selected[option.label!] = option;
+                          }
+                          onSelectProductAddons!(
+                              selectedOptions: selectedOptions);
+                          return;
+                        }
+                      }
 
-                                          if (selected[item.name] != null) {
-                                            selected[item.name]!.label = text;
-                                          } else {
-                                            selected[item.name!] = AddonsOption(
-                                                parent: item.name,
-                                                type: item.type,
-                                                label: text,
-                                                price: item.price,
-                                                display: item.display,
-                                                fieldName: item.fieldName);
-                                          }
-                                          onSelectProductAddons!(
-                                              selectedOptions: selectedOptions);
-                                        },
-                                        decoration: InputDecoration(
-                                          contentPadding:
-                                              const EdgeInsets.all(8),
-                                          border: OutlineInputBorder(
-                                            borderSide: BorderSide(
-                                                color: Theme.of(context)
-                                                    .colorScheme
-                                                    .secondary),
-                                            borderRadius:
-                                                BorderRadius.circular(5),
+                      return Container(
+                        constraints: BoxConstraints(
+                          minWidth: MediaQuery.of(context).size.width * 0.45,
+                        ),
+                        child: item.isFileUploadType
+                            ? Padding(
+                                padding: const EdgeInsets.only(
+                                  left: 8.0,
+                                  right: 8.0,
+                                  bottom: 8.0,
+                                ),
+                                child: Row(
+                                  children: [
+                                    Expanded(
+                                      child: StatefulBuilder(builder:
+                                          (context, StateSetter setState) {
+                                        return TextButton.icon(
+                                          onPressed: isUploading
+                                              ? null
+                                              : () => _showOption(context,
+                                                      onFileUploadStart: () {
+                                                    isUploading = true;
+                                                    setState(() {});
+                                                  }, onFileUploadFailed: () {
+                                                    isUploading = false;
+                                                    setState(() {});
+                                                  }, onFileUploaded:
+                                                          (List<String?>
+                                                              fileUrls) {
+                                                    isUploading = false;
+                                                    setState(() {});
+                                                    for (var url in fileUrls) {
+                                                      /// Overwrite previous file if multiple files not allowed.
+                                                      var key = kProductDetail
+                                                              .allowMultiple
+                                                          ? url!.split('/').last
+                                                          : item.name;
+                                                      selected[key!] =
+                                                          AddonsOption(
+                                                              parent: item.name,
+                                                              label: url,
+                                                              type: item.type,
+                                                              display:
+                                                                  item.display,
+                                                              fieldName: item
+                                                                  .fieldName);
+                                                      onSelectProductAddons!(
+                                                          selectedOptions:
+                                                              selectedOptions);
+                                                    }
+                                                  }),
+                                          icon: isUploading
+                                              ? SizedBox(
+                                                  height: 20,
+                                                  width: 20,
+                                                  child:
+                                                      CircularProgressIndicator(
+                                                    strokeWidth: 2.0,
+                                                    valueColor:
+                                                        AlwaysStoppedAnimation<
+                                                                Color>(
+                                                            Theme.of(context)
+                                                                .primaryColor),
+                                                  ),
+                                                )
+                                              : const Icon(
+                                                  CupertinoIcons.doc_text,
+                                                ),
+                                          label: Text(
+                                            (isUploading
+                                                    ? S.of(context).uploading
+                                                    : S.of(context).uploadFile)
+                                                .toUpperCase(),
+                                          ),
+                                        );
+                                      }),
+                                    ),
+                                  ],
+                                ),
+                              )
+                            : InkWell(
+                                onTap: onTap,
+                                child: Row(
+                                  mainAxisAlignment: MainAxisAlignment.start,
+                                  mainAxisSize: MainAxisSize.min,
+                                  children: [
+                                    if (item.isRadioButtonType)
+                                      Radio(
+                                        visualDensity: VisualDensity.compact,
+                                        groupValue: selected.keys.isNotEmpty
+                                            ? selected.keys.first
+                                            : '',
+                                        value: option.label,
+                                        onChanged: (dynamic _) => onTap(),
+                                        activeColor:
+                                            Theme.of(context).primaryColor,
+                                      ),
+                                    if (item.isCheckboxType)
+                                      Checkbox(
+                                        visualDensity: VisualDensity.compact,
+                                        onChanged: (_) => onTap(),
+                                        activeColor:
+                                            Theme.of(context).primaryColor,
+                                        checkColor: Colors.white,
+                                        value: isSelected,
+                                      ),
+                                    if (item.isTextType)
+                                      Expanded(
+                                        child: Padding(
+                                          padding: const EdgeInsets.only(
+                                              bottom: 8.0),
+                                          child: TextField(
+                                            onChanged: (text) {
+                                              if (text.isEmpty) {
+                                                selected.remove(item.name);
+                                                onSelectProductAddons!(
+                                                    selectedOptions:
+                                                        selectedOptions);
+                                                return;
+                                              }
+
+                                              if (selected[item.name] != null) {
+                                                selected[item.name]!.label =
+                                                    text;
+                                              } else {
+                                                selected[item.name!] =
+                                                    AddonsOption(
+                                                        parent: item.name,
+                                                        type: item.type,
+                                                        label: text,
+                                                        price: item.price,
+                                                        display: item.display,
+                                                        fieldName:
+                                                            item.fieldName);
+                                              }
+                                              onSelectProductAddons!(
+                                                  selectedOptions:
+                                                      selectedOptions);
+                                            },
+                                            decoration: InputDecoration(
+                                              contentPadding:
+                                                  const EdgeInsets.all(8),
+                                              border: OutlineInputBorder(
+                                                borderSide: BorderSide(
+                                                    color: Theme.of(context)
+                                                        .colorScheme
+                                                        .secondary),
+                                                borderRadius:
+                                                    BorderRadius.circular(5),
+                                              ),
+                                              labelText: option.label,
+                                            ),
+                                            minLines: 1,
+                                            maxLines:
+                                                item.isShortTextType ? 1 : 4,
                                           ),
-                                          labelText: option.label,
                                         ),
-                                        minLines: 1,
-                                        maxLines: item.isShortTextType ? 1 : 4,
                                       ),
-                                    ),
-                                  ),
-                                if (!item.isTextType)
-                                  Text(
-                                    option.label!,
-                                    style: Theme.of(context)
-                                        .textTheme
-                                        .subtitle1!
-                                        .copyWith(
-                                          fontWeight: isSelected
-                                              ? FontWeight.bold
-                                              : null,
+                                    if (!item.isTextType)
+                                      Text(
+                                        option.label!,
+                                        style: Theme.of(context)
+                                            .textTheme
+                                            .subtitle1!
+                                            .copyWith(
+                                              fontWeight: isSelected
+                                                  ? FontWeight.bold
+                                                  : null,
+                                            ),
+                                      ),
+                                    if (!item.isTextType && !item.isHeadingType)
+                                      Padding(
+                                        padding: const EdgeInsets.symmetric(
+                                            horizontal: 4.0),
+                                        child: Text(
+                                          '(${PriceTools.getCurrencyFormatted(option.price, rates)})',
+                                          style: TextStyle(
+                                            fontWeight: isSelected
+                                                ? FontWeight.bold
+                                                : null,
+                                            fontSize: 13,
+                                          ),
                                         ),
-                                  ),
-                                if (!item.isTextType && !item.isHeadingType)
-                                  Padding(
-                                    padding: const EdgeInsets.symmetric(
-                                        horizontal: 4.0),
-                                    child: Text(
-                                      '(${PriceTools.getCurrencyFormatted(option.price, rates)})',
-                                      style: TextStyle(
-                                        fontWeight:
-                                            isSelected ? FontWeight.bold : null,
-                                        fontSize: 13,
                                       ),
-                                    ),
-                                  ),
-                              ],
-                            ),
-                          ),
-                  );
-                }),
+                                  ],
+                                ),
+                              ),
+                      );
+                    },
+                  )
+                ],
               )
             ],
           );
@@ -583,7 +734,7 @@ mixin ProductAddonsMixin {
 
   String _getSelectedOptionsTitle(BuildContext context, ProductAddons item,
       Map<String, AddonsOption> selected) {
-    if (item.isTextType) {
+    if (item.isTextType || item.isCustomPriceType) {
       return selected[item.name]?.label ?? '';
     }
     if (item.isFileUploadType &&
diff --git a/lib/frameworks/woocommerce/services/woo_commerce.dart b/lib/frameworks/woocommerce/services/woo_commerce.dart
index 19bc6440..7a88d0c8 100644
--- a/lib/frameworks/woocommerce/services/woo_commerce.dart
+++ b/lib/frameworks/woocommerce/services/woo_commerce.dart
@@ -2,6 +2,7 @@ import 'dart:convert' as convert;
 import 'dart:convert';
 import 'dart:core';
 
+import 'package:collection/collection.dart';
 import 'package:quiver/strings.dart';
 import 'package:universal_platform/universal_platform.dart';
 
@@ -18,6 +19,9 @@ import '../../../services/https.dart';
 import '../../../services/index.dart';
 import 'woocommerce_api.dart';
 
+const emptyShippingMsg = 'There are no shipping options available. Please ensure that your address has been entered correctly, or contact us if you need any help.';
+final String kDefaultCurrency = kAdvanceConfig.defaultCurrency?.currencyCode ?? 'USD';
+
 class WooCommerceService extends BaseServices {
   Map<String, dynamic>? configCache;
   final WooCommerceAPI wcApi;
@@ -54,10 +58,19 @@ class WooCommerceService extends BaseServices {
     return product;
   }
 
+  String buildUrlToGetProducts(String endPoint){
+    if(kAdvanceConfig.enableWOOCSCurrencySwitcher){
+      return endPoint.contains('?') ? '$endPoint&currency=$kDefaultCurrency' : '$endPoint?currency=$kDefaultCurrency';
+    }
+    return endPoint;
+  }
+
   @override
   Future<List<Category>> getCategories({lang}) async {
     try {
-      if (categories.isNotEmpty && currentLanguage == lang && currentHideEmptyCategories == kAdvanceConfig.hideEmptyCategories) {
+      if (categories.isNotEmpty &&
+          currentLanguage == lang &&
+          currentHideEmptyCategories == kAdvanceConfig.hideEmptyCategories) {
         return categories;
       }
       currentLanguage = lang;
@@ -227,6 +240,7 @@ class WooCommerceService extends BaseServices {
         }
         endPoint += '&include=${result.toList().join(',')}';
       }
+      endPoint = buildUrlToGetProducts(endPoint);
 
       var response = await wcApi.getAsync(
         endPoint,
@@ -407,7 +421,7 @@ class WooCommerceService extends BaseServices {
       if (search != null) {
         endPoint += '&search=$search';
       }
-
+      endPoint = buildUrlToGetProducts(endPoint);
       printLog('-- fetchProductsByCategory --');
       printLog(endPoint);
 
@@ -578,7 +592,7 @@ class WooCommerceService extends BaseServices {
         if (kAdvanceConfig.isMultiLanguages) {
           endPoint += '&lang=$lang';
         }
-
+        endPoint = buildUrlToGetProducts(endPoint);
         var response = await wcApi.getAsync(endPoint);
         if (response is Map && isNotBlank(response['message'])) {
           throw Exception(response['message']);
@@ -620,7 +634,7 @@ class WooCommerceService extends BaseServices {
       }
       var params = Order().toJson(cartModel, null, false);
       if (kVendorConfig['DisableVendorShipping'] == false &&
-          Config().isVendorType()) {
+          ServerConfig().isVendorType()) {
         List lineItems = params['line_items'];
         for (var element in lineItems) {
           final product = cartModel.item[element['product_id']];
@@ -638,17 +652,29 @@ class WooCommerceService extends BaseServices {
               .toUri()!,
           body: convert.jsonEncode(params),
           headers: {'Content-Type': 'application/json'});
+
+      if(response.statusCode == 502){
+        return getShippingMethodsByWooApi();
+      }
+
       final body = convert.jsonDecode(response.body);
       if (response.statusCode == 200) {
         for (var item in body) {
           list.add(ShippingMethod.fromJson(item));
         }
+      } else if(body['data'] != null && body['data']['required_shipping'] != null){
+        if(body['data']['required_shipping'] == false){
+          return list;
+        }else{
+          throw Exception(
+              emptyShippingMsg);
+        }
       } else if (body['message'] != null) {
         throw Exception(body['message']);
       }
       if (list.isEmpty) {
         throw Exception(
-            'Your selected address is not supported by any Shipping method, please update the billing address again!');
+            emptyShippingMsg);
       }
       return list;
     } catch (err) {
@@ -692,7 +718,7 @@ class WooCommerceService extends BaseServices {
       }
       if (list.isEmpty) {
         throw Exception(
-            'Your selected address is not supported by any Shipping method, please update the billing address again!');
+            emptyShippingMsg);
       }
       return list;
     } catch (err) {
@@ -723,6 +749,11 @@ class WooCommerceService extends BaseServices {
             'Content-Type': 'application/json',
             'User-Cookie': token ?? '',
           });
+
+      if(response.statusCode == 502){
+        return getPaymentMethodsByWooApi();
+      }
+
       final body = convert.jsonDecode(response.body);
 
       if (response.statusCode == 200) {
@@ -792,8 +823,8 @@ class WooCommerceService extends BaseServices {
   Future<List<OrderNote>> getOrderNote(
       {String? userId, String? orderId}) async {
     try {
-      var response = await wcApi
-          .getAsync('orders/$orderId/notes?customer=$userId&per_page=20&type=${kAdvanceConfig.orderNotesWithPrivateNote == true ? 'any' : 'customer'}');
+      var response = await wcApi.getAsync(
+          'orders/$orderId/notes?customer=$userId&per_page=20&type=${kAdvanceConfig.orderNotesWithPrivateNote == true ? 'any' : 'customer'}');
       var list = <OrderNote>[];
       if (response is Map && isNotBlank(response['message'])) {
         throw Exception(response['message']);
@@ -943,6 +974,7 @@ class WooCommerceService extends BaseServices {
       if (userId != null) {
         endPoint += '&user_id=$userId';
       }
+      endPoint = buildUrlToGetProducts(endPoint);
       var response = await wcApi.getAsync('$endPoint&search=$name');
       if (response is Map && isNotBlank(response['message'])) {
         throw Exception(response['message']);
@@ -1120,7 +1152,7 @@ class WooCommerceService extends BaseServices {
       if (config.containsKey('tag')) {
         endPoint += "&tag=${config["tag"]}";
       }
-
+      endPoint = buildUrlToGetProducts(endPoint);
       var response = await wcApi.getStream(endPoint);
 
       return response.stream
@@ -1140,7 +1172,7 @@ class WooCommerceService extends BaseServices {
       var endpoint = (lang == null || !kAdvanceConfig.isMultiLanguages)
           ? 'products/$id'
           : 'products/$id?lang=$lang';
-
+      endpoint = buildUrlToGetProducts(endpoint);
       var response = await wcApi.getAsync(endpoint);
 
       if (response is Map && isNotBlank(response['message'])) {
@@ -1161,7 +1193,7 @@ class WooCommerceService extends BaseServices {
       var endpoint = (lang == null || !kAdvanceConfig.isMultiLanguages)
           ? 'products/$id/variations/$variationId'
           : 'products/$id/variations/$variationId?lang=$lang';
-
+      endpoint = buildUrlToGetProducts(endpoint);
       var response = await wcApi.getAsync(endpoint);
 
       if (response is Map && isNotBlank(response['message'])) {
@@ -1647,6 +1679,41 @@ class WooCommerceService extends BaseServices {
     }
   }
 
+  @override
+  Future<Tag> getTagById({required tagId}) async {
+    try {
+      var url = 'products/tags/$tagId';
+      var response = await wcApi.getAsync(url);
+      if (response is Map && isNotBlank(response['message'])) {
+        throw Exception(response['message']);
+      } else {
+        return Tag.fromJson(response);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
+  @override
+  Future<Tag?> getTagBySlug(
+      String slug) async {
+    try {
+      var url = 'products/tags?slug=$slug';
+      var response = await wcApi.getAsync(url);
+      if (response is Map && isNotBlank(response['message'])) {
+        throw Exception(response['message']);
+      } else {
+        final tagItem = List.from(response).firstOrNull;
+        if (tagItem == null) throw 'This tag does not exist';
+        return Tag.fromJson(tagItem);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
   @override
   Future<bool> pushNotification(cookie,
       {receiverEmail, senderName, message}) async {
@@ -1722,8 +1789,9 @@ class WooCommerceService extends BaseServices {
   Future<List<Product>> getOwnProducts(String? cookie,
       {int? page, int? perPage}) async {
     try {
-      final response = await httpPost(
-          '$domain/wp-json/api/flutter_multi_vendor/products/owner'.toUri()!,
+      var endPoint = '$domain/wp-json/api/flutter_multi_vendor/products/owner';
+      endPoint = buildUrlToGetProducts(endPoint);
+      final response = await httpPost(endPoint.toUri()!,
           body: convert.jsonEncode({'cookie': cookie, 'page': page}),
           headers: {
             'User-Cookie': cookie!,
@@ -2050,6 +2118,7 @@ class WooCommerceService extends BaseServices {
   Future<List<Product>?> fetchProductsByBrand({page, lang, brandId}) async {
     try {
       var endpoint = 'products?brand=$brandId&page=$page&per_page=10';
+      endpoint = buildUrlToGetProducts(endpoint);
       var response = await wcApi.getAsync(endpoint);
       var list = <Product>[];
       if (response is Map && isNotBlank(response['message'])) {
@@ -2104,7 +2173,8 @@ class WooCommerceService extends BaseServices {
         endpoint.toUri()!,
       );
       if (response.statusCode == 200) {
-        return response.body == 'true';
+        /// Need to trim. It returns "									true" for some reason 😂.
+        return response.body.trim() == 'true';
       }
     } catch (e) {
       printLog('isPhoneNumberExisted $e');
@@ -2115,8 +2185,7 @@ class WooCommerceService extends BaseServices {
   @override
   Future<Category?> getProductCategoryById({required categoryId}) async {
     try {
-      var url =
-          'products/categories/$categoryId?exclude=$kExcludedCategory&per_page=1&hide_empty=${kAdvanceConfig.hideEmptyCategories}';
+      var url = 'products/categories/$categoryId';
       var response = await wcApi.getAsync(url);
       if (response is Map && isNotBlank(response['message'])) {
         throw Exception(response['message']);
@@ -2129,6 +2198,40 @@ class WooCommerceService extends BaseServices {
     }
   }
 
+  @override
+  Future<Brand?> getBrandById(brandId) async {
+    try {
+      var url = 'products/brands/$brandId';
+      var response = await wcApi.getAsync(url);
+      if (response is Map && isNotBlank(response['message'])) {
+        throw Exception(response['message']);
+      } else {
+        return Brand.fromJson(response);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
+  @override
+  Future<Brand?> getBrandBySlug(String slug) async {
+    try {
+      var url = 'products/brands?slug=$slug';
+      var response = await wcApi.getAsync(url);
+      if (response is Map && isNotBlank(response['message'])) {
+        throw Exception(response['message']);
+      } else {
+        final brandItem = List.from(response).firstOrNull;
+        if (brandItem == null) throw 'This brand does not exist';
+        return Brand.fromJson(brandItem);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
   @override
   Future<void> deleteProduct(
       {required String? productId, required String? cookie}) async {
@@ -2224,13 +2327,16 @@ class WooCommerceService extends BaseServices {
   @override
   Future<bool> deleteAccount(String token) async {
     try {
-      await httpDelete(
+      final response = await httpDelete(
           '$domain/wp-json/api/flutter_customer/delete_account'.toUri()!,
           headers: {
             'User-Cookie': token,
             'Content-Type': 'application/json',
           });
-      // var body = convert.jsonDecode(response.body);
+      var body = convert.jsonDecode(response.body);
+      if (body is Map && body['message'] != null) {
+        throw body['message'];
+      }
       return true;
     } catch (e) {
       rethrow;
diff --git a/lib/frameworks/wordpress/index.dart b/lib/frameworks/wordpress/index.dart
index 8c68bcfe..cd15cc4f 100644
--- a/lib/frameworks/wordpress/index.dart
+++ b/lib/frameworks/wordpress/index.dart
@@ -1,7 +1,6 @@
 import 'dart:async';
 
 import 'package:flutter/material.dart';
-import 'package:inspireui/widgets/expandable/expansion_widget.dart';
 import 'package:localstorage/localstorage.dart';
 import 'package:provider/provider.dart';
 
@@ -10,7 +9,6 @@ import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/blog_search_model.dart';
-import '../../models/entities/filter_sorty_by.dart';
 import '../../models/entities/index.dart';
 import '../../models/index.dart'
     show Country, CountryState, ListCountry, User, UserModel;
@@ -18,7 +16,6 @@ import '../../modules/dynamic_layout/config/blog_config.dart';
 import '../../screens/categories/layouts/side_menu_with_group.dart';
 import '../../screens/index.dart' hide SideMenuCategories, SubCategories;
 import '../../services/index.dart';
-import '../../widgets/common/group_check_box_widget.dart';
 import '../frameworks.dart';
 import 'presentation/screens/blog_search_screen.dart';
 import 'presentation/screens/blog_wish_list_screen.dart';
@@ -298,52 +295,4 @@ class WordPressWidget extends BaseFrameworks {
   Widget reOrderButton(Order order) {
     return const SizedBox();
   }
-
-  @override
-  Widget renderFilterSortBy(
-    BuildContext context, {
-    FilterSortBy? filterSortBy,
-    required Function(FilterSortBy? filterSortBy) onFilterChanged,
-  }) {
-    return ExpansionWidget(
-      showDivider: true,
-      padding: const EdgeInsets.only(
-        left: 15,
-        right: 15,
-        top: 15,
-        bottom: 10,
-      ),
-      title: Text(
-        S.of(context).sortBy,
-        style: Theme.of(context).textTheme.titleLarge!.copyWith(
-              fontWeight: FontWeight.w700,
-            ),
-      ),
-      children: [
-        GroupCheckBoxWidget<String>(
-          numberOfRow: 2,
-          childAspectRatio: 16 / 4,
-          defaultValue: filterSortBy?.groupOrderBy,
-          onChanged: (selectedItem) {
-            final filterData = selectedItem?.value.split('-');
-            final orderBy = filterData?[0];
-            final order = filterData?[1];
-            filterSortBy =
-                filterSortBy?.applyOrderBy(orderBy).applyOrder(order);
-            onFilterChanged(filterSortBy);
-          },
-          values: <GroupCheckBoxItem<String>>{
-            GroupCheckBoxItem(
-              title: S.of(context).dateLatest,
-              value: 'date-desc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).dateOldest,
-              value: 'date-asc',
-            ),
-          },
-        ),
-      ],
-    );
-  }
 }
diff --git a/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart b/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart
index 091fee21..9b2b54a5 100644
--- a/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart
+++ b/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart
@@ -114,10 +114,8 @@ class _HomeBlogSearchScreenState<T> extends State<HomeBlogSearchScreen> {
           // textTheme: theme.primaryTextTheme,
           systemOverlayStyle: SystemUiOverlayStyle.light,
           titleSpacing: 0,
-          leading: IconButton(
-            icon: const Icon(Icons.arrow_back_ios, size: 20),
-            onPressed: close,
-          ),
+          leading: null,
+          automaticallyImplyLeading: false,
           title: SearchBox(
             showSearchIcon: false,
             showCancelButton: false,
diff --git a/lib/frameworks/wordpress/presentation/widgets/blog_list_layout.dart b/lib/frameworks/wordpress/presentation/widgets/blog_list_layout.dart
index 9831b05b..dc1ccdcf 100644
--- a/lib/frameworks/wordpress/presentation/widgets/blog_list_layout.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/blog_list_layout.dart
@@ -34,12 +34,14 @@ class _ProductListItemsState extends State<BlogListLayout> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) async {
-      final data = await _service.api.fetchBlogLayout(
-        config: widget.config.toJson(),
-        lang: Provider.of<AppModel>(context, listen: false).langCode,
-      );
-      _listBlogNotifier.value = data ?? [];
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        final data = await _service.api.fetchBlogLayout(
+          config: widget.config.toJson(),
+          lang: Provider.of<AppModel>(context, listen: false).langCode,
+        );
+        _listBlogNotifier.value = data ?? [];
+      }
     });
   }
 
diff --git a/lib/frameworks/wordpress/presentation/widgets/horizontal_slider_list.dart b/lib/frameworks/wordpress/presentation/widgets/horizontal_slider_list.dart
index 2946a9fd..b1c3c7fd 100644
--- a/lib/frameworks/wordpress/presentation/widgets/horizontal_slider_list.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/horizontal_slider_list.dart
@@ -31,12 +31,14 @@ class _HorizontalSliderListState extends State<HorizontalSliderList> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) async {
-      final data = await _service.api.fetchBlogLayout(
-        config: widget.config,
-        lang: Provider.of<AppModel>(context, listen: false).langCode,
-      );
-      _listBlogNotifier.value = data ?? [];
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        final data = await _service.api.fetchBlogLayout(
+          config: widget.config,
+          lang: Provider.of<AppModel>(context, listen: false).langCode,
+        );
+        _listBlogNotifier.value = data ?? [];
+      }
     });
   }
 
diff --git a/lib/frameworks/wordpress/presentation/widgets/related_blog_list.dart b/lib/frameworks/wordpress/presentation/widgets/related_blog_list.dart
index 98e45f33..0f5587b2 100644
--- a/lib/frameworks/wordpress/presentation/widgets/related_blog_list.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/related_blog_list.dart
@@ -25,9 +25,11 @@ class _RelatedBlogListState extends State<RelatedBlogList> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) async {
-      final data = await _service.api.getBlogsByCategory(widget.categoryId);
-      _listBlogNotifier.value = data ?? [];
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        final data = await _service.api.getBlogsByCategory(widget.categoryId);
+        _listBlogNotifier.value = data ?? [];
+      }
     });
   }
 
diff --git a/lib/frameworks/wordpress/presentation/widgets/slider_item.dart b/lib/frameworks/wordpress/presentation/widgets/slider_item.dart
index 1c3e1640..c2956a52 100644
--- a/lib/frameworks/wordpress/presentation/widgets/slider_item.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/slider_item.dart
@@ -31,12 +31,14 @@ class _SliderItemState extends State<SliderItem> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) async {
-      final data = await _service.api.fetchBlogLayout(
-        config: widget.config,
-        lang: Provider.of<AppModel>(context, listen: false).langCode,
-      );
-      _listBlogNotifier.value = data ?? [];
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        final data = await _service.api.fetchBlogLayout(
+          config: widget.config,
+          lang: Provider.of<AppModel>(context, listen: false).langCode,
+        );
+        _listBlogNotifier.value = data ?? [];
+      }
     });
   }
 
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
index bec9e237..000f3779 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
@@ -4,6 +4,7 @@ import '../../../../../common/constants.dart';
 import '../../../../../models/entities/index.dart';
 import '../../../../../modules/dynamic_layout/config/blog_config.dart';
 import '../../../../../modules/dynamic_layout/helper/header_view.dart';
+import '../../../../../modules/dynamic_layout/helper/helper.dart';
 import '../../../../../routes/flux_navigate.dart';
 import 'menu_layout.dart';
 import 'pinterest_layout.dart';
@@ -23,9 +24,9 @@ class _VerticalLayoutState extends State<VerticalLayout> {
 
   Widget renderLayout() {
     switch (blogConfig.layout) {
-      case 'menu':
+      case Layout.menu:
         return const MenuLayout();
-      case 'pinterest':
+      case Layout.pinterest:
         return PinterestLayout(config: blogConfig);
       default:
         return VerticalViewLayout(config: blogConfig);
diff --git a/lib/generated/intl/messages_all.dart b/lib/generated/intl/messages_all.dart
index efdda29c..0ea1890e 100644
--- a/lib/generated/intl/messages_all.dart
+++ b/lib/generated/intl/messages_all.dart
@@ -53,6 +53,7 @@ import 'messages_sv.dart' deferred as messages_sv;
 import 'messages_sw.dart' deferred as messages_sw;
 import 'messages_ta.dart' deferred as messages_ta;
 import 'messages_th.dart' deferred as messages_th;
+import 'messages_ti.dart' deferred as messages_ti;
 import 'messages_tr.dart' deferred as messages_tr;
 import 'messages_uk.dart' deferred as messages_uk;
 import 'messages_uz.dart' deferred as messages_uz;
@@ -101,6 +102,7 @@ Map<String, LibraryLoader> _deferredLibraries = {
   'sw': messages_sw.loadLibrary,
   'ta': messages_ta.loadLibrary,
   'th': messages_th.loadLibrary,
+  'ti': messages_ti.loadLibrary,
   'tr': messages_tr.loadLibrary,
   'uk': messages_uk.loadLibrary,
   'uz': messages_uz.loadLibrary,
@@ -188,6 +190,8 @@ MessageLookupByLibrary? _findExact(String localeName) {
       return messages_ta.messages;
     case 'th':
       return messages_th.messages;
+    case 'ti':
+      return messages_ti.messages;
     case 'tr':
       return messages_tr.messages;
     case 'uk':
diff --git a/lib/generated/intl/messages_ar.dart b/lib/generated/intl/messages_ar.dart
index 0b6e2b72..e28f6f5e 100644
--- a/lib/generated/intl/messages_ar.dart
+++ b/lib/generated/intl/messages_ar.dart
@@ -142,6 +142,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("جميع الطلبيات"),
         "allProducts": MessageLookupByLibrary.simpleMessage("جميع المنتجات"),
         "allow": MessageLookupByLibrary.simpleMessage("السماح"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "السماح بالوصول إلى الكاميرا؟"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("على وشك النفاذ من المخزون"),
         "amount": MessageLookupByLibrary.simpleMessage("الكمية"),
@@ -321,6 +323,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "cvv":
             MessageLookupByLibrary.simpleMessage("رمز التحقق من البطاقة CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("التشيكية"),
+        "danish": MessageLookupByLibrary.simpleMessage("دانماركي"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("الوضع الليلي"),
         "dashboard":
             MessageLookupByLibrary.simpleMessage("لوحة التحكم الرئيسية"),
@@ -474,9 +477,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("معرض الصور"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("الإعدادات العامة"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("جاري إنشاء الارتباط ..."),
         "german": MessageLookupByLibrary.simpleMessage("الألمانية"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("الحصول على إشعارات"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("الحصول على إخطار!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("نسيت كلمة المرور"),
         "getStarted": MessageLookupByLibrary.simpleMessage("البدء"),
@@ -514,6 +521,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("المجرية"),
         "hungary": MessageLookupByLibrary.simpleMessage("الهنقارية"),
         "iAgree": MessageLookupByLibrary.simpleMessage("أنا موافق على "),
+        "imIn": MessageLookupByLibrary.simpleMessage("موافق"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("خاصية الصورة"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("معرض الصور"),
         "imageNetwork":
@@ -544,8 +552,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "korean": MessageLookupByLibrary.simpleMessage("الكورية"),
         "kurdish": MessageLookupByLibrary.simpleMessage("الكردية"),
         "language": MessageLookupByLibrary.simpleMessage("اللغات"),
-        "languageSuccess": MessageLookupByLibrary.simpleMessage(
-            "تم تحديث اللغة بنجاح، الرجاء إعادة تشغيل التطبيق"),
+        "languageSuccess":
+            MessageLookupByLibrary.simpleMessage("تم تحديث اللغة بنجاح"),
         "lao": MessageLookupByLibrary.simpleMessage("اللاوية"),
         "lastName": MessageLookupByLibrary.simpleMessage("الاسم الأخير"),
         "lastNameIsRequired": MessageLookupByLibrary.simpleMessage(
@@ -632,6 +640,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("لا توجد عناصر محفوظة للخلف"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "عذراً ، يبدو أن المدونة لم تعد موجودة"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "لا يتم منح إذن الكاميرا. يرجى منحه في إعدادات جهازك."),
         "noData":
             MessageLookupByLibrary.simpleMessage("لا توجد معلومات إضافية"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage(
@@ -849,7 +859,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("تحديد الطابعة"),
         "printing": MessageLookupByLibrary.simpleMessage("جاري الطباعة ..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("سياسة الخصوصية"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("الخصوصية والبنود"),
         "private": MessageLookupByLibrary.simpleMessage("خاصة"),
         "product": MessageLookupByLibrary.simpleMessage("المنتج"),
         "productAdded": MessageLookupByLibrary.simpleMessage("تم إضافة المنتج"),
@@ -919,6 +930,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("إعادة تعيين كلمة المرور"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("إعادة تعيين كلمة المرور"),
+        "results": MessageLookupByLibrary.simpleMessage("النتائج"),
         "review": MessageLookupByLibrary.simpleMessage("إعادة المراجعة مجدداً"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("الموافقة على التعليقات"),
@@ -1172,6 +1184,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage(
             "وجدنا المدونة/المدونات التالية"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "نحتاج إلى الوصول إلى الكاميرا للبحث عن رمز الاستجابة السريعة أو الرمز الشريطي."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "سنرسل إليك إشعارات عند توفر منتجات جديدة أو عند توفر العروض. يمكنك دائمًا تغيير هذا الإعداد في الإعدادات."),
         "webView": MessageLookupByLibrary.simpleMessage("عرض الويب"),
diff --git a/lib/generated/intl/messages_bn.dart b/lib/generated/intl/messages_bn.dart
index 92a839ce..08577f74 100644
--- a/lib/generated/intl/messages_bn.dart
+++ b/lib/generated/intl/messages_bn.dart
@@ -147,6 +147,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("সর্বশেষ বিক্রয়"),
         "allProducts": MessageLookupByLibrary.simpleMessage("সব পণ্য"),
         "allow": MessageLookupByLibrary.simpleMessage("অনুমতি দিন"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "ক্যামেরা অ্যাক্সেসের অনুমতি দেবেন?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("প্রায় বিক্রি"),
         "amount": MessageLookupByLibrary.simpleMessage("পরিমাণ"),
         "anyAttr": m0,
@@ -328,6 +330,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("গ্রাহক নোট"),
         "cvv": MessageLookupByLibrary.simpleMessage("সিভিভি"),
         "czech": MessageLookupByLibrary.simpleMessage("চেক"),
+        "danish": MessageLookupByLibrary.simpleMessage("ডেনমার্কের"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("গাark় থিম"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ড্যাশবোর্ড"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ডেটা খালি"),
@@ -487,9 +490,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("দরদালান"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("সাধারণ বিন্যাস"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("লিঙ্ক তৈরি করা হচ্ছে..."),
         "german": MessageLookupByLibrary.simpleMessage("জার্মান"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("বিজ্ঞপ্তি পেতে"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("বিজ্ঞপ্তি পান!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("পাসওয়ার্ড লিঙ্ক পান"),
         "getStarted": MessageLookupByLibrary.simpleMessage("এবার শুরু করা যাক"),
@@ -525,6 +531,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("হাঙ্গেরীয়"),
         "hungary": MessageLookupByLibrary.simpleMessage("হাঙ্গেরীয়"),
         "iAgree": MessageLookupByLibrary.simpleMessage("আমি একমত"),
+        "imIn": MessageLookupByLibrary.simpleMessage("আমি আছি"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("চিত্র বৈশিষ্ট্য"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("ছবির গ্যালারি"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("ইমেজ নেটওয়ার্ক"),
@@ -643,6 +650,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("কোনও ইতিহাসের আইটেম নেই"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "ওপস, ব্লগটির আর কোনও অস্তিত্ব নেই বলে মনে হচ্ছে"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "কোন ক্যামেরা অনুমতি দেওয়া হয় না. অনুগ্রহ করে আপনার ডিভাইসের সেটিংসে এটি মঞ্জুর করুন৷"),
         "noData": MessageLookupByLibrary.simpleMessage("কোন তথ্য নেই"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("এখনও কোন পছন্দ।"),
@@ -852,7 +861,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("প্রিন্টার নির্বাচন"),
         "printing": MessageLookupByLibrary.simpleMessage("মুদ্রণ..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("গোপনীয়তা নীতি"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("গোপনীয়তা এবং শর্তাদি"),
         "private": MessageLookupByLibrary.simpleMessage("ব্যক্তিগত"),
         "product": MessageLookupByLibrary.simpleMessage("প্রোডাক্ট"),
         "productAdded":
@@ -923,6 +933,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("পাসওয়ার্ড রিসেট করুন"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "আপনার পাসওয়ার্ড পুনরায় সেট করুন"),
+        "results": MessageLookupByLibrary.simpleMessage("ফলাফল"),
         "review": MessageLookupByLibrary.simpleMessage("পূর্বরূপ"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("পর্যালোচনা অনুমোদন"),
@@ -1187,6 +1198,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("আমরা ব্লগ পেয়েছি"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR কোড বা বার কোড স্ক্যান করার জন্য আমাদের ক্যামেরা অ্যাক্সেস প্রয়োজন।"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "নতুন পণ্য পাওয়া গেলে বা অফার পাওয়া গেলে আমরা আপনাকে বিজ্ঞপ্তি পাঠাব। আপনি সবসময় সেটিংসে এই সেটিং পরিবর্তন করতে পারেন।"),
         "webView": MessageLookupByLibrary.simpleMessage("ওয়েব ভিউ"),
diff --git a/lib/generated/intl/messages_cs.dart b/lib/generated/intl/messages_cs.dart
index 1cd95439..7b47fd8a 100644
--- a/lib/generated/intl/messages_cs.dart
+++ b/lib/generated/intl/messages_cs.dart
@@ -145,6 +145,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Nejnovější prodeje"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Všechny produkty"),
         "allow": MessageLookupByLibrary.simpleMessage("Dovolit"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Povolit přístup k fotoaparátu?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Téměř vyprodáno"),
         "amount": MessageLookupByLibrary.simpleMessage("Množství"),
@@ -329,6 +331,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Poznámka zákazníka"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("čeština"),
+        "danish": MessageLookupByLibrary.simpleMessage("dánský"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tmavé téma"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Nástěnka"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data prázdná"),
@@ -488,9 +491,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("galerie"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Obecné nastavení"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Generování odkazu..."),
         "german": MessageLookupByLibrary.simpleMessage("Němec"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Dostat upozornění"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Získejte upozornění!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Získat odkaz na heslo"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Začít"),
@@ -525,6 +532,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("maďarský"),
         "hungary": MessageLookupByLibrary.simpleMessage("maďarský"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Souhlasím s"),
+        "imIn": MessageLookupByLibrary.simpleMessage("jdu do toho"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Funkce obrázku"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Galerie Obrázků"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Obrazová síť"),
@@ -645,6 +653,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Žádná položka zpětné historie"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, zdá se, že blog již neexistuje"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Není uděleno žádné povolení ke kameře. Udělte jej prosím v Nastavení vašeho zařízení."),
         "noData": MessageLookupByLibrary.simpleMessage("Žádné další údaje"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Zatím žádné oblíbené."),
@@ -858,7 +868,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Tisk..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Zásady ochrany osobních údajů"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "Ochrana osobních údajů a podmínky"),
         "private": MessageLookupByLibrary.simpleMessage("Soukromé"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -932,6 +943,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Obnovit heslo"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Obnovit heslo"),
+        "results": MessageLookupByLibrary.simpleMessage("Výsledek"),
         "review": MessageLookupByLibrary.simpleMessage("Náhled"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Zkontrolujte schválení"),
@@ -1199,6 +1211,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Našli jsme blog (y)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "K naskenování QR kódu nebo čárového kódu potřebujeme přístup k fotoaparátu."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Jakmile budou k dispozici nové produkty nebo nabídky, zašleme vám upozornění. Toto nastavení můžete kdykoli změnit v nastavení."),
         "webView": MessageLookupByLibrary.simpleMessage("Webové zobrazení"),
diff --git a/lib/generated/intl/messages_da.dart b/lib/generated/intl/messages_da.dart
index 723df5b2..8ed2c15a 100644
--- a/lib/generated/intl/messages_da.dart
+++ b/lib/generated/intl/messages_da.dart
@@ -144,6 +144,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Seneste salg"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Alle produkter"),
         "allow": MessageLookupByLibrary.simpleMessage("Give lov til"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Vil du tillade kameraadgang?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Næsten udsolgt"),
         "amount": MessageLookupByLibrary.simpleMessage("Beløb"),
         "anyAttr": m0,
@@ -321,6 +323,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Kunde notat"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("tjekkisk"),
+        "danish": MessageLookupByLibrary.simpleMessage("dansk"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mørkt tema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("instrumentbræt"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data tomme"),
@@ -478,8 +481,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galleri"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Generel indstilling"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Genererer link..."),
         "german": MessageLookupByLibrary.simpleMessage("tysk"),
         "getNotification": MessageLookupByLibrary.simpleMessage("Få besked"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Få besked!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Hent adgangskodelink"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Kom igang"),
@@ -515,6 +521,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ungarsk"),
         "hungary": MessageLookupByLibrary.simpleMessage("ungarsk"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Jeg er enig med"),
+        "imIn": MessageLookupByLibrary.simpleMessage("jeg er med"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Billedfunktion"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Billedgalleri"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Billednetværk"),
@@ -635,6 +642,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Ingen baghistorieelement"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Ups, bloggen eksisterer tilsyneladende ikke længere"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Der gives ingen kameratilladelse. Giv det venligst i din enheds indstillinger."),
         "noData": MessageLookupByLibrary.simpleMessage("Ingen flere data"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Ingen favoritter endnu."),
@@ -843,7 +852,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Trykning..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Fortrolighedspolitik"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Fortrolighed og vilkår"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -915,6 +925,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nulstille kodeord"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Nulstil din adgangskode"),
+        "results": MessageLookupByLibrary.simpleMessage("resultater"),
         "review": MessageLookupByLibrary.simpleMessage("Eksempel"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Gennemgå godkendelse"),
@@ -1171,6 +1182,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Vi har fundet blog(s)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Vi har brug for kameraadgang for at scanne efter QR-kode eller stregkode."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Vi sender dig meddelelser, når nye produkter er tilgængelige, eller tilbud er tilgængelige. Du kan altid ændre denne indstilling i indstillingerne."),
         "webView": MessageLookupByLibrary.simpleMessage("Webvisning"),
diff --git a/lib/generated/intl/messages_de.dart b/lib/generated/intl/messages_de.dart
index 183c4fec..c118e239 100644
--- a/lib/generated/intl/messages_de.dart
+++ b/lib/generated/intl/messages_de.dart
@@ -151,6 +151,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Neueste Verkäufe"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Alle Produkte"),
         "allow": MessageLookupByLibrary.simpleMessage("ermöglichen"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Kamerazugriff zulassen?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Fast ausverkauft"),
         "amount": MessageLookupByLibrary.simpleMessage("Menge"),
@@ -334,6 +336,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Kundenhinweis"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Tschechisch"),
+        "danish": MessageLookupByLibrary.simpleMessage("dänisch"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Dunkles Thema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Instrumententafel"),
         "dataEmpty":
@@ -495,9 +498,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galerie"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Allgemeine Einstellungen"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Link wird generiert..."),
         "german": MessageLookupByLibrary.simpleMessage("Deutsch"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Benachrichtigungen erhalten"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Benachrichtigt werden!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Passwort-Link abrufen"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Loslegen"),
@@ -537,6 +544,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Ungarisch"),
         "hungary": MessageLookupByLibrary.simpleMessage("Ungarn"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Zustimmen"),
+        "imIn": MessageLookupByLibrary.simpleMessage("ich bin dabei"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Bildfunktion"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Bildergalerie"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Bildnetzwerk"),
@@ -660,6 +668,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Kein Produkt mehr"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Oops, dieser Beitrag scheint es nicht mehr zu geben."),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Es wird keine Kameraerlaubnis erteilt. Bitte gewähren Sie es in den Einstellungen Ihres Geräts."),
         "noData": MessageLookupByLibrary.simpleMessage("Keine Daten mehr"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Noch keine Favoriten."),
@@ -876,7 +886,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Drucken..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Datenschutz-Bestimmungen"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("Datenschutz"),
         "private": MessageLookupByLibrary.simpleMessage("Privatgelände"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded": MessageLookupByLibrary.simpleMessage(
@@ -952,6 +962,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Passwort zurücksetzen"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Setze dein Passwort zurück"),
+        "results": MessageLookupByLibrary.simpleMessage("Ergebnisse"),
         "review": MessageLookupByLibrary.simpleMessage("Überprüfen"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Überprüfung der Genehmigung"),
@@ -1218,6 +1229,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Wir haben Blog (s) gefunden"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Wir benötigen Kamerazugriff, um nach QR-Code oder Barcode zu scannen."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Wir senden Ihnen Benachrichtigungen, wenn neue Produkte verfügbar sind oder Angebote verfügbar sind. Sie können diese Einstellung jederzeit in den Einstellungen ändern."),
         "webView": MessageLookupByLibrary.simpleMessage("Webansicht"),
diff --git a/lib/generated/intl/messages_el.dart b/lib/generated/intl/messages_el.dart
index acd13a6e..5c2db7de 100644
--- a/lib/generated/intl/messages_el.dart
+++ b/lib/generated/intl/messages_el.dart
@@ -153,6 +153,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Τελευταίες πωλήσεις"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Ολα τα προϊόντα"),
         "allow": MessageLookupByLibrary.simpleMessage("επιτρέπω"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Να επιτρέπεται η πρόσβαση στην κάμερα;"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Σχεδόν εξαντλήθηκε"),
         "amount": MessageLookupByLibrary.simpleMessage("Ποσό"),
@@ -343,6 +345,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Σημείωση πελάτη"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Τσέχος"),
+        "danish": MessageLookupByLibrary.simpleMessage("δανικός"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Dark θέμα"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Ταμπλό"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Κενά δεδομένα"),
@@ -506,9 +509,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Εκθεσιακός χώρος"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Γενική ρύθμιση"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Δημιουργία συνδέσμου..."),
         "german": MessageLookupByLibrary.simpleMessage("Γερμανός"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Λήψη ειδοποίησης"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Λάβετε ειδοποίηση!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Λήψη συνδέσμου κωδικού πρόσβασης"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Ξεκίνα"),
@@ -547,6 +554,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ουγγρικός"),
         "hungary": MessageLookupByLibrary.simpleMessage("ουγγρικός"),
         "iAgree": MessageLookupByLibrary.simpleMessage("συμφωνώ με"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Είμαι μέσα"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Δυνατότητα εικόνας"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Συλλογή εικόνων"),
@@ -673,6 +681,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Χωρίς αντικείμενο ιστορικού"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Ωχ, το blog φαίνεται να μην υπάρχει πλέον"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Δεν χορηγείται άδεια κάμερας. Παρακαλώ χορηγήστε το στις Ρυθμίσεις της συσκευής σας."),
         "noData":
             MessageLookupByLibrary.simpleMessage("Όχι περισσότερα δεδομένα"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage(
@@ -901,7 +911,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Εκτύπωση..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Πολιτική Απορρήτου"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Απόρρητο και Όροι"),
         "private": MessageLookupByLibrary.simpleMessage("Ιδιωτικός"),
         "product": MessageLookupByLibrary.simpleMessage("Προϊόν"),
         "productAdded":
@@ -976,6 +987,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Επαναφέρετε τον κωδικό πρόσβασης"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Επαναφορά του κωδικού πρόσβασής σας"),
+        "results": MessageLookupByLibrary.simpleMessage("αποτελέσματα"),
         "review": MessageLookupByLibrary.simpleMessage("Προεπισκόπηση"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Έλεγχος έγκρισης"),
@@ -1262,6 +1274,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Βρήκαμε Blog (ες)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Χρειαζόμαστε πρόσβαση στην κάμερα για σάρωση για κωδικό QR ή Bar code."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Θα σας στείλουμε ειδοποιήσεις όταν είναι διαθέσιμα νέα προϊόντα ή διαθέσιμες προσφορές. Μπορείτε πάντα να αλλάξετε αυτήν τη ρύθμιση στις ρυθμίσεις."),
         "webView": MessageLookupByLibrary.simpleMessage("Προβολή ιστού"),
diff --git a/lib/generated/intl/messages_en.dart b/lib/generated/intl/messages_en.dart
index 6847b870..35dd704e 100644
--- a/lib/generated/intl/messages_en.dart
+++ b/lib/generated/intl/messages_en.dart
@@ -26,6 +26,8 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m2(state) => "Bluetooth Adapter is ${state}";
 
+  static String m30(currency) => "Changed currency to ${currency}";
+
   static String m3(day) => "${day} days ago";
 
   static String m4(total) => "~${total} km";
@@ -51,6 +53,8 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m14(month) => "${month} months ago";
 
+  static String m31(store) => "More from ${store}";
+
   static String m15(itemCount) => "${itemCount} items";
 
   static String m16(price) => "Options total: ${price}";
@@ -141,10 +145,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Latest Sales"),
         "allProducts": MessageLookupByLibrary.simpleMessage("All Products"),
         "allow": MessageLookupByLibrary.simpleMessage("Allow"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Allow Camera access?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Almost sold out"),
         "amount": MessageLookupByLibrary.simpleMessage("Amount"),
         "anyAttr": m0,
+        "appearance": MessageLookupByLibrary.simpleMessage("Appearance"),
         "apply": MessageLookupByLibrary.simpleMessage("Apply"),
         "approve": MessageLookupByLibrary.simpleMessage("Approve"),
         "approved": MessageLookupByLibrary.simpleMessage("Approved"),
@@ -229,6 +236,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "category": MessageLookupByLibrary.simpleMessage("Category"),
         "change": MessageLookupByLibrary.simpleMessage("change"),
         "changePrinter": MessageLookupByLibrary.simpleMessage("Change Printer"),
+        "changedCurrencyTo": m30,
         "chat": MessageLookupByLibrary.simpleMessage("Chat"),
         "chatListScreen": MessageLookupByLibrary.simpleMessage("Messages"),
         "chatViaFacebook":
@@ -264,6 +272,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "clearCart": MessageLookupByLibrary.simpleMessage("Clear Cart"),
         "close": MessageLookupByLibrary.simpleMessage("Close"),
         "closeNow": MessageLookupByLibrary.simpleMessage("Closed now"),
+        "codExtraFee": MessageLookupByLibrary.simpleMessage("COD Extra Fee"),
         "color": MessageLookupByLibrary.simpleMessage("Color"),
         "comment": MessageLookupByLibrary.simpleMessage("Comment"),
         "commentFirst":
@@ -320,6 +329,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Customer note"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danish"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Dark Theme"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashboard"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -441,6 +451,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "extraServices": MessageLookupByLibrary.simpleMessage("Extra Services"),
         "failToAssign":
             MessageLookupByLibrary.simpleMessage("Failed to assign User"),
+        "failedToGenerateLink":
+            MessageLookupByLibrary.simpleMessage("Failed to generate link"),
         "failedToLoadImage":
             MessageLookupByLibrary.simpleMessage("Failed to load image"),
         "favorite": MessageLookupByLibrary.simpleMessage("Favorite"),
@@ -475,9 +487,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Gallery"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("General Setting"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Generating link..."),
         "german": MessageLookupByLibrary.simpleMessage("German"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Get Notification"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Get notified!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Get password link"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Get Started"),
@@ -513,6 +528,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Hungarian"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungarian"),
         "iAgree": MessageLookupByLibrary.simpleMessage("I agree with"),
+        "imIn": MessageLookupByLibrary.simpleMessage("I\'m in"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Image Feature"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Image Gallery"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Image Network"),
@@ -526,6 +542,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Invalid Phone Number"),
         "invalidSMSCode": MessageLookupByLibrary.simpleMessage(
             "Invalid SMS Verification code"),
+        "invalidYearOfBirth":
+            MessageLookupByLibrary.simpleMessage("Invalid Year of Birth"),
         "invoice": MessageLookupByLibrary.simpleMessage("Invoice"),
         "isEverythingSet":
             MessageLookupByLibrary.simpleMessage("Is everything set...?"),
@@ -544,7 +562,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "kurdish": MessageLookupByLibrary.simpleMessage("Kurdish"),
         "language": MessageLookupByLibrary.simpleMessage("Languages"),
         "languageSuccess": MessageLookupByLibrary.simpleMessage(
-            "The Language is updated successfully, please restart the APP"),
+            "The Language is updated successfully"),
         "lao": MessageLookupByLibrary.simpleMessage("Lao"),
         "lastName": MessageLookupByLibrary.simpleMessage("Last Name"),
         "lastNameIsRequired": MessageLookupByLibrary.simpleMessage(
@@ -554,6 +572,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "latestProducts":
             MessageLookupByLibrary.simpleMessage("Latest Products"),
         "layout": MessageLookupByLibrary.simpleMessage("Layouts"),
+        "lightTheme": MessageLookupByLibrary.simpleMessage("Light Theme"),
         "link": MessageLookupByLibrary.simpleMessage("Link"),
         "listBannerType":
             MessageLookupByLibrary.simpleMessage("List Banner Type"),
@@ -564,7 +583,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "loading": MessageLookupByLibrary.simpleMessage("Loading..."),
         "loadingLink": MessageLookupByLibrary.simpleMessage("Loading link..."),
         "location": MessageLookupByLibrary.simpleMessage("Location"),
-        "login": MessageLookupByLibrary.simpleMessage("LogIn"),
+        "login": MessageLookupByLibrary.simpleMessage("Login"),
         "loginCanceled":
             MessageLookupByLibrary.simpleMessage("The login is cancel"),
         "loginErrorServiceProvider": m11,
@@ -602,6 +621,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "momentAgo": MessageLookupByLibrary.simpleMessage("a moment ago"),
         "monthsAgo": m14,
         "more": MessageLookupByLibrary.simpleMessage("...more"),
+        "moreFromStore": m31,
         "moreInformation":
             MessageLookupByLibrary.simpleMessage("More information"),
         "morning": MessageLookupByLibrary.simpleMessage("Morning"),
@@ -628,6 +648,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, the blog seems no longer exist"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "No camera permission is granted. Please grant it in your device\'s Settings."),
         "noData": MessageLookupByLibrary.simpleMessage("No more Data"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("No favourites yet."),
@@ -830,7 +852,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Printer Selection"),
         "printing": MessageLookupByLibrary.simpleMessage("Printing..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Privacy Policy"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("Privacy & Terms"),
         "private": MessageLookupByLibrary.simpleMessage("Private"),
         "product": MessageLookupByLibrary.simpleMessage("Product"),
         "productAdded":
@@ -899,6 +921,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Reset Password"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Reset Your Password"),
+        "results": MessageLookupByLibrary.simpleMessage("Results"),
         "review": MessageLookupByLibrary.simpleMessage("preview"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Review Approval"),
@@ -1012,6 +1035,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "stock": MessageLookupByLibrary.simpleMessage("Stock"),
         "stockQuantity": MessageLookupByLibrary.simpleMessage("Stock Quantity"),
         "stop": MessageLookupByLibrary.simpleMessage("Stop"),
+        "store": MessageLookupByLibrary.simpleMessage("Store"),
         "storeAddress": MessageLookupByLibrary.simpleMessage("Shop Address"),
         "storeBanner": MessageLookupByLibrary.simpleMessage("Banner"),
         "storeBrand": MessageLookupByLibrary.simpleMessage("Store Brand"),
@@ -1155,8 +1179,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("We Found Blog(s)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "We need camera access to scan for QR code or Bar code."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
-            "We will send you notifications when new products are available or offers are available. You can always change this setting in the settings."),
+            "We will send you notifications when new products are available or offers are available. You can always turn it off in the settings."),
         "webView": MessageLookupByLibrary.simpleMessage("Web View"),
         "week": m27,
         "welcome": MessageLookupByLibrary.simpleMessage("Welcome"),
diff --git a/lib/generated/intl/messages_es.dart b/lib/generated/intl/messages_es.dart
index 73a6e839..d040cab9 100644
--- a/lib/generated/intl/messages_es.dart
+++ b/lib/generated/intl/messages_es.dart
@@ -148,6 +148,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("Todos los productos"),
         "allow": MessageLookupByLibrary.simpleMessage("permitir"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "¿Permitir acceso a la cámara?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Casi agotado"),
         "amount": MessageLookupByLibrary.simpleMessage("Cantidad"),
         "anyAttr": m0,
@@ -333,6 +335,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("NOTA AL CLIENTE"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("checo"),
+        "danish": MessageLookupByLibrary.simpleMessage("danés"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema Oscuro"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Tablero"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Vacío"),
@@ -499,9 +502,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galeria"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Ajustes Generales"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Generando enlace..."),
         "german": MessageLookupByLibrary.simpleMessage("Aleman"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Obtener Notificaciones"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("¡Ser notificado!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Obtener enlace de contraseña"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Empezar"),
@@ -539,6 +545,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("húngaro"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungaro"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Acepto los"),
+        "imIn": MessageLookupByLibrary.simpleMessage("estoy dentro"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Característica de imagen"),
         "imageGallery":
@@ -664,6 +671,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ningún elemento del historial anterior"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "\nOpps, el blog parece que ya no existe"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "No se concede ningún permiso de cámara. Concédelo en la configuración de tu dispositivo."),
         "noData": MessageLookupByLibrary.simpleMessage("Sin Datos"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("No hay favoritos todavía"),
@@ -879,7 +888,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Impresión..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Política de privacidad"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Términos y privacidad"),
         "private": MessageLookupByLibrary.simpleMessage("Privado"),
         "product": MessageLookupByLibrary.simpleMessage("Producto"),
         "productAdded":
@@ -956,6 +966,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Restablecer la contraseña"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Restablecer su contraseña"),
+        "results": MessageLookupByLibrary.simpleMessage("Resultados"),
         "review": MessageLookupByLibrary.simpleMessage("Reseña"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Aprobación de revisión"),
@@ -1239,6 +1250,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Encontramos Blog (s)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Necesitamos acceso a la cámara para escanear el código QR o el código de barras."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Le enviaremos notificaciones cuando haya nuevos productos disponibles u ofertas disponibles. Siempre puede cambiar esta configuración en la configuración."),
         "webView": MessageLookupByLibrary.simpleMessage("Vista web"),
diff --git a/lib/generated/intl/messages_fa.dart b/lib/generated/intl/messages_fa.dart
index 76b6f90c..94806d1e 100644
--- a/lib/generated/intl/messages_fa.dart
+++ b/lib/generated/intl/messages_fa.dart
@@ -144,6 +144,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("آخرین فروش"),
         "allProducts": MessageLookupByLibrary.simpleMessage("همه محصولات"),
         "allow": MessageLookupByLibrary.simpleMessage("اجازه"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "به دوربین اجازه دسترسی داده شود؟"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("آخرین تعداد"),
         "amount": MessageLookupByLibrary.simpleMessage("میزان"),
         "anyAttr": m0,
@@ -322,6 +324,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("یادداشت مشتری"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("کشور چک"),
+        "danish": MessageLookupByLibrary.simpleMessage("دانمارکی"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("حالت شب"),
         "dashboard": MessageLookupByLibrary.simpleMessage("داشبورد"),
         "dataEmpty":
@@ -478,9 +481,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("نام و نام خانوادگی"),
         "gallery": MessageLookupByLibrary.simpleMessage("گالری"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("تنظیمات عمومی"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage("ایجاد لینک..."),
         "german": MessageLookupByLibrary.simpleMessage("جرمنی"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("دریافت نوتیفیکیشن"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("مطلع شوید!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "لینک رمز عبور را دریافت کنید"),
         "getStarted": MessageLookupByLibrary.simpleMessage("شروع کنید"),
@@ -515,6 +520,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("مجارستانی"),
         "hungary": MessageLookupByLibrary.simpleMessage("هنگری"),
         "iAgree": MessageLookupByLibrary.simpleMessage("من قبول دارم "),
+        "imIn": MessageLookupByLibrary.simpleMessage("من هستم"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("ویژگی تصویر"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("گالری عکس ها"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("شبکه تصویر"),
@@ -630,6 +636,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "هیچ مورد ذخیره شده ای وجود ندارد"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "با عرض پوزش ، به نظر می رسد اخبار دیگر در دسترس نیست"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "هیچ مجوز دوربین داده نمی شود. لطفاً آن را در تنظیمات دستگاه خود اعطا کنید."),
         "noData": MessageLookupByLibrary.simpleMessage("خالی "),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("هیچ علاقمندی ثتب نشده"),
@@ -907,6 +915,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ایجاد رمز عبور جدید"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("تنظیم مجدد رمز عبور"),
+        "results": MessageLookupByLibrary.simpleMessage("نتایج"),
         "review": MessageLookupByLibrary.simpleMessage("جدید خرید"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("تأیید بازبینی"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
@@ -1165,6 +1174,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("وبلاگ (ها) را پیدا کردیم"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "برای اسکن کد QR یا بارکد به دوربین نیاز داریم."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "هنگامی که محصولات جدید در دسترس هستند یا پیشنهادات در دسترس هستند، اعلان هایی را برای شما ارسال می کنیم. همیشه می توانید این تنظیم را در تنظیمات تغییر دهید."),
         "webView": MessageLookupByLibrary.simpleMessage("نمای وب"),
diff --git a/lib/generated/intl/messages_fi.dart b/lib/generated/intl/messages_fi.dart
index ceb80f98..54bad609 100644
--- a/lib/generated/intl/messages_fi.dart
+++ b/lib/generated/intl/messages_fi.dart
@@ -143,6 +143,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Viimeisin myynti"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Kaikki tuotteet"),
         "allow": MessageLookupByLibrary.simpleMessage("Sallia"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Sallitaanko kameran käyttöoikeus?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Melkein loppuunmyyty"),
         "amount": MessageLookupByLibrary.simpleMessage("Määrä"),
@@ -326,6 +328,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Asiakkaan huomautus"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("Tanskan kieli"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tumma teema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("kojelauta"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Tiedot tyhjät"),
@@ -487,9 +490,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("galleria"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Yleinen asetus"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Luodaan linkkiä..."),
         "german": MessageLookupByLibrary.simpleMessage("Saksan kieli"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Saada ilmoitus"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Saat ilmoituksen!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Hae salasanalinkki"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Aloittaa"),
@@ -524,6 +531,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Unkarin kieli"),
         "hungary": MessageLookupByLibrary.simpleMessage("Unkarin kieli"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Olen samaa mieltä"),
+        "imIn": MessageLookupByLibrary.simpleMessage("olen mukana"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Kuvaominaisuus"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("kuvagalleria"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Kuvaverkko"),
@@ -640,6 +648,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Ei historiaa"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Hups, blogia ei näytä enää olevan"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Kameralupaa ei myönnetä. Anna se laitteesi asetuksista."),
         "noData": MessageLookupByLibrary.simpleMessage("Ei enää tietoja"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Ei vielä suosikkeja."),
@@ -850,7 +860,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Tulostus ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Tietosuojakäytäntö"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("YKSITYISYYS JA KÄYTTÖEHDOT"),
         "private": MessageLookupByLibrary.simpleMessage("yksityinen"),
         "product": MessageLookupByLibrary.simpleMessage("Tuote"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Tuote lisätään"),
@@ -921,6 +932,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nollaa salasana"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Nollaa salasana"),
+        "results": MessageLookupByLibrary.simpleMessage("tulokset"),
         "review": MessageLookupByLibrary.simpleMessage("esikatselu"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Tarkista hyväksyntä"),
@@ -1182,6 +1194,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Löysimme blogi (t)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Tarvitsemme kameran pääsyn QR-koodin tai viivakoodin skannaamiseen."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Lähetämme sinulle ilmoituksen, kun uusia tuotteita on saatavilla tai tarjouksia on saatavilla. Voit aina muuttaa tätä asetusta asetuksista."),
         "webView": MessageLookupByLibrary.simpleMessage("Web -näkymä"),
diff --git a/lib/generated/intl/messages_fr.dart b/lib/generated/intl/messages_fr.dart
index c67d33ff..ef9bd460 100644
--- a/lib/generated/intl/messages_fr.dart
+++ b/lib/generated/intl/messages_fr.dart
@@ -30,11 +30,11 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m4(total) => "~${total} km";
 
-  static String m5(timeLeft) => "Ends in ${timeLeft}";
+  static String m5(timeLeft) => "Se termine dans ${timeLeft}";
 
   static String m6(captcha) => "Saisissez ${captcha} pour confirmer :";
 
-  static String m7(message) => "Error: ${message}";
+  static String m7(message) => "Erreur: ${message}";
 
   static String m8(time) => "Expirant dans ${time}";
 
@@ -57,7 +57,7 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m17(total) => "Qté: ${total}";
 
-  static String m18(percent) => "Vente ${percent} %";
+  static String m18(percent) => "Remise ${percent} %";
 
   static String m19(second) => "il y a ${second} secondes";
 
@@ -70,7 +70,7 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m23(date) => "Valable jusqu\'au ${date}";
 
-  static String m24(message) => "Warning: ${message}";
+  static String m24(message) => "Avertissement: ${message}";
 
   static String m25(default_currency) =>
       "La devise actuellement sélectionnée n\'est pas disponible pour la fonctionnalité Portefeuille, veuillez la remplacer par ${default_currency}";
@@ -147,7 +147,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Dernières ventes"),
         "allProducts":
             MessageLookupByLibrary.simpleMessage("Tous les produits"),
-        "allow": MessageLookupByLibrary.simpleMessage("permettre"),
+        "allow": MessageLookupByLibrary.simpleMessage("C\'est Parfait"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Autoriser l\'accès à la caméra ?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Presque épuisé"),
         "amount": MessageLookupByLibrary.simpleMessage("Montant"),
         "anyAttr": m0,
@@ -252,7 +254,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "checkConfirmLink": MessageLookupByLibrary.simpleMessage(
             "Vérifiez votre e-mail pour le lien de confirmation"),
         "checking": MessageLookupByLibrary.simpleMessage("Vérification..."),
-        "checkout": MessageLookupByLibrary.simpleMessage("Caisse"),
+        "checkout": MessageLookupByLibrary.simpleMessage("Commander"),
         "chinese": MessageLookupByLibrary.simpleMessage("Chinois"),
         "chineseSimplified":
             MessageLookupByLibrary.simpleMessage("Chinois simplifié)"),
@@ -275,7 +277,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "city": MessageLookupByLibrary.simpleMessage("Ville"),
         "cityIsRequired": MessageLookupByLibrary.simpleMessage(
             "Le champ ville est obligatoire"),
-        "clear": MessageLookupByLibrary.simpleMessage("Clear"),
+        "clear": MessageLookupByLibrary.simpleMessage("Vider"),
         "clearCart": MessageLookupByLibrary.simpleMessage("Vider le panier"),
         "close": MessageLookupByLibrary.simpleMessage("Fermer"),
         "closeNow": MessageLookupByLibrary.simpleMessage("Fermé maintenant"),
@@ -295,7 +297,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Êtes-vous sûr de vouloir vider le panier?"),
         "confirmDeleteItem": MessageLookupByLibrary.simpleMessage(
             "Voulez-vous vraiment supprimer cet élément?"),
-        "connect": MessageLookupByLibrary.simpleMessage("Relier"),
+        "connect": MessageLookupByLibrary.simpleMessage("Se Connecter"),
         "contact": MessageLookupByLibrary.simpleMessage("Contact"),
         "content": MessageLookupByLibrary.simpleMessage("Contenu"),
         "continueToPayment":
@@ -337,6 +339,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Note du client"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("tchèque"),
+        "danish": MessageLookupByLibrary.simpleMessage("danois"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Thème sombre"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Tableau de bord"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -353,7 +356,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Date de cloture"),
         "daysAgo": m3,
         "debit": MessageLookupByLibrary.simpleMessage("Débit"),
-        "decline": MessageLookupByLibrary.simpleMessage("Déclin"),
+        "decline": MessageLookupByLibrary.simpleMessage("Non, Merci"),
         "delete": MessageLookupByLibrary.simpleMessage("Effacer"),
         "deleteAccount":
             MessageLookupByLibrary.simpleMessage("Supprimer le compte"),
@@ -387,7 +390,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Voulez-vous quitter une application"),
         "doYouWantToLogout": MessageLookupByLibrary.simpleMessage(
             "Voulez-vous vous déconnecter?"),
-        "done": MessageLookupByLibrary.simpleMessage("fait"),
+        "done": MessageLookupByLibrary.simpleMessage("D\'accord"),
         "dontHaveAccount":
             MessageLookupByLibrary.simpleMessage("Vous n\'avez pas de compte?"),
         "download": MessageLookupByLibrary.simpleMessage("télécharger"),
@@ -499,9 +502,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("galerie"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Réglage général"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Génération du lien..."),
         "german": MessageLookupByLibrary.simpleMessage("allemand"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Obtenir une notification"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Recevez une notification!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Obtenir le lien du mot de passe"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Commencer"),
@@ -543,6 +550,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree":
             MessageLookupByLibrary.simpleMessage("Je suis d\'accord avec"),
+        "imIn": MessageLookupByLibrary.simpleMessage("j\'en suis"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Fonction d\'image"),
         "imageGallery":
@@ -671,7 +679,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Aucun élément de l\'historique de retour"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, le blog ne semble plus exister"),
-        "noData": MessageLookupByLibrary.simpleMessage("Plus de données"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Aucune autorisation de caméra n\'est accordée. Veuillez l\'accorder dans les paramètres de votre appareil."),
+        "noData": MessageLookupByLibrary.simpleMessage("Pas de données"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Pas encore de favoris."),
         "noFileToDownload": MessageLookupByLibrary.simpleMessage(
@@ -704,7 +714,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "notifications":
             MessageLookupByLibrary.simpleMessage("Les notifications"),
         "notifyLatestOffer": MessageLookupByLibrary.simpleMessage(
-            "Notifier les dernières offres et la disponibilité des produits"),
+            "Recevez les dernières offres et les ventes flash!"),
         "ofThisProduct":
             MessageLookupByLibrary.simpleMessage("of this product"),
         "ok": MessageLookupByLibrary.simpleMessage("OK"),
@@ -752,7 +762,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "orderStatusProcessed": MessageLookupByLibrary.simpleMessage("Traité"),
         "orderStatusProcessing":
             MessageLookupByLibrary.simpleMessage("Traitement"),
-        "orderStatusRefunded": MessageLookupByLibrary.simpleMessage("Refunded"),
+        "orderStatusRefunded":
+            MessageLookupByLibrary.simpleMessage("Remboursée"),
         "orderStatusReversed": MessageLookupByLibrary.simpleMessage("Renversé"),
         "orderStatusShipped": MessageLookupByLibrary.simpleMessage("expédié"),
         "orderStatusVoided": MessageLookupByLibrary.simpleMessage("Annulé"),
@@ -891,7 +902,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Impression..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Politique de confidentialité"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "Confidentialité et modalités"),
         "private": MessageLookupByLibrary.simpleMessage("privé"),
         "product": MessageLookupByLibrary.simpleMessage("Produit"),
         "productAdded":
@@ -910,13 +922,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Tirez pour charger plus"),
         "qtyTotal": m17,
-        "rate": MessageLookupByLibrary.simpleMessage("taux"),
+        "rate": MessageLookupByLibrary.simpleMessage("Evaluer"),
         "rateTheApp":
             MessageLookupByLibrary.simpleMessage("Noter l\'application"),
         "rateThisApp":
             MessageLookupByLibrary.simpleMessage("Noter cette application"),
         "rateThisAppDescription": MessageLookupByLibrary.simpleMessage(
-            "Si vous aimez cette application, veuillez prendre un peu de votre temps pour l\'examiner! \nCela nous aide vraiment et cela ne devrait pas vous prendre plus d\'une minute."),
+            "Si vous aimez cette application, veuillez prendre un peu de votre temps pour la noter! \nCela nous aide vraiment et cela ne devrait pas vous prendre plus d\'une minute."),
         "rating": MessageLookupByLibrary.simpleMessage("évaluation"),
         "ratingFirst": MessageLookupByLibrary.simpleMessage(
             "Veuillez évaluer avant d\'envoyer votre commentaire"),
@@ -964,6 +976,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Réinitialiser le mot de passe"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Réinitialiser votre mot de passe"),
+        "results": MessageLookupByLibrary.simpleMessage("Résultats"),
         "review": MessageLookupByLibrary.simpleMessage("revue"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Revoir l\'approbation"),
@@ -1068,7 +1081,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "signup": MessageLookupByLibrary.simpleMessage("S\'inscrire"),
         "simple": MessageLookupByLibrary.simpleMessage("Facile"),
         "size": MessageLookupByLibrary.simpleMessage("Taille"),
-        "skip": MessageLookupByLibrary.simpleMessage("fr-Skip"),
+        "skip": MessageLookupByLibrary.simpleMessage("Passer"),
         "sku": MessageLookupByLibrary.simpleMessage("SKU"),
         "slovak": MessageLookupByLibrary.simpleMessage("slovaque"),
         "sold": m21,
@@ -1117,11 +1130,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "storeVacation":
             MessageLookupByLibrary.simpleMessage("Vacances en magasin"),
         "stores": MessageLookupByLibrary.simpleMessage("Restaurants"),
-        "street": MessageLookupByLibrary.simpleMessage("rue"),
-        "street2": MessageLookupByLibrary.simpleMessage("Rue # 2"),
+        "street": MessageLookupByLibrary.simpleMessage("Addresse"),
+        "street2": MessageLookupByLibrary.simpleMessage("Addresse"),
         "streetIsRequired": MessageLookupByLibrary.simpleMessage(
             "Le champ du nom de la rue est obligatoire"),
-        "streetName": MessageLookupByLibrary.simpleMessage("Nom de rue"),
+        "streetName": MessageLookupByLibrary.simpleMessage("Addresse"),
         "streetNameApartment":
             MessageLookupByLibrary.simpleMessage("Apartment"),
         "streetNameBlock": MessageLookupByLibrary.simpleMessage("Block"),
@@ -1251,6 +1264,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Blog (s) Nous avons trouvé"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Nous avons besoin d\'un accès à la caméra pour scanner le code QR ou le code à barres."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Nous vous enverrons des notifications lorsque de nouveaux produits seront disponibles ou que des offres seront disponibles. Vous pouvez toujours modifier ce paramètre dans les paramètres."),
         "webView": MessageLookupByLibrary.simpleMessage("Vue Web"),
diff --git a/lib/generated/intl/messages_he.dart b/lib/generated/intl/messages_he.dart
index c65b0422..5a56e676 100644
--- a/lib/generated/intl/messages_he.dart
+++ b/lib/generated/intl/messages_he.dart
@@ -140,6 +140,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("מכירות אחרונות"),
         "allProducts": MessageLookupByLibrary.simpleMessage("כל המוצרים"),
         "allow": MessageLookupByLibrary.simpleMessage("להתיר"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("לאפשר גישה למצלמה?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("כמעט אזל"),
         "amount": MessageLookupByLibrary.simpleMessage("כמות"),
         "anyAttr": m0,
@@ -309,6 +311,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("הערת לקוח"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("צ\'כית"),
+        "danish": MessageLookupByLibrary.simpleMessage("דנית"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("נושא כהה"),
         "dashboard": MessageLookupByLibrary.simpleMessage("DASHBOARD"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("נתונים ריקים"),
@@ -459,8 +462,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("שם מלא"),
         "gallery": MessageLookupByLibrary.simpleMessage("גלריה"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("הגדרה כללית"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage("יוצר קישור..."),
         "german": MessageLookupByLibrary.simpleMessage("גרמני"),
         "getNotification": MessageLookupByLibrary.simpleMessage("קבל התראה"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("קבל הודעה!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("קבל קישור סיסמא"),
         "getStarted": MessageLookupByLibrary.simpleMessage("להתחיל"),
@@ -491,6 +496,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("הונגרית"),
         "hungary": MessageLookupByLibrary.simpleMessage("הונגריה"),
         "iAgree": MessageLookupByLibrary.simpleMessage("אני מסכים עם"),
+        "imIn": MessageLookupByLibrary.simpleMessage("אני בפנים"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("תכונת תמונה"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("גלריית תמונות"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("רשת תמונה"),
@@ -600,6 +606,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("אין פריט היסטורי גב"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, נראה שהבלוג כבר לא קיים"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "לא ניתנת הרשאה למצלמה. אנא הענק זאת בהגדרות של המכשיר שלך."),
         "noData": MessageLookupByLibrary.simpleMessage("אין יותר נתונים"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("עדיין אין מועדפים."),
@@ -795,7 +803,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("בחירת מדפסת"),
         "printing": MessageLookupByLibrary.simpleMessage("הַדפָּסָה..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("מדיניות פרטיות"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("פרטיות ותנאים"),
         "private": MessageLookupByLibrary.simpleMessage("פרטי"),
         "product": MessageLookupByLibrary.simpleMessage("מוצר"),
         "productAdded": MessageLookupByLibrary.simpleMessage("המוצר נוסף"),
@@ -861,6 +869,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("אפס סיסמה"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("אפס את הסיסמה שלך"),
+        "results": MessageLookupByLibrary.simpleMessage("תוצאות"),
         "review": MessageLookupByLibrary.simpleMessage("תצוגה מקדימה"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("אישור סקירה"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
@@ -1094,6 +1103,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("מצאנו בלוגים"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "אנחנו צריכים גישה למצלמה כדי לסרוק קוד QR או ברקוד."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "אנו נשלח לך הודעות כאשר מוצרים חדשים יהיו זמינים או הצעות זמינות. אתה תמיד יכול לשנות הגדרה זו בהגדרות."),
         "webView": MessageLookupByLibrary.simpleMessage("תצוגת אינטרנט"),
diff --git a/lib/generated/intl/messages_hi.dart b/lib/generated/intl/messages_hi.dart
index 3003411c..d59445c3 100644
--- a/lib/generated/intl/messages_hi.dart
+++ b/lib/generated/intl/messages_hi.dart
@@ -143,6 +143,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("नवीनतम बिक्री"),
         "allProducts": MessageLookupByLibrary.simpleMessage("सारे उत्पाद"),
         "allow": MessageLookupByLibrary.simpleMessage("अनुमति"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("कैमरा ऐक्सेस की अनुमति दें?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("लगभग बिक गया"),
         "amount": MessageLookupByLibrary.simpleMessage("रकम"),
         "anyAttr": m0,
@@ -320,6 +322,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("ग्राहक नोट"),
         "cvv": MessageLookupByLibrary.simpleMessage("सीवीवी"),
         "czech": MessageLookupByLibrary.simpleMessage("चेक"),
+        "danish": MessageLookupByLibrary.simpleMessage("दानिश"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("डार्क थीम"),
         "dashboard": MessageLookupByLibrary.simpleMessage("डैशबोर्ड"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("डेटा खाली"),
@@ -481,9 +484,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("गेलरी"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("सामान्य सेटिंग"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage(
+            "लिंक जनरेट किया जा रहा है..."),
         "german": MessageLookupByLibrary.simpleMessage("जर्मन"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("अधिसूचना प्राप्त"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("सूचित किया गया!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("पासवर्ड लिंक प्राप्त करें"),
         "getStarted": MessageLookupByLibrary.simpleMessage("शुरू हो जाओ"),
@@ -519,6 +525,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("हंगेरी"),
         "hungary": MessageLookupByLibrary.simpleMessage("हंगरी"),
         "iAgree": MessageLookupByLibrary.simpleMessage("मैं सहमत हूँ"),
+        "imIn": MessageLookupByLibrary.simpleMessage("मैं भी शामिल"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("छवि सुविधा"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("छवि गैलरी"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("छवि नेटवर्क"),
@@ -634,6 +641,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("कोई वापस इतिहास आइटम नहीं"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "विरोध, लगता है कि ब्लॉग अब मौजूद नहीं है"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "कोई कैमरा अनुमति नहीं दी जाती है। कृपया इसे अपने डिवाइस की सेटिंग में प्रदान करें।"),
         "noData": MessageLookupByLibrary.simpleMessage("कोई और अधिक डेटा"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("अभी तक कोई पसंदीदा नहीं।"),
@@ -836,7 +845,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("प्रिंटर चयन"),
         "printing": MessageLookupByLibrary.simpleMessage("मुद्रण..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("गोपनीयता नीति"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("गोपनीयता व शर्तें"),
         "private": MessageLookupByLibrary.simpleMessage("निजी"),
         "product": MessageLookupByLibrary.simpleMessage("उत्पाद"),
         "productAdded":
@@ -909,6 +919,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("पासवर्ड रीसेट"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("अपना पासवर्ड रीसेट करें"),
+        "results": MessageLookupByLibrary.simpleMessage("परिणाम"),
         "review": MessageLookupByLibrary.simpleMessage("पूर्वावलोकन"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("अनुमोदन की समीक्षा करें"),
@@ -1170,6 +1181,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("हमें ब्लॉग मिला"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "क्यूआर कोड या बार कोड को स्कैन करने के लिए हमें कैमरा एक्सेस की आवश्यकता होती है।"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "नए उत्पाद उपलब्ध होने या ऑफ़र उपलब्ध होने पर हम आपको सूचनाएं भेजेंगे। आप इस सेटिंग को सेटिंग में कभी भी बदल सकते हैं."),
         "webView": MessageLookupByLibrary.simpleMessage("वेब दृश्य"),
diff --git a/lib/generated/intl/messages_hu.dart b/lib/generated/intl/messages_hu.dart
index f9469f4e..06da9b50 100644
--- a/lib/generated/intl/messages_hu.dart
+++ b/lib/generated/intl/messages_hu.dart
@@ -150,6 +150,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Legfrissebb eladások"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Minden termék"),
         "allow": MessageLookupByLibrary.simpleMessage("Lehetővé teszi"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Engedélyezi a kamera hozzáférését?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Szinte elfogyott"),
         "amount": MessageLookupByLibrary.simpleMessage("ÖSSZEG"),
@@ -336,6 +338,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Ügyfél megjegyzése"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("cseh"),
+        "danish": MessageLookupByLibrary.simpleMessage("dán"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Sötét Mód"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Irányítópult"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("NIncs adat"),
@@ -499,9 +502,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Képtár"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Általános Beállítások"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Link generálása..."),
         "german": MessageLookupByLibrary.simpleMessage("Német"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Kérek Értesítést"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Értesítsen!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Kérem a jelszóhoz a hivatkozást"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Fogj neki"),
@@ -539,6 +545,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Magyar"),
         "hungary": MessageLookupByLibrary.simpleMessage("Magyarország"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Egyetértek"),
+        "imIn": MessageLookupByLibrary.simpleMessage("én benne vagyok"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Kép funkció"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Képgaléria"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Képhálózat"),
@@ -661,6 +668,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nincs visszamenő előzmény"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Hát, úgy tűnik, hogy a blog már nem létezik"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Kameraengedélyt nem adnak. Kérjük, adja meg az eszköz beállításaiban."),
         "noData": MessageLookupByLibrary.simpleMessage("Nincs Több adat"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Még nincsenek kedvencek."),
@@ -877,7 +886,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Nyomtatás..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Adatvédelmi irányelvek"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Adatvédelem és feltételek"),
         "private": MessageLookupByLibrary.simpleMessage("Magán"),
         "product": MessageLookupByLibrary.simpleMessage("termek"),
         "productAdded":
@@ -951,6 +961,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Jelszó visszaállítása"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Állítsd vissza a jelszavad"),
+        "results": MessageLookupByLibrary.simpleMessage("Eredmények"),
         "review": MessageLookupByLibrary.simpleMessage("előnézet"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Ellenőrzés jóváhagyása"),
@@ -1226,6 +1237,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Blogot találtunk"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "A QR-kód vagy vonalkód beolvasásához kamera-hozzáférésre van szükségünk."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Értesítést küldünk Önnek, ha új termékek vagy ajánlatok állnak rendelkezésre. Ezt a beállítást bármikor módosíthatja a beállításokban."),
         "webView": MessageLookupByLibrary.simpleMessage("Web nézet"),
diff --git a/lib/generated/intl/messages_id.dart b/lib/generated/intl/messages_id.dart
index 8d212cba..b210a626 100644
--- a/lib/generated/intl/messages_id.dart
+++ b/lib/generated/intl/messages_id.dart
@@ -148,6 +148,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Penjualan Terbaru"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Semua produk"),
         "allow": MessageLookupByLibrary.simpleMessage("Mengizinkan"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Izinkan akses Kamera?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Hampir terjual"),
         "amount": MessageLookupByLibrary.simpleMessage("Jumlah"),
         "anyAttr": m0,
@@ -332,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Catatan pelanggan"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Ceko"),
+        "danish": MessageLookupByLibrary.simpleMessage("Orang Denmark"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema gelap"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dasbor"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -493,9 +496,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galeri"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Pengaturan Umum"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Membuat tautan..."),
         "german": MessageLookupByLibrary.simpleMessage("Jerman"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Dapatkan Notifikasi"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Dapatkan pemberitahuan!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Dapatkan tautan kata sandi"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Memulai"),
@@ -534,6 +541,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Hongaria"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("saya setuju dengan"),
+        "imIn": MessageLookupByLibrary.simpleMessage("saya ikut"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Fitur Gambar"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Galeri Gambar"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Jaringan Gambar"),
@@ -651,6 +659,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, the blog seems no longer exist"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Tidak ada izin kamera yang diberikan. Harap berikan di Pengaturan perangkat Anda."),
         "noData": MessageLookupByLibrary.simpleMessage("Tidak ada lagi data"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Belum ada favorit."),
@@ -862,7 +872,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Pencetakan..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Rahasia pribadi"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privasi & Ketentuan"),
         "private": MessageLookupByLibrary.simpleMessage("Pribadi"),
         "product": MessageLookupByLibrary.simpleMessage("Produk"),
         "productAdded":
@@ -937,6 +948,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Setel Ulang Kata Sandi"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Mereset password Anda"),
+        "results": MessageLookupByLibrary.simpleMessage("Hasil"),
         "review": MessageLookupByLibrary.simpleMessage("Ulasan"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Tinjau Persetujuan"),
@@ -1197,6 +1209,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Kami Menemukan Blog"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Kami membutuhkan akses kamera untuk memindai kode QR atau kode batang."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Kami akan mengirimkan pemberitahuan ketika produk baru tersedia atau penawaran tersedia. Anda selalu dapat mengubah pengaturan ini di pengaturan."),
         "webView": MessageLookupByLibrary.simpleMessage("Tampilan Web"),
diff --git a/lib/generated/intl/messages_it.dart b/lib/generated/intl/messages_it.dart
index b3f76623..8ffc9354 100644
--- a/lib/generated/intl/messages_it.dart
+++ b/lib/generated/intl/messages_it.dart
@@ -148,6 +148,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Ultime vendite"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Tutti i prodotti"),
         "allow": MessageLookupByLibrary.simpleMessage("permettere"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Consenti l\'accesso alla fotocamera?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Quasi esaurito"),
         "amount": MessageLookupByLibrary.simpleMessage("Quantità"),
         "anyAttr": m0,
@@ -333,6 +335,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nota del cliente"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ceco"),
+        "danish": MessageLookupByLibrary.simpleMessage("danese"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema scuro"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Cruscotto"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -492,8 +495,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("galleria"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Impostazioni generali"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage(
+            "Generazione collegamento in corso..."),
         "german": MessageLookupByLibrary.simpleMessage("Tedesco"),
         "getNotification": MessageLookupByLibrary.simpleMessage("Notifiche"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Ricevi una notifica!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Ottieni link password"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Iniziare"),
@@ -531,6 +538,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ungherese"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Sono d\'accordo con"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Sono dentro"),
         "imageFeature": MessageLookupByLibrary.simpleMessage(
             "Caratteristica dell\'immagine"),
         "imageGallery":
@@ -656,6 +664,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, the blog seems no longer exist"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Non viene concessa alcuna autorizzazione alla fotocamera. Concedilo nelle Impostazioni del tuo dispositivo."),
         "noData": MessageLookupByLibrary.simpleMessage("Niente più dati"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Ancora nessuna preferenza"),
@@ -872,7 +882,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Stampa..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("POLITICA SULLA RISERVATEZZA"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Termini e Condizioni"),
         "private": MessageLookupByLibrary.simpleMessage("privato"),
         "product": MessageLookupByLibrary.simpleMessage("Prodotto"),
         "productAdded": MessageLookupByLibrary.simpleMessage(
@@ -949,6 +960,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Reimposta password"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Reimposta la tua password"),
+        "results": MessageLookupByLibrary.simpleMessage("risultati"),
         "review": MessageLookupByLibrary.simpleMessage("Recensione"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage(
             "Approvazione della revisione"),
@@ -1226,6 +1238,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Abbiamo trovato blog"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Abbiamo bisogno dell\'accesso alla fotocamera per scansionare il codice QR o il codice a barre."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Ti invieremo notifiche quando saranno disponibili nuovi prodotti o saranno disponibili offerte. Puoi sempre modificare questa impostazione nelle impostazioni."),
         "webView": MessageLookupByLibrary.simpleMessage("Visualizzazione Web"),
diff --git a/lib/generated/intl/messages_ja.dart b/lib/generated/intl/messages_ja.dart
index edaa5ebc..69762679 100644
--- a/lib/generated/intl/messages_ja.dart
+++ b/lib/generated/intl/messages_ja.dart
@@ -134,6 +134,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("最新の売上高"),
         "allProducts": MessageLookupByLibrary.simpleMessage("すべての製品"),
         "allow": MessageLookupByLibrary.simpleMessage("許可する"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("カメラアクセスを許可しますか？"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("ほぼ完売"),
         "amount": MessageLookupByLibrary.simpleMessage("量"),
         "anyAttr": m0,
@@ -290,6 +292,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("カスタマーノート"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("チェコ語"),
+        "danish": MessageLookupByLibrary.simpleMessage("デンマーク語"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("暗いテーマ"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ダッシュボード"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -431,8 +434,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("フルネーム"),
         "gallery": MessageLookupByLibrary.simpleMessage("ギャラリー"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("一般設定"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("リンクを生成しています..."),
         "german": MessageLookupByLibrary.simpleMessage("ドイツ語"),
         "getNotification": MessageLookupByLibrary.simpleMessage("通知を受け取る"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("通知を受け取ります！"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("パスワードリンクを取得する"),
         "getStarted": MessageLookupByLibrary.simpleMessage("はじめに"),
@@ -464,6 +470,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ハンガリー語"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("私は同意します"),
+        "imIn": MessageLookupByLibrary.simpleMessage("私は入る"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("画像機能"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("イメージギャラリー"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("画像ネットワーク"),
@@ -567,6 +574,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, the blog seems no longer exist"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "カメラの許可は与えられていません。デバイスの設定で付与してください。"),
         "noData": MessageLookupByLibrary.simpleMessage("これ以上のデータはありません"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("まだお気に入りはありません。"),
@@ -755,7 +764,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("プリンタの選択"),
         "printing": MessageLookupByLibrary.simpleMessage("印刷..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("個人情報保護方針"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("プライバシーと利用規約"),
         "private": MessageLookupByLibrary.simpleMessage("非公開"),
         "product": MessageLookupByLibrary.simpleMessage("製品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("製品が追加され"),
@@ -817,6 +826,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("パスワードを再設定する"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("あなたのパスワードをリセット"),
+        "results": MessageLookupByLibrary.simpleMessage("結果"),
         "review": MessageLookupByLibrary.simpleMessage("レビュー"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("レビューの承認"),
         "reviewPendingApproval":
@@ -1035,6 +1045,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("ブログが見つかりました"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QRコードまたはバーコードをスキャンするにはカメラにアクセスする必要があります。"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "新製品が利用可能になったとき、またはオファーが利用可能になったときに通知を送信します。この設定は、設定でいつでも変更できます。"),
         "webView": MessageLookupByLibrary.simpleMessage("Webビュー"),
diff --git a/lib/generated/intl/messages_km.dart b/lib/generated/intl/messages_km.dart
index 5c1d62f5..f57f1864 100644
--- a/lib/generated/intl/messages_km.dart
+++ b/lib/generated/intl/messages_km.dart
@@ -146,6 +146,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("ការលក់ចុងក្រោយ"),
         "allProducts": MessageLookupByLibrary.simpleMessage("ផលិតផលទាំងអស់"),
         "allow": MessageLookupByLibrary.simpleMessage("អនុញ្ញាត"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("អនុញ្ញាតឱ្យចូលប្រើកាមេរ៉ា?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("ជិតលក់អស់ហើយ។"),
         "amount": MessageLookupByLibrary.simpleMessage("ចំនួនទឹកប្រាក់"),
         "anyAttr": m0,
@@ -326,6 +328,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("កំណត់ចំណាំរបស់អតិថិជន"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ឆែក"),
+        "danish": MessageLookupByLibrary.simpleMessage("ដាណឺម៉ាក"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ស្បែកងងឹត"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ផ្ទាំងគ្រប់គ្រង"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ទិន្នន័យទទេ"),
@@ -489,9 +492,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("ឈ្មោះ​ពេញ"),
         "gallery": MessageLookupByLibrary.simpleMessage("វិចិត្រសាល"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("ការកំណត់​ទូទៅ"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("កំពុងបង្កើតតំណ..."),
         "german": MessageLookupByLibrary.simpleMessage("អាឡឺម៉ង់"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("ទទួលបានការជូនដំណឹង"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("ទទួលបានការជូនដំណឹង!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("ទទួលបានតំណពាក្យសម្ងាត់"),
         "getStarted": MessageLookupByLibrary.simpleMessage("ចាប់ផ្តើម"),
@@ -527,6 +534,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ហុងគ្រី"),
         "hungary": MessageLookupByLibrary.simpleMessage("ហុងគ្រី"),
         "iAgree": MessageLookupByLibrary.simpleMessage("ខ្ញុំ​យល់ស្រប​ជាមួយ"),
+        "imIn": MessageLookupByLibrary.simpleMessage("ខ្ញុំចូល"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("លក្ខណៈពិសេសរូបភាព"),
         "imageGallery":
@@ -648,6 +656,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "មិនមានប្រវត្តិទំនិញត្រឡប់មកវិញទេ។"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "អូ៎ ប្លុកហាក់ដូចជាលែងមានទៀតហើយ"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "គ្មានការអនុញ្ញាតពីកាមេរ៉ាទេ។ សូមផ្តល់វានៅក្នុងការកំណត់ឧបករណ៍របស់អ្នក។"),
         "noData": MessageLookupByLibrary.simpleMessage("មិនមានទិន្នន័យទៀតទេ"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage(
             "មិនទាន់មានចំណូលចិត្តនៅឡើយទេ។"),
@@ -876,7 +886,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("ការបោះពុម្ព..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("គោលការណ៍​ភាព​ឯកជន"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("ឯកជនភាព & លក្ខខណ្ឌ"),
         "private": MessageLookupByLibrary.simpleMessage("ឯកជន"),
         "product": MessageLookupByLibrary.simpleMessage("ផលិតផល"),
         "productAdded":
@@ -949,6 +960,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("កំណត់ពាក្យសម្ងាត់ឡើងវិញ"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "កំណត់ពាក្យសម្ងាត់របស់អ្នកឡើងវិញ"),
+        "results": MessageLookupByLibrary.simpleMessage("លទ្ធផល"),
         "review": MessageLookupByLibrary.simpleMessage("ការមើលឡើងវិញ"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("ពិនិត្យការអនុម័ត"),
@@ -1209,6 +1221,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("យើងបានរកឃើញប្លុក"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "យើង​ត្រូវ​ការ​ការ​ចូល​ប្រើ​កាមេរ៉ា​ដើម្បី​ស្កេន​រក​កូដ QR ឬ Bar code។"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "យើង​នឹង​ផ្ញើ​ការ​ជូន​ដំណឹង​ទៅ​អ្នក​នៅ​ពេល​ដែល​មាន​ផលិតផល​ថ្មី​ឬ​ការ​ផ្តល់​ជូន​។ អ្នកតែងតែអាចផ្លាស់ប្តូរការកំណត់នេះនៅក្នុងការកំណត់។"),
         "webView": MessageLookupByLibrary.simpleMessage("មើលក្នុងវេបសារ"),
diff --git a/lib/generated/intl/messages_ko.dart b/lib/generated/intl/messages_ko.dart
index 6f2e2fbd..3f35170f 100644
--- a/lib/generated/intl/messages_ko.dart
+++ b/lib/generated/intl/messages_ko.dart
@@ -136,6 +136,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("최신 판매"),
         "allProducts": MessageLookupByLibrary.simpleMessage("모든 상품"),
         "allow": MessageLookupByLibrary.simpleMessage("허용하다"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("카메라 액세스를 허용하시겠습니까?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("거의 매진"),
         "amount": MessageLookupByLibrary.simpleMessage("양"),
         "anyAttr": m0,
@@ -288,6 +290,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("고객 메모"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("체코 사람"),
+        "danish": MessageLookupByLibrary.simpleMessage("덴마크 말"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("어두운 테마"),
         "dashboard": MessageLookupByLibrary.simpleMessage("계기반"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("데이터가 비어 있음"),
@@ -429,8 +432,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("성명"),
         "gallery": MessageLookupByLibrary.simpleMessage("갤러리"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("일반 설정"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage("링크 생성 중..."),
         "german": MessageLookupByLibrary.simpleMessage("독일 사람"),
         "getNotification": MessageLookupByLibrary.simpleMessage("알림 받기"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("알림 받기!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage("비밀번호 링크 받기"),
         "getStarted": MessageLookupByLibrary.simpleMessage("시작하다"),
         "goBack": MessageLookupByLibrary.simpleMessage("돌아가"),
@@ -460,6 +465,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("헝가리 인"),
         "hungary": MessageLookupByLibrary.simpleMessage("헝가리"),
         "iAgree": MessageLookupByLibrary.simpleMessage("동의합니다"),
+        "imIn": MessageLookupByLibrary.simpleMessage("나는 ~ 안에있다"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("이미지 기능"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("이미지 갤러리"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("이미지 네트워크"),
@@ -561,6 +567,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("뒤로 이력 항목 없음"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "죄송합니다. 블로그가 더 이상 존재하지 않는 것 같습니다."),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "카메라 권한이 부여되지 않았습니다. 장치의 설정에서 허용하십시오."),
         "noData": MessageLookupByLibrary.simpleMessage("더 이상 데이터가 없습니다"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("아직 즐겨 찾기가 없습니다."),
@@ -738,7 +746,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("프린터 선택"),
         "printing": MessageLookupByLibrary.simpleMessage("인쇄..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("개인 정보 정책"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("개인정보 및 약관"),
         "private": MessageLookupByLibrary.simpleMessage("은밀한"),
         "product": MessageLookupByLibrary.simpleMessage("생성물"),
         "productAdded": MessageLookupByLibrary.simpleMessage("제품이 추가됩니다"),
@@ -798,6 +806,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("다시 놓기"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("암호를 재설정"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("비밀번호를 재설정"),
+        "results": MessageLookupByLibrary.simpleMessage("결과"),
         "review": MessageLookupByLibrary.simpleMessage("시사"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("승인 검토"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
@@ -1011,6 +1020,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("블로그를 찾았습니다."),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR 코드 또는 바코드를 스캔하려면 카메라 액세스 권한이 필요합니다."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "새 제품이 출시되거나 제안이 있을 때 알림을 보내드립니다. 설정에서 이 설정을 언제든지 변경할 수 있습니다."),
         "webView": MessageLookupByLibrary.simpleMessage("웹보기"),
diff --git a/lib/generated/intl/messages_lo.dart b/lib/generated/intl/messages_lo.dart
index ea7a7c5d..538c9b49 100644
--- a/lib/generated/intl/messages_lo.dart
+++ b/lib/generated/intl/messages_lo.dart
@@ -145,6 +145,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("ຜະລິດຕະພັນທັງຫມົດ"),
         "allow": MessageLookupByLibrary.simpleMessage("ອະນຸຍາດ"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "ອະນຸຍາດໃຫ້ເຂົ້າເຖິງກ້ອງຖ່າຍຮູບບໍ?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("ສິນຄ້າໃກ້ໝົດ"),
         "amount": MessageLookupByLibrary.simpleMessage("ຈໍານວນ"),
         "anyAttr": m0,
@@ -317,6 +319,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("ບັນທຶກລູກຄ້າ"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ພາສາເຊັກ"),
+        "danish": MessageLookupByLibrary.simpleMessage("ເດນມາກ"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ຮູບແບບສີດຳ"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ໜ້າຫຼັກ"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ຂໍ້ມູນຫວ່າງເປົ່າ"),
@@ -475,9 +478,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("ຄັງຮູບພາບ"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("ການຕັ້ງຄ່າທົ່ວໄປ"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("ກຳລັງສ້າງລິ້ງ..."),
         "german": MessageLookupByLibrary.simpleMessage("ພາສາເຢຍລະມັນ"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("ໄດ້ຮັບການແຈ້ງເຕືອນ"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("ໄດ້ຮັບການແຈ້ງເຕືອນ!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("ໄດ້ຮັບລິ້ງລະຫັດຜ່ານ"),
         "getStarted": MessageLookupByLibrary.simpleMessage("ເລີ່ມຕົ້ນ"),
@@ -512,6 +519,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ພາສາຮັງກາຣີ"),
         "hungary": MessageLookupByLibrary.simpleMessage("ຮັງກາຣີ"),
         "iAgree": MessageLookupByLibrary.simpleMessage("ຂ້າພະເຈົ້າຍອມຮັບ"),
+        "imIn": MessageLookupByLibrary.simpleMessage("ຂ້ອຍຢູ່ໃນ"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("ຄຸນນະສົມບັດຮູບພາບ"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("ຄັງຮູບພາບ"),
@@ -629,6 +637,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ບໍ່ມີລາຍການປະຫວັດສາດສັ່ງຊື້"),
         "noBlog":
             MessageLookupByLibrary.simpleMessage("ບໍ່ມີບລັອກທີ່ທ່ານຄົນຫາ"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ມີການອະນຸຍາດກ້ອງຖ່າຍຮູບ. ກະລຸນາໃຫ້ມັນຢູ່ໃນການຕັ້ງຄ່າອຸປະກອນຂອງທ່ານ."),
         "noData": MessageLookupByLibrary.simpleMessage("ບໍ່ມີຂໍ້ມູນ"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("ບໍ່ມີລາຍການທີ່ມັກເທື່ອ."),
@@ -841,7 +851,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("ການພິມ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("ນະໂຍບາຍຄວາມເປັນສ່ວນຕົວ"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("ຄວາມເປັນສ່ວນຕົວ & ເງື່ອນໄຂ"),
         "private": MessageLookupByLibrary.simpleMessage("ສ່ວນຕົວ"),
         "product": MessageLookupByLibrary.simpleMessage("ຜະລິດຕະພັນ"),
         "productAdded":
@@ -911,6 +922,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ຕັ້ງລະຫັດຜ່ານໃໝ່"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("ຕັ້ງລະຫັດຜ່ານຂອງທ່ານ"),
+        "results": MessageLookupByLibrary.simpleMessage("ຜົນໄດ້ຮັບ"),
         "review": MessageLookupByLibrary.simpleMessage("ເບິ່ງຕົວຢ່າງ"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("ອະນຸມັດ"),
         "reviewPendingApproval":
@@ -1157,6 +1169,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("ພວກເຮົາພົບເຫັນ Blog(s)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "ພວກເຮົາຕ້ອງການເຂົ້າໃຊ້ກ້ອງຖ່າຍຮູບເພື່ອສະແກນຫາລະຫັດ QR ຫຼື Bar code."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "ພວກເຮົາຈະສົ່ງການແຈ້ງເຕືອນໃຫ້ທ່ານເມື່ອມີຜະລິດຕະພັນໃໝ່ ຫຼືຂໍ້ສະເໜີມີໃຫ້. ທ່ານສາມາດປ່ຽນການຕັ້ງຄ່ານີ້ໄດ້ສະເໝີໃນການຕັ້ງຄ່າ."),
         "webView": MessageLookupByLibrary.simpleMessage("ເບິ່ງຜ່ານເວັບໄຊ"),
diff --git a/lib/generated/intl/messages_ms.dart b/lib/generated/intl/messages_ms.dart
index 4439fbfc..81bbc304 100644
--- a/lib/generated/intl/messages_ms.dart
+++ b/lib/generated/intl/messages_ms.dart
@@ -147,6 +147,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Jualan Terkini"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Semua produk"),
         "allow": MessageLookupByLibrary.simpleMessage("Benarkan"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Benarkan akses Kamera?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Hampir habis terjual"),
         "amount": MessageLookupByLibrary.simpleMessage("Jumlah"),
@@ -327,6 +329,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Nota pelanggan"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("Denmark"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema gelap"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Papan Pemuka"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Kosong"),
@@ -486,9 +489,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("Nama penuh"),
         "gallery": MessageLookupByLibrary.simpleMessage("Galeri"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("Tetapan umum"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Menjana pautan..."),
         "german": MessageLookupByLibrary.simpleMessage("Jerman"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Mendapat pemberitahuan"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Dapatkan pemberitahuan!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Dapatkan pautan kata laluan"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Bermula"),
@@ -526,6 +533,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Hungary"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Saya bersetuju dengan"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Saya ikut"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Ciri Imej"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Galeri Imej"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Rangkaian Imej"),
@@ -649,6 +657,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Tiada item sejarah belakang"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, blog macam dah tak wujud lagi"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Tiada kebenaran kamera diberikan. Sila berikannya dalam Tetapan peranti anda."),
         "noData": MessageLookupByLibrary.simpleMessage("Tiada lagi Data"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Tiada kegemaran lagi."),
@@ -857,7 +867,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Pemilihan Pencetak"),
         "printing": MessageLookupByLibrary.simpleMessage("Mencetak..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Dasar privasi"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privasi & Syarat"),
         "private": MessageLookupByLibrary.simpleMessage("Peribadi"),
         "product": MessageLookupByLibrary.simpleMessage("Produk"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Produk ditambah"),
@@ -927,6 +938,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Menetapkan semula kata laluan"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Menetapkan semula kata laluan anda"),
+        "results": MessageLookupByLibrary.simpleMessage("Keputusan"),
         "review": MessageLookupByLibrary.simpleMessage("Pratonton"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Semakan Kelulusan"),
@@ -1190,6 +1202,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Kami Menemui Blog"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Kami memerlukan akses kamera untuk mengimbas kod QR atau kod Bar."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Kami akan menghantar pemberitahuan kepada anda apabila produk baharu tersedia atau tawaran tersedia. Anda sentiasa boleh menukar tetapan ini dalam tetapan."),
         "webView": MessageLookupByLibrary.simpleMessage("Paparan Web"),
diff --git a/lib/generated/intl/messages_my.dart b/lib/generated/intl/messages_my.dart
index 726dabb8..f02edc7d 100644
--- a/lib/generated/intl/messages_my.dart
+++ b/lib/generated/intl/messages_my.dart
@@ -150,6 +150,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Latest Sales"),
         "allProducts": MessageLookupByLibrary.simpleMessage("ထုတ်ကုန်အားလုံး"),
         "allow": MessageLookupByLibrary.simpleMessage("ခွင့်ပြုပါ။"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "ကင်မရာသုံးခွင့်ကို ခွင့်ပြုမလား။"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("ကုန်ခါနီးပါပြီ"),
         "amount": MessageLookupByLibrary.simpleMessage("ပမာဏ"),
         "anyAttr": m0,
@@ -341,6 +343,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("ဝယ်ယူသူမှတ်စု"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("ဒိန်းမတ်"),
         "darkTheme":
             MessageLookupByLibrary.simpleMessage("အနက်ရောင်သို့ပြောင်းလဲရန်"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashboard"),
@@ -506,9 +509,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("ပြတိုက်"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("အထွေထွေဆက်တင်များ"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("လင့်ခ်ကို ထုတ်နေသည်..."),
         "german": MessageLookupByLibrary.simpleMessage("German"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("အကြောင်းကြားချက်ရယူမည်။"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("အကြောင်းကြားပါ။"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("စကားဝှက်လင့်ခ်ကို ရယူပါ။"),
         "getStarted": MessageLookupByLibrary.simpleMessage("စတင်မည်"),
@@ -546,6 +552,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Hungarian"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungarian"),
         "iAgree": MessageLookupByLibrary.simpleMessage("လက်ခံသဘောတူပါသည်"),
+        "imIn": MessageLookupByLibrary.simpleMessage("ရောက်နေတာ။"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Image Feature"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("ဓာတ်ပုံပြတိုက်"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("ရုပ်ပုံကွန်ရက်"),
@@ -670,6 +677,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "အိုး၊ ဘလော့ဂ်သတင်းမရှိတော့ပုံရသည်။"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "ကင်မရာခွင့်ပြုချက် မရှိပါ။ သင့်စက်၏ ဆက်တင်များတွင် ကျေးဇူးပြု၍ ခွင့်ပြုပါ။"),
         "noData": MessageLookupByLibrary.simpleMessage("အချက်အလက်မကျန်တော့ပါ။"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("အကြိုက်ဆုံးများမရှိသေးပါ။"),
@@ -892,7 +901,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("ပုံနှိပ်ခြင်း..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("ကိုယ်ပိုင်လွတ်လပ်ခွင့်မူဝါဒ"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "ကိုယ်ရေးကိုယ်တာနှင့် စည်းမျဥ်းစည်းကမ်းများ"),
         "private": MessageLookupByLibrary.simpleMessage("Private"),
         "product": MessageLookupByLibrary.simpleMessage("ထုတ်ကုန်"),
         "productAdded":
@@ -970,6 +980,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("စကားဝှက်ပြန်လည်ပြုလုပ်မည်။"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "သင်၏စကားဝှက်ကိုပြန်လည်ပြုလုပ်မည်။ "),
+        "results": MessageLookupByLibrary.simpleMessage("ရလဒ်များ"),
         "review": MessageLookupByLibrary.simpleMessage("ထင်မြင်ချက်"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage(
             "ခွင့်ပြုချက်ကိုပြန်လည်ဆန်းစစ်နေသည်။"),
@@ -1239,6 +1250,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("We Found Blog(s)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR ကုဒ် သို့မဟုတ် ဘားကုဒ်ကို စကင်န်ဖတ်ရန် ကင်မရာအသုံးပြုခွင့် လိုအပ်ပါသည်။"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "ထုတ်ကုန်အသစ်များ ရနိုင်ချိန် သို့မဟုတ် ကမ်းလှမ်းမှုများ ရနိုင်သည့်အခါ သင့်အား အကြောင်းကြားချက်များ ပေးပို့ပါမည်။ ဆက်တင်များတွင် သင်သည် ဤဆက်တင်ကို အမြဲပြောင်းနိုင်သည်။"),
         "webView": MessageLookupByLibrary.simpleMessage("Web View"),
diff --git a/lib/generated/intl/messages_nl.dart b/lib/generated/intl/messages_nl.dart
index 925c7bf8..70e80555 100644
--- a/lib/generated/intl/messages_nl.dart
+++ b/lib/generated/intl/messages_nl.dart
@@ -150,6 +150,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Laatste verkopen"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Alle producten"),
         "allow": MessageLookupByLibrary.simpleMessage("Toestaan"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Cameratoegang toestaan?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Bijna uitverkocht"),
         "amount": MessageLookupByLibrary.simpleMessage("Bedrag"),
@@ -333,6 +335,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("klant nota"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Tsjechisch"),
+        "danish": MessageLookupByLibrary.simpleMessage("Deens"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Donker thema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashboard"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Gegevens zijn leeg"),
@@ -492,9 +495,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galerij"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Algemene instelling"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Link genereren..."),
         "german": MessageLookupByLibrary.simpleMessage("Duitse"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Melding krijgen"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Ontvang een melding!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Krijg een wachtwoordlink"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Begin"),
@@ -530,6 +537,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Hongaars"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hongarije"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Ik ga akkoord met"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Ik doe mee"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Afbeeldingsfunctie"),
         "imageGallery":
@@ -652,6 +660,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Geen teruggeschiedenisitem"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, de blog lijkt niet meer te bestaan"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Er wordt geen cameratoestemming verleend. Verleen het a.u.b. in de instellingen van uw apparaat."),
         "noData": MessageLookupByLibrary.simpleMessage("Geen gegevens meer"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Nog geen favorieten."),
@@ -866,7 +876,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Printerselectie"),
         "printing": MessageLookupByLibrary.simpleMessage("Afdrukken ..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Privacybeleid"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privacy en voorwaarden"),
         "private": MessageLookupByLibrary.simpleMessage("Privaat"),
         "product": MessageLookupByLibrary.simpleMessage("Artikel"),
         "productAdded":
@@ -939,6 +950,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Reset wachtwoord"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Stel je wachtwoord opnieuw in"),
+        "results": MessageLookupByLibrary.simpleMessage("uitslagen"),
         "review": MessageLookupByLibrary.simpleMessage("Voorbeeld"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Goedkeuring beoordelen"),
@@ -1208,6 +1220,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("We hebben blog (s) gevonden"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "We hebben cameratoegang nodig om te scannen op QR-code of streepjescode."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "We sturen u meldingen wanneer er nieuwe producten beschikbaar zijn of aanbiedingen beschikbaar zijn. U kunt deze instelling altijd wijzigen in de instellingen."),
         "webView": MessageLookupByLibrary.simpleMessage("Webweergave"),
diff --git a/lib/generated/intl/messages_pl.dart b/lib/generated/intl/messages_pl.dart
index 29572bf7..a2962753 100644
--- a/lib/generated/intl/messages_pl.dart
+++ b/lib/generated/intl/messages_pl.dart
@@ -145,6 +145,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("Wszystkie produkty"),
         "allow": MessageLookupByLibrary.simpleMessage("Dopuszczać"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Zezwolić na dostęp do aparatu?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Prawie wyprzedane"),
         "amount": MessageLookupByLibrary.simpleMessage("Ilość"),
@@ -324,6 +326,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Notatka dla klienta"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("duński"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ciemny schemat"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Deska rozdzielcza"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Brak danych"),
@@ -485,9 +488,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galeria"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Ustawienia ogólne"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Generowanie linku..."),
         "german": MessageLookupByLibrary.simpleMessage("Niemiecki"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Dostać powiadomienie"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Otrzymywać powiadomienia!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Uzyskaj link do hasła"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Zaczynać"),
@@ -523,6 +530,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("język węgierski"),
         "hungary": MessageLookupByLibrary.simpleMessage("język węgierski"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Zgadzam się z"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Jestem za"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Funkcja obrazu"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Galeria obrazów"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Sieć obrazów"),
@@ -647,6 +655,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Brak pozycji w historii"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Ups, wydaje się, że blog już nie istnieje"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Nie udzielono pozwolenia na korzystanie z aparatu. Proszę przyznać to w ustawieniach urządzenia."),
         "noData": MessageLookupByLibrary.simpleMessage("Brak danych"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Nie ma jeszcze ulubionych."),
@@ -868,7 +878,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Druk..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Polityka prywatności"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("prywatność i warunki"),
         "private": MessageLookupByLibrary.simpleMessage("Prywatny"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -941,6 +952,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Zresetuj hasło"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Zresetuj swoje hasło"),
+        "results": MessageLookupByLibrary.simpleMessage("wyniki"),
         "review": MessageLookupByLibrary.simpleMessage("zapowiedź"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Zatwierdzenie recenzji"),
@@ -1210,6 +1222,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Znaleźliśmy blogi"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Potrzebujemy dostępu do aparatu, aby zeskanować kod QR lub kod kreskowy."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Wyślemy Ci powiadomienia, gdy pojawią się nowe produkty lub oferty. Zawsze możesz zmienić to ustawienie w ustawieniach."),
         "webView": MessageLookupByLibrary.simpleMessage("Widok internetowy"),
diff --git a/lib/generated/intl/messages_pt.dart b/lib/generated/intl/messages_pt.dart
index 8ab231f3..6c405db1 100644
--- a/lib/generated/intl/messages_pt.dart
+++ b/lib/generated/intl/messages_pt.dart
@@ -150,6 +150,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("Todos os produtos"),
         "allow": MessageLookupByLibrary.simpleMessage("Permitir"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Permitir acesso à câmera?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Quase esgotado"),
         "amount": MessageLookupByLibrary.simpleMessage("Montante"),
         "anyAttr": m0,
@@ -331,6 +333,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Nota do Cliente"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Tcheco"),
+        "danish": MessageLookupByLibrary.simpleMessage("dinamarquês"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema Escuro"),
         "dashboard": MessageLookupByLibrary.simpleMessage("painel de controle"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Dados vazios"),
@@ -491,9 +494,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("galeria"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Configurações Gerais"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Gerando link..."),
         "german": MessageLookupByLibrary.simpleMessage("Alemão"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Obter Notificações"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Seja notificado!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Obter link da senha"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Iniciar"),
@@ -529,6 +535,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("húngaro"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("estou de acordo com"),
+        "imIn": MessageLookupByLibrary.simpleMessage("estou dentro"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Característica de imagem"),
         "imageGallery":
@@ -657,6 +664,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Nenhum item do histórico anterior"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Ops, o blog parece não existir mais"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Nenhuma permissão de câmera é concedida. Por favor, conceda-o nas configurações do seu dispositivo."),
         "noData": MessageLookupByLibrary.simpleMessage("Não há dados"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Ainda não há favoritos"),
@@ -872,7 +881,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Impressão..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Política de Privacidade"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privacidade e Termos"),
         "private": MessageLookupByLibrary.simpleMessage("privado"),
         "product": MessageLookupByLibrary.simpleMessage("produtos"),
         "productAdded":
@@ -949,6 +959,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Redefinir senha"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Redefina sua senha"),
+        "results": MessageLookupByLibrary.simpleMessage("resultados"),
         "review": MessageLookupByLibrary.simpleMessage("Revisão"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Aprovação de revisão"),
@@ -1222,6 +1233,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Encontramos blog (s)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Precisamos de acesso à câmera para escanear o código QR ou código de barras."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Enviaremos notificações quando novos produtos estiverem disponíveis ou ofertas estiverem disponíveis. Você sempre pode alterar essa configuração nas configurações."),
         "webView": MessageLookupByLibrary.simpleMessage("Visualização da Web"),
diff --git a/lib/generated/intl/messages_ro.dart b/lib/generated/intl/messages_ro.dart
index d597d886..95fbd5e9 100644
--- a/lib/generated/intl/messages_ro.dart
+++ b/lib/generated/intl/messages_ro.dart
@@ -147,6 +147,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Ultimele vânzări"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Toate locatiile"),
         "allow": MessageLookupByLibrary.simpleMessage("Permite"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Permiteți accesul la cameră?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Aproape epuizat"),
         "amount": MessageLookupByLibrary.simpleMessage("Cantitate"),
@@ -331,6 +333,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Nota clientului"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ceh"),
+        "danish": MessageLookupByLibrary.simpleMessage("danez"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mod Obscur"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Tablou de bord"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Gol date"),
@@ -486,9 +489,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("galerie"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Setări Generale"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Se generează linkul..."),
         "german": MessageLookupByLibrary.simpleMessage("Germană"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Primește Notificări"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Fii notificat!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Obțineți link pentru resetare parolă"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Începe"),
@@ -525,6 +531,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Maghiară"),
         "hungary": MessageLookupByLibrary.simpleMessage("Ungaria"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Sunteți de acord cu"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Sunt în"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Caracteristică imagine"),
         "imageGallery":
@@ -650,6 +657,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Ups, se pare că acest articol nu mai există."),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Nu se acordă permisiunea camerei. Vă rugăm să o acordați în Setările dispozitivului dvs."),
         "noData": MessageLookupByLibrary.simpleMessage("Nu mai sunt date"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Nu ai nimic adaugat"),
@@ -863,7 +872,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Se imprimă..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Politica de confidentialitate"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Termeni și Condiții"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("produs"),
         "productAdded":
@@ -936,6 +946,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Resetează parola"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Resetează parola"),
+        "results": MessageLookupByLibrary.simpleMessage("rezultate"),
         "review": MessageLookupByLibrary.simpleMessage("Verificare"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Revizuirea aprobării"),
@@ -1208,6 +1219,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Am găsit articole"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Avem nevoie de acces la cameră pentru a scana codul QR sau codul de bare."),
         "weWillSendYouNotification":
             MessageLookupByLibrary.simpleMessage("Aboneaza-te la notificari."),
         "webView": MessageLookupByLibrary.simpleMessage("Vizualizare web"),
diff --git a/lib/generated/intl/messages_ru.dart b/lib/generated/intl/messages_ru.dart
index 798d70a8..c2314aff 100644
--- a/lib/generated/intl/messages_ru.dart
+++ b/lib/generated/intl/messages_ru.dart
@@ -146,6 +146,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Последние продажи"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Все продукты"),
         "allow": MessageLookupByLibrary.simpleMessage("Разрешать"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Разрешить доступ к камере?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Почти все продано"),
         "amount": MessageLookupByLibrary.simpleMessage("Количество"),
@@ -330,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Примечание клиента"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Чешский"),
+        "danish": MessageLookupByLibrary.simpleMessage("датский"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Ночная тема"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Приборная доска"),
         "dataEmpty":
@@ -495,9 +498,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("галерея"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Общие настройки"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Создание ссылки..."),
         "german": MessageLookupByLibrary.simpleMessage("Немецкий"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Получать уведомления"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Получить уведомление!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Получить ссылку для смены пароля"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Начать"),
@@ -533,6 +540,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Венгерский"),
         "hungary": MessageLookupByLibrary.simpleMessage("Венгерский"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Я согласен с"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Я в"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Особенности изображения"),
         "imageGallery":
@@ -655,6 +663,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Нет истории до"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Oоps, блог, похоже, больше не существует"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Разрешение на камеру не предоставляется. Пожалуйста, предоставьте его в настройках вашего устройства."),
         "noData": MessageLookupByLibrary.simpleMessage("Нет больше данных"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage("Нет избранных"),
         "noFileToDownload":
@@ -866,7 +876,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Печать ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Политика конфиденциальности"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Защита & Условия"),
         "private": MessageLookupByLibrary.simpleMessage("Частный"),
         "product": MessageLookupByLibrary.simpleMessage("Товар"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Товар добавлен"),
@@ -939,6 +950,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Сброс пароля"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Сбросить пароль"),
+        "results": MessageLookupByLibrary.simpleMessage("результаты"),
         "review": MessageLookupByLibrary.simpleMessage("Обзор"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Проверка утверждения"),
@@ -1207,6 +1219,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Мы нашли блог (ы)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Нам нужен доступ к камере для сканирования QR-кода или штрих-кода."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Мы отправим вам уведомления, когда появятся новые продукты или предложения. Вы всегда можете изменить этот параметр в настройках."),
         "webView": MessageLookupByLibrary.simpleMessage("Веб-просмотр"),
diff --git a/lib/generated/intl/messages_sk.dart b/lib/generated/intl/messages_sk.dart
index 94bf9971..bce42eb8 100644
--- a/lib/generated/intl/messages_sk.dart
+++ b/lib/generated/intl/messages_sk.dart
@@ -145,6 +145,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Všetky objednávky"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Všetky produkty"),
         "allow": MessageLookupByLibrary.simpleMessage("dovoliť"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Povoliť prístup k fotoaparátu?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Takmer vypredané"),
         "amount": MessageLookupByLibrary.simpleMessage("Suma"),
@@ -332,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Poznámka zákazníka"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("český"),
+        "danish": MessageLookupByLibrary.simpleMessage("dánsky"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tmavá téma"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Nástenka"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Údaje sú prázdne"),
@@ -490,8 +493,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galéria"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Všeobecné nastavenie"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Generuje sa odkaz..."),
         "german": MessageLookupByLibrary.simpleMessage("nemecky"),
         "getNotification": MessageLookupByLibrary.simpleMessage("Upozorniť"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Nechajte sa upozorniť!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Získať odkaz na heslo"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Začať"),
@@ -527,6 +534,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("maďarsky"),
         "hungary": MessageLookupByLibrary.simpleMessage("maďarsky"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Súhlasím s"),
+        "imIn": MessageLookupByLibrary.simpleMessage("som v"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Titulný obrázok"),
         "imageGallery":
             MessageLookupByLibrary.simpleMessage("Galéria obrázkov"),
@@ -648,6 +656,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Žiadna ďalšia položka histórie"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Upps, zdá sa, že blog neexistuje"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Nie je udelené žiadne povolenie pre fotoaparát. Udeľte ho v Nastaveniach svojho zariadenia."),
         "noData": MessageLookupByLibrary.simpleMessage("Žiadne dáta"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Zatiaľ žiadne obľúbené."),
@@ -860,7 +870,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Tlačí sa..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Zásady ochrany osobných údajov"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "Ochrana osobných údajov a podmienky"),
         "private": MessageLookupByLibrary.simpleMessage("Súkromné"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Produkt pridaný"),
@@ -935,6 +946,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Obnoviť heslo"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Obnoviť Vaše heslo"),
+        "results": MessageLookupByLibrary.simpleMessage("Výsledky"),
         "review": MessageLookupByLibrary.simpleMessage("Náhľad"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Schválenie recenzie"),
@@ -1201,6 +1213,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Našli sme tieto blog(y)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Na skenovanie QR kódu alebo čiarového kódu potrebujeme prístup k fotoaparátu."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Pošleme vám upozornenia, keď budú dostupné nové produkty alebo ponuky. Toto nastavenie môžete kedykoľvek zmeniť v nastaveniach."),
         "webView": MessageLookupByLibrary.simpleMessage("Web zobrazenie"),
diff --git a/lib/generated/intl/messages_sq.dart b/lib/generated/intl/messages_sq.dart
index 16829af9..56cae59e 100644
--- a/lib/generated/intl/messages_sq.dart
+++ b/lib/generated/intl/messages_sq.dart
@@ -148,6 +148,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("Të gjitha produktet"),
         "allow": MessageLookupByLibrary.simpleMessage("Lejo"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Të lejohet aksesi i kamerës?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Pothuajse i shitur"),
         "amount": MessageLookupByLibrary.simpleMessage("sasi"),
@@ -332,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Shënim i klientit"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("çek"),
+        "danish": MessageLookupByLibrary.simpleMessage("danez"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Temë e errët"),
         "dashboard": MessageLookupByLibrary.simpleMessage("baltëpritëse"),
         "dataEmpty":
@@ -494,9 +497,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galeri"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Cilësimi i përgjithshëm"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Lidhja po gjenerohet..."),
         "german": MessageLookupByLibrary.simpleMessage("gjermanisht"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Merrni Njoftimin"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Njoftohuni!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Merrni lidhjen e fjalëkalimit"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Fillo"),
@@ -531,6 +537,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("hungarez"),
         "hungary": MessageLookupByLibrary.simpleMessage("hungarez"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Unë bie dakort me"),
+        "imIn": MessageLookupByLibrary.simpleMessage("une jam ne"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Veçori e imazhit"),
         "imageGallery":
@@ -656,6 +663,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Asnjë artikull i historisë së pasme"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Ops, blogu duket se nuk ekziston më"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Nuk jepet leje për kamerën. Ju lutemi jepni atë në cilësimet e pajisjes tuaj."),
         "noData": MessageLookupByLibrary.simpleMessage("Nuk ka më të dhëna"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Ende nuk ka të preferuar."),
@@ -871,7 +880,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Po printon..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika e privatësisë"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privatësia dhe Kushtet"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -946,6 +956,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Rivendosni fjalëkalimin"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Rivendosni fjalëkalimin tuaj"),
+        "results": MessageLookupByLibrary.simpleMessage("Rezultatet"),
         "review": MessageLookupByLibrary.simpleMessage("parapamje"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Rishikimi i miratimit"),
@@ -1222,6 +1233,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Ne gjetëm blog(e)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Ne kemi nevojë për qasje në kamerë për të skanuar për kodin QR ose kodin bar."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Ne do t\'ju dërgojmë njoftime kur produktet e reja të jenë të disponueshme ose ofertat. Mund ta ndryshosh gjithmonë këtë cilësim te cilësimet."),
         "webView": MessageLookupByLibrary.simpleMessage("Pamja në ueb"),
diff --git a/lib/generated/intl/messages_sr.dart b/lib/generated/intl/messages_sr.dart
index b49ab4aa..da765030 100644
--- a/lib/generated/intl/messages_sr.dart
+++ b/lib/generated/intl/messages_sr.dart
@@ -145,6 +145,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Најновије продаје"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Svi proizvodi"),
         "allow": MessageLookupByLibrary.simpleMessage("Dopustiti"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Dozvoliti pristup kameri?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Скоро распродато"),
         "amount": MessageLookupByLibrary.simpleMessage("Iznos"),
@@ -332,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Napomena kupca"),
         "cvv": MessageLookupByLibrary.simpleMessage("ЦВВ"),
         "czech": MessageLookupByLibrary.simpleMessage("češki"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danski"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Мрачна тема"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Nadzorna ploča"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Нема података"),
@@ -487,9 +490,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galerija"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("генерална подешавања"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Generiranje veze..."),
         "german": MessageLookupByLibrary.simpleMessage("Немачки"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Примајте обавештења"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Budite obavješteni!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage("Линк-лозинка"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Započnite"),
         "goBack": MessageLookupByLibrary.simpleMessage("Vrati se"),
@@ -523,6 +530,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Мађарски"),
         "hungary": MessageLookupByLibrary.simpleMessage("Мађарски"),
         "iAgree": MessageLookupByLibrary.simpleMessage("слажем се"),
+        "imIn": MessageLookupByLibrary.simpleMessage("ja sam za"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Funkcija slike"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Галерија слика"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Mreža slika"),
@@ -644,6 +652,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ниједан претходни производ није доступан"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Упс, изгледа да овај пост више не постоји."),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Dozvola za kameru nije odobrena. Molimo da to odobrite u postavkama svog uređaja."),
         "noData": MessageLookupByLibrary.simpleMessage("Нема података"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("јос нема фаворита"),
@@ -856,7 +866,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Štampanje..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika privatnosti"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privatnost & Uslovi"),
         "private": MessageLookupByLibrary.simpleMessage("Privatno"),
         "product": MessageLookupByLibrary.simpleMessage("производа"),
         "productAdded": MessageLookupByLibrary.simpleMessage(
@@ -932,6 +943,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Ресетуј шифру"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Ресетујте вашу лозинку"),
+        "results": MessageLookupByLibrary.simpleMessage("Rezultati"),
         "review": MessageLookupByLibrary.simpleMessage("Проверавати"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Überprüfung der Genehmigung"),
@@ -1206,6 +1218,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Pronašli smo blogove"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Potreban nam je pristup kameri da skeniramo QR kod ili Bar kod."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Poslat ćemo vam obavještenja kada novi proizvodi budu dostupni ili ponude. Ovu postavku uvijek možete promijeniti u postavkama."),
         "webView": MessageLookupByLibrary.simpleMessage("Web View"),
diff --git a/lib/generated/intl/messages_sv.dart b/lib/generated/intl/messages_sv.dart
index 61a2960f..8999e324 100644
--- a/lib/generated/intl/messages_sv.dart
+++ b/lib/generated/intl/messages_sv.dart
@@ -149,6 +149,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Senaste försäljning"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Alla produkter"),
         "allow": MessageLookupByLibrary.simpleMessage("Tillåta"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Vill du tillåta kameraåtkomst?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Nästan slutsåld"),
         "amount": MessageLookupByLibrary.simpleMessage("Belopp"),
@@ -326,6 +328,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Kundanteckning"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("tjeck"),
+        "danish": MessageLookupByLibrary.simpleMessage("danska"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mörkt tema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("instrumentbräda"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data tom"),
@@ -483,8 +486,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galleri"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Allmän inställning"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Genererar länk..."),
         "german": MessageLookupByLibrary.simpleMessage("tysk"),
         "getNotification": MessageLookupByLibrary.simpleMessage("Få notis"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Bli meddelad!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Hämta lösenordslänk"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Komma igång"),
@@ -520,6 +526,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ungerska"),
         "hungary": MessageLookupByLibrary.simpleMessage("ungerska"),
         "iAgree": MessageLookupByLibrary.simpleMessage("jag håller med"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Jag är i"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Bildfunktion"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Bildgalleri"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("Bildnätverk"),
@@ -640,6 +647,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Inget tillbaka historikobjekt"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, bloggen verkar inte längre existera"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Inget kameratillstånd beviljas. Bevilja det i enhetens inställningar."),
         "noData": MessageLookupByLibrary.simpleMessage("Inga fler data"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Inga favoriter än."),
@@ -851,7 +860,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Utskrift..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Integritetspolicy"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("SEKRETESS OCH VILLKOR"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -922,6 +932,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Återställ lösenord"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Återställ ditt lösenord"),
+        "results": MessageLookupByLibrary.simpleMessage("Resultat"),
         "review": MessageLookupByLibrary.simpleMessage("Förhandsvisning"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Granska godkännande"),
@@ -1181,6 +1192,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Vi hittade blogg (ar)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Vi behöver kameraåtkomst för att skanna efter QR-kod eller streckkod."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Vi kommer att skicka meddelanden till dig när nya produkter är tillgängliga eller erbjudanden är tillgängliga. Du kan alltid ändra denna inställning i inställningarna."),
         "webView": MessageLookupByLibrary.simpleMessage("Webbvy"),
diff --git a/lib/generated/intl/messages_sw.dart b/lib/generated/intl/messages_sw.dart
index a51ae590..444f6196 100644
--- a/lib/generated/intl/messages_sw.dart
+++ b/lib/generated/intl/messages_sw.dart
@@ -145,6 +145,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Mauzo ya Hivi Punde"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Bidhaa zote"),
         "allow": MessageLookupByLibrary.simpleMessage("Ruhusu"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Ungependa kuruhusu ufikiaji wa Kamera?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Karibu kuisha"),
         "amount": MessageLookupByLibrary.simpleMessage("Kiasi"),
         "anyAttr": m0,
@@ -328,6 +330,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Ujumbe wa mteja"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Kicheki"),
+        "danish": MessageLookupByLibrary.simpleMessage("Kidenmaki"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mandhari ya Giza"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashibodi"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Tupu"),
@@ -490,8 +493,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Nyumba ya sanaa"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Mpangilio wa Jumla"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Inazalisha kiungo..."),
         "german": MessageLookupByLibrary.simpleMessage("Jamani"),
         "getNotification": MessageLookupByLibrary.simpleMessage("Pata Arifa"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Pata arifa!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Pata kiungo cha nenosiri"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Anzisha"),
@@ -527,6 +533,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Kihungari"),
         "hungary": MessageLookupByLibrary.simpleMessage("Kihungari"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Nakubaliana na"),
+        "imIn": MessageLookupByLibrary.simpleMessage("niko ndani"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Kipengele cha Picha"),
         "imageGallery":
@@ -652,6 +659,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Hakuna kipengee cha historia ya nyuma"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Lo, blogu inaonekana haipo tena"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Hakuna ruhusa ya kamera inayotolewa. Tafadhali iruhusu katika Mipangilio ya kifaa chako."),
         "noData": MessageLookupByLibrary.simpleMessage("Hakuna Data zaidi"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Bado hakuna vipendwa."),
@@ -871,7 +880,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Inachapisha..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Sera ya faragha"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Faragha na Masharti"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Bidhaa"),
         "productAdded":
@@ -944,6 +954,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Rudisha Nenosiri"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Weka upya Nenosiri lako"),
+        "results": MessageLookupByLibrary.simpleMessage("Matokeo"),
         "review": MessageLookupByLibrary.simpleMessage("hakikisho"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("Kagua Idhini"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
@@ -1201,6 +1212,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("Tumepata Blogu"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Tunahitaji ufikiaji wa kamera ili kutafuta msimbo wa QR au Msimbo wa Pau."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Tutakutumia arifa wakati bidhaa mpya zinapatikana au matoleo yanapatikana. Unaweza kubadilisha mpangilio huu kila wakati katika mipangilio."),
         "webView": MessageLookupByLibrary.simpleMessage("Mwonekano wa Wavuti"),
diff --git a/lib/generated/intl/messages_ta.dart b/lib/generated/intl/messages_ta.dart
index 332f3786..be5208c1 100644
--- a/lib/generated/intl/messages_ta.dart
+++ b/lib/generated/intl/messages_ta.dart
@@ -153,6 +153,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("அனைத்து தயாரிப்புகளும்"),
         "allow": MessageLookupByLibrary.simpleMessage("அனுமதி"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("கேமரா அணுகலை அனுமதிக்கவா?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage(
             ".கிட்டத்தட்டவிற்பனையாகிவிட்டது"),
         "amount": MessageLookupByLibrary.simpleMessage("தொகை"),
@@ -348,6 +350,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("வாடிக்கையாளர் குறிப்பு"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("செக்"),
+        "danish": MessageLookupByLibrary.simpleMessage("டேனிஷ்"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("டார்க் தீம்"),
         "dashboard": MessageLookupByLibrary.simpleMessage("டாஷ்போர்ட்"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("தரவு இல்லை"),
@@ -507,9 +510,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("கேலரி "),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("பொது செட்டிங்ஸ்"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("இணைப்பை உருவாக்குகிறது..."),
         "german": MessageLookupByLibrary.simpleMessage("ஜேர்மன்"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("நோட்டிபிகேஷனைப் பெற"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("அறிவிப்பைப் பெறுங்கள்!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("பாஸ் வேர்ட் லிங்கைப் பெற"),
         "getStarted": MessageLookupByLibrary.simpleMessage("தொடங்கவும்"),
@@ -546,6 +553,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ஹங்கேரியன்"),
         "hungary": MessageLookupByLibrary.simpleMessage("`ஹங்கேரியன்"),
         "iAgree": MessageLookupByLibrary.simpleMessage("உடன்படுகின்றேன்"),
+        "imIn": MessageLookupByLibrary.simpleMessage("நான் உள்ளேன்"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("படத்தின் அம்சம்"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("பட கேலரி"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("பட நெட்வொர்க்"),
@@ -668,6 +676,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noBackHistoryItem": MessageLookupByLibrary.simpleMessage(
             "முந்தைய ஓடர் தகவல்கள் இல்லை "),
         "noBlog": MessageLookupByLibrary.simpleMessage("வலைப்பதிவுகள் இல்லை"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "கேமரா அனுமதி வழங்கப்படவில்லை. உங்கள் சாதனத்தின் அமைப்புகளில் அதை வழங்கவும்."),
         "noData": MessageLookupByLibrary.simpleMessage("மேலதிக தரவுகள் இல்லை"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("இன்னும் விரும்பியது  இல்லை"),
@@ -889,7 +899,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("அச்சிடுகிறது..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("தனியுரிமைக் கொள்கை"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("தனியுரிமை & விதிமுறைகள்"),
         "private": MessageLookupByLibrary.simpleMessage("தனியார்"),
         "product": MessageLookupByLibrary.simpleMessage("பொருள்"),
         "productAdded":
@@ -966,6 +977,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("பாஸ்வேர்டை மீட்கவும்"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("உங்கள் பாஸ்வேர்டை மீட்கவும்"),
+        "results": MessageLookupByLibrary.simpleMessage("முடிவுகள்"),
         "review": MessageLookupByLibrary.simpleMessage("ரிவியூ"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("ரிவியூ ஒப்புதல் "),
@@ -1244,6 +1256,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage(
             "வலைப்பதிவு(களை) கண்டுபிடித்தோம்"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR குறியீடு அல்லது பார் குறியீட்டை ஸ்கேன் செய்ய எங்களுக்கு கேமரா அணுகல் தேவை."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "புதிய தயாரிப்புகள் கிடைக்கும்போது அல்லது சலுகைகள் கிடைக்கும்போது நாங்கள் உங்களுக்கு அறிவிப்புகளை அனுப்புவோம். அமைப்புகளில் எப்போது வேண்டுமானாலும் இந்த அமைப்பை மாற்றலாம்."),
         "webView": MessageLookupByLibrary.simpleMessage("இணையக் காட்சி"),
diff --git a/lib/generated/intl/messages_th.dart b/lib/generated/intl/messages_th.dart
index b9dc0030..254b5801 100644
--- a/lib/generated/intl/messages_th.dart
+++ b/lib/generated/intl/messages_th.dart
@@ -143,6 +143,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("ยอดขายล่าสุด"),
         "allProducts": MessageLookupByLibrary.simpleMessage("สินค้าทั้งหมด"),
         "allow": MessageLookupByLibrary.simpleMessage("อนุญาต"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("อนุญาตให้เข้าถึงกล้องไหม"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("ขายเกือบหมด"),
         "amount": MessageLookupByLibrary.simpleMessage("จำนวน"),
         "anyAttr": m0,
@@ -323,6 +325,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("หมายเหตุลูกค้า"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("สาธารณรัฐเช็ก"),
+        "danish": MessageLookupByLibrary.simpleMessage("เดนมาร์ก"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ธีมสีเข้ม"),
         "dashboard": MessageLookupByLibrary.simpleMessage("แผงควบคุม"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ไม่มีข้อมูล"),
@@ -477,9 +480,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("แกลลอรี่"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("ค่าติดตั้งทั่วไป"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("กำลังสร้างลิงค์..."),
         "german": MessageLookupByLibrary.simpleMessage("เยอรมัน"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("รับการแจ้งเตือน"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("รับการแจ้งเตือน!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("รับลิงก์รหัสผ่าน"),
         "getStarted": MessageLookupByLibrary.simpleMessage("เริ่ม"),
@@ -514,6 +520,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("ฮังการี"),
         "hungary": MessageLookupByLibrary.simpleMessage("ฮังการี"),
         "iAgree": MessageLookupByLibrary.simpleMessage("ฉันยอมรับ"),
+        "imIn": MessageLookupByLibrary.simpleMessage("ฉันอยู่ใน"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("คุณสมบัติภาพ"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("แกลเลอรีรูปภาพ"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("เครือข่ายภาพ"),
@@ -634,6 +641,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ไม่มีไอเท็มประวัติย้อนกลับ"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, บล็อกดูเหมือนว่าจะไม่มีอยู่อีกต่อไป"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "ไม่ได้รับอนุญาตจากกล้อง โปรดให้สิทธิ์ในการตั้งค่าอุปกรณ์ของคุณ"),
         "noData": MessageLookupByLibrary.simpleMessage("ไม่มีข้อมูลเพิ่มเติม"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("ยังไม่มีที่ชื่นชอบ"),
@@ -846,7 +855,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("พิมพ์..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("นโยบายความเป็นส่วนตัว"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("ความเป็นส่วนตัวและข้อตกลง"),
         "private": MessageLookupByLibrary.simpleMessage("ส่วยตัว"),
         "product": MessageLookupByLibrary.simpleMessage("สินค้า"),
         "productAdded": MessageLookupByLibrary.simpleMessage("เพิ่มสินค้าแล้ว"),
@@ -915,6 +925,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("รีเซ็ตรหัสผ่าน"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("รีเซ็ตรหัสผ่านของคุณ"),
+        "results": MessageLookupByLibrary.simpleMessage("ผล"),
         "review": MessageLookupByLibrary.simpleMessage("รีวิว"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("การอนุมัติการตรวจสอบ"),
@@ -1163,6 +1174,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("เราพบบล็อก"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "เราต้องการการเข้าถึงกล้องเพื่อสแกนรหัส QR หรือบาร์โค้ด"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "เราจะส่งการแจ้งเตือนเมื่อมีผลิตภัณฑ์ใหม่หรือข้อเสนอ คุณสามารถเปลี่ยนการตั้งค่านี้ได้ตลอดเวลาในการตั้งค่า"),
         "webView": MessageLookupByLibrary.simpleMessage("ดูเว็บ"),
diff --git a/lib/generated/intl/messages_ti.dart b/lib/generated/intl/messages_ti.dart
new file mode 100644
index 00000000..35e7f505
--- /dev/null
+++ b/lib/generated/intl/messages_ti.dart
@@ -0,0 +1,1125 @@
+// DO NOT EDIT. This is code generated via package:intl/generate_localized.dart
+// This is a library that provides messages for a ti locale. All the
+// messages from the main program should be duplicated here with the same
+// function name.
+
+// Ignore issues from commonly used lints in this file.
+// ignore_for_file:unnecessary_brace_in_string_interps, unnecessary_new
+// ignore_for_file:prefer_single_quotes,comment_references, directives_ordering
+// ignore_for_file:annotate_overrides,prefer_generic_function_type_aliases
+// ignore_for_file:unused_import, file_names, avoid_escaping_inner_quotes
+// ignore_for_file:unnecessary_string_interpolations, unnecessary_string_escapes
+
+import 'package:intl/intl.dart';
+import 'package:intl/message_lookup_by_library.dart';
+
+final messages = new MessageLookup();
+
+typedef String MessageIfAbsent(String messageStr, List<dynamic> args);
+
+class MessageLookup extends MessageLookupByLibrary {
+  String get localeName => 'ti';
+
+  static String m0(attribute) => "ዝዀነ ${attribute}";
+
+  static String m1(point) => " ዘሎካ ነጥብታት ፦ ${point}";
+
+  static String m2(state) => "ብሉቱዝ ኣዳፐር ${state}";
+
+  static String m3(day) => "${day} ቅድሚ ሒደት መዓልትታት";
+
+  static String m4(total) => "~${total} ኪሎሜተር";
+
+  static String m5(timeLeft) => " እብ ${timeLeft} ውሽጢ ከብቅዕ\'ዩ";
+
+  static String m6(captcha) => "ነዚ ንምርግጋጽ ናብ ${captcha} ኣተዉ፦";
+
+  static String m7(message) => "ጌጋ ፦ ${message}";
+
+  static String m8(time) => "ኣብ ${time} ግዜ ክወድቅ\'ዩ";
+
+  static String m9(total) => ">${total} ኪሎሜተር";
+
+  static String m10(hour) => "${hour} ቅድሚ ሰዓታት";
+
+  static String m11(message) =>
+      "ነቲ ሓበሬታ ኽትሓትት ከላ ምስታ ኣፕሊኬሽን እተተሓሓዘ ጕዳይ ኣሎ በጃኻ ነቲ ጕዳያት ንምፍታሕ ምስ ኣመሓዳሪ ተራኸብ - ${message}";
+
+  static String m12(size) => "ዝለዓለ መጠን ፋይል: ${size} MB";
+
+  static String m13(minute) => "${minute} ቅድሚ ሒደት ደቓይቕ";
+
+  static String m14(month) => "${month} ቅድሚ ኣዋርሕ";
+
+  static String m15(itemCount) => "${itemCount} ኣቕሑት";
+
+  static String m16(price) => "ድምር ኣማራጺታት: ${price}";
+
+  static String m17(total) => "ብዝሒ ፦ ${total}";
+
+  static String m18(percent) => "መሸጣ ${percent}%";
+
+  static String m19(second) => "${second} ቅድሚ ኻልኢታት";
+
+  static String m20(totalCartQuantity) =>
+      "ዓረብያ ዕድጊ ${totalCartQuantity} ንብረት/ታት";
+
+  static String m21(numberOfUnitsSold) => "እተሸጠ፦ ${numberOfUnitsSold}";
+
+  static String m22(total) => "${total}  ፍርያት";
+
+  static String m23(date) => "ቅቡል ክሳብ ${date}";
+
+  static String m24(message) => "መጠንቀቕታ ፦ ${message}";
+
+  static String m25(default_currency) =>
+      "እቲ ኣብዚ እዋን እዚ እተመርጸ ባጤራ ነቲ ኣብ ቦርሳ ዘሎ ኣቕሓ ኣይርከብን እዩ:: በጃኻ ናብ ${default_currency} ለወጥዎ";
+
+  static String m26(length) => "ፍርያት ${length} ረኸብና";
+
+  static String m27(week) => "ሰሙን ${week}";
+
+  static String m28(year) => "${year} ቅድሚ ዓመታት";
+
+  static String m29(total) => "ትእዛዝ ክትእዝዝ መዲብካ ኣለኻ #${total}";
+
+  final messages = _notInlinedMessages(_notInlinedMessages);
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "DateDESC": MessageLookupByLibrary.simpleMessage("ምውራድ ዕለት"),
+        "Dutch": MessageLookupByLibrary.simpleMessage("ዶትች"),
+        "Egypt": MessageLookupByLibrary.simpleMessage("ግብጺ"),
+        "India": MessageLookupByLibrary.simpleMessage("ሂንዲ"),
+        "Korean": MessageLookupByLibrary.simpleMessage("ኮርያን"),
+        "Netherlands": MessageLookupByLibrary.simpleMessage("ዳትች"),
+        "Polish": MessageLookupByLibrary.simpleMessage("ፖልሽ"),
+        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("ብሕታዊን ውዕላትን"),
+        "Qty": MessageLookupByLibrary.simpleMessage("ብዝሒ"),
+        "Tamil": MessageLookupByLibrary.simpleMessage("ታሚል"),
+        "UserNameInCorrect":
+            MessageLookupByLibrary.simpleMessage(" ስም ተጠቃሚ ወይ ፓስዎርድ ጌጋ እዩ"),
+        "aboutUs": MessageLookupByLibrary.simpleMessage("ብዛዕባና"),
+        "account": MessageLookupByLibrary.simpleMessage("ኣካውንት"),
+        "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
+            "ኣካውንትኻ ምጥፋእ ናይ ብሕቲ ሓበሬታ ኻብ ናይ ሓበሬታ ቤትና የልግስ ።"),
+        "accountSetup": MessageLookupByLibrary.simpleMessage("ሕሳብ ክፈት"),
+        "active": MessageLookupByLibrary.simpleMessage("ንጡፍ"),
+        "addAName": MessageLookupByLibrary.simpleMessage("ስም ወስኽ"),
+        "addANewPost": MessageLookupByLibrary.simpleMessage("ሓዲሽ ልጠፋ የእቱ"),
+        "addASlug": MessageLookupByLibrary.simpleMessage("ስሉግ ወስኽ"),
+        "addAnAttr": MessageLookupByLibrary.simpleMessage("ባህርያት ወስኽ"),
+        "addListing": MessageLookupByLibrary.simpleMessage("ዝርዝር ወስኽ"),
+        "addNew": MessageLookupByLibrary.simpleMessage("ሓድሽ ወስኽ"),
+        "addNewBlog": MessageLookupByLibrary.simpleMessage("ሓዲሽ ብሎግ የእቱ "),
+        "addNewPost": MessageLookupByLibrary.simpleMessage("ሓድሽ ልጠፋ ፍጠር"),
+        "addProduct": MessageLookupByLibrary.simpleMessage("ፍርያት ወሲኽካ"),
+        "addToCart": MessageLookupByLibrary.simpleMessage("ኣብ ዓረብያ ጻዓን"),
+        "addToCartMaximum":
+            MessageLookupByLibrary.simpleMessage("እቲ ዝለዓለ መጠን ቁጽሪ ሓሊፉ ኣሎ"),
+        "addToCartSucessfully":
+            MessageLookupByLibrary.simpleMessage("ኣብ ዓረብያኻ ተወሲኹ ኣሎ"),
+        "addToOrder": MessageLookupByLibrary.simpleMessage("ናብ ትእዛዝ ወስኮ"),
+        "added": MessageLookupByLibrary.simpleMessage("ተወሲኹ"),
+        "addedSuccessfully":
+            MessageLookupByLibrary.simpleMessage("ብዕውት ተወሲኹ ኣሎ"),
+        "addingYourImage": MessageLookupByLibrary.simpleMessage("ስእልኻ ወስኽ"),
+        "additionalInformation":
+            MessageLookupByLibrary.simpleMessage("ተወሳኺ ሓበሬታ"),
+        "additionalServices":
+            MessageLookupByLibrary.simpleMessage("ተወሳኺ ኣገልግሎት"),
+        "address": MessageLookupByLibrary.simpleMessage("ኣድራሻ"),
+        "adults": MessageLookupByLibrary.simpleMessage("ዓበይቲ"),
+        "afternoon": MessageLookupByLibrary.simpleMessage("ድሕሪ ቀትሪ"),
+        "agree": MessageLookupByLibrary.simpleMessage("እሳማማዕ"),
+        "agreeWithPrivacy": MessageLookupByLibrary.simpleMessage("ብሕታዊን ውዕላትን"),
+        "albanian": MessageLookupByLibrary.simpleMessage("ኣልባኒያኛ"),
+        "all": MessageLookupByLibrary.simpleMessage("ኵሉ"),
+        "allBrands": MessageLookupByLibrary.simpleMessage("ኵሉ ብራንድ"),
+        "allDeliveryOrders": MessageLookupByLibrary.simpleMessage("ኩሉ ትእዛዛት"),
+        "allOrders": MessageLookupByLibrary.simpleMessage("እዋናዊ መሸጣ"),
+        "allProducts": MessageLookupByLibrary.simpleMessage("ኵሉ ፍርያት"),
+        "allow": MessageLookupByLibrary.simpleMessage("ፍቐደሉ"),
+        "almostSoldOut": MessageLookupByLibrary.simpleMessage(" ዳርጋ ተሸይጡ"),
+        "amount": MessageLookupByLibrary.simpleMessage("መጠን"),
+        "anyAttr": m0,
+        "apply": MessageLookupByLibrary.simpleMessage("ኣመልክት"),
+        "approve": MessageLookupByLibrary.simpleMessage("ተቐባልነት"),
+        "approved": MessageLookupByLibrary.simpleMessage("ተቐቢሉ"),
+        "arabic": MessageLookupByLibrary.simpleMessage("ዓረብኛ"),
+        "areYouSure": MessageLookupByLibrary.simpleMessage("ርግጸኛ ዲኻ?"),
+        "areYouSureDeleteAccount":
+            MessageLookupByLibrary.simpleMessage("ኣካውንትኻ ኸም እትድምስስ ርግጸኛ ዲኻ ?"),
+        "assigned": MessageLookupByLibrary.simpleMessage("እተመደቡ"),
+        "atLeastThreeCharacters":
+            MessageLookupByLibrary.simpleMessage("እንተ ወሓደ 3 ቃላት..."),
+        "attributeAlreadyExists":
+            MessageLookupByLibrary.simpleMessage("ድሮ ዘሎ ባህርይ"),
+        "attributes": MessageLookupByLibrary.simpleMessage("ባህርያት"),
+        "audioDetected": MessageLookupByLibrary.simpleMessage(
+            "ኣቕሓ/ኣቕሓታት ኣውድዮ ተረኺቡ.  ኣውድዮ መጻወቲ ክትውስኽ ትደሊዶ?"),
+        "availability": MessageLookupByLibrary.simpleMessage("ዚርከብ"),
+        "availablePoints": m1,
+        "back": MessageLookupByLibrary.simpleMessage("ተመለስ"),
+        "backOrder": MessageLookupByLibrary.simpleMessage("ብድሕሪት ምእዛዝ"),
+        "backToShop": MessageLookupByLibrary.simpleMessage("ናብ ዕዳጋ ተመለስ"),
+        "backToWallet": MessageLookupByLibrary.simpleMessage("ናብ ቦርሳ ተመለስ"),
+        "bagsCollections":
+            MessageLookupByLibrary.simpleMessage("ናይ ቦርሳታት ፍርያት"),
+        "balance": MessageLookupByLibrary.simpleMessage("ጠቕላላ"),
+        "bannerListType": MessageLookupByLibrary.simpleMessage("ዝርዝር ባነር"),
+        "bannerType": MessageLookupByLibrary.simpleMessage("ዓይነት ባነር"),
+        "bannerYoutubeURL":
+            MessageLookupByLibrary.simpleMessage("ናይ ዩውቱበ ባነር ጥብቆ"),
+        "basicInformation": MessageLookupByLibrary.simpleMessage("መሰረታዊ ሓበሬታ"),
+        "bengali": MessageLookupByLibrary.simpleMessage("በንጋሊ"),
+        "billingAddress": MessageLookupByLibrary.simpleMessage("ኣድራሻ ሕሳብ"),
+        "bleHasNotBeenEnabled":
+            MessageLookupByLibrary.simpleMessage("ብሉቱዝ ኣይተወለዐን ዘሎ"),
+        "bleState": m2,
+        "blog": MessageLookupByLibrary.simpleMessage("ብሎግ"),
+        "booked": MessageLookupByLibrary.simpleMessage("ድሮ እተሓዝአ"),
+        "booking": MessageLookupByLibrary.simpleMessage("ምምሕዛእ"),
+        "bookingCancelled": MessageLookupByLibrary.simpleMessage("ሕዛእቲ ሰረዘ"),
+        "bookingConfirm": MessageLookupByLibrary.simpleMessage("ተረጋጊጹ"),
+        "bookingError": MessageLookupByLibrary.simpleMessage(
+            "ገለ ሽግር ኣሎ። በጃኻ ጸኒሕካ እንደገና ፈትን።"),
+        "bookingHistory": MessageLookupByLibrary.simpleMessage(" ታሪኽ ሕዛእቲ"),
+        "bookingNow": MessageLookupByLibrary.simpleMessage("ሕጂ ሕዛእ"),
+        "bookingSuccess": MessageLookupByLibrary.simpleMessage("ዕዉት ምሕዛእ"),
+        "bookingSummary": MessageLookupByLibrary.simpleMessage("ጸብጻብ ናይ ሕዛእቲ"),
+        "bookingUnavailable":
+            MessageLookupByLibrary.simpleMessage("ሕዛእቲ ኣይተረኽበን"),
+        "bosnian": MessageLookupByLibrary.simpleMessage("ቦስንያኛ"),
+        "brand": MessageLookupByLibrary.simpleMessage("ብራንድ"),
+        "brazil": MessageLookupByLibrary.simpleMessage("ፖርትጋልኛ"),
+        "burmese": MessageLookupByLibrary.simpleMessage("በርምሰኛ"),
+        "buyNow": MessageLookupByLibrary.simpleMessage("ሕጂ ዓድግ"),
+        "byCategory": MessageLookupByLibrary.simpleMessage("በብምድብ"),
+        "byPrice": MessageLookupByLibrary.simpleMessage("ብዋጋ"),
+        "bySignup": MessageLookupByLibrary.simpleMessage(
+            "ክትምዝገብ ከለኻ ምስዚ ሓሳብ እዚ ትሰማማዕ ኢኻ "),
+        "byTag": MessageLookupByLibrary.simpleMessage("ብምልክት"),
+        "call": MessageLookupByLibrary.simpleMessage("ደውል"),
+        "callTo": MessageLookupByLibrary.simpleMessage("ደውል ናብ "),
+        "canNotLaunch": MessageLookupByLibrary.simpleMessage(
+            "ነዚ ኣፕሊኬሽን እዚ ኽትጅምሮ ኣይትኽእልን ኢኻ፣ እቲ ኣብ config.dart ዘሎ ኣቀራርባ ቕኑዕ ምዃኑ ኣረጋግጽ"),
+        "canNotLoadThisLink":
+            MessageLookupByLibrary.simpleMessage("መራኸቢ ክጽዕኖ ኣይክእልን"),
+        "cancel": MessageLookupByLibrary.simpleMessage("ሰርዝ"),
+        "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
+            "ነዚ መሐበሪ ትእዛዝ እዚ ኺረኽቦ ኣይክእልን እዩ"),
+        "cantPickDateInThePast":
+            MessageLookupByLibrary.simpleMessage("ናይ ዝሓለፈ ዕለት ኣይፍቀድን እዩ"),
+        "cardHolder": MessageLookupByLibrary.simpleMessage("መትሓዚ ካርድ"),
+        "cardNumber": MessageLookupByLibrary.simpleMessage("ቍጽሪ ካርድ"),
+        "cart": MessageLookupByLibrary.simpleMessage("ዓረብያ"),
+        "cartDiscount": MessageLookupByLibrary.simpleMessage("ሙጉዳል ዋጋ ኣብ ዓረብያ"),
+        "cash": MessageLookupByLibrary.simpleMessage("ኻሽ"),
+        "categories": MessageLookupByLibrary.simpleMessage("ምድባት"),
+        "category": MessageLookupByLibrary.simpleMessage("ምድብ"),
+        "change": MessageLookupByLibrary.simpleMessage("ለውጢ"),
+        "changePrinter": MessageLookupByLibrary.simpleMessage("ሓታሚት ቐይር"),
+        "chat": MessageLookupByLibrary.simpleMessage("ዕላል"),
+        "chatListScreen": MessageLookupByLibrary.simpleMessage("መልእኽቲ"),
+        "chatViaFacebook":
+            MessageLookupByLibrary.simpleMessage("ዕላል ብ ፌስቡክ መሰንጀር"),
+        "chatViaWhatApp": MessageLookupByLibrary.simpleMessage("ዕላል ብ ዋትስኣብ"),
+        "chatWithStoreOwner":
+            MessageLookupByLibrary.simpleMessage("ምስ ዋና ድኳን ኣዕልል"),
+        "checkConfirmLink":
+            MessageLookupByLibrary.simpleMessage("መረጋገጺ ሊንክ ንምርካብ ኢ-መይልካ ርአ"),
+        "checking": MessageLookupByLibrary.simpleMessage("ትምርምር..."),
+        "checkout": MessageLookupByLibrary.simpleMessage("ወዲእኻ ውፃእ"),
+        "chinese": MessageLookupByLibrary.simpleMessage("ቻይና"),
+        "chineseSimplified": MessageLookupByLibrary.simpleMessage("ቻይንኛ (ቀሊል)"),
+        "chineseTraditional":
+            MessageLookupByLibrary.simpleMessage("ቻይንኛ (ባህላዊ)"),
+        "chooseCategory": MessageLookupByLibrary.simpleMessage("ምድብ ምረጽ"),
+        "chooseFromGallery":
+            MessageLookupByLibrary.simpleMessage("ካብ ጋለሪያ ምረጽ"),
+        "chooseFromServer":
+            MessageLookupByLibrary.simpleMessage(" ካብ ሰርቨር ምረጽ"),
+        "choosePlan": MessageLookupByLibrary.simpleMessage("መደብ ምረጽ"),
+        "chooseStaff": MessageLookupByLibrary.simpleMessage("ሰራሕተኛታት ምረጽ"),
+        "chooseType": MessageLookupByLibrary.simpleMessage("ዓይነት ምረጽ"),
+        "chooseYourPaymentMethod":
+            MessageLookupByLibrary.simpleMessage("ዓይነት ኽፍሊት ምረጽ"),
+        "city": MessageLookupByLibrary.simpleMessage("ከተማ "),
+        "cityIsRequired": MessageLookupByLibrary.simpleMessage("ስም ከተማ የድሊ"),
+        "clear": MessageLookupByLibrary.simpleMessage("ነጻ"),
+        "clearCart": MessageLookupByLibrary.simpleMessage("ዓረብያ ኣጽርይ"),
+        "close": MessageLookupByLibrary.simpleMessage("ዕጸዎ"),
+        "closeNow": MessageLookupByLibrary.simpleMessage("ሕጂ ተዓጽወ"),
+        "color": MessageLookupByLibrary.simpleMessage("ሕብርታት "),
+        "comment": MessageLookupByLibrary.simpleMessage("ሓሳብ ምሃብ"),
+        "commentFirst": MessageLookupByLibrary.simpleMessage("በጃኻ ሓሳብካ ጽሓፍ"),
+        "commentSuccessfully": MessageLookupByLibrary.simpleMessage(
+            "ዕዉት ሓሳብ ምሃብ, ሓሳብኩም ኽሳዕ ዚጸደቕ ብኽብረትኩም ተጸበዩ"),
+        "complete": MessageLookupByLibrary.simpleMessage("ተዛዚሙ"),
+        "confirm": MessageLookupByLibrary.simpleMessage("ኣረጋግጽ"),
+        "confirmAccountDeletion":
+            MessageLookupByLibrary.simpleMessage("ምጥፋእ ኣካውንትኻ ኣረጋግጽ"),
+        "confirmClearCartWhenTopUp":
+            MessageLookupByLibrary.simpleMessage("እዚ ዓረብያ ምስ መላእካያ ክትጸሪ እያ።"),
+        "confirmClearTheCart": MessageLookupByLibrary.simpleMessage(
+            "እዚ ዓረብያ ናጻ ክትገብሮ ኸም እትደሊ ርግጸኛ ዲኻ?"),
+        "confirmDeleteItem": MessageLookupByLibrary.simpleMessage(
+            "ነዚ ኣቕሓ እዚ ክትድምስሶ ኸም እትደሊ ርግጸኛ ዲኻ?"),
+        "connect": MessageLookupByLibrary.simpleMessage("ኣራኽብ"),
+        "contact": MessageLookupByLibrary.simpleMessage("ርክብ"),
+        "content": MessageLookupByLibrary.simpleMessage("ትሕዝቶ"),
+        "continueToPayment": MessageLookupByLibrary.simpleMessage("ምኽፋል ቀጽል"),
+        "continueToReview":
+            MessageLookupByLibrary.simpleMessage("ምግምጋም ምግባር ቀጽል"),
+        "continueToShipping": MessageLookupByLibrary.simpleMessage("ምልኣኽ ቀጽል"),
+        "continues": MessageLookupByLibrary.simpleMessage("ቀጻሊ"),
+        "conversations": MessageLookupByLibrary.simpleMessage("ዝርርብ"),
+        "country": MessageLookupByLibrary.simpleMessage("ሃገር"),
+        "countryIsRequired": MessageLookupByLibrary.simpleMessage("ስም ሃገር የድሊ"),
+        "couponCode": MessageLookupByLibrary.simpleMessage("ኩፖን ኮድ"),
+        "couponHasBeenSavedSuccessfully":
+            MessageLookupByLibrary.simpleMessage("ኩፖን ብዓወት ተመዝጊቡ"),
+        "couponInvalid":
+            MessageLookupByLibrary.simpleMessage("ኮድ ኩፖንካ ቅኑዕ ኣይኮነን"),
+        "couponMsgSuccess": MessageLookupByLibrary.simpleMessage(
+            "እንቋዕ ሓጐሰኩም! ኮድ ኩፖን ብዓወት ኣብ ግብሪ ውዒሉ ኣሎ"),
+        "createAnAccount": MessageLookupByLibrary.simpleMessage("ኣካውንት ፍጠር"),
+        "createNewPostSuccessfully": MessageLookupByLibrary.simpleMessage(
+            "ልጥፋኹም ብ ዓወት ብ ንድፊ ተፈጢሩ ኣሎ  .ብኽብረትኩም ኣብ ናይ ምሕዳሪ ቦታኹም ርኣዮዎ."),
+        "createPost": MessageLookupByLibrary.simpleMessage("ልጠፋኹም ፍጠሩ"),
+        "createProduct": MessageLookupByLibrary.simpleMessage("ፍርያት ፍጠር"),
+        "createVariants":
+            MessageLookupByLibrary.simpleMessage("ኵሉ ዓይነት ኣማራጺታት ፍጠር"),
+        "createdOn": MessageLookupByLibrary.simpleMessage("እተፈጥረ: "),
+        "currencies": MessageLookupByLibrary.simpleMessage("ባጠራ"),
+        "currentPassword": MessageLookupByLibrary.simpleMessage("እዋናዊ ፓስዎርድ"),
+        "currentlyWeOnlyHave":
+            MessageLookupByLibrary.simpleMessage("ኣብዚ እዋን እዚ ጥራይ ዘሎና"),
+        "customerDetail": MessageLookupByLibrary.simpleMessage("ናይ ዓሚል ዝርዝር"),
+        "customerNote": MessageLookupByLibrary.simpleMessage("መዘኻኸሪ ዓማዊል"),
+        "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
+        "czech": MessageLookupByLibrary.simpleMessage("ቸክ"),
+        "darkTheme": MessageLookupByLibrary.simpleMessage("ጸልማት ድሕረ-ባይታ"),
+        "dashboard": MessageLookupByLibrary.simpleMessage("ሰሌዳ ዳሽቦርድ"),
+        "dataEmpty": MessageLookupByLibrary.simpleMessage("ባዶ ሓበሬታ"),
+        "date": MessageLookupByLibrary.simpleMessage("ዕለት"),
+        "dateASC": MessageLookupByLibrary.simpleMessage("ምድያብ ዕለት "),
+        "dateBooking": MessageLookupByLibrary.simpleMessage("ዕለት ምዕዳግ"),
+        "dateEnd": MessageLookupByLibrary.simpleMessage("መወዳእታ ዕለት"),
+        "dateLatest": MessageLookupByLibrary.simpleMessage("ዕለት፦ እዋናዊ"),
+        "dateOldest": MessageLookupByLibrary.simpleMessage("ዕለት፦ ጥንታዊ"),
+        "dateStart": MessageLookupByLibrary.simpleMessage("መጀመርያ ዕለት"),
+        "dateTime": MessageLookupByLibrary.simpleMessage("ግዜ ዕለት"),
+        "dateWiseClose": MessageLookupByLibrary.simpleMessage("ብ ዕለት ዕጾ "),
+        "daysAgo": m3,
+        "debit": MessageLookupByLibrary.simpleMessage("Debit"),
+        "decline": MessageLookupByLibrary.simpleMessage("ምንጻግ"),
+        "delete": MessageLookupByLibrary.simpleMessage("ሰርዝ"),
+        "deleteAccount": MessageLookupByLibrary.simpleMessage("ኣካውንትኻ ኣወግድ"),
+        "deleteAccountMsg": MessageLookupByLibrary.simpleMessage(
+            "ኣካውንትኻ ኸተጥፍእ ከም እትደሊ ርግጸኛ ዲኻ? ምጥፋእ ኣካውንትኻ ብኸመይ ከም ዚጸልዎ ኣንብብ ።"),
+        "deleteAccountSuccess": MessageLookupByLibrary.simpleMessage(
+            "እቲ ኣካውንትኻ ብዕዉት መገዲ ተደምሰሰ ። ምጥቃምም ጌዜካ ኣብቂዑ ኣሎ ።"),
+        "deleteAll": MessageLookupByLibrary.simpleMessage("ንዅሉ ደምስሶ"),
+        "delivered": MessageLookupByLibrary.simpleMessage("በጽሐ"),
+        "deliveredTo": MessageLookupByLibrary.simpleMessage("ኣብጸሐ"),
+        "deliveryBoy": MessageLookupByLibrary.simpleMessage("ኣበጻጻሒ ኣቑሑ:"),
+        "deliveryDate": MessageLookupByLibrary.simpleMessage("ዝበጽሓሉ ዕለት"),
+        "deliveryDetails":
+            MessageLookupByLibrary.simpleMessage("ዝርዝር ናይ ምብጽጻሕ"),
+        "deliveryManagement": MessageLookupByLibrary.simpleMessage("ምብጻሕ"),
+        "deliveryNotificationError": MessageLookupByLibrary.simpleMessage(
+            "ሓበሬታ የልቦን.\n እዚ ትእዛዝ እዚ ለቒቑ."),
+        "description": MessageLookupByLibrary.simpleMessage(" መግለጺ"),
+        "didntReceiveCode":
+            MessageLookupByLibrary.simpleMessage("እቲ ኮድዶ ኣይተቐበለን? "),
+        "direction": MessageLookupByLibrary.simpleMessage("መምርሒ"),
+        "disablePurchase": MessageLookupByLibrary.simpleMessage("ሽመታ ስንብታ"),
+        "discount": MessageLookupByLibrary.simpleMessage("ቅናስ"),
+        "displayName": MessageLookupByLibrary.simpleMessage("ዝርአ ስም"),
+        "distance": m4,
+        "doNotAnyTransactions":
+            MessageLookupByLibrary.simpleMessage("ገና ዋላ ሓንቲ ልውውጥ የብልኩምን"),
+        "doYouWantToExitApp":
+            MessageLookupByLibrary.simpleMessage("ካብ ኣፕሊኬሽን ክትወጽእ ትደሊዶ?"),
+        "doYouWantToLogout":
+            MessageLookupByLibrary.simpleMessage("ካብ ኣካውንትኻ ክትወጽእ ትደሊዶ ?"),
+        "done": MessageLookupByLibrary.simpleMessage("ተፈጸመ"),
+        "dontHaveAccount": MessageLookupByLibrary.simpleMessage("ኣካውንት የብለካን?"),
+        "download": MessageLookupByLibrary.simpleMessage("ጽዓኖ"),
+        "downloadApp": MessageLookupByLibrary.simpleMessage("ኣፕሊኬሽን ምጽዓን"),
+        "draft": MessageLookupByLibrary.simpleMessage("ንድፊ"),
+        "duration": MessageLookupByLibrary.simpleMessage("ንውሓት ግዜ"),
+        "dutch": MessageLookupByLibrary.simpleMessage("ዳትች"),
+        "earnings": MessageLookupByLibrary.simpleMessage("ኣታዊ"),
+        "edit": MessageLookupByLibrary.simpleMessage("ኣረምቲ: "),
+        "editProductInfo":
+            MessageLookupByLibrary.simpleMessage(" ሓበሬታ ፍርያት ኣረምቲ"),
+        "editWithoutColon": MessageLookupByLibrary.simpleMessage("ኣረምቲ"),
+        "email": MessageLookupByLibrary.simpleMessage("ኢ-መይል"),
+        "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
+            "ኣካውንትኻ ምስ እትድምስስ ካብ ኵሉ ዝርዝር ደብዳበታት ሓበሬታት ኣይክትኣቱን ኢኻ።"),
+        "emailDoesNotExist": MessageLookupByLibrary.simpleMessage(
+            "እቲ ዝኣተኽሞ ናይ ኢ-መይል ሕሳብ ኣይተረኽበን ። በኽብረትኩም እንደገና ፈትኑ።,"),
+        "emailIsRequired":
+            MessageLookupByLibrary.simpleMessage("ኣድራሻ ኢ-መይል የድሊ"),
+        "emailSubscription":
+            MessageLookupByLibrary.simpleMessage("ምምዝጋብ ኢ-መይል"),
+        "emptyCartSubtitle": MessageLookupByLibrary.simpleMessage(
+            "ኣብዚ ቦርሳ ገና ዋላ ሓንቲ ኣቃሓ ዘይኣቅመጥኻሉ እዩ ዚመስል። ክትመልኦ ኣቃሓ ክትዕድግ ጀምር።"),
+        "emptyComment":
+            MessageLookupByLibrary.simpleMessage("ሓሳባትኩም ባዶ ኪኸውን ኣይክእልን እዩ"),
+        "emptySearch": MessageLookupByLibrary.simpleMessage(
+            "ኣቕሑ ገና ኣይደለኹምን. ሕጂ ንጀምር - ክንሕግዘኩም ኢና."),
+        "emptyUsername":
+            MessageLookupByLibrary.simpleMessage("ስም ተጠቃሚኻ/ኢ-መይልካ ባዶ ኢዩ ዘሎ"),
+        "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
+            "ኣብ ጥቓ እቲ እትፈትዎ ፍርያት ንዝዀነ ልቢ ጠውቕ። ኣብዚ ንዓኻ ኸነዋህልለልካ ኢና"),
+        "enableVacationMode":
+            MessageLookupByLibrary.simpleMessage("ናይ ዕረፍቲ ግዜ ስርዓት ኣተግብር"),
+        "endDateCantBeAfterFirstDate": MessageLookupByLibrary.simpleMessage(
+            "ብኽብረትኩም ሓደ ዕለት ድሕሪ እታ ቐዳመይቲ ዕለት ምረጹ"),
+        "endsIn": m5,
+        "english": MessageLookupByLibrary.simpleMessage("እንግሊዝኛ"),
+        "enterCaptcha": m6,
+        "enterSendedCode":
+            MessageLookupByLibrary.simpleMessage("እቲ እተላእከ ኮድ ኣእቱ"),
+        "enterYourEmail": MessageLookupByLibrary.simpleMessage("ኢ-መይልካ ኣእቱ"),
+        "enterYourEmailOrUsername":
+            MessageLookupByLibrary.simpleMessage("ኢ-መይልካ ወይ ስም ተጠቃሚኻ ኣእቱ"),
+        "enterYourFirstName":
+            MessageLookupByLibrary.simpleMessage("ቀዳማይ ስምኩም ኣእትዉ"),
+        "enterYourLastName":
+            MessageLookupByLibrary.simpleMessage("ዳሓራዋይ ስምኩም ኣእትዉ"),
+        "enterYourMobile":
+            MessageLookupByLibrary.simpleMessage("ብኽብረትኩም ቁጽሪ ሞባይልኩም ኣእትዉ"),
+        "enterYourPassword": MessageLookupByLibrary.simpleMessage("ፓስዎርድኻ ኣእቱ"),
+        "enterYourPhoneNumber":
+            MessageLookupByLibrary.simpleMessage("ቍጽሪ ተሌፎንኩም ኣእቱዉ"),
+        "error": m7,
+        "errorAmountTransfer": MessageLookupByLibrary.simpleMessage(
+            "እቲ ዝኣተወ መጠን ገንዘብ ካብቲ ሕጂ ዘሎ መጠን ቦርሳ ይበዝሕ ። በጃኻ እንደገና ፈትን!"),
+        "errorEmailFormat":
+            MessageLookupByLibrary.simpleMessage("ብኽብረትኩ ቅቡል ኣድራሻ ኢ-መይል ኣእቱ።"),
+        "errorPasswordFormat": MessageLookupByLibrary.simpleMessage(
+            "ብኽብረትኩም እንተ ወሓደ 8 ፊደላት ዝሓዘ ፓስዎርድ ኣእትዉ"),
+        "evening": MessageLookupByLibrary.simpleMessage("ምሸት"),
+        "events": MessageLookupByLibrary.simpleMessage("ፍጻመታት"),
+        "expectedDeliveryDate":
+            MessageLookupByLibrary.simpleMessage("ትጽቢት እተገብረሉ ዕለት ምብጻሕ"),
+        "expired": MessageLookupByLibrary.simpleMessage("ወደቐ "),
+        "expiredDate": MessageLookupByLibrary.simpleMessage("ግዜኡ ዝሓለፎ ዕለት"),
+        "expiredDateHint": MessageLookupByLibrary.simpleMessage("ወርሒ/ዕለት"),
+        "expiringInTime": m8,
+        "external": MessageLookupByLibrary.simpleMessage("ደጋዊ"),
+        "extraServices": MessageLookupByLibrary.simpleMessage("ተወሳኺ ኣገልግሎት"),
+        "failToAssign":
+            MessageLookupByLibrary.simpleMessage("ንተጠቃሚ ምምዳብ ተሳኢኑ ኣሎ"),
+        "failedToLoadImage":
+            MessageLookupByLibrary.simpleMessage("ስእልኻ ኺስከም ኣይከኣለን"),
+        "favorite": MessageLookupByLibrary.simpleMessage("ዝፈትውዎ"),
+        "featureProducts": MessageLookupByLibrary.simpleMessage("ዓምዲ ፍርያት"),
+        "featured": MessageLookupByLibrary.simpleMessage("ብፉሉይ ዝቀረቡ"),
+        "features": MessageLookupByLibrary.simpleMessage("መዳያት"),
+        "fileIsTooBig": MessageLookupByLibrary.simpleMessage(
+            "እቲ ፋይል ኣዝዩ ዓብዪ እዩ። በኽብረትካ ንእሽቶ ፋይል ምረጽ!"),
+        "fileUploadFailed":
+            MessageLookupByLibrary.simpleMessage("ፋይል  ምጽዓን ኣይተዓወተን!"),
+        "files": MessageLookupByLibrary.simpleMessage("ፋይል"),
+        "filter": MessageLookupByLibrary.simpleMessage("መጻረዪ"),
+        "finishSetup": MessageLookupByLibrary.simpleMessage("ምድላው ዛዘም"),
+        "finnish": MessageLookupByLibrary.simpleMessage("ፊንላንድኛ"),
+        "firstComment": MessageLookupByLibrary.simpleMessage(
+            "ናይ መጀምርያ ርእይቶ ኣብ መዝገብ ዚህብ ሰብ ኩን!"),
+        "firstName": MessageLookupByLibrary.simpleMessage("ቀዳማይ ስም"),
+        "firstNameIsRequired":
+            MessageLookupByLibrary.simpleMessage("ቀዳማይ ስም የድሊ"),
+        "firstRenewal": MessageLookupByLibrary.simpleMessage("ቀዳማይ ምሕዳስ"),
+        "fixedCartDiscount":
+            MessageLookupByLibrary.simpleMessage("ቀዋሚ ቅናስ ዋጋ ዓረብያ"),
+        "fixedProductDiscount":
+            MessageLookupByLibrary.simpleMessage(" ቀዋሚ ቅናስ ዋጋ ፍርያት"),
+        "forThisProduct": MessageLookupByLibrary.simpleMessage("ነዚ ፍርያት እዚ"),
+        "freeOfCharge": MessageLookupByLibrary.simpleMessage("ብናጻ ክፍሊት"),
+        "french": MessageLookupByLibrary.simpleMessage("ፍራንሳኛ"),
+        "from": MessageLookupByLibrary.simpleMessage("ካብ"),
+        "fullName": MessageLookupByLibrary.simpleMessage("ምሉእ ስም"),
+        "gallery": MessageLookupByLibrary.simpleMessage("ጋለርይ"),
+        "generalSetting": MessageLookupByLibrary.simpleMessage("ሓፈሻዊ ኣቀራርባታት "),
+        "german": MessageLookupByLibrary.simpleMessage("ጀርመን"),
+        "getNotification": MessageLookupByLibrary.simpleMessage("ምልክታታት ርኸብ"),
+        "getPasswordLink":
+            MessageLookupByLibrary.simpleMessage("ናይ ፓስዎርድኻ ሊንክ ርኸብ"),
+        "getStarted": MessageLookupByLibrary.simpleMessage("ጀምር"),
+        "goBack": MessageLookupByLibrary.simpleMessage("ተመለስ"),
+        "goBackHomePage":
+            MessageLookupByLibrary.simpleMessage("ናብ ናይ መጀመርታ ገጽ ተመለስ"),
+        "goBackToAddress": MessageLookupByLibrary.simpleMessage("ናብ ኣድራሻ ተመለስ"),
+        "goBackToReview": MessageLookupByLibrary.simpleMessage("ናብ ምግምጋም ተመለስ"),
+        "goBackToShipping":
+            MessageLookupByLibrary.simpleMessage("ናብ ምልኣኽ ተመለስ"),
+        "greaterDistance": m9,
+        "greek": MessageLookupByLibrary.simpleMessage("ግሪኽ"),
+        "grossSales": MessageLookupByLibrary.simpleMessage(" ሓፈሻዊ መሸጣ"),
+        "grouped": MessageLookupByLibrary.simpleMessage("እተመደቡ"),
+        "guests": MessageLookupByLibrary.simpleMessage("ኣጋይሽ"),
+        "hasBeenDeleted": MessageLookupByLibrary.simpleMessage("ተደምሲሱ"),
+        "hebrew": MessageLookupByLibrary.simpleMessage("ህብሪው"),
+        "hideAbout": MessageLookupByLibrary.simpleMessage("ብዛዕባ ሕባእ"),
+        "hideAddress": MessageLookupByLibrary.simpleMessage("ኣድራሻ ሕባእ"),
+        "hideEmail": MessageLookupByLibrary.simpleMessage("ኢ-መይል ሕባእ"),
+        "hideMap": MessageLookupByLibrary.simpleMessage("ካርታ ሕባእ"),
+        "hidePhone": MessageLookupByLibrary.simpleMessage("ቴለፎን ሕባእ"),
+        "hidePolicy": MessageLookupByLibrary.simpleMessage("ፖሊሲ ሕባእ"),
+        "hindi": MessageLookupByLibrary.simpleMessage("ህንዲ"),
+        "history": MessageLookupByLibrary.simpleMessage("ታሪኽ"),
+        "historyTransaction": MessageLookupByLibrary.simpleMessage("ታሪኽ"),
+        "home": MessageLookupByLibrary.simpleMessage("ዋና ገጽ"),
+        "hour": MessageLookupByLibrary.simpleMessage("ሰዓት"),
+        "hoursAgo": m10,
+        "hungarian": MessageLookupByLibrary.simpleMessage("ሃንጋሪያን"),
+        "hungary": MessageLookupByLibrary.simpleMessage("ሃንጋሪን"),
+        "iAgree": MessageLookupByLibrary.simpleMessage("እሰማማዕ ኣለኩ ምስ"),
+        "imageFeature": MessageLookupByLibrary.simpleMessage("ስእሊ መልክዕ "),
+        "imageGallery": MessageLookupByLibrary.simpleMessage(" ሰእላዊ ጋለሪ"),
+        "imageNetwork": MessageLookupByLibrary.simpleMessage("መርበብ ስእሊ"),
+        "inStock": MessageLookupByLibrary.simpleMessage("ኣብ ዕዳጋ"),
+        "incorrectPassword":
+            MessageLookupByLibrary.simpleMessage("ዘይቁኑዕ ፓስዎርድ"),
+        "indonesian": MessageLookupByLibrary.simpleMessage("ኢንዶኖዥያ"),
+        "instantlyClose": MessageLookupByLibrary.simpleMessage("ብኡንብኡ ዕጸዎ"),
+        "invalidPhoneNumber":
+            MessageLookupByLibrary.simpleMessage("ዘይቅቡል ቍጽሪ ተሌፎን"),
+        "invalidSMSCode":
+            MessageLookupByLibrary.simpleMessage("ዘይቅቡል መረጋገጺ SMS ኮድ"),
+        "invoice": MessageLookupByLibrary.simpleMessage("Invoice"),
+        "isEverythingSet":
+            MessageLookupByLibrary.simpleMessage("ኵሉ ነገር እተሰርዐ ድዩ ?..."),
+        "italian": MessageLookupByLibrary.simpleMessage("ጣልያን"),
+        "item": MessageLookupByLibrary.simpleMessage("ኣቕሓ"),
+        "itemTotal": MessageLookupByLibrary.simpleMessage("ድምር ኣቕሓ"),
+        "items": MessageLookupByLibrary.simpleMessage("ኣቕሑ"),
+        "itsOrdered": MessageLookupByLibrary.simpleMessage("ትኣዚዙ ኣሎ"),
+        "iwantToCreateAccount":
+            MessageLookupByLibrary.simpleMessage("ኣካውንት ክኽፍት እደሊ እየ"),
+        "japanese": MessageLookupByLibrary.simpleMessage("ጃፓንኛ"),
+        "kannada": MessageLookupByLibrary.simpleMessage("ካናዳኛ"),
+        "keep": MessageLookupByLibrary.simpleMessage("ዓቅብ"),
+        "khmer": MessageLookupByLibrary.simpleMessage("ክመር"),
+        "korean": MessageLookupByLibrary.simpleMessage("ኮርያን"),
+        "kurdish": MessageLookupByLibrary.simpleMessage("ኩርድሽ"),
+        "language": MessageLookupByLibrary.simpleMessage("ቋንቋታት"),
+        "languageSuccess": MessageLookupByLibrary.simpleMessage(
+            "ቋንቋ ብዕዉት መገዲ ተቀይሩ ኣሎ ፥ በጃኻ ነቲ APP እንደገና ጀምሮ"),
+        "lao": MessageLookupByLibrary.simpleMessage("Lao"),
+        "lastName": MessageLookupByLibrary.simpleMessage("ካልኣይ ስም"),
+        "lastNameIsRequired":
+            MessageLookupByLibrary.simpleMessage("ዳሕራይ ስም የድሊ"),
+        "lastTransactions":
+            MessageLookupByLibrary.simpleMessage("ናይ መወዳእታ ንግዳዊ ልውውጥ"),
+        "latestProducts": MessageLookupByLibrary.simpleMessage("እዋናዊ ፍርያት"),
+        "layout": MessageLookupByLibrary.simpleMessage("ንድፊ"),
+        "link": MessageLookupByLibrary.simpleMessage("ጥብቆ"),
+        "listBannerType":
+            MessageLookupByLibrary.simpleMessage("ዝርዝር ዓይነት ባንነር"),
+        "listBannerVideo": MessageLookupByLibrary.simpleMessage("ዝርዝር ባነር ቪድዮ"),
+        "listMessages": MessageLookupByLibrary.simpleMessage("ዝርዝር መልእኽትታት"),
+        "loadFail": MessageLookupByLibrary.simpleMessage("ምጻዓን ፈሺሉ ኣሎ!"),
+        "loading": MessageLookupByLibrary.simpleMessage("ጽዒንካ..."),
+        "loadingLink": MessageLookupByLibrary.simpleMessage("መራኸቢ ምጽዓን..."),
+        "location": MessageLookupByLibrary.simpleMessage("ቦታ"),
+        "login": MessageLookupByLibrary.simpleMessage("እቶ"),
+        "loginCanceled": MessageLookupByLibrary.simpleMessage("እቲ መእተዊ ተሰረዘ"),
+        "loginErrorServiceProvider": m11,
+        "loginFailed": MessageLookupByLibrary.simpleMessage("መእተዊ ከይተዓወተ ተረፈ!"),
+        "loginInvalid": MessageLookupByLibrary.simpleMessage(
+            "ነዛ ኣፕሊኬሽን እዚኣ ኽትጥቀመላ ኣይፍቀደልካን እዩ."),
+        "loginSuccess": MessageLookupByLibrary.simpleMessage("መእተዊ ዕዉት!"),
+        "loginToComment":
+            MessageLookupByLibrary.simpleMessage("ሓሳብ ንምሃብ ብኽብረትኩም ተመዝግቡ"),
+        "loginToContinue":
+            MessageLookupByLibrary.simpleMessage("ክትቅጽል በጃኻ ናብ ኣካውንትኻ ኣእቱ"),
+        "loginToYourAccount":
+            MessageLookupByLibrary.simpleMessage(" ናብ ኣካውንትኻ እቶ"),
+        "logout": MessageLookupByLibrary.simpleMessage("ውጻእ"),
+        "malay": MessageLookupByLibrary.simpleMessage("ማላይ"),
+        "manCollections": MessageLookupByLibrary.simpleMessage("ናይ ሰብኡት ፍርያት"),
+        "manageStock": MessageLookupByLibrary.simpleMessage("ምምሕዳር ቀረብ"),
+        "map": MessageLookupByLibrary.simpleMessage("ካርታ"),
+        "marathi": MessageLookupByLibrary.simpleMessage("ማራቲኛ "),
+        "markAsRead": MessageLookupByLibrary.simpleMessage("ከምዝተነበበ ምልክት ግበር"),
+        "markAsShipped":
+            MessageLookupByLibrary.simpleMessage("ተላኢኹ ኢልኩም ምልክት ግበሩ"),
+        "markAsUnread":
+            MessageLookupByLibrary.simpleMessage("ከምዘይተነበበ ምልክት ግበር"),
+        "maximumFileSizeMb": m12,
+        "maybeLater": MessageLookupByLibrary.simpleMessage("ምናልባት ደሓር"),
+        "message": MessageLookupByLibrary.simpleMessage("መልእኽቲ"),
+        "messageTo": MessageLookupByLibrary.simpleMessage("መልእኽጢ ስደድ ናብ"),
+        "minimumQuantityIs": MessageLookupByLibrary.simpleMessage("ዝወሓደ መጠን"),
+        "minutesAgo": m13,
+        "mobileVerification":
+            MessageLookupByLibrary.simpleMessage("ተንቀሳቓሲ ተሌፎን ን ምርግጋጽ"),
+        "momentAgo": MessageLookupByLibrary.simpleMessage("ቅድሚ እተወሰነ ህሞት"),
+        "monthsAgo": m14,
+        "more": MessageLookupByLibrary.simpleMessage("...ተወሳኺ"),
+        "moreInformation": MessageLookupByLibrary.simpleMessage("ዝያዳ ሓበሬታ"),
+        "morning": MessageLookupByLibrary.simpleMessage("ንግሆ"),
+        "mustSelectOneItem":
+            MessageLookupByLibrary.simpleMessage("1 ኣቕሓ ኽትመርጽ ኣሎካ"),
+        "myCart": MessageLookupByLibrary.simpleMessage("ዓረብያይ"),
+        "myPoints": MessageLookupByLibrary.simpleMessage("ነጥብታተይ"),
+        "myProducts": MessageLookupByLibrary.simpleMessage("ፍርያተይ"),
+        "myProductsEmpty": MessageLookupByLibrary.simpleMessage(
+            "ዝዀነ ይኹን ፍርያት የብልኩምን ። ክትፈጥር ፈትን!"),
+        "myWallet": MessageLookupByLibrary.simpleMessage("ቦርሳይ"),
+        "myWishList": MessageLookupByLibrary.simpleMessage("ዝርዝር ድለታተይ"),
+        "nItems": m15,
+        "name": MessageLookupByLibrary.simpleMessage("ስም"),
+        "nearbyPlaces":
+            MessageLookupByLibrary.simpleMessage("ኣብ ጥቓና ዚርከብ ቦታታት"),
+        "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
+            "እዋናዊ ሓበሬታ ንምርካብ እንደገና ኽትኣቱ ኣሎካ"),
+        "newPassword": MessageLookupByLibrary.simpleMessage("ሓድሽ ፓስዎርድ"),
+        "newVariation": MessageLookupByLibrary.simpleMessage("ሓድሽ ለውጢ"),
+        "next": MessageLookupByLibrary.simpleMessage("ቀጺሉ"),
+        "niceName": MessageLookupByLibrary.simpleMessage("ጽቡቕ ስም"),
+        "no": MessageLookupByLibrary.simpleMessage("ኣይኮነን"),
+        "noBackHistoryItem":
+            MessageLookupByLibrary.simpleMessage("ንድሕሪት ዚምለስ ነገር የልቦን"),
+        "noBlog":
+            MessageLookupByLibrary.simpleMessage("ኦፕስ እቲ ብሎግ ሕጂ ዘሎ ኣይመስልን እዩ"),
+        "noData": MessageLookupByLibrary.simpleMessage("ካልእ ሓበሬታ የሎን"),
+        "noFavoritesYet":
+            MessageLookupByLibrary.simpleMessage("ገና ዝፈተኻዮ ኣቃሓ የልቦን"),
+        "noFileToDownload":
+            MessageLookupByLibrary.simpleMessage("ክጽዓን ዘለዎ ፋይል የለን።"),
+        "noForwardHistoryItem":
+            MessageLookupByLibrary.simpleMessage("ንቕድሚት ዚግስግስ ታሪኽ ኣቕሓ የልቦን"),
+        "noInternetConnection":
+            MessageLookupByLibrary.simpleMessage("ኢንተርነት መስመር የለን"),
+        "noListingNearby":
+            MessageLookupByLibrary.simpleMessage("ኣብ ጥቓና ዝርዝር የልቦን!"),
+        "noOrders": MessageLookupByLibrary.simpleMessage("ዝትኣዘዘ የለን"),
+        "noPost": MessageLookupByLibrary.simpleMessage(
+            "ኦፕስ, እዛ ገጽ እዚኣ ሕጂ ዘላ ኣይመስልን እዩ!"),
+        "noPrinters": MessageLookupByLibrary.simpleMessage("ሓተምቲ ኣይነበሩን"),
+        "noProduct": MessageLookupByLibrary.simpleMessage("ፍርያት የልቦን"),
+        "noResultFound":
+            MessageLookupByLibrary.simpleMessage("ዋላ ሓንቲ ውጽኢት ኣይተረኽበን"),
+        "noReviews": MessageLookupByLibrary.simpleMessage("ርእይቶ ኣይገበረን"),
+        "noSlotAvailable": MessageLookupByLibrary.simpleMessage("ቦታ ኣይርከብን እዩ"),
+        "noThanks": MessageLookupByLibrary.simpleMessage("ደሓን የቐንየለይ"),
+        "none": MessageLookupByLibrary.simpleMessage("ዋላ ሓደ የለን"),
+        "notFound": MessageLookupByLibrary.simpleMessage("ኣይተረኽበን"),
+        "note": MessageLookupByLibrary.simpleMessage("መዘኻኸሪ ትእዛዝ"),
+        "noteMessage": MessageLookupByLibrary.simpleMessage("ኖታ"),
+        "noteTransfer": MessageLookupByLibrary.simpleMessage("መዘኻኸሪ (ኣማራጺ)"),
+        "notice": MessageLookupByLibrary.simpleMessage("ሓበሬታ"),
+        "notifications": MessageLookupByLibrary.simpleMessage("ምልክታታት"),
+        "notifyLatestOffer": MessageLookupByLibrary.simpleMessage(
+            "አፍልጠኒ እዋናዊ ሕሱር ጠለባትን ከምውን ፍርያትን ህላወነት "),
+        "ofThisProduct":
+            MessageLookupByLibrary.simpleMessage("ብዛዕባ እዚ ፍርያት እዚ"),
+        "ok": MessageLookupByLibrary.simpleMessage("ሐራይ"),
+        "on": MessageLookupByLibrary.simpleMessage("ኣብ"),
+        "onSale": MessageLookupByLibrary.simpleMessage("ብቅናስ ዋጋ"),
+        "onVacation": MessageLookupByLibrary.simpleMessage("ኣብ ዕረፍቲ"),
+        "online": MessageLookupByLibrary.simpleMessage("ኣብ መስመር"),
+        "openMap": MessageLookupByLibrary.simpleMessage("ካርታ"),
+        "openNow": MessageLookupByLibrary.simpleMessage("ሕጂ ክፈት"),
+        "options": MessageLookupByLibrary.simpleMessage("ኣማራጺታት"),
+        "optionsTotal": m16,
+        "or": MessageLookupByLibrary.simpleMessage("ወይ"),
+        "orLoginWith": MessageLookupByLibrary.simpleMessage("ወይ ምስ መእተዊ"),
+        "orderConfirmation": MessageLookupByLibrary.simpleMessage("መረጋገጺ ትእዛዝ"),
+        "orderConfirmationMsg": MessageLookupByLibrary.simpleMessage(
+            "ነዚ ትእዛዝ እዚ ኸም ክትገብሮ ርግጸኛ ዲኻ ?"),
+        "orderDate": MessageLookupByLibrary.simpleMessage("ዝትኣዘዘሉ ዕለት"),
+        "orderDetail": MessageLookupByLibrary.simpleMessage("ዝርዝር ትእዛዝ"),
+        "orderHistory": MessageLookupByLibrary.simpleMessage("ትእዛዝ ታሪክ"),
+        "orderId": MessageLookupByLibrary.simpleMessage("መንነት ኣሰራርሓ: "),
+        "orderIdWithoutColon":
+            MessageLookupByLibrary.simpleMessage("ትእዛዝ መንነት"),
+        "orderNo": MessageLookupByLibrary.simpleMessage("ቍጽሪ ትእዛዝ"),
+        "orderNotes":
+            MessageLookupByLibrary.simpleMessage("መዘኻኸሪታት ትእዛዝ (ኣማራጺ)"),
+        "orderNumber": MessageLookupByLibrary.simpleMessage("ቍጽሪ ትእዛዝ"),
+        "orderStatusCanceledReversal":
+            MessageLookupByLibrary.simpleMessage("እተሰረዘ ለውጢ"),
+        "orderStatusCancelled": MessageLookupByLibrary.simpleMessage("ተሰረዘ"),
+        "orderStatusChargeBack":
+            MessageLookupByLibrary.simpleMessage("ተመሊስካ ኽፍሊት"),
+        "orderStatusCompleted": MessageLookupByLibrary.simpleMessage("ተዛዚሙ"),
+        "orderStatusDenied": MessageLookupByLibrary.simpleMessage("ተኸልከለ"),
+        "orderStatusExpired": MessageLookupByLibrary.simpleMessage("ግዜ ሓሊፉ"),
+        "orderStatusFailed": MessageLookupByLibrary.simpleMessage("ፍሹል"),
+        "orderStatusOnHold": MessageLookupByLibrary.simpleMessage("ደው ኢሉ ኣሎ"),
+        "orderStatusPending":
+            MessageLookupByLibrary.simpleMessage("ውሳነ ይጽበ ኣሎ"),
+        "orderStatusPendingPayment":
+            MessageLookupByLibrary.simpleMessage("መስርሕ ክፍሊት ውሳነ ይጽበ ኣሎ"),
+        "orderStatusProcessed": MessageLookupByLibrary.simpleMessage("መስርሕ"),
+        "orderStatusProcessing":
+            MessageLookupByLibrary.simpleMessage("ኣብ መስርሕ"),
+        "orderStatusRefunded": MessageLookupByLibrary.simpleMessage("እተመልሰ"),
+        "orderStatusReversed":
+            MessageLookupByLibrary.simpleMessage("ኣንፈቱ ተቐየረ"),
+        "orderStatusShipped": MessageLookupByLibrary.simpleMessage("እተላእከ"),
+        "orderStatusVoided": MessageLookupByLibrary.simpleMessage("ባዶነት"),
+        "orderSuccessMsg1": MessageLookupByLibrary.simpleMessage(
+            "ኵነታት እቲ እነብጽሓሉ ኽፍሊ ተጠቒምካ ኵነታት ትእዛዝካ ኽትፈልጥ ትኽእል ኢኻ። ዝርዝር ትእዛዝካን ዝበጥጸሖ ደረጃ ንምክትታል ዚሕግዝ ሊንክ ዝሓዘ ናይ መረጋገጺ ኢ-መይል ክትቅበል ኢኻ።"),
+        "orderSuccessMsg2": MessageLookupByLibrary.simpleMessage(
+            "ኣቐዲሙ እተገልጸ ኢ-መይልን ፓስወርድን ጌርኩም ናብ ሕሳብኩም ኽትኣትዉ ትኽእሉ ኢኹም። ኣብ ናትካ ሕሳብ እዞም ዝስዕቡ ክትገብር ትኽእል ኢኻ ፥ ምትዕርራይ መፍለይ ሕሳብካ ፥ መርማር ታሪኽ ንግዳዊ ልውውጥ ፣ ምትዕርራይ አባል መጥጽሄት።"),
+        "orderSuccessTitle1":
+            MessageLookupByLibrary.simpleMessage("ትእዛዝ ብዕዉት መገዲ ኣቐሚጥካዮ ኣለኻ"),
+        "orderSuccessTitle2": MessageLookupByLibrary.simpleMessage("ናትካ ሕሳብ"),
+        "orderSummary": MessageLookupByLibrary.simpleMessage("ጸብጻብ ትእዛዛት"),
+        "orderTotal": MessageLookupByLibrary.simpleMessage("ድምር ትእዛዝ"),
+        "orders": MessageLookupByLibrary.simpleMessage("ትእዛዛት"),
+        "outOfStock": MessageLookupByLibrary.simpleMessage("ካብ ዕዳጋ ወጻኢ"),
+        "pageView": MessageLookupByLibrary.simpleMessage("ገጽ ምርኣይ"),
+        "paid": MessageLookupByLibrary.simpleMessage("ተኸፍለ"),
+        "paidStatus": MessageLookupByLibrary.simpleMessage("እተኸፍሎ ደረጃ"),
+        "password": MessageLookupByLibrary.simpleMessage("ፓስዎርድ"),
+        "pasteYourImageUrl":
+            MessageLookupByLibrary.simpleMessage("ናይ ስእልኻ መራኸቢ ቕድሓዮ"),
+        "payByWallet": MessageLookupByLibrary.simpleMessage("ብቦርሳ ምኽፋል"),
+        "payNow": MessageLookupByLibrary.simpleMessage("ሕጂ ክፈል"),
+        "payment": MessageLookupByLibrary.simpleMessage("ክፍሊት"),
+        "paymentMethod": MessageLookupByLibrary.simpleMessage("ኣገባብ ኣከፋፍላ"),
+        "paymentMethods": MessageLookupByLibrary.simpleMessage("ዓይነት ክፍሊት"),
+        "paymentSuccessful": MessageLookupByLibrary.simpleMessage("ክፍሊት ዕዉት"),
+        "pending": MessageLookupByLibrary.simpleMessage("ተጸበ"),
+        "persian": MessageLookupByLibrary.simpleMessage("ፐርሺያን"),
+        "phone": MessageLookupByLibrary.simpleMessage("ተሌፎን"),
+        "phoneEmpty": MessageLookupByLibrary.simpleMessage("ተሌፎን ጥራዩ እዩ"),
+        "phoneHintFormat":
+            MessageLookupByLibrary.simpleMessage("ቅርጺ: +447823456789"),
+        "phoneIsRequired": MessageLookupByLibrary.simpleMessage("ቁጽሪ ስልኪ የድሊ"),
+        "phoneNumber": MessageLookupByLibrary.simpleMessage("ቍጽሪ ተሌፎን"),
+        "phoneNumberVerification":
+            MessageLookupByLibrary.simpleMessage("ቍጽሪ ተሌፎን ምርግጋጽ"),
+        "pickADate": MessageLookupByLibrary.simpleMessage("ዕለትን ግዜን ምረጽ"),
+        "placeMyOrder": MessageLookupByLibrary.simpleMessage("ትእዛዘይ ኣቀምጥ"),
+        "playAll": MessageLookupByLibrary.simpleMessage("ኵሉ ተጻወት"),
+        "pleaseAddPrice": MessageLookupByLibrary.simpleMessage("በጃኻ ዋጋ ኣእቱ"),
+        "pleaseAgreeTerms":
+            MessageLookupByLibrary.simpleMessage("በጃኹም ምስ ውዕልና ተሰማምዑ"),
+        "pleaseAllowAccessCameraGallery": MessageLookupByLibrary.simpleMessage(
+            "በጃኹም ናብ ካሜራን ጋለሪን ክትኣትዉ ፍቐዱሎም"),
+        "pleaseCheckInternet":
+            MessageLookupByLibrary.simpleMessage("በጃኹም ነቲ መስመር ኢንተርነትኩም መርምሩ!"),
+        "pleaseChooseCategory":
+            MessageLookupByLibrary.simpleMessage("በጃኻ ምድብ ምረጽ"),
+        "pleaseEnterProductName":
+            MessageLookupByLibrary.simpleMessage("በጃኻ ስም እቲ ፍርያት ኣእቱ"),
+        "pleaseFillCode": MessageLookupByLibrary.simpleMessage("በጃኻ ኮድካ ምልኣዮ"),
+        "pleaseInput":
+            MessageLookupByLibrary.simpleMessage("በጃኹም ኣብ ኵሉ ባዶ ቦታታት ኣእትዉ"),
+        "pleaseInputFillAllFields":
+            MessageLookupByLibrary.simpleMessage("በጃኹም ኣብ ኵሉ ባዶ ቦታ ኣእትዉ"),
+        "pleaseSelectADate":
+            MessageLookupByLibrary.simpleMessage("ዕለት መቝጸርያ ምረጽ"),
+        "pleaseSelectALocation":
+            MessageLookupByLibrary.simpleMessage("በጃኻ ቦታ ምረጽ"),
+        "pleaseSelectAllAttributes": MessageLookupByLibrary.simpleMessage(
+            "ንነፍሲ ወከፍ ባህርይ እቲ ፍርያት ዚኸውን ኣማራጺ ምረጽ"),
+        "pleaseSelectAttr": MessageLookupByLibrary.simpleMessage(
+            "በጃኻ ንነፍሲ ወከፍ ንጡፍ ባህርይ እንተ ወሓደ 1 ኣማራጺ ምረጽ"),
+        "pleaseSelectImages":
+            MessageLookupByLibrary.simpleMessage("በጃኻ ስእልታት ምረጽ"),
+        "pleaseSelectRequiredOptions":
+            MessageLookupByLibrary.simpleMessage("ብኽብረትኩም ዜድሊ ኣማራጺታት ምረጹ!"),
+        "pleaseSignInBeforeUploading": MessageLookupByLibrary.simpleMessage(
+            "ዝዀነ ይኹን ፋይላት ቅድሚ ምጽዓንኩም ብኽብረትኩም ኣብ ሕሳብካም ተመዝጊብኩም እተዉ."),
+        "pleasefillUpAllCellsProperly": MessageLookupByLibrary.simpleMessage(
+            "* በጃኹም ንዅሉ ባዶ ቦታታት ብግቡእ ምልኣዮ"),
+        "point": MessageLookupByLibrary.simpleMessage("ነጥቢ"),
+        "pointMsgConfigNotFound":
+            MessageLookupByLibrary.simpleMessage("ኣብ ሰርቨር ናይ ቅናስ ነጥቢ ኣይተረኽበን"),
+        "pointMsgEnter":
+            MessageLookupByLibrary.simpleMessage("በጃኻ ነጥቢ ቅናስ ኣእትዎ"),
+        "pointMsgMaximumDiscountPoint":
+            MessageLookupByLibrary.simpleMessage("ዝለዓለ ቅናስ ነጥቢ "),
+        "pointMsgNotEnough": MessageLookupByLibrary.simpleMessage(
+            "እኹል ቅናስ ነጥቢ የብልኩምን ። ጠቕላላ ቅናስ ነጥቢ ቝጽሪ"),
+        "pointMsgOverMaximumDiscountPoint":
+            MessageLookupByLibrary.simpleMessage(
+                "ኣብ ዝለዓለ ቅናስ ነጥቢ ኢኻ በጺሕካ ዘሎኻ "),
+        "pointMsgOverTotalBill": MessageLookupByLibrary.simpleMessage(
+            "The total discount value is over the bill total"),
+        "pointMsgRemove":
+            MessageLookupByLibrary.simpleMessage("ነጥቢ ቅናስ ኣልጊሱ ኣሎ"),
+        "pointMsgSuccess":
+            MessageLookupByLibrary.simpleMessage("ነጥቢ ቅናስ ዋጋ ብዓወት ተዓይሉ"),
+        "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
+            "ነጥብታትካ ኣብ ካርት ከተውዕሎ ዚግብኣካ ናይ ሙግዳል ዋጋ ሕጊ ኣሎ"),
+        "popular": MessageLookupByLibrary.simpleMessage("ህቡብ"),
+        "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
+            "እዚ ኣድራሻ እዚ ኣብቲ ኸባቢ ኣብ ዚርከብ ኤለክትሮኒካዊ መሳርሒ ክዕቀብ እዩ። ኣድራሻ እቲ ተጠቃሚ ግን ኣይኰነን ።"),
+        "postContent": MessageLookupByLibrary.simpleMessage("ትሕዝቶ"),
+        "postFail": MessageLookupByLibrary.simpleMessage("ልጠፋኻ ኣይተፈጥረን"),
+        "postImageFeature": MessageLookupByLibrary.simpleMessage("መልክዕ ስእሊ"),
+        "postManagement": MessageLookupByLibrary.simpleMessage("ምምሕዳር ልጠፋ"),
+        "postProduct": MessageLookupByLibrary.simpleMessage("ፍርያትካ ዘርግሕ"),
+        "postSuccessfully":
+            MessageLookupByLibrary.simpleMessage("ልጠፋኻ ብ ዓወት ተፈጢሩ"),
+        "postTitle": MessageLookupByLibrary.simpleMessage("ኣርእስቲ"),
+        "prepaid": MessageLookupByLibrary.simpleMessage("ኣቐዲምካ ምኽፋል"),
+        "prev": MessageLookupByLibrary.simpleMessage("ዝሓለፈ"),
+        "priceHighToLow":
+            MessageLookupByLibrary.simpleMessage("ዋጋ ፦ ዝለዓለ ናብ ዝተሓተ"),
+        "priceLowToHigh":
+            MessageLookupByLibrary.simpleMessage("ዋጋ፦ ዝተሓተ ናብ ዝለዓለ"),
+        "prices": MessageLookupByLibrary.simpleMessage("ሜኑ"),
+        "printReceipt": MessageLookupByLibrary.simpleMessage("ቅብሊት ሕትመት"),
+        "printer": MessageLookupByLibrary.simpleMessage("ሓታሚት"),
+        "printerNotFound":
+            MessageLookupByLibrary.simpleMessage("ሓታሚት ኣይተረኽበትን"),
+        "printerSelection": MessageLookupByLibrary.simpleMessage("ምርጫ ሓታሚት"),
+        "printing": MessageLookupByLibrary.simpleMessage("ሕትመት..."),
+        "privacyPolicy": MessageLookupByLibrary.simpleMessage("ፖሊሲ ውልቃዊ ጕዳያት"),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "private": MessageLookupByLibrary.simpleMessage("ብሕታዊ"),
+        "product": MessageLookupByLibrary.simpleMessage("ፍርያት"),
+        "productAdded":
+            MessageLookupByLibrary.simpleMessage("እዚ ፍርያት እዚ ተወሲኹ ኣሎ"),
+        "productCreateReview":
+            MessageLookupByLibrary.simpleMessage("ፍርያትካ ድሕሪ ኽለሳ ኺርአ እዩ."),
+        "productName": MessageLookupByLibrary.simpleMessage("ስም ፍርያት"),
+        "productNeedAtLeastOneVariation": MessageLookupByLibrary.simpleMessage(
+            "ዓይነት ፍርያት እንተ ወሓደ ሓደ ዓይነት ለውጢ የድልዮ"),
+        "productNeedNameAndPrice":
+            MessageLookupByLibrary.simpleMessage("ዓይነት ፍርያት ስምን ስሩዕ ዋጋን የድልዮ"),
+        "productType": MessageLookupByLibrary.simpleMessage("ዓይነት ፍርያት"),
+        "products": MessageLookupByLibrary.simpleMessage("ፍርያት"),
+        "publish": MessageLookupByLibrary.simpleMessage("ሕትመት"),
+        "pullToLoadMore": MessageLookupByLibrary.simpleMessage("ዝያዳ ንምጽዓን ወስኽ"),
+        "qtyTotal": m17,
+        "rate": MessageLookupByLibrary.simpleMessage("ገምጋም"),
+        "rateTheApp":
+            MessageLookupByLibrary.simpleMessage("ነዚ ኣፕሊኬሽን ደረጃ ግምጋመ ሃብ"),
+        "rateThisApp":
+            MessageLookupByLibrary.simpleMessage("ነዛ ኣፕሊኬሽን እዚኣ ገምግማ"),
+        "rateThisAppDescription": MessageLookupByLibrary.simpleMessage(
+            "ነዛ ኣፕሊኬሽን እዚኣ ትፈትዋ እንተደኣ ዄንካ በጃኻ ቝሩብ ግዜ ወሲድካ እንደገና ገምግማ/እዚ ምግባርካ ብሓቂ ይሕግዘና ኢዩ ካብ ሓደ ደቒቕ ንላዕሊ ድማ ኣይወስደልካን እዩ ። !"),
+        "rating": MessageLookupByLibrary.simpleMessage("ደረጃ"),
+        "ratingFirst":
+            MessageLookupByLibrary.simpleMessage("ሓሳብካ ቕድሚ ምልኣኽካ በጃኻ ገምግሞ ምሃብ"),
+        "reOrder": MessageLookupByLibrary.simpleMessage("ዳግም ምዕዳግ"),
+        "readReviews": MessageLookupByLibrary.simpleMessage("ምንባብ ርእይቶታት"),
+        "receivedMoney": MessageLookupByLibrary.simpleMessage("ገንዘብ ተቐበለ"),
+        "receiver": MessageLookupByLibrary.simpleMessage("ተቐባሊ"),
+        "recentSearches":
+            MessageLookupByLibrary.simpleMessage("ናይ ቀረባ እዋን ድልያ"),
+        "recentView": MessageLookupByLibrary.simpleMessage("ኣብ ቀረባ እዋን ዝረኣኻዮ"),
+        "recents": MessageLookupByLibrary.simpleMessage("ናይ ቀረባ እዋን"),
+        "recommended": MessageLookupByLibrary.simpleMessage("ብሉጽነቱ መስከረ"),
+        "recurringTotals":
+            MessageLookupByLibrary.simpleMessage("ብተደጋጋሚ ዚርአ ቝጽሪ"),
+        "refresh": MessageLookupByLibrary.simpleMessage("ምሕዳስ"),
+        "refundOrderFailed": MessageLookupByLibrary.simpleMessage(
+            "እቲ ትእዛዝ ኪኽፈሎ ዝቐረበ ሕቶ ኣይተዓወተን"),
+        "refundOrderSuccess":
+            MessageLookupByLibrary.simpleMessage("ትእዛዝካ ብዕዉት መገዲ ኺመልሰልካ ሕተት!!"),
+        "refundRequest": MessageLookupByLibrary.simpleMessage("ናይ ምምላስ ሕቶ"),
+        "refundRequested":
+            MessageLookupByLibrary.simpleMessage("ገንዘብ ኪኽፈሎ ሕቶ ዝቐረበ"),
+        "refunds": MessageLookupByLibrary.simpleMessage("ገንዘብ ምምላስ"),
+        "registerAsVendor":
+            MessageLookupByLibrary.simpleMessage(" ከም ተጠቃሚ ሸያጢ ተመዝገብ"),
+        "registerFailed":
+            MessageLookupByLibrary.simpleMessage("ምዝገባ ከይተዓወተ ተረፈ"),
+        "registerSuccess": MessageLookupByLibrary.simpleMessage("ምዝገባ ተዓወተ"),
+        "regularPrice": MessageLookupByLibrary.simpleMessage("ስሩዕ ዋጋ"),
+        "relatedLayoutTitle":
+            MessageLookupByLibrary.simpleMessage("ከተፍቅሮ እትኽእል ነገራት"),
+        "releaseToLoadMore":
+            MessageLookupByLibrary.simpleMessage("ዝያዳ ንምጻዓን ልቐቖ"),
+        "remove": MessageLookupByLibrary.simpleMessage("ኣልግስ"),
+        "removeFromWishList":
+            MessageLookupByLibrary.simpleMessage("ካብ ዝርዝር ድሌት ኣወግድ"),
+        "requestBooking": MessageLookupByLibrary.simpleMessage("ሕዛእቲ ሕተት"),
+        "requestTooMany": MessageLookupByLibrary.simpleMessage(
+            "ኣብ ውሽጢ ሓጺር ግዜ ብዙሕ ኮድ ሓቲትኩም ኣለኹም. ብኽብረትኩም ጸኒሕኩም ፈትኑ."),
+        "resend": MessageLookupByLibrary.simpleMessage(" ደጊምካ ስደዶ"),
+        "reset": MessageLookupByLibrary.simpleMessage("እንደገና ኣእቱ"),
+        "resetPassword":
+            MessageLookupByLibrary.simpleMessage("እንደገና ምቅያር ፓስዎርድ"),
+        "resetYourPassword":
+            MessageLookupByLibrary.simpleMessage("ፓስዎርድኻ እንደገና ቀይሮ"),
+        "review": MessageLookupByLibrary.simpleMessage("ኣቐዲምካ ርአ"),
+        "reviewApproval": MessageLookupByLibrary.simpleMessage("ግምገማ ኣጽድቆ"),
+        "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "ክለሳኻ ተላኢኹ ተቐባልነት ኪረክብ ይጽበ ኣሎ!"),
+        "reviewSent": MessageLookupByLibrary.simpleMessage("ክለሰኻ ተላኢኹ ኣሎ!"),
+        "reviews": MessageLookupByLibrary.simpleMessage("ግምገማታት"),
+        "romanian": MessageLookupByLibrary.simpleMessage("ሮማንያ"),
+        "russian": MessageLookupByLibrary.simpleMessage("ሩሲያዊ"),
+        "sale": m18,
+        "salePrice": MessageLookupByLibrary.simpleMessage("መሸጣ ዋጋ"),
+        "save": MessageLookupByLibrary.simpleMessage("ምዕቃብ"),
+        "saveAddress": MessageLookupByLibrary.simpleMessage("ኣድራሻ ዓቅብ"),
+        "saveAddressSuccess":
+            MessageLookupByLibrary.simpleMessage("ኣድራሻኻ ተዓቂቡ ኣሎ"),
+        "saveForLater": MessageLookupByLibrary.simpleMessage(" ንደሓር ኣዋህልል"),
+        "saveToWishList": MessageLookupByLibrary.simpleMessage("ናብ ዝርዝር ዓቅብ  "),
+        "scannerCannotScan": MessageLookupByLibrary.simpleMessage(
+            "እዚ ኣቕሓ እዚ ስካን ክግበር ኣይክእልን እዩ"),
+        "scannerLoginFirst": MessageLookupByLibrary.simpleMessage(
+            "ስካን ንምግባር ፈለማ ናብ ኣካውንትኻ ኽትኣቱ ኣሎካ"),
+        "scannerOrderAvailable": MessageLookupByLibrary.simpleMessage(
+            "እዚ ትእዛዝ እዚ ኣብ ኣካውንትኻ ኣይርከብን እዩ"),
+        "search": MessageLookupByLibrary.simpleMessage("ድለ"),
+        "searchByName": MessageLookupByLibrary.simpleMessage("ብስም ድለ..."),
+        "searchForItems": MessageLookupByLibrary.simpleMessage("ፍርያት ድለ"),
+        "searchInput":
+            MessageLookupByLibrary.simpleMessage("በጃኻ ኣብ ዓውዲ ምንዳይ ውጽኢት ጽሓፍ"),
+        "searchOrderId":
+            MessageLookupByLibrary.simpleMessage("መንነት ኣሰራርሓ ድለ..."),
+        "searchPlace": MessageLookupByLibrary.simpleMessage("መድለዪ ቦታ"),
+        "searchingAddress": MessageLookupByLibrary.simpleMessage("ኣድራሻ  ድለ"),
+        "secondsAgo": m19,
+        "seeAll": MessageLookupByLibrary.simpleMessage("ንዅሉ ርአ"),
+        "seeOrder": MessageLookupByLibrary.simpleMessage("ትእዛዝ ርአ"),
+        "seeReviews": MessageLookupByLibrary.simpleMessage("ኽለሳ ርአ"),
+        "select": MessageLookupByLibrary.simpleMessage("ሕረ"),
+        "selectAddress": MessageLookupByLibrary.simpleMessage("ኣድራሻ ምረጽ"),
+        "selectAll": MessageLookupByLibrary.simpleMessage("ንዅሉ ምረጽ"),
+        "selectDates": MessageLookupByLibrary.simpleMessage("ዕለት ምረጽ"),
+        "selectFileCancelled":
+            MessageLookupByLibrary.simpleMessage("ፋይል ሰሪዙ ምረጽ!"),
+        "selectImage": MessageLookupByLibrary.simpleMessage("ስእሊ ምረጽ"),
+        "selectNone": MessageLookupByLibrary.simpleMessage("ዋላ ሓንቲ ኣይትምረጽ"),
+        "selectPrinter": MessageLookupByLibrary.simpleMessage("ሓታሚት ምረጽ"),
+        "selectTheColor": MessageLookupByLibrary.simpleMessage("ሕብርታት ምረጽ"),
+        "selectThePoint": MessageLookupByLibrary.simpleMessage("ነቲ ነጥቢ ምረጽ"),
+        "selectTheQuantity": MessageLookupByLibrary.simpleMessage("ብዝሒ ምረጽ"),
+        "selectTheSize": MessageLookupByLibrary.simpleMessage("ዓቐን ምረጽ"),
+        "send": MessageLookupByLibrary.simpleMessage("ስደድ"),
+        "sendBack": MessageLookupByLibrary.simpleMessage("ተመሊስካ ስደዶ"),
+        "sendSMSCode": MessageLookupByLibrary.simpleMessage("ኮድ ምርካብ"),
+        "serbian": MessageLookupByLibrary.simpleMessage("ሰርብያን"),
+        "setAnAddressInSettingPage": MessageLookupByLibrary.simpleMessage(
+            "በጃኹም ኣድራሻ ኣብቲ ናይ ኣድራሻ ገጽ ኣዳልዉ"),
+        "settings": MessageLookupByLibrary.simpleMessage("ኣቀራርባታት"),
+        "share": MessageLookupByLibrary.simpleMessage("ኣካፍል"),
+        "shipped": MessageLookupByLibrary.simpleMessage("ተላኢኹ"),
+        "shipping": MessageLookupByLibrary.simpleMessage("ዕዳጋ"),
+        "shippingAddress": MessageLookupByLibrary.simpleMessage("መልኣኺ ኣድራሻ"),
+        "shippingMethod": MessageLookupByLibrary.simpleMessage("ቀጥዒ / ቅዲ ምልኣኽ"),
+        "shop": MessageLookupByLibrary.simpleMessage("ዓድግ"),
+        "shopEmail": MessageLookupByLibrary.simpleMessage("ኢ-መይል ድኳን"),
+        "shopName": MessageLookupByLibrary.simpleMessage("ስም ዱካን"),
+        "shopOrders": MessageLookupByLibrary.simpleMessage("ትእዛዝ ዕዳጋ"),
+        "shopPhone": MessageLookupByLibrary.simpleMessage("ዱካን ቴሌፎን"),
+        "shopSlug": MessageLookupByLibrary.simpleMessage("ዱካን ስሉግ"),
+        "shoppingCartItems": m20,
+        "shortDescription": MessageLookupByLibrary.simpleMessage(" ሓጺር መግለጺ"),
+        "showAllMyOrdered":
+            MessageLookupByLibrary.simpleMessage("ኩሉ ትእዛዘይ ኣርኢ"),
+        "showDetails": MessageLookupByLibrary.simpleMessage("ዝርዝር ኣርኢ"),
+        "showGallery": MessageLookupByLibrary.simpleMessage("ጋለሪ ኣርኢ"),
+        "signIn": MessageLookupByLibrary.simpleMessage("እቶ"),
+        "signInWithEmail": MessageLookupByLibrary.simpleMessage("ብኢ-መይል እቶ "),
+        "signUp": MessageLookupByLibrary.simpleMessage("ተመዝገብ"),
+        "signup": MessageLookupByLibrary.simpleMessage("ኣካውንት ክፈት"),
+        "simple": MessageLookupByLibrary.simpleMessage("ቀሊል"),
+        "size": MessageLookupByLibrary.simpleMessage("ዓቐን"),
+        "skip": MessageLookupByLibrary.simpleMessage("ንጠሮ"),
+        "sku": MessageLookupByLibrary.simpleMessage("SKU"),
+        "slovak": MessageLookupByLibrary.simpleMessage("ስሎቫክኛ"),
+        "sold": m21,
+        "soldBy": MessageLookupByLibrary.simpleMessage("ዝሽየጥ ብ"),
+        "somethingWrong": MessageLookupByLibrary.simpleMessage(
+            "ገለ ሽግር ኣጋጢሙ ኣሎ። በጃኻ ጸኒሕካ እንደገና ፈትን።"),
+        "sortBy": MessageLookupByLibrary.simpleMessage("ብቅደም ተከተል"),
+        "spanish": MessageLookupByLibrary.simpleMessage("ስፓኒሽኛ"),
+        "startExploring": MessageLookupByLibrary.simpleMessage("ዳህሳስ ጀምር"),
+        "startShopping": MessageLookupByLibrary.simpleMessage("ምዕዳግ ጀምር"),
+        "state": MessageLookupByLibrary.simpleMessage("State"),
+        "stateIsRequired": MessageLookupByLibrary.simpleMessage("ስም ዞባ የድሊ"),
+        "stateProvince":
+            MessageLookupByLibrary.simpleMessage(" ካውንቲ / ዞባ / ኣውራጃ "),
+        "status": MessageLookupByLibrary.simpleMessage("ኵነታት"),
+        "stock": MessageLookupByLibrary.simpleMessage("ቀረብ"),
+        "stockQuantity": MessageLookupByLibrary.simpleMessage("ብዝሒ ቀረብ "),
+        "stop": MessageLookupByLibrary.simpleMessage("ደው በል"),
+        "storeAddress": MessageLookupByLibrary.simpleMessage("ኣድራሻ ድኳን"),
+        "storeBanner":
+            MessageLookupByLibrary.simpleMessage("ሰንደቕ ዕላማ (Banner)"),
+        "storeBrand": MessageLookupByLibrary.simpleMessage("ብራንድ ድኳን"),
+        "storeClosed":
+            MessageLookupByLibrary.simpleMessage("ሕጂ እቲ ድኳን ተዓጽዩ ኣሎ"),
+        "storeEmail": MessageLookupByLibrary.simpleMessage("ኢ-መይል ድኳን"),
+        "storeInformation": MessageLookupByLibrary.simpleMessage("ሓበሬታ ጸዓን"),
+        "storeListBanner": MessageLookupByLibrary.simpleMessage("ዝርዝር ባንነር"),
+        "storeLocation": MessageLookupByLibrary.simpleMessage("ቦታ ድኳን"),
+        "storeLogo": MessageLookupByLibrary.simpleMessage("ድኳን ምልክት (ሎጎ)"),
+        "storeMobileBanner":
+            MessageLookupByLibrary.simpleMessage("ሞባይል ባንነር ኣቐምጦ"),
+        "storeSettings": MessageLookupByLibrary.simpleMessage("ኩነታት ድኳን"),
+        "storeSliderBanner":
+            MessageLookupByLibrary.simpleMessage("ስላይድ ባንነር ድኳን"),
+        "storeStaticBanner":
+            MessageLookupByLibrary.simpleMessage("ዘይንቀሳቐስ ባንነር ድኳን"),
+        "storeVacation": MessageLookupByLibrary.simpleMessage("ድኳን ናይ ዕረፍቲ ጊዜ"),
+        "stores": MessageLookupByLibrary.simpleMessage("ድኳናት"),
+        "street": MessageLookupByLibrary.simpleMessage("ጐደና"),
+        "street2": MessageLookupByLibrary.simpleMessage("ጐደና 2"),
+        "streetIsRequired":
+            MessageLookupByLibrary.simpleMessage("ናይ ጐደና ስም የድሊ"),
+        "streetName": MessageLookupByLibrary.simpleMessage("ኣድራሻ ጐደና"),
+        "streetNameApartment":
+            MessageLookupByLibrary.simpleMessage("ኣፓርታማ (ኣማራጺ)"),
+        "streetNameBlock": MessageLookupByLibrary.simpleMessage("መፈተሺ ነቝጣ"),
+        "submit": MessageLookupByLibrary.simpleMessage("ኣእቱ"),
+        "submitYourPost": MessageLookupByLibrary.simpleMessage("ልጠፋኻ ኣቕርብ"),
+        "subtotal": MessageLookupByLibrary.simpleMessage("ንኡስ ድምር"),
+        "support": MessageLookupByLibrary.simpleMessage("ደገፍ"),
+        "swahili": MessageLookupByLibrary.simpleMessage("ስዋሂሊ"),
+        "swedish": MessageLookupByLibrary.simpleMessage("ስዊድንኛ"),
+        "tags": MessageLookupByLibrary.simpleMessage("ምልክታት"),
+        "takePicture": MessageLookupByLibrary.simpleMessage("ስእሊ ውሰድ"),
+        "tamil": MessageLookupByLibrary.simpleMessage("ታሚልኛ"),
+        "tapSelectLocation":
+            MessageLookupByLibrary.simpleMessage("ነዚ ቦታ እዚ ንምምራጽ ጠውቕ"),
+        "tax": MessageLookupByLibrary.simpleMessage("ቀረጽ"),
+        "thailand": MessageLookupByLibrary.simpleMessage("ታይ"),
+        "thisDateIsNotAvailable":
+            MessageLookupByLibrary.simpleMessage("እዛ ዕለት እዚኣ ኣይትርከብን እያ"),
+        "thisFeatureDoesNotSupportTheCurrentLanguage":
+            MessageLookupByLibrary.simpleMessage(
+                "እዚ መልክዕ እዚ ነቲ ሕጂ ዘሎ ቛንቋ ኣይድግፎን እዩ"),
+        "thisPlatformNotSupportWebview": MessageLookupByLibrary.simpleMessage(
+            "እዚ መድረኽ እዚ ንወብ ሳይት ዚድግፍ ኣይኰነን"),
+        "thisProductNotSupport":
+            MessageLookupByLibrary.simpleMessage("እዚ ፍርያት እዚ ደገፍ ኣይኰነን"),
+        "tickets": MessageLookupByLibrary.simpleMessage("ቲከት"),
+        "time": MessageLookupByLibrary.simpleMessage("ግዜ"),
+        "title": MessageLookupByLibrary.simpleMessage("ኣርእስቲ"),
+        "topUp": MessageLookupByLibrary.simpleMessage("ምምላእ"),
+        "topUpProductNotFound":
+            MessageLookupByLibrary.simpleMessage("ምምላእ ፍርያት ኣይተረኽበን"),
+        "total": MessageLookupByLibrary.simpleMessage("ድምር"),
+        "totalCartValue": MessageLookupByLibrary.simpleMessage(
+            "ጠቕላላ ድምር ዋጋ ጠለብ እንተ ወሓደ ኪኸውን ኣለዎ"),
+        "totalProducts": m22,
+        "totalTax": MessageLookupByLibrary.simpleMessage("ድምር ግብሪ"),
+        "trackingNumberIs": MessageLookupByLibrary.simpleMessage("መከታተሊ ቁጽሪ"),
+        "trackingPage": MessageLookupByLibrary.simpleMessage("መከታተሊ ገጽ"),
+        "transactionCancelled":
+            MessageLookupByLibrary.simpleMessage("ንግዳዊ ልውውጥ ተሰረዘ"),
+        "transactionDetail":
+            MessageLookupByLibrary.simpleMessage("ዝርዝር ንግዳዊ ልውውጥ"),
+        "transactionFee": MessageLookupByLibrary.simpleMessage("ምትሕልላፍ ክፍሊት"),
+        "transactionResult":
+            MessageLookupByLibrary.simpleMessage("ውጽኢት ንግዳዊ ልውውጥ"),
+        "transfer": MessageLookupByLibrary.simpleMessage("ምትሕልላፍ"),
+        "transferConfirm": MessageLookupByLibrary.simpleMessage("መረጋገጺ ምምሕልላፍ"),
+        "transferErrorMessage": MessageLookupByLibrary.simpleMessage(
+            "ናብዚ ተጠቃሚ እዚ ኸተግዕዝ ኣይትኽእልን ኢኻ"),
+        "transferFailed": MessageLookupByLibrary.simpleMessage("ምትሕልላፍ ዝፈሸለ"),
+        "transferSuccess": MessageLookupByLibrary.simpleMessage("ምምሕልላፍ ሰሊጡ"),
+        "turkish": MessageLookupByLibrary.simpleMessage("ቱርኪ"),
+        "turnOnBle": MessageLookupByLibrary.simpleMessage("ብሉቱዝ ወላዓዮ"),
+        "typeYourMessage":
+            MessageLookupByLibrary.simpleMessage("መልእኽትኻ ኣብዚ ጽሓፍ..."),
+        "ukrainian": MessageLookupByLibrary.simpleMessage("ኡክረንያን"),
+        "unavailable": MessageLookupByLibrary.simpleMessage("የለን"),
+        "undo": MessageLookupByLibrary.simpleMessage("ተመለስ"),
+        "unpaid": MessageLookupByLibrary.simpleMessage("ዘይተኸፍለ"),
+        "update": MessageLookupByLibrary.simpleMessage("ምዕራይ ሓበሬታ መንነት"),
+        "updateFailed":
+            MessageLookupByLibrary.simpleMessage("እዋናዊ ሓበሬታ ኣይተዓወተን"),
+        "updateInfo": MessageLookupByLibrary.simpleMessage("ሓበሬታ ብሓድሽ ምትካአ"),
+        "updatePassword": MessageLookupByLibrary.simpleMessage("ፓስዎርድ ምትዕርራይ"),
+        "updateStatus": MessageLookupByLibrary.simpleMessage("ምዕባለ እዋናዊ ዅነታት"),
+        "updateSuccess":
+            MessageLookupByLibrary.simpleMessage("እዋናዊ ሓበሬታ ተዓወተ!"),
+        "updateUserInfor":
+            MessageLookupByLibrary.simpleMessage("መፍለይ መንነት ሓበሬታ ምትዕርራይ"),
+        "uploadFile": MessageLookupByLibrary.simpleMessage("ፋይል ጽዓን"),
+        "uploadProduct": MessageLookupByLibrary.simpleMessage("ፍርያት ጸዓን"),
+        "uploading": MessageLookupByLibrary.simpleMessage("ምጽዓን"),
+        "url": MessageLookupByLibrary.simpleMessage("ጥብቆ"),
+        "useNow": MessageLookupByLibrary.simpleMessage("ሕጅ ተጠቐም"),
+        "useThisImage": MessageLookupByLibrary.simpleMessage("ነዚ ስእሊ እዚ ተጠቐመሉ"),
+        "userExists": MessageLookupByLibrary.simpleMessage(
+            "እዚ ስም ተጠቃሚ/ኢ-መይል እዚ ኣይተረኽበን."),
+        "username": MessageLookupByLibrary.simpleMessage("ስም ተጠቃሚ ወይ ኢ-መይል"),
+        "usernameAndPasswordRequired":
+            MessageLookupByLibrary.simpleMessage("ስም ተጠቃሚን ፓስወልን የድሊ"),
+        "vacationMessage":
+            MessageLookupByLibrary.simpleMessage("መልእኽቲ ካብ ዕረፍቲ ጊዜ"),
+        "vacationType": MessageLookupByLibrary.simpleMessage("ዓይነት ናይ ዕረፍቲ ጊዜ"),
+        "validUntilDate": m23,
+        "variable": MessageLookupByLibrary.simpleMessage("ተለዋዋጢ"),
+        "variation": MessageLookupByLibrary.simpleMessage("በበይኑ ዝዓይነቱ ፍልልይ"),
+        "vendorAdmin": MessageLookupByLibrary.simpleMessage("ምምሕዳር ሸያጢ"),
+        "vendorInfo": MessageLookupByLibrary.simpleMessage("ሓበሬታ ሸቃጦ"),
+        "verificationCode":
+            MessageLookupByLibrary.simpleMessage("ኮድ ምርግጋጽ (6 ቁጽሪታት)"),
+        "verifySMSCode": MessageLookupByLibrary.simpleMessage("ኣረጋግጽ"),
+        "viaWallet": MessageLookupByLibrary.simpleMessage("ብቦርሳ"),
+        "video": MessageLookupByLibrary.simpleMessage("ቪድዮ"),
+        "vietnamese": MessageLookupByLibrary.simpleMessage("ቬትናምኛ"),
+        "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
+            "ነቲ ኣብ ቀረባ እዋን እተገብረ ንግዳዊ ልውውጥ ርኣዮ"),
+        "visible": MessageLookupByLibrary.simpleMessage("ዚርአ"),
+        "visitStore": MessageLookupByLibrary.simpleMessage("ድኳን ብጻሕ"),
+        "waitForLoad": MessageLookupByLibrary.simpleMessage("ሰእሊ ኽሳዕ ዚጽዓን ተጸበ"),
+        "waitForPost": MessageLookupByLibrary.simpleMessage("ፍርያት ክዝርጋሕ  ምጽባይ"),
+        "waitingForConfirmation":
+            MessageLookupByLibrary.simpleMessage("መረጋገጺ ምጽባይ"),
+        "walletBalance": MessageLookupByLibrary.simpleMessage("ቦርሳ ድምር "),
+        "walletName": MessageLookupByLibrary.simpleMessage("ስም ቦርሳ"),
+        "warning": m24,
+        "warningCurrencyMessageForWallet": m25,
+        "weFoundBlogs": MessageLookupByLibrary.simpleMessage("ብሎግ/ብሎጋት ረኺብና"),
+        "weFoundProducts": m26,
+        "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
+            "ሓድሽ ፍርያት ኣብ ዚርከብሉ ወይ ኣጋጣሚታት ኣብ ዚቐርበሉ እዋን ምልክታ ኽንልእከልካ ኢና ። ነዚ ዅነታት እዚ ወትሩ ኽትቅይሮ ትኽእል ኢኻ።"),
+        "webView": MessageLookupByLibrary.simpleMessage("ወብ ሳይት ምርኣይ"),
+        "week": m27,
+        "welcome": MessageLookupByLibrary.simpleMessage("እንቋዕ ብደሓን መጻእኩም"),
+        "womanCollections":
+            MessageLookupByLibrary.simpleMessage("ናይ ሰበይቲ ፍርያት"),
+        "writeComment": MessageLookupByLibrary.simpleMessage("ሓሳብካ ጽሓፍ"),
+        "writeYourNote": MessageLookupByLibrary.simpleMessage(
+            "ብዛዕባ ትእዛዝካ መዘኻኸሪታት። ንምሳሌ፥ ንኣለኣአኻ ትእዛዝካ ዚኸውን ፍሉይ መዘኻኸሪታት ምጽሓፍ።"),
+        "yearsAgo": m28,
+        "yes": MessageLookupByLibrary.simpleMessage("እወ"),
+        "youCanOnlyOrderSingleStore":
+            MessageLookupByLibrary.simpleMessage("ካብ ሓንቲ ድኳን ጥራይ ክትዕድግ ትኽእል."),
+        "youCanOnlyPurchase":
+            MessageLookupByLibrary.simpleMessage("ክትዕድግ ጥራይ ኢኻ እትኽእል"),
+        "youHaveAssignedToOrder": m29,
+        "youHaveBeenSaveAddressYourLocal":
+            MessageLookupByLibrary.simpleMessage("ኣድራሻኻ ኣብ ሰፈርካ ተዓቒብልካ ኣሎ"),
+        "youHavePoints": MessageLookupByLibrary.simpleMessage("ነጥብታት ኣሎካ"),
+        "youMightAlsoLike":
+            MessageLookupByLibrary.simpleMessage("እዚ እውን ክትፈትዎ ትኽእል ኢኻ"),
+        "youNotBeAsked": MessageLookupByLibrary.simpleMessage(
+            "ድሕሪ ምዝዛሙ ኣብ ዚቕጽል እዋን ኣይክትሕተትን ኢኻ"),
+        "yourAddressExistYourLocal":
+            MessageLookupByLibrary.simpleMessage("ኣድራሻኻ ኣብ ከባቢኻ ኣሎ"),
+        "yourApplicationIsUnderReview":
+            MessageLookupByLibrary.simpleMessage(" ኣፕሊኬሽንካ ኣብ ትሕቲ ምርመራ ኣሎ"),
+        "yourBagIsEmpty":
+            MessageLookupByLibrary.simpleMessage("ቦርሳኻ ጥራዩ እዩ ዘሎ"),
+        "yourBookingDetail": MessageLookupByLibrary.simpleMessage("ዝርዝር ሕዛእትኻ"),
+        "yourEarningsThisMonth":
+            MessageLookupByLibrary.simpleMessage("ናይዚ ወርሕዚ ኣታዊ"),
+        "yourNote": MessageLookupByLibrary.simpleMessage("መዘኻኸሪታት ትእዛዝ (ኣማራጺ)"),
+        "yourOrderHasBeenAdded":
+            MessageLookupByLibrary.simpleMessage("ትእዛዝካ ተወሰኸልካ ኣሎ"),
+        "yourOrders": MessageLookupByLibrary.simpleMessage("ትእዛዝካ"),
+        "yourProductIsUnderReview":
+            MessageLookupByLibrary.simpleMessage("ፍርያትካ ኣብ ትሕቲ ምርመራ ኣሎ"),
+        "yourUsernameEmail":
+            MessageLookupByLibrary.simpleMessage("ስም ተጠቃሚኻ ወይ ኢ-መይልካ"),
+        "zipCode": MessageLookupByLibrary.simpleMessage("ዚፕ / ፖስት ኮድ "),
+        "zipCodeIsRequired": MessageLookupByLibrary.simpleMessage("ዚፕ ኮድ የድሊ")
+      };
+}
diff --git a/lib/generated/intl/messages_tr.dart b/lib/generated/intl/messages_tr.dart
index 7f144131..7665a42c 100644
--- a/lib/generated/intl/messages_tr.dart
+++ b/lib/generated/intl/messages_tr.dart
@@ -144,6 +144,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Son Satışlar"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Tüm ürünler"),
         "allow": MessageLookupByLibrary.simpleMessage("İzin vermek"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Kamera erişimine izin verilsin mi?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Neredeyse tükenmiş"),
         "amount": MessageLookupByLibrary.simpleMessage("Miktar"),
@@ -324,6 +326,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("müşteri notu"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Çek"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danimarkalı"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Koyu Tema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("gösterge paneli"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Veri yok"),
@@ -479,8 +482,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("Ad Soyad"),
         "gallery": MessageLookupByLibrary.simpleMessage("galeri"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("Genel ayarlar"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Bağlantı oluşturuluyor..."),
         "german": MessageLookupByLibrary.simpleMessage("Almanca"),
         "getNotification": MessageLookupByLibrary.simpleMessage("Bildirim al"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Haberdar ol!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Şifre bağlantısı oluştur"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Başlamak"),
@@ -515,6 +521,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Macarca"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Onaylıyorum"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Varım"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Görüntü Özelliği"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Resim Galerisi"),
@@ -634,6 +641,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Önceki veri yok"),
         "noBlog":
             MessageLookupByLibrary.simpleMessage("Opps, makale bulunamadı.."),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Kamera izni verilmez. Lütfen cihazınızın Ayarlarında verin."),
         "noData": MessageLookupByLibrary.simpleMessage("Veri Yok"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Henüz favoriniz yok."),
@@ -843,7 +852,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Baskı..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Gizlilik Politikası"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Gizlilik ve Şartlar"),
         "private": MessageLookupByLibrary.simpleMessage("Özel"),
         "product": MessageLookupByLibrary.simpleMessage("Ürün"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Ürün eklendi"),
@@ -913,6 +923,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Şifre Sıfırla"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Şifreni Sıfırla"),
+        "results": MessageLookupByLibrary.simpleMessage("Sonuçlar"),
         "review": MessageLookupByLibrary.simpleMessage("Gözden Geçir"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("İnceleme Onayı"),
@@ -1172,6 +1183,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Blog(lar) Bulduk"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR kodunu veya Barkodu taramak için kamera erişimine ihtiyacımız var."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Yeni ürünler veya teklifler sunulduğunda size bildirim göndereceğiz. Bu ayarı her zaman ayarlarda değiştirebilirsiniz."),
         "webView": MessageLookupByLibrary.simpleMessage("Web Görünümü"),
diff --git a/lib/generated/intl/messages_uk.dart b/lib/generated/intl/messages_uk.dart
index 4a8cba37..a8a62df5 100644
--- a/lib/generated/intl/messages_uk.dart
+++ b/lib/generated/intl/messages_uk.dart
@@ -147,6 +147,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Останні розпродажі"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Всі товари"),
         "allow": MessageLookupByLibrary.simpleMessage("Дозвольте"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Дозволити доступ до камери?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Майже розпродано"),
         "amount": MessageLookupByLibrary.simpleMessage("сума"),
@@ -332,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Примітка клієнта"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Чеська"),
+        "danish": MessageLookupByLibrary.simpleMessage("Датська"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Темна тема"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Панель приладів"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Дані порожні"),
@@ -493,9 +496,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Галерея"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Загальні налаштування"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Створення посилання..."),
         "german": MessageLookupByLibrary.simpleMessage("Німецька"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Отримати повідомлення"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Отримуйте сповіщення!"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage(
             "Отримати посилання на пароль"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Почати"),
@@ -531,6 +538,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Угорська"),
         "hungary": MessageLookupByLibrary.simpleMessage("Угорська"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Я погоджуюся з"),
+        "imIn": MessageLookupByLibrary.simpleMessage("я з вами"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Особливість зображення"),
         "imageGallery":
@@ -654,6 +662,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Немає попереднього елемента історії"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Опс, блог, схоже, більше не існує"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Дозвіл на камеру не надається. Надайте це в налаштуваннях свого пристрою."),
         "noData": MessageLookupByLibrary.simpleMessage("Більше немає даних"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Ще немає вибраних."),
@@ -872,7 +882,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Друк ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Політика конфіденційності"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Конфіденційність та умови"),
         "private": MessageLookupByLibrary.simpleMessage("Приватний"),
         "product": MessageLookupByLibrary.simpleMessage("товар"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Товар додано"),
@@ -943,6 +954,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Скинути пароль"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Скинути пароль"),
+        "results": MessageLookupByLibrary.simpleMessage("результати"),
         "review": MessageLookupByLibrary.simpleMessage("Попередній перегляд"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Схвалення перевірки"),
@@ -1220,6 +1232,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Ми знайшли блог (и)"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Нам потрібен доступ до камери, щоб відсканувати QR-код або штрих-код."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Ми надішлемо вам сповіщення, коли з’являться нові продукти або пропозиції. Ви завжди можете змінити це налаштування в налаштуваннях."),
         "webView": MessageLookupByLibrary.simpleMessage("Веб-перегляд"),
diff --git a/lib/generated/intl/messages_uz.dart b/lib/generated/intl/messages_uz.dart
index b4ee8779..66228444 100644
--- a/lib/generated/intl/messages_uz.dart
+++ b/lib/generated/intl/messages_uz.dart
@@ -150,6 +150,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allProducts":
             MessageLookupByLibrary.simpleMessage("Barcha mahsulotlar"),
         "allow": MessageLookupByLibrary.simpleMessage("Ruxsat bering"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Kameradan foydalanishga ruxsat berilsinmi?"),
         "almostSoldOut":
             MessageLookupByLibrary.simpleMessage("Deyarli sotilgan"),
         "amount": MessageLookupByLibrary.simpleMessage("Miqdor"),
@@ -338,6 +340,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Xaridor eslatmasi"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Chexiya"),
+        "danish": MessageLookupByLibrary.simpleMessage("Daniya"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Qorong\'u mavzu"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Asboblar paneli"),
         "dataEmpty":
@@ -505,9 +508,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "gallery": MessageLookupByLibrary.simpleMessage("Galereya"),
         "generalSetting":
             MessageLookupByLibrary.simpleMessage("Umumiy sozlash"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Havola yaratilmoqda..."),
         "german": MessageLookupByLibrary.simpleMessage("Nemis"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Bildirishnoma oling"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Xabar oling!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Parol havolasini oling"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Boshlash"),
@@ -546,6 +552,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("Venger"),
         "hungary": MessageLookupByLibrary.simpleMessage("Venger"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Men roziman"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Men kirdim"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("Rasm xususiyati"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("Rasm galereyasi"),
         "imageNetwork":
@@ -673,6 +680,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Tarix elementi yo\'q"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Afsuski, blog endi yo\'qdek tuyuladi"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Kameraga ruxsat berilmagan. Iltimos, uni qurilmangiz sozlamalarida bering."),
         "noData":
             MessageLookupByLibrary.simpleMessage("Boshqa ma\'lumotlar yo\'q"),
         "noFavoritesYet":
@@ -897,7 +906,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Chop etilmoqda..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Maxfiylik siyosati"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Maxfiylik va Shartlar"),
         "private": MessageLookupByLibrary.simpleMessage("Xususiy"),
         "product": MessageLookupByLibrary.simpleMessage("Mahsulot"),
         "productAdded":
@@ -973,6 +983,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Parolni qayta tiklash"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Parolni tiklash"),
+        "results": MessageLookupByLibrary.simpleMessage("natijalar"),
         "review": MessageLookupByLibrary.simpleMessage("Oldindan ko\'rish"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("Tasdiqlash"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
@@ -1251,6 +1262,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs":
             MessageLookupByLibrary.simpleMessage("Biz bloglarni topdik"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR-kod yoki shtrix-kodni skanerlash uchun bizga kamera ruxsati kerak."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Yangi mahsulotlar yoki takliflar mavjud bo\'lganda sizga bildirishnoma yuboramiz. Ushbu sozlamani istalgan vaqtda sozlamalarda o\'zgartirishingiz mumkin."),
         "webView": MessageLookupByLibrary.simpleMessage("Veb ko\'rinishi"),
diff --git a/lib/generated/intl/messages_vi.dart b/lib/generated/intl/messages_vi.dart
index e11dad4f..5fdd7ca9 100644
--- a/lib/generated/intl/messages_vi.dart
+++ b/lib/generated/intl/messages_vi.dart
@@ -146,6 +146,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("Bán hàng mới nhất"),
         "allProducts": MessageLookupByLibrary.simpleMessage("Tất cả sản phẩm"),
         "allow": MessageLookupByLibrary.simpleMessage("Cho phép"),
+        "allowCameraAccess":
+            MessageLookupByLibrary.simpleMessage("Cho phép truy cập Máy ảnh?"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("Sắp bán hết"),
         "amount": MessageLookupByLibrary.simpleMessage("Số tiền"),
         "anyAttr": m0,
@@ -330,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Lưu ý khách hàng"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Séc"),
+        "danish": MessageLookupByLibrary.simpleMessage("người Đan Mạch"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Giao diện tối"),
         "dashboard": MessageLookupByLibrary.simpleMessage("bảng điều khiển"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -487,9 +490,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("Họ và tên"),
         "gallery": MessageLookupByLibrary.simpleMessage("BỘ SƯU TẬP"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("Cài đặt chung"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Đang tạo liên kết ..."),
         "german": MessageLookupByLibrary.simpleMessage("Tiếng Đức"),
         "getNotification":
             MessageLookupByLibrary.simpleMessage("Lấy thông báo"),
+        "getNotified":
+            MessageLookupByLibrary.simpleMessage("Nhận được thông báo!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Tạo đường dẫn cho mật khẩu"),
         "getStarted": MessageLookupByLibrary.simpleMessage("Bắt đầu"),
@@ -524,6 +531,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("người Hungary"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("Tôi đồng ý với"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Tôi tham gia"),
         "imageFeature":
             MessageLookupByLibrary.simpleMessage("Tính năng Hình ảnh"),
         "imageGallery":
@@ -648,6 +656,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage(
             "Opps, the blog seems no longer exist"),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Không có quyền đối với máy ảnh được cấp. Vui lòng cấp nó trong Cài đặt của thiết bị của bạn."),
         "noData": MessageLookupByLibrary.simpleMessage("Không có dữ liệu"),
         "noFavoritesYet":
             MessageLookupByLibrary.simpleMessage("Chưa có yêu thích nào"),
@@ -864,7 +874,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Đang in ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Chính sách bảo mật"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Quyền riêng tư & Điều khoản"),
         "private": MessageLookupByLibrary.simpleMessage("Riêng tư"),
         "product": MessageLookupByLibrary.simpleMessage("Sản phẩm"),
         "productAdded":
@@ -935,6 +946,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Cài lại mật khẩu"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Cài lại mật khẩu của bạn"),
+        "results": MessageLookupByLibrary.simpleMessage("các kết quả"),
         "review": MessageLookupByLibrary.simpleMessage("Đang duyệt"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Xem xét phê duyệt"),
@@ -1202,6 +1214,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage(
             "Chúng tôi đã tìm thấy (các) Blog"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "Chúng tôi cần quyền truy cập máy ảnh để quét mã QR hoặc mã vạch."),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "Chúng tôi sẽ gửi thông báo cho bạn khi có sản phẩm mới hoặc có ưu đãi. Bạn luôn có thể thay đổi cài đặt này trong cài đặt."),
         "webView": MessageLookupByLibrary.simpleMessage("Chế độ xem web"),
diff --git a/lib/generated/intl/messages_zh.dart b/lib/generated/intl/messages_zh.dart
index cb3481d7..ce95652d 100644
--- a/lib/generated/intl/messages_zh.dart
+++ b/lib/generated/intl/messages_zh.dart
@@ -131,6 +131,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("最新销售"),
         "allProducts": MessageLookupByLibrary.simpleMessage("所有产品"),
         "allow": MessageLookupByLibrary.simpleMessage("允许"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage("允许相机访问？"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("几乎售罄"),
         "amount": MessageLookupByLibrary.simpleMessage("量"),
         "anyAttr": m0,
@@ -274,6 +275,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("客户须知"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("捷克"),
+        "danish": MessageLookupByLibrary.simpleMessage("丹麦"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("黑暗主題"),
         "dashboard": MessageLookupByLibrary.simpleMessage("仪表板"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("数据为空"),
@@ -399,8 +401,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("全名"),
         "gallery": MessageLookupByLibrary.simpleMessage("画廊"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("通用设置"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage("正在生成链接..."),
         "german": MessageLookupByLibrary.simpleMessage("德文"),
         "getNotification": MessageLookupByLibrary.simpleMessage("得到通知"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("得到通知！"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage("获取密码链接"),
         "getStarted": MessageLookupByLibrary.simpleMessage("开始吧"),
         "goBack": MessageLookupByLibrary.simpleMessage("回去"),
@@ -430,6 +434,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("匈牙利"),
         "hungary": MessageLookupByLibrary.simpleMessage("Hungary"),
         "iAgree": MessageLookupByLibrary.simpleMessage("我同意"),
+        "imIn": MessageLookupByLibrary.simpleMessage("算我一个"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("图片特征"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("图库"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("影像网络"),
@@ -520,6 +525,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noBackHistoryItem":
             MessageLookupByLibrary.simpleMessage("No back history item"),
         "noBlog": MessageLookupByLibrary.simpleMessage("哎呀，博客好像不存在了"),
+        "noCameraPermissionIsGranted":
+            MessageLookupByLibrary.simpleMessage("未授予相机权限。请在您设备的设置中授予它。"),
         "noData": MessageLookupByLibrary.simpleMessage("没有更多数据"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage("尚无收藏。"),
         "noFileToDownload": MessageLookupByLibrary.simpleMessage("没有要下载的文件。"),
@@ -682,7 +689,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("打印机选择"),
         "printing": MessageLookupByLibrary.simpleMessage("印刷..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隐私政策"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("隐私权与条款"),
         "private": MessageLookupByLibrary.simpleMessage("私人的"),
         "product": MessageLookupByLibrary.simpleMessage("产品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("产品已添加"),
@@ -736,6 +743,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("重启"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("重设密码"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("重置你的密码"),
+        "results": MessageLookupByLibrary.simpleMessage("结果"),
         "review": MessageLookupByLibrary.simpleMessage("评论"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("审核批准"),
         "reviewPendingApproval":
@@ -936,6 +944,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("我们找到了博客"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo":
+            MessageLookupByLibrary.simpleMessage("我们需要相机访问权限来扫描二维码或条形码。"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "当有新产品或优惠可用时，我们会向您发送通知。您可以随时在设置中更改此设置。"),
         "webView": MessageLookupByLibrary.simpleMessage("网页浏览"),
diff --git a/lib/generated/intl/messages_zh_CN.dart b/lib/generated/intl/messages_zh_CN.dart
index be35dfa7..57e795d8 100644
--- a/lib/generated/intl/messages_zh_CN.dart
+++ b/lib/generated/intl/messages_zh_CN.dart
@@ -131,6 +131,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("所有订单"),
         "allProducts": MessageLookupByLibrary.simpleMessage("所有商品"),
         "allow": MessageLookupByLibrary.simpleMessage("允许"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage("允许相机访问？"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("几乎售罄"),
         "amount": MessageLookupByLibrary.simpleMessage("量"),
         "anyAttr": m0,
@@ -276,6 +277,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("客户备注"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("捷克"),
+        "danish": MessageLookupByLibrary.simpleMessage("丹麦"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("暗黑主题"),
         "dashboard": MessageLookupByLibrary.simpleMessage("仪表板"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("没有数据"),
@@ -400,8 +402,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("全名"),
         "gallery": MessageLookupByLibrary.simpleMessage("画廊"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("通用设置"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage("正在生成链接..."),
         "german": MessageLookupByLibrary.simpleMessage("德语"),
         "getNotification": MessageLookupByLibrary.simpleMessage("收到通知"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("得到通知！"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage("获取密码链接"),
         "getStarted": MessageLookupByLibrary.simpleMessage("开始吧"),
         "goBack": MessageLookupByLibrary.simpleMessage("回去"),
@@ -431,6 +435,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("匈牙利"),
         "hungary": MessageLookupByLibrary.simpleMessage("匈牙利"),
         "iAgree": MessageLookupByLibrary.simpleMessage("我同意"),
+        "imIn": MessageLookupByLibrary.simpleMessage("算我一个"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("特色图像"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("图片库"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("影像网络"),
@@ -520,6 +525,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "no": MessageLookupByLibrary.simpleMessage("不"),
         "noBackHistoryItem": MessageLookupByLibrary.simpleMessage("没有回溯历史项目"),
         "noBlog": MessageLookupByLibrary.simpleMessage("哎呀，博客似乎不再存在"),
+        "noCameraPermissionIsGranted":
+            MessageLookupByLibrary.simpleMessage("未授予相机权限。请在您设备的设置中授予它。"),
         "noData": MessageLookupByLibrary.simpleMessage("没有更多数据"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage("还没有收藏。"),
         "noFileToDownload": MessageLookupByLibrary.simpleMessage("没有可下载的文件。"),
@@ -681,7 +688,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("选择打印机"),
         "printing": MessageLookupByLibrary.simpleMessage("打印中..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隐私政策"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("隐私权与条款"),
         "private": MessageLookupByLibrary.simpleMessage("私人"),
         "product": MessageLookupByLibrary.simpleMessage("商品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("商品已新增"),
@@ -736,6 +743,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("重设"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("重设密码"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("重置您的密码"),
+        "results": MessageLookupByLibrary.simpleMessage("结果"),
         "review": MessageLookupByLibrary.simpleMessage("评论"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("审核批准"),
         "reviewPendingApproval":
@@ -936,6 +944,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("我们找到了博客"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo":
+            MessageLookupByLibrary.simpleMessage("我们需要相机访问权限来扫描二维码或条形码。"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "当有新产品或优惠可用时，我们会向您发送通知。您可以随时在设置中更改此设置。"),
         "webView": MessageLookupByLibrary.simpleMessage("网页视图"),
diff --git a/lib/generated/intl/messages_zh_TW.dart b/lib/generated/intl/messages_zh_TW.dart
index 6bced8b4..60a9e769 100644
--- a/lib/generated/intl/messages_zh_TW.dart
+++ b/lib/generated/intl/messages_zh_TW.dart
@@ -131,6 +131,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "allOrders": MessageLookupByLibrary.simpleMessage("所有訂單"),
         "allProducts": MessageLookupByLibrary.simpleMessage("所有商品"),
         "allow": MessageLookupByLibrary.simpleMessage("允許"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage("允許相機訪問？"),
         "almostSoldOut": MessageLookupByLibrary.simpleMessage("幾乎售罄"),
         "amount": MessageLookupByLibrary.simpleMessage("量"),
         "anyAttr": m0,
@@ -276,6 +277,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("客戶備註"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("捷克"),
+        "danish": MessageLookupByLibrary.simpleMessage("丹麥"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("暗黑主題"),
         "dashboard": MessageLookupByLibrary.simpleMessage("儀表板"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("沒有數據"),
@@ -400,8 +402,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "fullName": MessageLookupByLibrary.simpleMessage("全名"),
         "gallery": MessageLookupByLibrary.simpleMessage("畫廊"),
         "generalSetting": MessageLookupByLibrary.simpleMessage("通用設置"),
+        "generatingLink": MessageLookupByLibrary.simpleMessage("正在生成鏈接..."),
         "german": MessageLookupByLibrary.simpleMessage("德語"),
         "getNotification": MessageLookupByLibrary.simpleMessage("收到通知"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("得到通知！"),
         "getPasswordLink": MessageLookupByLibrary.simpleMessage("獲取密碼鏈接"),
         "getStarted": MessageLookupByLibrary.simpleMessage("開始吧"),
         "goBack": MessageLookupByLibrary.simpleMessage("回去"),
@@ -431,6 +435,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "hungarian": MessageLookupByLibrary.simpleMessage("匈牙利"),
         "hungary": MessageLookupByLibrary.simpleMessage("匈牙利"),
         "iAgree": MessageLookupByLibrary.simpleMessage("我同意"),
+        "imIn": MessageLookupByLibrary.simpleMessage("算我一個"),
         "imageFeature": MessageLookupByLibrary.simpleMessage("特色圖像"),
         "imageGallery": MessageLookupByLibrary.simpleMessage("圖片庫"),
         "imageNetwork": MessageLookupByLibrary.simpleMessage("影像網絡"),
@@ -520,6 +525,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "no": MessageLookupByLibrary.simpleMessage("不"),
         "noBackHistoryItem": MessageLookupByLibrary.simpleMessage("沒有回溯歷史項目"),
         "noBlog": MessageLookupByLibrary.simpleMessage("哎呀，博客似乎不再存在"),
+        "noCameraPermissionIsGranted":
+            MessageLookupByLibrary.simpleMessage("未授予相機權限。請在您設備的設置中授予它。"),
         "noData": MessageLookupByLibrary.simpleMessage("沒有更多數據"),
         "noFavoritesYet": MessageLookupByLibrary.simpleMessage("還沒有收藏。"),
         "noFileToDownload": MessageLookupByLibrary.simpleMessage("沒有可下載的文件。"),
@@ -681,7 +688,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("選擇列印機"),
         "printing": MessageLookupByLibrary.simpleMessage("列印中..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隱私政策"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("隱私權與條款"),
         "private": MessageLookupByLibrary.simpleMessage("私人"),
         "product": MessageLookupByLibrary.simpleMessage("商品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("商品已新增"),
@@ -736,6 +743,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("重設"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("重設密碼"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("重置您的密碼"),
+        "results": MessageLookupByLibrary.simpleMessage("結果"),
         "review": MessageLookupByLibrary.simpleMessage("評論"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("審核批准"),
         "reviewPendingApproval":
@@ -936,6 +944,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "warningCurrencyMessageForWallet": m25,
         "weFoundBlogs": MessageLookupByLibrary.simpleMessage("我們找到了博客"),
         "weFoundProducts": m26,
+        "weNeedCameraAccessTo":
+            MessageLookupByLibrary.simpleMessage("我們需要相機訪問權限來掃描二維碼或條形碼。"),
         "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
             "當有新產品或優惠可用時，我們會向您發送通知。您可以隨時在設置中更改此設置。"),
         "webView": MessageLookupByLibrary.simpleMessage("網頁視圖"),
diff --git a/lib/generated/l10n.dart b/lib/generated/l10n.dart
index 21ebb92a..90a50fdb 100644
--- a/lib/generated/l10n.dart
+++ b/lib/generated/l10n.dart
@@ -970,10 +970,10 @@ class S {
     );
   }
 
-  /// `LogIn`
+  /// `Login`
   String get login {
     return Intl.message(
-      'LogIn',
+      'Login',
       name: 'login',
       desc: '',
       args: [],
@@ -1810,10 +1810,10 @@ class S {
     );
   }
 
-  /// `The Language is updated successfully, please restart the APP`
+  /// `The Language is updated successfully`
   String get languageSuccess {
     return Intl.message(
-      'The Language is updated successfully, please restart the APP',
+      'The Language is updated successfully',
       name: 'languageSuccess',
       desc: '',
       args: [],
@@ -7900,10 +7900,10 @@ class S {
     );
   }
 
-  /// `We will send you notifications when new products are available or offers are available. You can always change this setting in the settings.`
+  /// `We will send you notifications when new products are available or offers are available. You can always turn it off in the settings.`
   String get weWillSendYouNotification {
     return Intl.message(
-      'We will send you notifications when new products are available or offers are available. You can always change this setting in the settings.',
+      'We will send you notifications when new products are available or offers are available. You can always turn it off in the settings.',
       name: 'weWillSendYouNotification',
       desc: '',
       args: [],
@@ -8070,15 +8070,175 @@ class S {
     );
   }
 
-  /// ``
+  /// `Privacy & Terms`
   String get privacyTerms {
     return Intl.message(
-      '',
+      'Privacy & Terms',
       name: 'privacyTerms',
       desc: '',
       args: [],
     );
   }
+
+  /// `Results`
+  String get results {
+    return Intl.message(
+      'Results',
+      name: 'results',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Danish`
+  String get danish {
+    return Intl.message(
+      'Danish',
+      name: 'danish',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Get notified!`
+  String get getNotified {
+    return Intl.message(
+      'Get notified!',
+      name: 'getNotified',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `I'm in`
+  String get imIn {
+    return Intl.message(
+      'I\'m in',
+      name: 'imIn',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Allow Camera access?`
+  String get allowCameraAccess {
+    return Intl.message(
+      'Allow Camera access?',
+      name: 'allowCameraAccess',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `We need camera access to scan for QR code or Bar code.`
+  String get weNeedCameraAccessTo {
+    return Intl.message(
+      'We need camera access to scan for QR code or Bar code.',
+      name: 'weNeedCameraAccessTo',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `No camera permission is granted. Please grant it in your device's Settings.`
+  String get noCameraPermissionIsGranted {
+    return Intl.message(
+      'No camera permission is granted. Please grant it in your device\'s Settings.',
+      name: 'noCameraPermissionIsGranted',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Generating link...`
+  String get generatingLink {
+    return Intl.message(
+      'Generating link...',
+      name: 'generatingLink',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Invalid Year of Birth`
+  String get invalidYearOfBirth {
+    return Intl.message(
+      'Invalid Year of Birth',
+      name: 'invalidYearOfBirth',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Failed to generate link`
+  String get failedToGenerateLink {
+    return Intl.message(
+      'Failed to generate link',
+      name: 'failedToGenerateLink',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `COD Extra Fee`
+  String get codExtraFee {
+    return Intl.message(
+      'COD Extra Fee',
+      name: 'codExtraFee',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `More from {store}`
+  String moreFromStore(Object store) {
+    return Intl.message(
+      'More from $store',
+      name: 'moreFromStore',
+      desc: '',
+      args: [store],
+    );
+  }
+
+  /// `Store`
+  String get store {
+    return Intl.message(
+      'Store',
+      name: 'store',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Changed currency to {currency}`
+  String changedCurrencyTo(Object currency) {
+    return Intl.message(
+      'Changed currency to $currency',
+      name: 'changedCurrencyTo',
+      desc: '',
+      args: [currency],
+    );
+  }
+
+  /// `Appearance`
+  String get appearance {
+    return Intl.message(
+      'Appearance',
+      name: 'appearance',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Light Theme`
+  String get lightTheme {
+    return Intl.message(
+      'Light Theme',
+      name: 'lightTheme',
+      desc: '',
+      args: [],
+    );
+  }
 }
 
 class AppLocalizationDelegate extends LocalizationsDelegate<S> {
@@ -8124,6 +8284,7 @@ class AppLocalizationDelegate extends LocalizationsDelegate<S> {
       Locale.fromSubtags(languageCode: 'sw'),
       Locale.fromSubtags(languageCode: 'ta'),
       Locale.fromSubtags(languageCode: 'th'),
+      Locale.fromSubtags(languageCode: 'ti'),
       Locale.fromSubtags(languageCode: 'tr'),
       Locale.fromSubtags(languageCode: 'uk'),
       Locale.fromSubtags(languageCode: 'uz'),
diff --git a/lib/generated/languages/cupertino/cupertino_ti.dart b/lib/generated/languages/cupertino/cupertino_ti.dart
new file mode 100644
index 00000000..8419a00d
--- /dev/null
+++ b/lib/generated/languages/cupertino/cupertino_ti.dart
@@ -0,0 +1,164 @@
+import 'package:flutter_localizations/flutter_localizations.dart';
+import 'package:intl/intl.dart' as intl;
+
+class CupertinoLocalizationTi extends GlobalCupertinoLocalizations {
+  /// Create an instance of the translation bundle for English.
+  ///
+  /// For details on the meaning of the arguments, see [GlobalCupertinoLocalizations].
+  const CupertinoLocalizationTi({
+    String localeName = 'ti',
+    required intl.DateFormat fullYearFormat,
+    required intl.DateFormat dayFormat,
+    required intl.DateFormat mediumDateFormat,
+    required intl.DateFormat singleDigitHourFormat,
+    required intl.DateFormat singleDigitMinuteFormat,
+    required intl.DateFormat doubleDigitMinuteFormat,
+    required intl.DateFormat singleDigitSecondFormat,
+    required intl.NumberFormat decimalFormat,
+  }) : super(
+          localeName: localeName,
+          fullYearFormat: fullYearFormat,
+          dayFormat: dayFormat,
+          mediumDateFormat: mediumDateFormat,
+          singleDigitHourFormat: singleDigitHourFormat,
+          singleDigitMinuteFormat: singleDigitMinuteFormat,
+          doubleDigitMinuteFormat: doubleDigitMinuteFormat,
+          singleDigitSecondFormat: singleDigitSecondFormat,
+          decimalFormat: decimalFormat,
+        );
+
+  @override
+  String get firstPageTooltip => '';
+
+  @override
+  String get lastPageTooltip => '';
+
+  @override
+  String get alertDialogLabel => 'Alert';
+
+  @override
+  String get anteMeridiemAbbreviation => 'AM';
+
+  @override
+  String get copyButtonLabel => 'Copy';
+
+  @override
+  String get cutButtonLabel => 'Cut';
+
+  @override
+  String get datePickerDateOrderString => 'mdy';
+
+  @override
+  String get datePickerDateTimeOrderString => 'date_time_dayPeriod';
+
+  @override
+  String? get datePickerHourSemanticsLabelFew => null;
+
+  @override
+  String? get datePickerHourSemanticsLabelMany => null;
+
+  @override
+  String? get datePickerHourSemanticsLabelOne => r"$hour o'clock";
+
+  @override
+  String get datePickerHourSemanticsLabelOther => r"$hour o'clock";
+
+  @override
+  String? get datePickerHourSemanticsLabelTwo => null;
+
+  @override
+  String? get datePickerHourSemanticsLabelZero => null;
+
+  @override
+  String? get datePickerMinuteSemanticsLabelFew => null;
+
+  @override
+  String? get datePickerMinuteSemanticsLabelMany => null;
+
+  @override
+  String? get datePickerMinuteSemanticsLabelOne => '1 minute';
+
+  @override
+  String get datePickerMinuteSemanticsLabelOther => r'$minute minutes';
+
+  @override
+  String? get datePickerMinuteSemanticsLabelTwo => null;
+
+  @override
+  String? get datePickerMinuteSemanticsLabelZero => null;
+
+  @override
+  String get modalBarrierDismissLabel => 'Dismiss';
+
+  @override
+  String get pasteButtonLabel => 'Paste';
+
+  @override
+  String get postMeridiemAbbreviation => 'PM';
+
+  @override
+  String get searchTextFieldPlaceholderLabel => 'Search';
+
+  @override
+  String get selectAllButtonLabel => 'Select All';
+
+  @override
+  String get tabSemanticsLabelRaw => r'Tab $tabIndex of $tabCount';
+
+  @override
+  String? get timerPickerHourLabelFew => null;
+
+  @override
+  String? get timerPickerHourLabelMany => null;
+
+  @override
+  String? get timerPickerHourLabelOne => 'hour';
+
+  @override
+  String get timerPickerHourLabelOther => 'hours';
+
+  @override
+  String? get timerPickerHourLabelTwo => null;
+
+  @override
+  String? get timerPickerHourLabelZero => null;
+
+  @override
+  String? get timerPickerMinuteLabelFew => null;
+
+  @override
+  String? get timerPickerMinuteLabelMany => null;
+
+  @override
+  String? get timerPickerMinuteLabelOne => 'min.';
+
+  @override
+  String get timerPickerMinuteLabelOther => 'min.';
+
+  @override
+  String? get timerPickerMinuteLabelTwo => null;
+
+  @override
+  String? get timerPickerMinuteLabelZero => null;
+
+  @override
+  String? get timerPickerSecondLabelFew => null;
+
+  @override
+  String? get timerPickerSecondLabelMany => null;
+
+  @override
+  String? get timerPickerSecondLabelOne => 'sec.';
+
+  @override
+  String get timerPickerSecondLabelOther => 'sec.';
+
+  @override
+  String? get timerPickerSecondLabelTwo => null;
+
+  @override
+  String? get timerPickerSecondLabelZero => null;
+
+  @override
+  String get todayLabel => 'Today';
+}
diff --git a/lib/generated/languages/cupertino/index.dart b/lib/generated/languages/cupertino/index.dart
index 5b2bfa53..a6a5f654 100644
--- a/lib/generated/languages/cupertino/index.dart
+++ b/lib/generated/languages/cupertino/index.dart
@@ -6,8 +6,11 @@ import 'package:flutter_localizations/src/utils/date_localizations.dart'
     as util;
 import 'package:intl/intl.dart' as intl;
 import 'cupertino_ku.dart';
+import 'cupertino_ti.dart';
 
-const kCustomizeSupportedLanguages = ['ku'];
+import '../local_widgets_localizations.dart';
+
+const kCustomizeSupportedLanguages = ['ku', 'ti'];
 
 class SubCupertinoLocalizationsDelegate
     extends LocalizationsDelegate<CupertinoLocalizations> {
@@ -42,6 +45,16 @@ class SubCupertinoLocalizationsDelegate
             doubleDigitMinuteFormat: doubleDigitMinuteFormat,
             singleDigitSecondFormat: singleDigitSecondFormat,
             decimalFormat: decimalFormat);
+      case 'ti':
+        return CupertinoLocalizationTi(
+            fullYearFormat: fullYearFormat,
+            dayFormat: dayFormat,
+            mediumDateFormat: mediumDateFormat,
+            singleDigitHourFormat: singleDigitHourFormat,
+            singleDigitMinuteFormat: singleDigitMinuteFormat,
+            doubleDigitMinuteFormat: doubleDigitMinuteFormat,
+            singleDigitSecondFormat: singleDigitSecondFormat,
+            decimalFormat: decimalFormat);
     }
     assert(false,
         'getCustomizeCupertinoTranslation() called for unsupported locale "$locale"');
@@ -61,6 +74,12 @@ class SubCupertinoLocalizationsDelegate
         'might be $localeName',
       );
 
+      // Use the number formats for 'ar' instead for the RTL and 'en' for the LTR.
+      String numberFormat =
+          LocalWidgetsLocalizations.rtlLanguages.contains(localeName)
+              ? 'ar'
+              : 'en';
+
       late intl.DateFormat fullYearFormat;
       late intl.DateFormat dayFormat;
       late intl.DateFormat mediumDateFormat;
@@ -81,7 +100,7 @@ class SubCupertinoLocalizationsDelegate
         singleDigitMinuteFormat = intl.DateFormat.m(locale);
         doubleDigitMinuteFormat = intl.DateFormat('mm', locale);
         singleDigitSecondFormat = intl.DateFormat.s(locale);
-        decimalFormat = intl.NumberFormat('#,##0.###', 'en_US');
+        decimalFormat = intl.NumberFormat('#,##0.###', numberFormat);
       }
 
       if (intl.DateFormat.localeExists(localeName)) {
diff --git a/lib/generated/languages/ku_language.dart b/lib/generated/languages/ku_language.dart
deleted file mode 100644
index a9ce6e19..00000000
--- a/lib/generated/languages/ku_language.dart
+++ /dev/null
@@ -1,704 +0,0 @@
-import 'package:flutter/material.dart';
-import 'package:flutter_localizations/flutter_localizations.dart';
-import 'package:intl/intl.dart' as intl;
-
-class CustomizeLocalizationKu extends GlobalMaterialLocalizations {
-  /// Create an instance of the translation bundle for Kurdish.
-  const CustomizeLocalizationKu({
-    String localeName = 'ku',
-    required intl.DateFormat fullYearFormat,
-    required intl.DateFormat compactDateFormat,
-    required intl.DateFormat shortDateFormat,
-    required intl.DateFormat mediumDateFormat,
-    required intl.DateFormat longDateFormat,
-    required intl.DateFormat yearMonthFormat,
-    required intl.DateFormat shortMonthDayFormat,
-    required intl.NumberFormat decimalFormat,
-    required intl.NumberFormat twoDigitZeroPaddedFormat,
-  }) : super(
-          localeName: localeName,
-          fullYearFormat: fullYearFormat,
-          compactDateFormat: compactDateFormat,
-          shortDateFormat: shortDateFormat,
-          mediumDateFormat: mediumDateFormat,
-          longDateFormat: longDateFormat,
-          yearMonthFormat: yearMonthFormat,
-          shortMonthDayFormat: shortMonthDayFormat,
-          decimalFormat: decimalFormat,
-          twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat,
-        );
-
-  @override
-  String get aboutListTileTitleRaw => r'About $applicationName';
-
-  @override
-  String get alertDialogLabel => 'Alert';
-
-  @override
-  String get anteMeridiemAbbreviation => 'AM';
-
-  @override
-  String get backButtonTooltip => 'Back';
-
-  @override
-  String get calendarModeButtonLabel => 'Switch to calendar';
-
-  @override
-  String get cancelButtonLabel => 'CANCEL';
-
-  @override
-  String get closeButtonLabel => 'CLOSE';
-
-  @override
-  String get closeButtonTooltip => 'Close';
-
-  @override
-  String get collapsedIconTapHint => 'Expand';
-
-  @override
-  String get continueButtonLabel => 'CONTINUE';
-
-  @override
-  String get copyButtonLabel => 'Copy';
-
-  @override
-  String get cutButtonLabel => 'Cut';
-
-  @override
-  String get dateHelpText => 'mm/dd/yyyy';
-
-  @override
-  String get dateInputLabel => 'Enter Date';
-
-  @override
-  String get dateOutOfRangeLabel => 'Out of range.';
-
-  @override
-  String get datePickerHelpText => 'SELECT DATE';
-
-  @override
-  String get dateRangeEndDateSemanticLabelRaw => r'End date $fullDate';
-
-  @override
-  String get dateRangeEndLabel => 'End Date';
-
-  @override
-  String get dateRangePickerHelpText => 'SELECT RANGE';
-
-  @override
-  String get dateRangeStartDateSemanticLabelRaw => r'Start date $fullDate';
-
-  @override
-  String get dateRangeStartLabel => 'Start Date';
-
-  @override
-  String get dateSeparator => '/';
-
-  @override
-  String get deleteButtonTooltip => 'Delete';
-
-  @override
-  String get dialModeButtonLabel => 'Switch to dial picker mode';
-
-  @override
-  String get dialogLabel => 'Dialog';
-
-  @override
-  String get drawerLabel => 'Navigation menu';
-
-  @override
-  String get expandedIconTapHint => 'Collapse';
-
-  @override
-  String get hideAccountsLabel => 'Hide accounts';
-
-  @override
-  String get inputDateModeButtonLabel => 'Switch to input';
-
-  @override
-  String get inputTimeModeButtonLabel => 'Switch to text input mode';
-
-  @override
-  String get invalidDateFormatLabel => 'Invalid format.';
-
-  @override
-  String get invalidDateRangeLabel => 'Invalid range.';
-
-  @override
-  String get invalidTimeLabel => 'Enter a valid time';
-
-  @override
-  String? get licensesPackageDetailTextFew => null;
-
-  @override
-  String? get licensesPackageDetailTextMany => null;
-
-  @override
-  String? get licensesPackageDetailTextOne => '1 license';
-
-  @override
-  String get licensesPackageDetailTextOther => r'$licenseCount licenses';
-
-  @override
-  String? get licensesPackageDetailTextTwo => null;
-
-  @override
-  String? get licensesPackageDetailTextZero => 'No licenses';
-
-  @override
-  String get licensesPageTitle => 'Licenses';
-
-  @override
-  String get modalBarrierDismissLabel => 'Dismiss';
-
-  @override
-  String get moreButtonTooltip => 'More';
-
-  @override
-  String get nextMonthTooltip => 'Next month';
-
-  @override
-  String get nextPageTooltip => 'Next page';
-
-  @override
-  String get okButtonLabel => 'OK';
-
-  @override
-  String get openAppDrawerTooltip => 'Open navigation menu';
-
-  @override
-  String get pageRowsInfoTitleRaw => r'$firstRow–$lastRow of $rowCount';
-
-  @override
-  String get pageRowsInfoTitleApproximateRaw =>
-      r'$firstRow–$lastRow of about $rowCount';
-
-  @override
-  String get pasteButtonLabel => 'Paste';
-
-  @override
-  String get popupMenuLabel => 'Popup menu';
-
-  @override
-  String get postMeridiemAbbreviation => 'PM';
-
-  @override
-  String get previousMonthTooltip => 'Previous month';
-
-  @override
-  String get previousPageTooltip => 'Previous page';
-
-  @override
-  String get refreshIndicatorSemanticLabel => 'Refresh';
-
-  @override
-  String? get remainingTextFieldCharacterCountFew => null;
-
-  @override
-  String? get remainingTextFieldCharacterCountMany => null;
-
-  @override
-  String? get remainingTextFieldCharacterCountOne => '1 character remaining';
-
-  @override
-  String get remainingTextFieldCharacterCountOther =>
-      r'$remainingCount characters remaining';
-
-  @override
-  String? get remainingTextFieldCharacterCountTwo => null;
-
-  @override
-  String? get remainingTextFieldCharacterCountZero => 'No characters remaining';
-
-  @override
-  String get reorderItemDown => 'Move down';
-
-  @override
-  String get reorderItemLeft => 'Move left';
-
-  @override
-  String get reorderItemRight => 'Move right';
-
-  @override
-  String get reorderItemToEnd => 'Move to the end';
-
-  @override
-  String get reorderItemToStart => 'Move to the start';
-
-  @override
-  String get reorderItemUp => 'Move up';
-
-  @override
-  String get rowsPerPageTitle => 'Rows per page:';
-
-  @override
-  String get saveButtonLabel => 'SAVE';
-
-  @override
-  ScriptCategory get scriptCategory => ScriptCategory.englishLike;
-
-  @override
-  String get searchFieldLabel => 'Search';
-
-  @override
-  String get selectAllButtonLabel => 'Select all';
-
-  @override
-  String get selectYearSemanticsLabel => 'Select year';
-
-  @override
-  String? get selectedRowCountTitleFew => null;
-
-  @override
-  String? get selectedRowCountTitleMany => null;
-
-  @override
-  String? get selectedRowCountTitleOne => '1 item selected';
-
-  @override
-  String get selectedRowCountTitleOther => r'$selectedRowCount items selected';
-
-  @override
-  String? get selectedRowCountTitleTwo => null;
-
-  @override
-  String? get selectedRowCountTitleZero => 'No items selected';
-
-  @override
-  String get showAccountsLabel => 'Show accounts';
-
-  @override
-  String get showMenuTooltip => 'Show menu';
-
-  @override
-  String get signedInLabel => 'Signed in';
-
-  @override
-  String get tabLabelRaw => r'Tab $tabIndex of $tabCount';
-
-  @override
-  TimeOfDayFormat get timeOfDayFormatRaw => TimeOfDayFormat.h_colon_mm_space_a;
-
-  @override
-  String get timePickerDialHelpText => 'SELECT TIME';
-
-  @override
-  String get timePickerHourLabel => 'Hour';
-
-  @override
-  String get timePickerHourModeAnnouncement => 'Select hours';
-
-  @override
-  String get timePickerInputHelpText => 'ENTER TIME';
-
-  @override
-  String get timePickerMinuteLabel => 'Minute';
-
-  @override
-  String get timePickerMinuteModeAnnouncement => 'Select minutes';
-
-  @override
-  String get unspecifiedDate => 'Date';
-
-  @override
-  String get unspecifiedDateRange => 'Date Range';
-
-  @override
-  String get viewLicensesButtonLabel => 'VIEW LICENSES';
-
-  @override
-  // TODO: implement firstPageTooltip
-  String get firstPageTooltip => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyAlt
-  String get keyboardKeyAlt => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyAltGraph
-  String get keyboardKeyAltGraph => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyBackspace
-  String get keyboardKeyBackspace => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyCapsLock
-  String get keyboardKeyCapsLock => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyChannelDown
-  String get keyboardKeyChannelDown => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyChannelUp
-  String get keyboardKeyChannelUp => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyControl
-  String get keyboardKeyControl => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyDelete
-  String get keyboardKeyDelete => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyEisu
-  String get keyboardKeyEisu => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyEject
-  String get keyboardKeyEject => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyEnd
-  String get keyboardKeyEnd => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyEscape
-  String get keyboardKeyEscape => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyFn
-  String get keyboardKeyFn => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyHangulMode
-  String get keyboardKeyHangulMode => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyHanjaMode
-  String get keyboardKeyHanjaMode => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyHankaku
-  String get keyboardKeyHankaku => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyHiragana
-  String get keyboardKeyHiragana => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyHiraganaKatakana
-  String get keyboardKeyHiraganaKatakana => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyHome
-  String get keyboardKeyHome => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyInsert
-  String get keyboardKeyInsert => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyKanaMode
-  String get keyboardKeyKanaMode => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyKanjiMode
-  String get keyboardKeyKanjiMode => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyKatakana
-  String get keyboardKeyKatakana => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyMeta
-  String get keyboardKeyMeta => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyMetaMacOs
-  String get keyboardKeyMetaMacOs => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyMetaWindows
-  String get keyboardKeyMetaWindows => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumLock
-  String get keyboardKeyNumLock => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad0
-  String get keyboardKeyNumpad0 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad1
-  String get keyboardKeyNumpad1 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad2
-  String get keyboardKeyNumpad2 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad3
-  String get keyboardKeyNumpad3 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad4
-  String get keyboardKeyNumpad4 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad5
-  String get keyboardKeyNumpad5 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad6
-  String get keyboardKeyNumpad6 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad7
-  String get keyboardKeyNumpad7 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad8
-  String get keyboardKeyNumpad8 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpad9
-  String get keyboardKeyNumpad9 => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadAdd
-  String get keyboardKeyNumpadAdd => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadComma
-  String get keyboardKeyNumpadComma => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadDecimal
-  String get keyboardKeyNumpadDecimal => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadDivide
-  String get keyboardKeyNumpadDivide => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadEnter
-  String get keyboardKeyNumpadEnter => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadEqual
-  String get keyboardKeyNumpadEqual => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadMultiply
-  String get keyboardKeyNumpadMultiply => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadParenLeft
-  String get keyboardKeyNumpadParenLeft => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadParenRight
-  String get keyboardKeyNumpadParenRight => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyNumpadSubtract
-  String get keyboardKeyNumpadSubtract => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyPageDown
-  String get keyboardKeyPageDown => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyPageUp
-  String get keyboardKeyPageUp => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyPower
-  String get keyboardKeyPower => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyPowerOff
-  String get keyboardKeyPowerOff => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyPrintScreen
-  String get keyboardKeyPrintScreen => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyRomaji
-  String get keyboardKeyRomaji => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyScrollLock
-  String get keyboardKeyScrollLock => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeySelect
-  String get keyboardKeySelect => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeySpace
-  String get keyboardKeySpace => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyZenkaku
-  String get keyboardKeyZenkaku => throw UnimplementedError();
-
-  @override
-  // TODO: implement keyboardKeyZenkakuHankaku
-  String get keyboardKeyZenkakuHankaku => throw UnimplementedError();
-
-  @override
-  // TODO: implement lastPageTooltip
-  String get lastPageTooltip => throw UnimplementedError();
-}
-
-class CupertinoLocalizationKu extends GlobalCupertinoLocalizations {
-  /// Create an instance of the translation bundle for English.
-  ///
-  /// For details on the meaning of the arguments, see [GlobalCupertinoLocalizations].
-  const CupertinoLocalizationKu({
-    String localeName = 'ku',
-    required intl.DateFormat fullYearFormat,
-    required intl.DateFormat dayFormat,
-    required intl.DateFormat mediumDateFormat,
-    required intl.DateFormat singleDigitHourFormat,
-    required intl.DateFormat singleDigitMinuteFormat,
-    required intl.DateFormat doubleDigitMinuteFormat,
-    required intl.DateFormat singleDigitSecondFormat,
-    required intl.NumberFormat decimalFormat,
-  }) : super(
-          localeName: localeName,
-          fullYearFormat: fullYearFormat,
-          dayFormat: dayFormat,
-          mediumDateFormat: mediumDateFormat,
-          singleDigitHourFormat: singleDigitHourFormat,
-          singleDigitMinuteFormat: singleDigitMinuteFormat,
-          doubleDigitMinuteFormat: doubleDigitMinuteFormat,
-          singleDigitSecondFormat: singleDigitSecondFormat,
-          decimalFormat: decimalFormat,
-        );
-
-  @override
-  String get alertDialogLabel => 'Alert';
-
-  @override
-  String get anteMeridiemAbbreviation => 'AM';
-
-  @override
-  String get copyButtonLabel => 'Copy';
-
-  @override
-  String get cutButtonLabel => 'Cut';
-
-  @override
-  String get datePickerDateOrderString => 'mdy';
-
-  @override
-  String get datePickerDateTimeOrderString => 'date_time_dayPeriod';
-
-  @override
-  String? get datePickerHourSemanticsLabelFew => null;
-
-  @override
-  String? get datePickerHourSemanticsLabelMany => null;
-
-  @override
-  String? get datePickerHourSemanticsLabelOne => r"$hour o'clock";
-
-  @override
-  String get datePickerHourSemanticsLabelOther => r"$hour o'clock";
-
-  @override
-  String? get datePickerHourSemanticsLabelTwo => null;
-
-  @override
-  String? get datePickerHourSemanticsLabelZero => null;
-
-  @override
-  String? get datePickerMinuteSemanticsLabelFew => null;
-
-  @override
-  String? get datePickerMinuteSemanticsLabelMany => null;
-
-  @override
-  String? get datePickerMinuteSemanticsLabelOne => '1 minute';
-
-  @override
-  String get datePickerMinuteSemanticsLabelOther => r'$minute minutes';
-
-  @override
-  String? get datePickerMinuteSemanticsLabelTwo => null;
-
-  @override
-  String? get datePickerMinuteSemanticsLabelZero => null;
-
-  @override
-  String get modalBarrierDismissLabel => 'Dismiss';
-
-  @override
-  String get pasteButtonLabel => 'Paste';
-
-  @override
-  String get postMeridiemAbbreviation => 'PM';
-
-  @override
-  String get searchTextFieldPlaceholderLabel => 'Search';
-
-  @override
-  String get selectAllButtonLabel => 'Select All';
-
-  @override
-  String get tabSemanticsLabelRaw => r'Tab $tabIndex of $tabCount';
-
-  @override
-  String? get timerPickerHourLabelFew => null;
-
-  @override
-  String? get timerPickerHourLabelMany => null;
-
-  @override
-  String? get timerPickerHourLabelOne => 'hour';
-
-  @override
-  String get timerPickerHourLabelOther => 'hours';
-
-  @override
-  String? get timerPickerHourLabelTwo => null;
-
-  @override
-  String? get timerPickerHourLabelZero => null;
-
-  @override
-  String? get timerPickerMinuteLabelFew => null;
-
-  @override
-  String? get timerPickerMinuteLabelMany => null;
-
-  @override
-  String? get timerPickerMinuteLabelOne => 'min.';
-
-  @override
-  String get timerPickerMinuteLabelOther => 'min.';
-
-  @override
-  String? get timerPickerMinuteLabelTwo => null;
-
-  @override
-  String? get timerPickerMinuteLabelZero => null;
-
-  @override
-  String? get timerPickerSecondLabelFew => null;
-
-  @override
-  String? get timerPickerSecondLabelMany => null;
-
-  @override
-  String? get timerPickerSecondLabelOne => 'sec.';
-
-  @override
-  String get timerPickerSecondLabelOther => 'sec.';
-
-  @override
-  String? get timerPickerSecondLabelTwo => null;
-
-  @override
-  String? get timerPickerSecondLabelZero => null;
-
-  @override
-  String get todayLabel => 'Today';
-}
diff --git a/lib/generated/languages/local_widgets_localizations.dart b/lib/generated/languages/local_widgets_localizations.dart
index 25615b11..c8fdd4c3 100644
--- a/lib/generated/languages/local_widgets_localizations.dart
+++ b/lib/generated/languages/local_widgets_localizations.dart
@@ -11,13 +11,13 @@ class LocalWidgetsLocalizations implements WidgetsLocalizations {
   /// function, rather than constructing this class directly.
   LocalWidgetsLocalizations(this.locale) {
     final language = locale.languageCode.toLowerCase();
-    _textDirection = _rtlLanguages.contains(language)
+    _textDirection = rtlLanguages.contains(language)
         ? TextDirection.rtl
         : TextDirection.ltr;
   }
 
   // See http://en.wikipedia.org/wiki/Right-to-left
-  static const List<String> _rtlLanguages = <String>[
+  static const List<String> rtlLanguages = <String>[
     'ar', // Arabic
     'fa', // Farsi
     'he', // Hebrew
diff --git a/lib/generated/languages/material/datetime/index.dart b/lib/generated/languages/material/datetime/index.dart
index 033a5ed3..9be2c58a 100644
--- a/lib/generated/languages/material/datetime/index.dart
+++ b/lib/generated/languages/material/datetime/index.dart
@@ -1 +1,2 @@
 export 'ku.dart';
+export 'ti.dart';
diff --git a/lib/generated/languages/material/datetime/ku.dart b/lib/generated/languages/material/datetime/ku.dart
index 859e60e0..95b9cb78 100644
--- a/lib/generated/languages/material/datetime/ku.dart
+++ b/lib/generated/languages/material/datetime/ku.dart
@@ -1,32 +1,33 @@
 import 'package:intl/date_symbols.dart';
 
+/// Extended set of localized date/time patterns for locale ku similar to locale ar.
 const kuLocaleDatePatterns = {
   'd': 'd', // DAY
-  'E': 'EEE', // ABBR_WEEKDAY
-  'EEEE': 'EEEE', // WEEKDAY
+  'E': 'ccc', // ABBR_WEEKDAY
+  'EEEE': 'cccc', // WEEKDAY
   'LLL': 'LLL', // ABBR_STANDALONE_MONTH
   'LLLL': 'LLLL', // STANDALONE_MONTH
   'M': 'L', // NUM_MONTH
-  'Md': 'M/d', // NUM_MONTH_DAY
-  'MEd': 'EEE, M/d', // NUM_MONTH_WEEKDAY_DAY
+  'Md': 'd/‏M', // NUM_MONTH_DAY
+  'MEd': 'EEE، d/M', // NUM_MONTH_WEEKDAY_DAY
   'MMM': 'LLL', // ABBR_MONTH
-  'MMMd': 'MMM d', // ABBR_MONTH_DAY
-  'MMMEd': 'EEE, MMM d', // ABBR_MONTH_WEEKDAY_DAY
+  'MMMd': 'd MMM', // ABBR_MONTH_DAY
+  'MMMEd': 'EEE، d MMM', // ABBR_MONTH_WEEKDAY_DAY
   'MMMM': 'LLLL', // MONTH
-  'MMMMd': 'MMMM d', // MONTH_DAY
-  'MMMMEEEEd': 'EEEE, MMMM d', // MONTH_WEEKDAY_DAY
+  'MMMMd': 'd MMMM', // MONTH_DAY
+  'MMMMEEEEd': 'EEEE، d MMMM', // MONTH_WEEKDAY_DAY
   'QQQ': 'QQQ', // ABBR_QUARTER
   'QQQQ': 'QQQQ', // QUARTER
   'y': 'y', // YEAR
-  'yM': 'M/y', // YEAR_NUM_MONTH
-  'yMd': 'M/d/y', // YEAR_NUM_MONTH_DAY
-  'yMEd': 'EEE, M/d/y', // YEAR_NUM_MONTH_WEEKDAY_DAY
+  'yM': 'M‏/y', // YEAR_NUM_MONTH
+  'yMd': 'd‏/M‏/y', // YEAR_NUM_MONTH_DAY
+  'yMEd': 'EEE، d/‏M/‏y', // YEAR_NUM_MONTH_WEEKDAY_DAY
   'yMMM': 'MMM y', // YEAR_ABBR_MONTH
-  'yMMMd': 'MMM d, y', // YEAR_ABBR_MONTH_DAY
-  'yMMMEd': 'EEE, MMM d, y', // YEAR_ABBR_MONTH_WEEKDAY_DAY
+  'yMMMd': 'd MMM y', // YEAR_ABBR_MONTH_DAY
+  'yMMMEd': 'EEE، d MMM y', // YEAR_ABBR_MONTH_WEEKDAY_DAY
   'yMMMM': 'MMMM y', // YEAR_MONTH
-  'yMMMMd': 'MMMM d, y', // YEAR_MONTH_DAY
-  'yMMMMEEEEd': 'EEEE, MMMM d, y', // YEAR_MONTH_WEEKDAY_DAY
+  'yMMMMd': 'd MMMM y', // YEAR_MONTH_DAY
+  'yMMMMEEEEd': 'EEEE، d MMMM y', // YEAR_MONTH_WEEKDAY_DAY
   'yQQQ': 'QQQ y', // YEAR_ABBR_QUARTER
   'yQQQQ': 'QQQQ y', // YEAR_QUARTER
   'H': 'HH', // HOUR24
@@ -47,140 +48,155 @@ const kuLocaleDatePatterns = {
   'ZZZZ': 'ZZZZ' // ABBR_UTC_TZ
 };
 
-final kuDateSymbols = DateSymbols(
-    NAME: 'ku',
-    ERAS: const ['BC', 'AD'],
-    ERANAMES: const ['Before Christ', 'Anno Domini'],
-    NARROWMONTHS: const [
-      'J',
-      'F',
-      'M',
-      'A',
-      'M',
-      'J',
-      'J',
-      'A',
-      'S',
-      'O',
-      'N',
-      'D'
-    ],
-    STANDALONENARROWMONTHS: const [
-      'J',
-      'F',
-      'M',
-      'A',
-      'M',
-      'J',
-      'J',
-      'A',
-      'S',
-      'O',
-      'N',
-      'D'
-    ],
-    MONTHS: const [
-      'January',
-      'February',
-      'March',
-      'April',
-      'May',
-      'June',
-      'July',
-      'August',
-      'September',
-      'October',
-      'November',
-      'December'
-    ],
-    STANDALONEMONTHS: const [
-      'January',
-      'February',
-      'March',
-      'April',
-      'May',
-      'June',
-      'July',
-      'August',
-      'September',
-      'October',
-      'November',
-      'December'
-    ],
-    SHORTMONTHS: const [
-      'Jan',
-      'Feb',
-      'Mar',
-      'Apr',
-      'May',
-      'Jun',
-      'Jul',
-      'Aug',
-      'Sep',
-      'Oct',
-      'Nov',
-      'Dec'
-    ],
-    STANDALONESHORTMONTHS: const [
-      'Jan',
-      'Feb',
-      'Mar',
-      'Apr',
-      'May',
-      'Jun',
-      'Jul',
-      'Aug',
-      'Sep',
-      'Oct',
-      'Nov',
-      'Dec'
-    ],
-    WEEKDAYS: const [
-      'Sunday',
-      'Monday',
-      'Tuesday',
-      'Wednesday',
-      'Thursday',
-      'Friday',
-      'Saturday'
-    ],
-    STANDALONEWEEKDAYS: const [
-      'Sunday',
-      'Monday',
-      'Tuesday',
-      'Wednesday',
-      'Thursday',
-      'Friday',
-      'Saturday'
-    ],
-    SHORTWEEKDAYS: const ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
-    STANDALONESHORTWEEKDAYS: const [
-      'Sun',
-      'Mon',
-      'Tue',
-      'Wed',
-      'Thu',
-      'Fri',
-      'Sat'
-    ],
-    NARROWWEEKDAYS: const ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
-    STANDALONENARROWWEEKDAYS: const ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
-    SHORTQUARTERS: const ['Q1', 'Q2', 'Q3', 'Q4'],
-    QUARTERS: const [
-      '1st quarter',
-      '2nd quarter',
-      '3rd quarter',
-      '4th quarter'
-    ],
-    AMPMS: const ['AM', 'PM'],
-    DATEFORMATS: const ['EEEE, MMMM d, y', 'MMMM d, y', 'MMM d, y', 'M/d/yy'],
-    TIMEFORMATS: const ['h:mm:ss a zzzz', 'h:mm:ss a z', 'h:mm:ss a', 'h:mm a'],
-    FIRSTDAYOFWEEK: 6,
-    WEEKENDRANGE: const [5, 6],
-    FIRSTWEEKCUTOFFDAY: 5,
-    DATETIMEFORMATS: const [
-      '{1} \'at\' {0}',
-      '{1} \'at\' {0}',
-      '{1}, {0}',
-      '{1}, {0}'
-    ]);
+const kuDateSymbols = <String, dynamic>{
+  'NAME': 'ku',
+  'ERAS': ['پ.ز', 'ز'],
+  'ERANAMES': ['پێش زاینی', 'زاینی'],
+  'NARROWMONTHS': [
+    'ک.د',
+    'ش',
+    'ز',
+    'ن',
+    'م',
+    'ح',
+    'ت',
+    'ئ',
+    'ل',
+    'ت.ی',
+    'ت.د',
+    'ک.ی'
+  ],
+  'STANDALONENARROWMONTHS': [
+    'ک.د',
+    'ش',
+    'ز',
+    'ن',
+    'م',
+    'ح',
+    'ت',
+    'ئ',
+    'ل',
+    'ت.ی',
+    'ت.د',
+    'ک.ی'
+  ],
+  'MONTHS': [
+    'کانونی دووەم',
+    'شوبات',
+    'ئازار',
+    'نیسان',
+    'مایس',
+    'حوزەیران',
+    'تەمموز',
+    'ئاب',
+    'ئەیلوول',
+    'تشرینی یەکەم',
+    'تشرینی دووەم',
+    'کانونی یەکەم'
+  ],
+  'STANDALONEMONTHS': [
+    'کانونی دووەم',
+    'شوبات',
+    'ئازار',
+    'نیسان',
+    'مایس',
+    'حوزەیران',
+    'تەمموز',
+    'ئاب',
+    'ئەیلوول',
+    'تشرینی یەکەم',
+    'تشرینی دووەم',
+    'کانونی یەکەم'
+  ],
+  'SHORTMONTHS': [
+    'کانونی دووەم',
+    'شوبات',
+    'ئازار',
+    'نیسان',
+    'مایس',
+    'حوزەیران',
+    'تەمموز',
+    'ئاب',
+    'ئەیلوول',
+    'تشرینی یەکەم',
+    'تشرینی دووەم',
+    'کانونی یەکەم'
+  ],
+  'STANDALONESHORTMONTHS': [
+    'کانونی دووەم',
+    'شوبات',
+    'ئازار',
+    'نیسان',
+    'مایس',
+    'حوزەیران',
+    'تەمموز',
+    'ئاب',
+    'ئەیلوول',
+    'تشرینی یەکەم',
+    'تشرینی دووەم',
+    'کانونی یەکەم'
+  ],
+  'WEEKDAYS': [
+    'یەکشەممە',
+    'دووشەممە',
+    'سێشەممە',
+    'چوارشەممە',
+    'پێنجشەممە',
+    'هەینی',
+    'شەممە'
+  ],
+  'STANDALONEWEEKDAYS': [
+    'یەکشەممە',
+    'دووشەممە',
+    'سێشەممە',
+    'چوارشەممە',
+    'پێنجشەممە',
+    'هەینی',
+    'شەممە'
+  ],
+  'SHORTWEEKDAYS': [
+    'یەکشەم',
+    'دووشەم',
+    'سێشەم',
+    'چوارشەم',
+    'پێنجشەم',
+    'هەینی',
+    'شەممە'
+  ],
+  'STANDALONESHORTWEEKDAYS': [
+    'یەکشەم',
+    'دووشەم',
+    'سێشەم',
+    'چوارشەم',
+    'پێنجشەم',
+    'هەینی',
+    'شەممە'
+  ],
+  'NARROWWEEKDAYS': ['ی', 'د', 'س', 'چ', 'پ', 'ه', 'ش'],
+  'STANDALONENARROWWEEKDAYS': ['ی', 'د', 'س', 'چ', 'پ', 'ه', 'ش'],
+  'SHORTQUARTERS': ['چ١', 'چ٢', 'چ٣', 'چ٤'],
+  'QUARTERS': ['چارەکی یەکەم', 'چارەکی دووەم', 'چارەکی سێیەم', 'چارەکی چوارەم'],
+  'AMPMS': ['پ.ن', 'د.ن'],
+  'DATEFORMATS': [
+    'EEEE، d MMMM y',
+    'd MMMM y',
+    'dd‏/MM‏/y',
+    'd‏/M‏/y',
+  ],
+  'TIMEFORMATS': [
+    'h:mm:ss a zzzz',
+    'h:mm:ss a z',
+    'h:mm:ss a',
+    'h:mm a',
+  ],
+  'FIRSTDAYOFWEEK': 5,
+  'WEEKENDRANGE': [4, 5],
+  'FIRSTWEEKCUTOFFDAY': 3,
+  'DATETIMEFORMATS': [
+    '{1} {0}',
+    '{1} {0}',
+    '{1} {0}',
+    '{1} {0}',
+  ],
+  'ZERODIGIT': '٠',
+};
diff --git a/lib/generated/languages/material/datetime/ti.dart b/lib/generated/languages/material/datetime/ti.dart
new file mode 100644
index 00000000..9e647004
--- /dev/null
+++ b/lib/generated/languages/material/datetime/ti.dart
@@ -0,0 +1,240 @@
+import 'package:intl/date_symbols.dart';
+
+/// Extended set of localized date/time patterns for locale ti similar to locale en.
+const tiLocaleDatePatterns = {
+  'd': 'd',
+  'E': 'ccc',
+  'EEEE': 'cccc',
+  'LLL': 'LLL',
+  'LLLL': 'LLLL',
+  'M': 'L',
+  'Md': 'M/d',
+  'MEd': 'EEE, M/d',
+  'MMM': 'LLL',
+  'MMMd': 'MMM d',
+  'MMMEd': 'EEE, MMM d',
+  'MMMM': 'LLLL',
+  'MMMMd': 'MMMM d',
+  'MMMMEEEEd': 'EEEE, MMMM d',
+  'QQQ': 'QQQ',
+  'QQQQ': 'QQQQ',
+  'y': 'y',
+  'yM': 'M/y',
+  'yMd': 'M/d/y',
+  'yMEd': 'EEE, M/d/y',
+  'yMMM': 'MMM y',
+  'yMMMd': 'MMM d, y',
+  'yMMMEd': 'EEE, MMM d, y',
+  'yMMMM': 'MMMM y',
+  'yMMMMd': 'MMMM d, y',
+  'yMMMMEEEEd': 'EEEE, MMMM d, y',
+  'yQQQ': 'QQQ y',
+  'yQQQQ': 'QQQQ y',
+  'H': 'HH',
+  'Hm': 'HH:mm',
+  'Hms': 'HH:mm:ss',
+  'j': 'h a',
+  'jm': 'h:mm a',
+  'jms': 'h:mm:ss a',
+  'jmv': 'h:mm a v',
+  'jmz': 'h:mm a z',
+  'jz': 'h a z',
+  'm': 'm',
+  'ms': 'mm:ss',
+  's': 's',
+  'v': 'v',
+  'z': 'z',
+  'zzzz': 'zzzz',
+  'ZZZZ': 'ZZZZ',
+};
+
+const tiDateSymbols = <String, dynamic>{
+  'NAME': 'ti',
+  'ERAS': <dynamic>[
+    'BC',
+    'AD',
+  ],
+  'ERANAMES': <dynamic>[
+    'Before Christ',
+    'Anno Domini',
+  ],
+  'NARROWMONTHS': <dynamic>[
+    'J',
+    'F',
+    'M',
+    'A',
+    'M',
+    'J',
+    'J',
+    'A',
+    'S',
+    'O',
+    'N',
+    'D',
+  ],
+  'STANDALONENARROWMONTHS': <dynamic>[
+    'J',
+    'F',
+    'M',
+    'A',
+    'M',
+    'J',
+    'J',
+    'A',
+    'S',
+    'O',
+    'N',
+    'D',
+  ],
+  'MONTHS': <dynamic>[
+    'January',
+    'February',
+    'March',
+    'April',
+    'May',
+    'June',
+    'July',
+    'August',
+    'September',
+    'October',
+    'November',
+    'December',
+  ],
+  'STANDALONEMONTHS': <dynamic>[
+    'January',
+    'February',
+    'March',
+    'April',
+    'May',
+    'June',
+    'July',
+    'August',
+    'September',
+    'October',
+    'November',
+    'December',
+  ],
+  'SHORTMONTHS': <dynamic>[
+    'Jan',
+    'Feb',
+    'Mar',
+    'Apr',
+    'May',
+    'Jun',
+    'Jul',
+    'Aug',
+    'Sep',
+    'Oct',
+    'Nov',
+    'Dec',
+  ],
+  'STANDALONESHORTMONTHS': <dynamic>[
+    'Jan',
+    'Feb',
+    'Mar',
+    'Apr',
+    'May',
+    'Jun',
+    'Jul',
+    'Aug',
+    'Sep',
+    'Oct',
+    'Nov',
+    'Dec',
+  ],
+  'WEEKDAYS': <dynamic>[
+    'Sunday',
+    'Monday',
+    'Tuesday',
+    'Wednesday',
+    'Thursday',
+    'Friday',
+    'Saturday',
+  ],
+  'STANDALONEWEEKDAYS': <dynamic>[
+    'Sunday',
+    'Monday',
+    'Tuesday',
+    'Wednesday',
+    'Thursday',
+    'Friday',
+    'Saturday',
+  ],
+  'SHORTWEEKDAYS': <dynamic>[
+    'Sun',
+    'Mon',
+    'Tue',
+    'Wed',
+    'Thu',
+    'Fri',
+    'Sat',
+  ],
+  'STANDALONESHORTWEEKDAYS': <dynamic>[
+    'Sun',
+    'Mon',
+    'Tue',
+    'Wed',
+    'Thu',
+    'Fri',
+    'Sat',
+  ],
+  'NARROWWEEKDAYS': <dynamic>[
+    'S',
+    'M',
+    'T',
+    'W',
+    'T',
+    'F',
+    'S',
+  ],
+  'STANDALONENARROWWEEKDAYS': <dynamic>[
+    'S',
+    'M',
+    'T',
+    'W',
+    'T',
+    'F',
+    'S',
+  ],
+  'SHORTQUARTERS': <dynamic>[
+    'Q1',
+    'Q2',
+    'Q3',
+    'Q4',
+  ],
+  'QUARTERS': <dynamic>[
+    '1st quarter',
+    '2nd quarter',
+    '3rd quarter',
+    '4th quarter',
+  ],
+  'AMPMS': <dynamic>[
+    'AM',
+    'PM',
+  ],
+  'DATEFORMATS': <dynamic>[
+    'EEEE, MMMM d, y',
+    'MMMM d, y',
+    'MMM d, y',
+    'M/d/yy',
+  ],
+  'TIMEFORMATS': <dynamic>[
+    'h:mm:ss a zzzz',
+    'h:mm:ss a z',
+    'h:mm:ss a',
+    'h:mm a',
+  ],
+  'AVAILABLEFORMATS': null,
+  'FIRSTDAYOFWEEK': 6,
+  'WEEKENDRANGE': <dynamic>[
+    5,
+    6,
+  ],
+  'FIRSTWEEKCUTOFFDAY': 5,
+  'DATETIMEFORMATS': <dynamic>[
+    "{1} 'at' {0}",
+    "{1} 'at' {0}",
+    '{1}, {0}',
+    '{1}, {0}',
+  ],
+};
diff --git a/lib/generated/languages/material/index.dart b/lib/generated/languages/material/index.dart
index 18d537eb..cec688a6 100644
--- a/lib/generated/languages/material/index.dart
+++ b/lib/generated/languages/material/index.dart
@@ -9,8 +9,13 @@ import 'package:intl/date_symbols.dart';
 import 'package:intl/intl.dart' as intl;
 
 import 'datetime/index.dart';
+import 'material_ku.dart';
+import 'material_ti.dart';
 
-const kCustomizeSupportedLanguages = ['ku'];
+import '../local_widgets_localizations.dart';
+
+// Add code for other language here
+const kCustomizeSupportedLanguages = ['ku', 'ti'];
 
 class SubMaterialLocalizationsDelegate
     extends LocalizationsDelegate<MaterialLocalizations> {
@@ -35,36 +40,54 @@ class SubMaterialLocalizationsDelegate
     intl.NumberFormat decimalFormat,
     intl.NumberFormat twoDigitZeroPaddedFormat,
   ) {
-    // switch (locale.languageCode) {
-    //   case 'ku':
-    //     return MaterialLocalizationKu(
-    //         fullYearFormat: fullYearFormat,
-    //         compactDateFormat: compactDateFormat,
-    //         shortDateFormat: shortDateFormat,
-    //         mediumDateFormat: mediumDateFormat,
-    //         longDateFormat: longDateFormat,
-    //         yearMonthFormat: yearMonthFormat,
-    //         shortMonthDayFormat: shortMonthDayFormat,
-    //         decimalFormat: decimalFormat,
-    //         twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat);
-    // }
+    // Add translations for other language here
+    switch (locale.languageCode) {
+      case 'ku':
+        return MaterialLocalizationKu(
+            fullYearFormat: fullYearFormat,
+            compactDateFormat: compactDateFormat,
+            shortDateFormat: shortDateFormat,
+            mediumDateFormat: mediumDateFormat,
+            longDateFormat: longDateFormat,
+            yearMonthFormat: yearMonthFormat,
+            shortMonthDayFormat: shortMonthDayFormat,
+            decimalFormat: decimalFormat,
+            twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat);
+      case 'ti':
+        return MaterialLocalizationTi(
+            fullYearFormat: fullYearFormat,
+            compactDateFormat: compactDateFormat,
+            shortDateFormat: shortDateFormat,
+            mediumDateFormat: mediumDateFormat,
+            longDateFormat: longDateFormat,
+            yearMonthFormat: yearMonthFormat,
+            shortMonthDayFormat: shortMonthDayFormat,
+            decimalFormat: decimalFormat,
+            twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat);
+    }
     assert(false,
         'getCustomizeTranslation() called for unsupported locale "$locale"');
     return null;
   }
 
-  dynamic? datePatterms(Locale locale) {
+  // Add date patterns for other language here
+  dynamic datePatterns(Locale locale) {
     switch (locale.languageCode) {
       case 'ku':
         return kuLocaleDatePatterns;
+      case 'ti':
+        return tiLocaleDatePatterns;
       default:
     }
   }
 
-  DateSymbols? dateSymbols(Locale locale) {
+  // Add date symbols for other language here
+  dynamic dateSymbols(Locale locale) {
     switch (locale.languageCode) {
       case 'ku':
         return kuDateSymbols;
+      case 'ti':
+        return tiDateSymbols;
       default:
     }
   }
@@ -82,23 +105,47 @@ class SubMaterialLocalizationsDelegate
         'might be $localeName',
       );
 
+      final DateSymbols symbols =
+          DateSymbols.deserializeFromMap(dateSymbols(locale));
+
       initializeDateFormattingCustom(
         locale: localeName,
-        patterns: datePatterms(locale)!,
-        symbols: dateSymbols(locale)!,
+        patterns: datePatterns(locale),
+        symbols: symbols,
       );
 
+      // Use the number formats instead 'en' for the LTR and 'ar' for the RTL.
+      String numberFormat =
+          LocalWidgetsLocalizations.rtlLanguages.contains(localeName)
+              ? 'ar'
+              : 'en';
+
+      intl.DateFormat fullYearFormat = intl.DateFormat('y', localeName);
+      intl.DateFormat compactDateFormat = intl.DateFormat('yMd', localeName);
+      intl.DateFormat shortDateFormat = intl.DateFormat('yMMMd', localeName);
+      intl.DateFormat mediumDateFormat =
+          intl.DateFormat('EEE, MMM d', localeName);
+      intl.DateFormat longDateFormat =
+          intl.DateFormat('EEEE, MMMM d, y', localeName);
+      intl.DateFormat yearMonthFormat = intl.DateFormat('MMMM y', localeName);
+      intl.DateFormat shortMonthDayFormat =
+          intl.DateFormat('MM/DD', localeName);
+      intl.NumberFormat decimalFormat =
+          intl.NumberFormat('#,##0.###', numberFormat);
+      intl.NumberFormat twoDigitZeroPaddedFormat =
+          intl.NumberFormat('00', numberFormat);
+
       return SynchronousFuture<MaterialLocalizations>(getCustomizeTranslation(
         locale,
-        intl.DateFormat('y', localeName),
-        intl.DateFormat('yMd', localeName),
-        intl.DateFormat('yMMMd', localeName),
-        intl.DateFormat('EEE, MMM d', localeName),
-        intl.DateFormat('EEEE, MMMM d, y', localeName),
-        intl.DateFormat('MMMM y', localeName),
-        intl.DateFormat('MMMM y', localeName),
-        intl.NumberFormat('#,##0.###', 'en_US'),
-        intl.NumberFormat('00', 'en_US'),
+        fullYearFormat,
+        compactDateFormat,
+        shortDateFormat,
+        mediumDateFormat,
+        longDateFormat,
+        yearMonthFormat,
+        shortMonthDayFormat,
+        decimalFormat,
+        twoDigitZeroPaddedFormat,
       )!);
     });
   }
diff --git a/lib/generated/languages/material/material_ku.dart b/lib/generated/languages/material/material_ku.dart
index 18209f36..7815b0ef 100644
--- a/lib/generated/languages/material/material_ku.dart
+++ b/lib/generated/languages/material/material_ku.dart
@@ -1,313 +1,483 @@
-// import 'package:flutter/material.dart';
-// import 'package:intl/intl.dart' as intl;
-//
-// class MaterialLocalizationKu extends MaterialLocalizations {
-//   /// Create an instance of the translation bundle for Kurdish.
-//   const MaterialLocalizationKu({
-//     String localeName = 'ku',
-//     required intl.DateFormat fullYearFormat,
-//     required intl.DateFormat compactDateFormat,
-//     required intl.DateFormat shortDateFormat,
-//     required intl.DateFormat mediumDateFormat,
-//     required intl.DateFormat longDateFormat,
-//     required intl.DateFormat yearMonthFormat,
-//     required intl.DateFormat shortMonthDayFormat,
-//     required intl.NumberFormat decimalFormat,
-//     required intl.NumberFormat twoDigitZeroPaddedFormat,
-//   }) : super(
-//           localeName: localeName,
-//           fullYearFormat: fullYearFormat,
-//           compactDateFormat: compactDateFormat,
-//           shortDateFormat: shortDateFormat,
-//           mediumDateFormat: mediumDateFormat,
-//           longDateFormat: longDateFormat,
-//           yearMonthFormat: yearMonthFormat,
-//           shortMonthDayFormat: shortMonthDayFormat,
-//           decimalFormat: decimalFormat,
-//           twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat,
-//         );
-//
-//   @override
-//   String get firstPageTooltip => '';
-//
-//   @override
-//   String get lastPageTooltip => '';
-//
-//   @override
-//   String get aboutListTileTitleRaw => r'About $applicationName';
-//
-//   @override
-//   String get alertDialogLabel => 'Alert';
-//
-//   @override
-//   String get anteMeridiemAbbreviation => 'AM';
-//
-//   @override
-//   String get backButtonTooltip => 'Back';
-//
-//   @override
-//   String get calendarModeButtonLabel => 'Switch to calendar';
-//
-//   @override
-//   String get cancelButtonLabel => 'CANCEL';
-//
-//   @override
-//   String get closeButtonLabel => 'CLOSE';
-//
-//   @override
-//   String get closeButtonTooltip => 'Close';
-//
-//   @override
-//   String get collapsedIconTapHint => 'Expand';
-//
-//   @override
-//   String get continueButtonLabel => 'CONTINUE';
-//
-//   @override
-//   String get copyButtonLabel => 'Copy';
-//
-//   @override
-//   String get cutButtonLabel => 'Cut';
-//
-//   @override
-//   String get dateHelpText => 'mm/dd/yyyy';
-//
-//   @override
-//   String get dateInputLabel => 'Enter Date';
-//
-//   @override
-//   String get dateOutOfRangeLabel => 'Out of range.';
-//
-//   @override
-//   String get datePickerHelpText => 'SELECT DATE';
-//
-//   @override
-//   String get dateRangeEndDateSemanticLabelRaw => r'End date $fullDate';
-//
-//   @override
-//   String get dateRangeEndLabel => 'End Date';
-//
-//   @override
-//   String get dateRangePickerHelpText => 'SELECT RANGE';
-//
-//   @override
-//   String get dateRangeStartDateSemanticLabelRaw => r'Start date $fullDate';
-//
-//   @override
-//   String get dateRangeStartLabel => 'Start Date';
-//
-//   @override
-//   String get dateSeparator => '/';
-//
-//   @override
-//   String get deleteButtonTooltip => 'Delete';
-//
-//   @override
-//   String get dialModeButtonLabel => 'Switch to dial picker mode';
-//
-//   @override
-//   String get dialogLabel => 'Dialog';
-//
-//   @override
-//   String get drawerLabel => 'Navigation menu';
-//
-//   @override
-//   String get expandedIconTapHint => 'Collapse';
-//
-//   @override
-//   String get hideAccountsLabel => 'Hide accounts';
-//
-//   @override
-//   String get inputDateModeButtonLabel => 'Switch to input';
-//
-//   @override
-//   String get inputTimeModeButtonLabel => 'Switch to text input mode';
-//
-//   @override
-//   String get invalidDateFormatLabel => 'Invalid format.';
-//
-//   @override
-//   String get invalidDateRangeLabel => 'Invalid range.';
-//
-//   @override
-//   String get invalidTimeLabel => 'Enter a valid time';
-//
-//   @override
-//   String? get licensesPackageDetailTextFew => null;
-//
-//   @override
-//   String? get licensesPackageDetailTextMany => null;
-//
-//   @override
-//   String? get licensesPackageDetailTextOne => '1 license';
-//
-//   @override
-//   String get licensesPackageDetailTextOther => r'$licenseCount licenses';
-//
-//   @override
-//   String? get licensesPackageDetailTextTwo => null;
-//
-//   @override
-//   String? get licensesPackageDetailTextZero => 'No licenses';
-//
-//   @override
-//   String get licensesPageTitle => 'Licenses';
-//
-//   @override
-//   String get modalBarrierDismissLabel => 'Dismiss';
-//
-//   @override
-//   String get moreButtonTooltip => 'More';
-//
-//   @override
-//   String get nextMonthTooltip => 'Next month';
-//
-//   @override
-//   String get nextPageTooltip => 'Next page';
-//
-//   @override
-//   String get okButtonLabel => 'OK';
-//
-//   @override
-//   String get openAppDrawerTooltip => 'Open navigation menu';
-//
-//   @override
-//   String get pageRowsInfoTitleRaw => r'$firstRow–$lastRow of $rowCount';
-//
-//   @override
-//   String get pageRowsInfoTitleApproximateRaw =>
-//       r'$firstRow–$lastRow of about $rowCount';
-//
-//   @override
-//   String get pasteButtonLabel => 'Paste';
-//
-//   @override
-//   String get popupMenuLabel => 'Popup menu';
-//
-//   @override
-//   String get postMeridiemAbbreviation => 'PM';
-//
-//   @override
-//   String get previousMonthTooltip => 'Previous month';
-//
-//   @override
-//   String get previousPageTooltip => 'Previous page';
-//
-//   @override
-//   String get refreshIndicatorSemanticLabel => 'Refresh';
-//
-//   @override
-//   String? get remainingTextFieldCharacterCountFew => null;
-//
-//   @override
-//   String? get remainingTextFieldCharacterCountMany => null;
-//
-//   @override
-//   String? get remainingTextFieldCharacterCountOne => '1 character remaining';
-//
-//   @override
-//   String get remainingTextFieldCharacterCountOther =>
-//       r'$remainingCount characters remaining';
-//
-//   @override
-//   String? get remainingTextFieldCharacterCountTwo => null;
-//
-//   @override
-//   String? get remainingTextFieldCharacterCountZero => 'No characters remaining';
-//
-//   @override
-//   String get reorderItemDown => 'Move down';
-//
-//   @override
-//   String get reorderItemLeft => 'Move left';
-//
-//   @override
-//   String get reorderItemRight => 'Move right';
-//
-//   @override
-//   String get reorderItemToEnd => 'Move to the end';
-//
-//   @override
-//   String get reorderItemToStart => 'Move to the start';
-//
-//   @override
-//   String get reorderItemUp => 'Move up';
-//
-//   @override
-//   String get rowsPerPageTitle => 'Rows per page:';
-//
-//   @override
-//   String get saveButtonLabel => 'SAVE';
-//
-//   @override
-//   ScriptCategory get scriptCategory => ScriptCategory.englishLike;
-//
-//   @override
-//   String get searchFieldLabel => 'Search';
-//
-//   @override
-//   String get selectAllButtonLabel => 'Select all';
-//
-//   @override
-//   String get selectYearSemanticsLabel => 'Select year';
-//
-//   @override
-//   String? get selectedRowCountTitleFew => null;
-//
-//   @override
-//   String? get selectedRowCountTitleMany => null;
-//
-//   @override
-//   String? get selectedRowCountTitleOne => '1 item selected';
-//
-//   @override
-//   String get selectedRowCountTitleOther => r'$selectedRowCount items selected';
-//
-//   @override
-//   String? get selectedRowCountTitleTwo => null;
-//
-//   @override
-//   String? get selectedRowCountTitleZero => 'No items selected';
-//
-//   @override
-//   String get showAccountsLabel => 'Show accounts';
-//
-//   @override
-//   String get showMenuTooltip => 'Show menu';
-//
-//   @override
-//   String get signedInLabel => 'Signed in';
-//
-//   @override
-//   String get tabLabelRaw => r'Tab $tabIndex of $tabCount';
-//
-//   @override
-//   TimeOfDayFormat get timeOfDayFormatRaw => TimeOfDayFormat.h_colon_mm_space_a;
-//
-//   @override
-//   String get timePickerDialHelpText => 'SELECT TIME';
-//
-//   @override
-//   String get timePickerHourLabel => 'Hour';
-//
-//   @override
-//   String get timePickerHourModeAnnouncement => 'Select hours';
-//
-//   @override
-//   String get timePickerInputHelpText => 'ENTER TIME';
-//
-//   @override
-//   String get timePickerMinuteLabel => 'Minute';
-//
-//   @override
-//   String get timePickerMinuteModeAnnouncement => 'Select minutes';
-//
-//   @override
-//   String get unspecifiedDate => 'Date';
-//
-//   @override
-//   String get unspecifiedDateRange => 'Date Range';
-//
-//   @override
-//   String get viewLicensesButtonLabel => 'VIEW LICENSES';
-// }
+import 'package:flutter/material.dart';
+import 'package:flutter_localizations/flutter_localizations.dart';
+import 'package:intl/intl.dart' as intl;
+
+class MaterialLocalizationKu extends GlobalMaterialLocalizations {
+  /// Create an instance of the translation bundle for Kurdish.
+  const MaterialLocalizationKu({
+    String localeName = 'ku',
+    required intl.DateFormat fullYearFormat,
+    required intl.DateFormat compactDateFormat,
+    required intl.DateFormat shortDateFormat,
+    required intl.DateFormat mediumDateFormat,
+    required intl.DateFormat longDateFormat,
+    required intl.DateFormat yearMonthFormat,
+    required intl.DateFormat shortMonthDayFormat,
+    required intl.NumberFormat decimalFormat,
+    required intl.NumberFormat twoDigitZeroPaddedFormat,
+  }) : super(
+          localeName: localeName,
+          fullYearFormat: fullYearFormat,
+          compactDateFormat: compactDateFormat,
+          shortDateFormat: shortDateFormat,
+          mediumDateFormat: mediumDateFormat,
+          longDateFormat: longDateFormat,
+          yearMonthFormat: yearMonthFormat,
+          shortMonthDayFormat: shortMonthDayFormat,
+          decimalFormat: decimalFormat,
+          twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat,
+        );
+
+  @override
+  String get aboutListTileTitleRaw => 'دەربارەی \$applicationName';
+
+  @override
+  String get alertDialogLabel => 'ئاگادارکردنەوە';
+
+  @override
+  String get anteMeridiemAbbreviation => 'پ.ن';
+
+  @override
+  String get backButtonTooltip => 'دواوە';
+
+  @override
+  String get calendarModeButtonLabel => 'گۆڕین بۆ ڕۆژژمێر';
+
+  @override
+  String get cancelButtonLabel => 'هەڵوەشاندنەوه';
+
+  @override
+  String get closeButtonLabel => 'داخستن';
+
+  @override
+  String get closeButtonTooltip => 'داخستن';
+
+  @override
+  String get collapsedIconTapHint => 'فراوانکردن';
+
+  @override
+  String get continueButtonLabel => 'بەردەوام بە';
+
+  @override
+  String get copyButtonLabel => 'کۆپی';
+
+  @override
+  String get cutButtonLabel => 'بڕین';
+
+  @override
+  String get dateHelpText => 'mm/dd/yyyy';
+
+  @override
+  String get dateInputLabel => 'بەروار بنووسە';
+
+  @override
+  String get dateOutOfRangeLabel => 'دەرەوەی مەودایە';
+
+  @override
+  String get datePickerHelpText => 'بەروار دیاری بکە';
+
+  @override
+  String get dateRangeEndDateSemanticLabelRaw => 'بەرواری کۆتایی \$fullDate';
+
+  @override
+  String get dateRangeEndLabel => 'بەرواری کۆتایی';
+
+  @override
+  String get dateRangePickerHelpText => 'دەست نیشانکردنی مەودا';
+
+  @override
+  String get dateRangeStartDateSemanticLabelRaw =>
+      'بەرواری دەستپێکردن \$fullDate';
+
+  @override
+  String get dateRangeStartLabel => 'بەرواری دەستپێکردن';
+
+  @override
+  String get dateSeparator => '/';
+
+  @override
+  String get deleteButtonTooltip => 'سڕینەوە';
+
+  @override
+  String get dialModeButtonLabel => 'گۆڕین بۆ دۆخی هەڵبژێری داواکردن';
+
+  @override
+  String get dialogLabel => 'دیالۆگ';
+
+  @override
+  String get drawerLabel => 'لیستی ڕێنیشاندەر';
+
+  @override
+  String get expandedIconTapHint => 'نوشتانەوە';
+
+  @override
+  String get firstPageTooltip => 'لاپه‌ڕه‌ی سه‌ره‌تا';
+
+  @override
+  String get hideAccountsLabel => 'شاردنەوەی ئەژمێرەکان';
+
+  @override
+  String get inputDateModeButtonLabel => 'گۆڕین بۆ نووسین';
+
+  @override
+  String get inputTimeModeButtonLabel => 'گۆڕین بۆ دۆخی تێکردنی دەق';
+
+  @override
+  String get invalidDateFormatLabel => 'فۆرماتی نادروست.';
+
+  @override
+  String get invalidDateRangeLabel => 'مەودایەکی نادروست.';
+
+  @override
+  String get invalidTimeLabel => 'کاتێکی دروست بنووسە';
+
+  @override
+  String get lastPageTooltip => 'دوایین لاپه‌ڕه‌';
+
+  @override
+  String get licensesPackageDetailTextOne => '١ مۆڵەت';
+
+  @override
+  String get licensesPackageDetailTextOther => '\$licenseCount مۆڵەت';
+
+  @override
+  String get licensesPackageDetailTextZero => 'مۆڵەت نیە';
+
+  @override
+  String get licensesPageTitle => 'مۆڵەتەکان';
+
+  @override
+  String get modalBarrierDismissLabel => 'دەرکردن';
+
+  @override
+  String get moreButtonTooltip => 'زیاتر';
+
+  @override
+  String get nextMonthTooltip => 'مانگی داهاتوو';
+
+  @override
+  String get nextPageTooltip => 'لاپەڕەی داهاتوو';
+
+  @override
+  String get okButtonLabel => 'باشه';
+
+  @override
+  String get openAppDrawerTooltip => 'کردنەوەی لیستی ڕێنیشاندەر';
+
+  @override
+  String get pageRowsInfoTitleRaw => '\$firstRow–\$lastRow لە \$rowCount';
+
+  @override
+  String get pageRowsInfoTitleApproximateRaw =>
+      '\$firstRow–\$lastRow تا \$rowCount';
+
+  @override
+  String get pasteButtonLabel => 'پەیست';
+
+  @override
+  String get popupMenuLabel => 'لیستی دەرکەوتە';
+
+  @override
+  String get postMeridiemAbbreviation => 'د.ن';
+
+  @override
+  String get previousMonthTooltip => 'مانگی پێشوو';
+
+  @override
+  String get previousPageTooltip => 'لاپەڕەی پێشوو';
+
+  @override
+  String get refreshIndicatorSemanticLabel => 'نوێکردنەوە';
+
+  @override
+  String? get remainingTextFieldCharacterCountFew => null;
+
+  @override
+  List<String> get narrowWeekdays => ['ی', 'د', 'س', 'چ', 'پ', 'ه', 'ش'];
+
+  @override
+  String? get remainingTextFieldCharacterCountMany => null;
+
+  @override
+  String get remainingTextFieldCharacterCountOne => '١ پیت ماوە';
+
+  @override
+  String get remainingTextFieldCharacterCountOther =>
+      '\$remainingCount پیتەکان ماون';
+
+  @override
+  String? get remainingTextFieldCharacterCountTwo => null;
+
+  @override
+  String get remainingTextFieldCharacterCountZero => 'هیچ پیتێک نەماوەتەوە';
+
+  @override
+  String get reorderItemDown => 'بڕۆ خوارەوە';
+
+  @override
+  String get reorderItemLeft => 'بڕۆ لای چەپ';
+
+  @override
+  String get reorderItemRight => 'بڕۆ لای راست';
+
+  @override
+  String get reorderItemToEnd => 'بڕۆ کۆتایی';
+
+  @override
+  String get reorderItemToStart => 'بڕۆ سەرەتا';
+
+  @override
+  String get reorderItemUp => 'بڕۆ سەرەوە';
+
+  @override
+  String get rowsPerPageTitle => 'ڕیزەکان بۆ هەر پەڕەیەک:';
+
+  @override
+  String get saveButtonLabel => 'هەڵگرتن';
+
+  @override
+  ScriptCategory get scriptCategory => ScriptCategory.tall;
+
+  @override
+  String get searchFieldLabel => 'گەڕان';
+
+  @override
+  String get selectAllButtonLabel => 'هەموو هەڵبژێرە';
+
+  @override
+  String get selectYearSemanticsLabel => 'ساڵ هەڵبژێرە';
+
+  @override
+  String? get selectedRowCountTitleFew => null;
+
+  @override
+  String? get selectedRowCountTitleMany => null;
+
+  @override
+  String get selectedRowCountTitleOne => '١ دانە هەڵبژێردرا';
+
+  @override
+  String get selectedRowCountTitleOther => '\$selectedRowCount هەڵبژێردراو';
+
+  @override
+  String? get selectedRowCountTitleTwo => null;
+
+  @override
+  String get selectedRowCountTitleZero => 'هیچ هەڵنەبژێراوە';
+
+  @override
+  String get showAccountsLabel => 'پیشاندانی ئەژمێرەکان';
+
+  @override
+  String get showMenuTooltip => 'پیشاندانی پێڕست';
+
+  @override
+  String get signedInLabel => 'چوونە ژوورەوە';
+
+  @override
+  String get tabLabelRaw => 'خشتەبەندی \$tabIndex لە \$tabCount';
+
+  @override
+  TimeOfDayFormat get timeOfDayFormatRaw => TimeOfDayFormat.h_colon_mm_space_a;
+
+  @override
+  String get timePickerDialHelpText => 'کات هەڵبژێرە';
+
+  @override
+  String get timePickerHourLabel => 'کاتژمێر';
+
+  @override
+  String get timePickerHourModeAnnouncement => 'کاتژمێر هەڵبژێرە';
+
+  @override
+  String get timePickerInputHelpText => 'کات بنووسە';
+
+  @override
+  String get timePickerMinuteLabel => 'خولەک';
+
+  @override
+  String get timePickerMinuteModeAnnouncement => 'خولەک هەڵبژێرە';
+
+  @override
+  String get unspecifiedDate => 'بەروار';
+
+  @override
+  String get unspecifiedDateRange => 'مەودای بەروار';
+
+  @override
+  String get viewLicensesButtonLabel => 'پیشاندانی مۆڵەتەکان';
+
+  @override
+  String get keyboardKeyAlt => 'Alt';
+
+  @override
+  String get keyboardKeyAltGraph => 'AltGr';
+
+  @override
+  String get keyboardKeyBackspace => 'Backspace';
+
+  @override
+  String get keyboardKeyCapsLock => 'Caps Lock';
+
+  @override
+  String get keyboardKeyChannelDown => 'Channel Down';
+
+  @override
+  String get keyboardKeyChannelUp => 'Channel Up';
+
+  @override
+  String get keyboardKeyControl => 'Ctrl';
+
+  @override
+  String get keyboardKeyDelete => 'Del';
+
+  @override
+  String get keyboardKeyEisu => 'Eisū';
+
+  @override
+  String get keyboardKeyEject => 'Eject';
+
+  @override
+  String get keyboardKeyEnd => 'End';
+
+  @override
+  String get keyboardKeyEscape => 'Esc';
+
+  @override
+  String get keyboardKeyFn => 'Fn';
+
+  @override
+  String get keyboardKeyHangulMode => 'Hangul Mode';
+
+  @override
+  String get keyboardKeyHanjaMode => 'Hanja Mode';
+
+  @override
+  String get keyboardKeyHankaku => 'Hankaku';
+
+  @override
+  String get keyboardKeyHiragana => 'Hiragana';
+
+  @override
+  String get keyboardKeyHiraganaKatakana => 'Hiragana Katakana';
+
+  @override
+  String get keyboardKeyHome => 'Home';
+
+  @override
+  String get keyboardKeyInsert => 'Insert';
+
+  @override
+  String get keyboardKeyKanaMode => 'Kana Mode';
+
+  @override
+  String get keyboardKeyKanjiMode => 'Kanji Mode';
+
+  @override
+  String get keyboardKeyKatakana => 'Katakana';
+
+  @override
+  String get keyboardKeyMeta => 'Meta';
+
+  @override
+  String get keyboardKeyMetaMacOs => 'Command';
+
+  @override
+  String get keyboardKeyMetaWindows => 'Win';
+
+  @override
+  String get keyboardKeyNumLock => 'Num Lock';
+
+  @override
+  String get keyboardKeyNumpad0 => 'Num 0';
+
+  @override
+  String get keyboardKeyNumpad1 => 'Num 1';
+
+  @override
+  String get keyboardKeyNumpad2 => 'Num 2';
+
+  @override
+  String get keyboardKeyNumpad3 => 'Num 3';
+
+  @override
+  String get keyboardKeyNumpad4 => 'Num 4';
+
+  @override
+  String get keyboardKeyNumpad5 => 'Num 5';
+
+  @override
+  String get keyboardKeyNumpad6 => 'Num 6';
+
+  @override
+  String get keyboardKeyNumpad7 => 'Num 7';
+
+  @override
+  String get keyboardKeyNumpad8 => 'Num 8';
+
+  @override
+  String get keyboardKeyNumpad9 => 'Num 9';
+
+  @override
+  String get keyboardKeyNumpadAdd => 'Num +';
+
+  @override
+  String get keyboardKeyNumpadComma => 'Num ,';
+
+  @override
+  String get keyboardKeyNumpadDecimal => 'Num .';
+
+  @override
+  String get keyboardKeyNumpadDivide => 'Num /';
+
+  @override
+  String get keyboardKeyNumpadEnter => 'Num Enter';
+
+  @override
+  String get keyboardKeyNumpadEqual => 'Num =';
+
+  @override
+  String get keyboardKeyNumpadMultiply => 'Num *';
+
+  @override
+  String get keyboardKeyNumpadParenLeft => 'Num (';
+
+  @override
+  String get keyboardKeyNumpadParenRight => 'Num )';
+
+  @override
+  String get keyboardKeyNumpadSubtract => 'Num -';
+
+  @override
+  String get keyboardKeyPageDown => 'PgDown';
+
+  @override
+  String get keyboardKeyPageUp => 'PgUp';
+
+  @override
+  String get keyboardKeyPower => 'Power';
+
+  @override
+  String get keyboardKeyPowerOff => 'Power Off';
+
+  @override
+  String get keyboardKeyPrintScreen => 'Print Screen';
+
+  @override
+  String get keyboardKeyRomaji => 'Romaji';
+
+  @override
+  String get keyboardKeyScrollLock => 'Scroll Lock';
+
+  @override
+  String get keyboardKeySelect => 'Select';
+
+  @override
+  String get keyboardKeySpace => 'Spasie';
+
+  @override
+  String get keyboardKeyZenkaku => 'Zenkaku';
+
+  @override
+  String get keyboardKeyZenkakuHankaku => 'Zenkaku Hankaku';
+}
diff --git a/lib/generated/languages/material/material_ti.dart b/lib/generated/languages/material/material_ti.dart
new file mode 100644
index 00000000..bc8acba7
--- /dev/null
+++ b/lib/generated/languages/material/material_ti.dart
@@ -0,0 +1,487 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_localizations/flutter_localizations.dart';
+import 'package:intl/intl.dart' as intl;
+
+class MaterialLocalizationTi extends GlobalMaterialLocalizations {
+  /// Create an instance of the translation bundle for Tigrinya.
+  const MaterialLocalizationTi({
+    String localeName = 'ti',
+    required intl.DateFormat fullYearFormat,
+    required intl.DateFormat compactDateFormat,
+    required intl.DateFormat shortDateFormat,
+    required intl.DateFormat mediumDateFormat,
+    required intl.DateFormat longDateFormat,
+    required intl.DateFormat yearMonthFormat,
+    required intl.DateFormat shortMonthDayFormat,
+    required intl.NumberFormat decimalFormat,
+    required intl.NumberFormat twoDigitZeroPaddedFormat,
+  }) : super(
+          localeName: localeName,
+          fullYearFormat: fullYearFormat,
+          compactDateFormat: compactDateFormat,
+          shortDateFormat: shortDateFormat,
+          mediumDateFormat: mediumDateFormat,
+          longDateFormat: longDateFormat,
+          yearMonthFormat: yearMonthFormat,
+          shortMonthDayFormat: shortMonthDayFormat,
+          decimalFormat: decimalFormat,
+          twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat,
+        );
+
+  @override
+  String get aboutListTileTitleRaw => r'About $applicationName';
+
+  @override
+  String get alertDialogLabel => 'Alert';
+
+  @override
+  String get anteMeridiemAbbreviation => 'AM';
+
+  @override
+  String get backButtonTooltip => 'Back';
+
+  @override
+  String get calendarModeButtonLabel => 'Switch to calendar';
+
+  @override
+  String get cancelButtonLabel => 'CANCEL';
+
+  @override
+  String get closeButtonLabel => 'CLOSE';
+
+  @override
+  String get closeButtonTooltip => 'Close';
+
+  @override
+  String get collapsedIconTapHint => 'Expand';
+
+  @override
+  String get continueButtonLabel => 'CONTINUE';
+
+  @override
+  String get copyButtonLabel => 'Copy';
+
+  @override
+  String get cutButtonLabel => 'Cut';
+
+  @override
+  String get dateHelpText => 'mm/dd/yyyy';
+
+  @override
+  String get dateInputLabel => 'Enter Date';
+
+  @override
+  String get dateOutOfRangeLabel => 'Out of range.';
+
+  @override
+  String get datePickerHelpText => 'SELECT DATE';
+
+  @override
+  String get dateRangeEndDateSemanticLabelRaw => r'End date $fullDate';
+
+  @override
+  String get dateRangeEndLabel => 'End Date';
+
+  @override
+  String get dateRangePickerHelpText => 'SELECT RANGE';
+
+  @override
+  String get dateRangeStartDateSemanticLabelRaw => r'Start date $fullDate';
+
+  @override
+  String get dateRangeStartLabel => 'Start Date';
+
+  @override
+  String get dateSeparator => '/';
+
+  @override
+  String get deleteButtonTooltip => 'Delete';
+
+  @override
+  String get dialModeButtonLabel => 'Switch to dial picker mode';
+
+  @override
+  String get dialogLabel => 'Dialog';
+
+  @override
+  String get drawerLabel => 'Navigation menu';
+
+  @override
+  String get expandedIconTapHint => 'Collapse';
+
+  @override
+  String get firstPageTooltip => 'First page';
+
+  @override
+  String get hideAccountsLabel => 'Hide accounts';
+
+  @override
+  String get inputDateModeButtonLabel => 'Switch to input';
+
+  @override
+  String get inputTimeModeButtonLabel => 'Switch to text input mode';
+
+  @override
+  String get invalidDateFormatLabel => 'Invalid format.';
+
+  @override
+  String get invalidDateRangeLabel => 'Invalid range.';
+
+  @override
+  String get invalidTimeLabel => 'Enter a valid time';
+
+  @override
+  String get lastPageTooltip => 'Last page';
+
+  @override
+  String? get licensesPackageDetailTextFew => null;
+
+  @override
+  String? get licensesPackageDetailTextMany => null;
+
+  @override
+  String? get licensesPackageDetailTextOne => '1 license';
+
+  @override
+  String get licensesPackageDetailTextOther => r'$licenseCount licenses';
+
+  @override
+  String? get licensesPackageDetailTextTwo => null;
+
+  @override
+  String? get licensesPackageDetailTextZero => 'No licenses';
+
+  @override
+  String get licensesPageTitle => 'Licenses';
+
+  @override
+  String get modalBarrierDismissLabel => 'Dismiss';
+
+  @override
+  String get moreButtonTooltip => 'More';
+
+  @override
+  String get nextMonthTooltip => 'Next month';
+
+  @override
+  String get nextPageTooltip => 'Next page';
+
+  @override
+  String get okButtonLabel => 'OK';
+
+  @override
+  String get openAppDrawerTooltip => 'Open navigation menu';
+
+  @override
+  String get pageRowsInfoTitleRaw => r'$firstRow–$lastRow of $rowCount';
+
+  @override
+  String get pageRowsInfoTitleApproximateRaw =>
+      r'$firstRow–$lastRow of about $rowCount';
+
+  @override
+  String get pasteButtonLabel => 'Paste';
+
+  @override
+  String get popupMenuLabel => 'Popup menu';
+
+  @override
+  String get postMeridiemAbbreviation => 'PM';
+
+  @override
+  String get previousMonthTooltip => 'Previous month';
+
+  @override
+  String get previousPageTooltip => 'Previous page';
+
+  @override
+  String get refreshIndicatorSemanticLabel => 'Refresh';
+
+  @override
+  String? get remainingTextFieldCharacterCountFew => null;
+
+  @override
+  String? get remainingTextFieldCharacterCountMany => null;
+
+  @override
+  String? get remainingTextFieldCharacterCountOne => '1 character remaining';
+
+  @override
+  String get remainingTextFieldCharacterCountOther =>
+      r'$remainingCount characters remaining';
+
+  @override
+  String? get remainingTextFieldCharacterCountTwo => null;
+
+  @override
+  String? get remainingTextFieldCharacterCountZero => 'No characters remaining';
+
+  @override
+  String get reorderItemDown => 'Move down';
+
+  @override
+  String get reorderItemLeft => 'Move left';
+
+  @override
+  String get reorderItemRight => 'Move right';
+
+  @override
+  String get reorderItemToEnd => 'Move to the end';
+
+  @override
+  String get reorderItemToStart => 'Move to the start';
+
+  @override
+  String get reorderItemUp => 'Move up';
+
+  @override
+  String get rowsPerPageTitle => 'Rows per page:';
+
+  @override
+  String get saveButtonLabel => 'SAVE';
+
+  @override
+  ScriptCategory get scriptCategory => ScriptCategory.englishLike;
+
+  @override
+  String get searchFieldLabel => 'Search';
+
+  @override
+  String get selectAllButtonLabel => 'Select all';
+
+  @override
+  String get selectYearSemanticsLabel => 'Select year';
+
+  @override
+  String? get selectedRowCountTitleFew => null;
+
+  @override
+  String? get selectedRowCountTitleMany => null;
+
+  @override
+  String? get selectedRowCountTitleOne => '1 item selected';
+
+  @override
+  String get selectedRowCountTitleOther => r'$selectedRowCount items selected';
+
+  @override
+  String? get selectedRowCountTitleTwo => null;
+
+  @override
+  String? get selectedRowCountTitleZero => 'No items selected';
+
+  @override
+  String get showAccountsLabel => 'Show accounts';
+
+  @override
+  String get showMenuTooltip => 'Show menu';
+
+  @override
+  String get signedInLabel => 'Signed in';
+
+  @override
+  String get tabLabelRaw => r'Tab $tabIndex of $tabCount';
+
+  @override
+  TimeOfDayFormat get timeOfDayFormatRaw => TimeOfDayFormat.h_colon_mm_space_a;
+
+  @override
+  String get timePickerDialHelpText => 'SELECT TIME';
+
+  @override
+  String get timePickerHourLabel => 'Hour';
+
+  @override
+  String get timePickerHourModeAnnouncement => 'Select hours';
+
+  @override
+  String get timePickerInputHelpText => 'ENTER TIME';
+
+  @override
+  String get timePickerMinuteLabel => 'Minute';
+
+  @override
+  String get timePickerMinuteModeAnnouncement => 'Select minutes';
+
+  @override
+  String get unspecifiedDate => 'Date';
+
+  @override
+  String get unspecifiedDateRange => 'Date Range';
+
+  @override
+  String get viewLicensesButtonLabel => 'VIEW LICENSES';
+  @override
+  String get keyboardKeyAlt => 'Alt';
+
+  @override
+  String get keyboardKeyAltGraph => 'AltGr';
+
+  @override
+  String get keyboardKeyBackspace => 'Backspace';
+
+  @override
+  String get keyboardKeyCapsLock => 'Caps Lock';
+
+  @override
+  String get keyboardKeyChannelDown => 'Channel Down';
+
+  @override
+  String get keyboardKeyChannelUp => 'Channel Up';
+
+  @override
+  String get keyboardKeyControl => 'Ctrl';
+
+  @override
+  String get keyboardKeyDelete => 'Del';
+
+  @override
+  String get keyboardKeyEisu => 'Eisū';
+
+  @override
+  String get keyboardKeyEject => 'Eject';
+
+  @override
+  String get keyboardKeyEnd => 'End';
+
+  @override
+  String get keyboardKeyEscape => 'Esc';
+
+  @override
+  String get keyboardKeyFn => 'Fn';
+
+  @override
+  String get keyboardKeyHangulMode => 'Hangul Mode';
+
+  @override
+  String get keyboardKeyHanjaMode => 'Hanja Mode';
+
+  @override
+  String get keyboardKeyHankaku => 'Hankaku';
+
+  @override
+  String get keyboardKeyHiragana => 'Hiragana';
+
+  @override
+  String get keyboardKeyHiraganaKatakana => 'Hiragana Katakana';
+
+  @override
+  String get keyboardKeyHome => 'Home';
+
+  @override
+  String get keyboardKeyInsert => 'Insert';
+
+  @override
+  String get keyboardKeyKanaMode => 'Kana Mode';
+
+  @override
+  String get keyboardKeyKanjiMode => 'Kanji Mode';
+
+  @override
+  String get keyboardKeyKatakana => 'Katakana';
+
+  @override
+  String get keyboardKeyMeta => 'Meta';
+
+  @override
+  String get keyboardKeyMetaMacOs => 'Command';
+
+  @override
+  String get keyboardKeyMetaWindows => 'Win';
+
+  @override
+  String get keyboardKeyNumLock => 'Num Lock';
+
+  @override
+  String get keyboardKeyNumpad0 => 'Num 0';
+
+  @override
+  String get keyboardKeyNumpad1 => 'Num 1';
+
+  @override
+  String get keyboardKeyNumpad2 => 'Num 2';
+
+  @override
+  String get keyboardKeyNumpad3 => 'Num 3';
+
+  @override
+  String get keyboardKeyNumpad4 => 'Num 4';
+
+  @override
+  String get keyboardKeyNumpad5 => 'Num 5';
+
+  @override
+  String get keyboardKeyNumpad6 => 'Num 6';
+
+  @override
+  String get keyboardKeyNumpad7 => 'Num 7';
+
+  @override
+  String get keyboardKeyNumpad8 => 'Num 8';
+
+  @override
+  String get keyboardKeyNumpad9 => 'Num 9';
+
+  @override
+  String get keyboardKeyNumpadAdd => 'Num +';
+
+  @override
+  String get keyboardKeyNumpadComma => 'Num ,';
+
+  @override
+  String get keyboardKeyNumpadDecimal => 'Num .';
+
+  @override
+  String get keyboardKeyNumpadDivide => 'Num /';
+
+  @override
+  String get keyboardKeyNumpadEnter => 'Num Enter';
+
+  @override
+  String get keyboardKeyNumpadEqual => 'Num =';
+
+  @override
+  String get keyboardKeyNumpadMultiply => 'Num *';
+
+  @override
+  String get keyboardKeyNumpadParenLeft => 'Num (';
+
+  @override
+  String get keyboardKeyNumpadParenRight => 'Num )';
+
+  @override
+  String get keyboardKeyNumpadSubtract => 'Num -';
+
+  @override
+  String get keyboardKeyPageDown => 'PgDown';
+
+  @override
+  String get keyboardKeyPageUp => 'PgUp';
+
+  @override
+  String get keyboardKeyPower => 'Power';
+
+  @override
+  String get keyboardKeyPowerOff => 'Power Off';
+
+  @override
+  String get keyboardKeyPrintScreen => 'Print Screen';
+
+  @override
+  String get keyboardKeyRomaji => 'Romaji';
+
+  @override
+  String get keyboardKeyScrollLock => 'Scroll Lock';
+
+  @override
+  String get keyboardKeySelect => 'Select';
+
+  @override
+  String get keyboardKeySpace => 'Spasie';
+
+  @override
+  String get keyboardKeyZenkaku => 'Zenkaku';
+
+  @override
+  String get keyboardKeyZenkakuHankaku => 'Zenkaku Hankaku';
+}
diff --git a/lib/l10n/intl_ar.arb b/lib/l10n/intl_ar.arb
index b6e9a46a..bc76c9a9 100644
--- a/lib/l10n/intl_ar.arb
+++ b/lib/l10n/intl_ar.arb
@@ -191,7 +191,7 @@
 	"spanish": "الأسبانية",
 	"chinese": "الصينية",
 	"japanese": "اليابانية",
-	"languageSuccess": "تم تحديث اللغة بنجاح، الرجاء إعادة تشغيل التطبيق",
+	"languageSuccess": "تم تحديث اللغة بنجاح",
 	"agreeWithPrivacy": "شروط وأحكام الخصوصية",
 	"PrivacyAndTerm": "شروط وأحكام الخصوصية",
 	"iAgree": "أنا موافق على ",
@@ -268,11 +268,11 @@
 	"phone": "رقم الهاتف",
 	"phoneNumberVerification": "رمز تأكيد رقم الهاتف",
 	"enterSendedCode": "الرجاء إدخال الرمز المرسل إلى",
-	"pleasefillUpAllCellsProperly":  "الرجاء تعبئة جميع الحقول بشكل صحيح",
+	"pleasefillUpAllCellsProperly": "الرجاء تعبئة جميع الحقول بشكل صحيح",
 	"didntReceiveCode": "لم يصلك رمز التحقق!",
 	"resend": "إعادة الإرسال",
 	"pleaseInputFillAllFields": "الرجاء تعبئة جميع الحقول بشكل صحيح",
-	"pleaseAgreeTerms":  "الرجاء الموافقة على الشروط الخاصة بنا",
+	"pleaseAgreeTerms": "الرجاء الموافقة على الشروط الخاصة بنا",
 	"url": "الرابط",
 	"nearbyPlaces": "الأماكن القريبة",
 	"noResultFound": "لم يتم العثور على نتائج",
@@ -426,8 +426,8 @@
 	"fileUploadFailed": "فشل تحميل الملف!",
 	"files": "الملفات",
 	"gallery": "معرض الصور",
-	"reviewPendingApproval":  "تم إرسال التعليق الخاصة بك، في إنتظار الموافقة عليه",
-	"reviewSent":  "تم إرسال التعليق الخاصة بك",
+	"reviewPendingApproval": "تم إرسال التعليق الخاصة بك، في إنتظار الموافقة عليه",
+	"reviewSent": "تم إرسال التعليق الخاصة بك",
 	"selectFileCancelled": "تم إلغاء تحديد الملف!",
 	"send": "إرسال",
 	"thisFeatureDoesNotSupportTheCurrentLanguage": "هذه الميزة لا تدعم اللغة الحالية",
@@ -538,7 +538,7 @@
 	"addNewBlog": "أضف مدونة جديدة",
 	"addNewPost": "إنشاء منشور جديد",
 	"audioDetected": "تم الكشف عن عنصر/عناصر صوتية، هل تريد إضافتها لمشغل الصوت؟",
-	"commentSuccessfully":  "تم إضافة التعليق بنجاح، الرجاء الإنتظار فيما يتم الموافقة عليه",
+	"commentSuccessfully": "تم إضافة التعليق بنجاح، الرجاء الإنتظار فيما يتم الموافقة عليه",
 	"content": "المحتوى",
 	"createNewPostSuccessfully": "تم حفظ المنشور الخاص بك بنجاح كمسودة. بإمكانك إلقاء نظرة على موقع المسؤول الخاص بك",
 	"createPost": "إنشاء منشور",
@@ -787,7 +787,7 @@
 	"allow": "السماح",
 	"areYouSureDeleteAccount": "هل أنت متأكد من حذف حسابك؟",
 	"bySignup": "بالتسجيل ، فإنك توافق على",
-    "confirmAccountDeletion": "تأكيد حذف الحساب",
+	"confirmAccountDeletion": "تأكيد حذف الحساب",
 	"decline": "رفض",
 	"deleteAccount": "حذف الحساب",
 	"deleteAccountMsg": "هل انت متأكد انك تريد حذف حسابك؟ يرجى قراءة كيف سيؤثر حذف الحساب.",
@@ -797,10 +797,18 @@
 	"enterCaptcha": "أدخل {captcha} للتأكيد:",
 	"needToLoginAgain": "تحتاج إلى تسجيل الدخول مرة أخرى لتفعيل التحديث",
 	"notice": "تنويه",
-    "notifyLatestOffer": "أبلغني عن أحدث العروض وتوافر المنتجات",
+	"notifyLatestOffer": "أبلغني عن أحدث العروض وتوافر المنتجات",
 	"weWillSendYouNotification": "سنرسل إليك إشعارات عند توفر منتجات جديدة أو عند توفر العروض. يمكنك دائمًا تغيير هذا الإعداد في الإعدادات.",
 	"failToAssign": "فشل تعيين المستخدم",
 	"goBack": "عد",
-	"privacyTerms": "",
-	"pleaseAllowAccessCameraGallery": "يرجى السماح بالوصول إلى الكاميرا والمعرض"
+	"privacyTerms": "الخصوصية والبنود",
+	"pleaseAllowAccessCameraGallery": "يرجى السماح بالوصول إلى الكاميرا والمعرض",
+	"results": "النتائج",
+	"danish": "دانماركي",
+	"allowCameraAccess": "السماح بالوصول إلى الكاميرا؟",
+	"getNotified": "الحصول على إخطار!",
+	"imIn": "موافق",
+	"weNeedCameraAccessTo": "نحتاج إلى الوصول إلى الكاميرا للبحث عن رمز الاستجابة السريعة أو الرمز الشريطي.",
+	"generatingLink": "جاري إنشاء الارتباط ...",
+	"noCameraPermissionIsGranted": "لا يتم منح إذن الكاميرا. يرجى منحه في إعدادات جهازك."
 }
diff --git a/lib/l10n/intl_bn.arb b/lib/l10n/intl_bn.arb
index 304e212b..6e16ba1b 100644
--- a/lib/l10n/intl_bn.arb
+++ b/lib/l10n/intl_bn.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "ব্যবহারকারীকে বরাদ্দ করতে ব্যর্থ হয়েছে৷",
 	"pleaseAllowAccessCameraGallery": "ক্যামেরা এবং গ্যালারিতে অ্যাক্সেসের অনুমতি দিন",
 	"goBack": "ফিরে যাও",
-	"privacyTerms": ""
+	"privacyTerms": "গোপনীয়তা এবং শর্তাদি",
+	"results": "ফলাফল",
+	"danish": "ডেনমার্কের",
+	"allowCameraAccess": "ক্যামেরা অ্যাক্সেসের অনুমতি দেবেন?",
+	"getNotified": "বিজ্ঞপ্তি পান!",
+	"imIn": "আমি আছি",
+	"weNeedCameraAccessTo": "QR কোড বা বার কোড স্ক্যান করার জন্য আমাদের ক্যামেরা অ্যাক্সেস প্রয়োজন।",
+	"generatingLink": "লিঙ্ক তৈরি করা হচ্ছে...",
+	"noCameraPermissionIsGranted": "কোন ক্যামেরা অনুমতি দেওয়া হয় না. অনুগ্রহ করে আপনার ডিভাইসের সেটিংসে এটি মঞ্জুর করুন৷"
 }
diff --git a/lib/l10n/intl_cs.arb b/lib/l10n/intl_cs.arb
index 01a45c3a..63f348a3 100644
--- a/lib/l10n/intl_cs.arb
+++ b/lib/l10n/intl_cs.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Přiřazení uživatele se nezdařilo",
 	"pleaseAllowAccessCameraGallery": "Povolte prosím přístup k fotoaparátu a galerii",
 	"goBack": "Vraťte se",
-	"privacyTerms": ""
+	"privacyTerms": "Ochrana osobních údajů a podmínky",
+	"results": "Výsledek",
+	"danish": "dánský",
+	"allowCameraAccess": "Povolit přístup k fotoaparátu?",
+	"getNotified": "Získejte upozornění!",
+	"imIn": "jdu do toho",
+	"weNeedCameraAccessTo": "K naskenování QR kódu nebo čárového kódu potřebujeme přístup k fotoaparátu.",
+	"generatingLink": "Generování odkazu...",
+	"noCameraPermissionIsGranted": "Není uděleno žádné povolení ke kameře. Udělte jej prosím v Nastavení vašeho zařízení."
 }
diff --git a/lib/l10n/intl_da.arb b/lib/l10n/intl_da.arb
index c85acdff..5a36f2f2 100644
--- a/lib/l10n/intl_da.arb
+++ b/lib/l10n/intl_da.arb
@@ -802,5 +802,13 @@
 	"zipCode": "postnummer",
 	"zipCodeIsRequired": "Postnummerfeltet er påkrævet",
 	"goBack": "Gå tilbage",
-	"privacyTerms": ""
+	"privacyTerms": "Fortrolighed og vilkår",
+	"results": "resultater",
+	"danish": "dansk",
+	"allowCameraAccess": "Vil du tillade kameraadgang?",
+	"getNotified": "Få besked!",
+	"imIn": "jeg er med",
+	"weNeedCameraAccessTo": "Vi har brug for kameraadgang for at scanne efter QR-kode eller stregkode.",
+	"generatingLink": "Genererer link...",
+	"noCameraPermissionIsGranted": "Der gives ingen kameratilladelse. Giv det venligst i din enheds indstillinger."
 }
diff --git a/lib/l10n/intl_de.arb b/lib/l10n/intl_de.arb
index 27182995..4038d9c8 100644
--- a/lib/l10n/intl_de.arb
+++ b/lib/l10n/intl_de.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Benutzer konnte nicht zugewiesen werden",
 	"pleaseAllowAccessCameraGallery": "Bitte erlauben Sie den Zugriff auf die Kamera und die Galerie",
 	"goBack": "Geh zurück",
-	"privacyTerms": ""
+	"privacyTerms": "Datenschutz",
+	"results": "Ergebnisse",
+	"danish": "dänisch",
+	"allowCameraAccess": "Kamerazugriff zulassen?",
+	"getNotified": "Benachrichtigt werden!",
+	"imIn": "ich bin dabei",
+	"weNeedCameraAccessTo": "Wir benötigen Kamerazugriff, um nach QR-Code oder Barcode zu scannen.",
+	"generatingLink": "Link wird generiert...",
+	"noCameraPermissionIsGranted": "Es wird keine Kameraerlaubnis erteilt. Bitte gewähren Sie es in den Einstellungen Ihres Geräts."
 }
diff --git a/lib/l10n/intl_el.arb b/lib/l10n/intl_el.arb
index f2719662..5b0ac083 100644
--- a/lib/l10n/intl_el.arb
+++ b/lib/l10n/intl_el.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Αποτυχία εκχώρησης χρήστη",
 	"pleaseAllowAccessCameraGallery": "Επιτρέψτε την πρόσβαση στην κάμερα και τη συλλογή",
 	"goBack": "Πήγαινε πίσω",
-	"privacyTerms": ""
+	"privacyTerms": "Απόρρητο και Όροι",
+	"results": "αποτελέσματα",
+	"danish": "δανικός",
+	"allowCameraAccess": "Να επιτρέπεται η πρόσβαση στην κάμερα;",
+	"getNotified": "Λάβετε ειδοποίηση!",
+	"imIn": "Είμαι μέσα",
+	"weNeedCameraAccessTo": "Χρειαζόμαστε πρόσβαση στην κάμερα για σάρωση για κωδικό QR ή Bar code.",
+	"generatingLink": "Δημιουργία συνδέσμου...",
+	"noCameraPermissionIsGranted": "Δεν χορηγείται άδεια κάμερας. Παρακαλώ χορηγήστε το στις Ρυθμίσεις της συσκευής σας."
 }
diff --git a/lib/l10n/intl_en.arb b/lib/l10n/intl_en.arb
index fc89a8b8..c2ddf42f 100644
--- a/lib/l10n/intl_en.arb
+++ b/lib/l10n/intl_en.arb
@@ -92,7 +92,7 @@
 	"darkTheme": "Dark Theme",
 	"rateTheApp": "Rate the app",
 	"logout": "Logout",
-	"login": "LogIn",
+	"login": "Login",
 	"items": "items",
 	"cart": "Cart",
 	"shop": "Shop",
@@ -176,7 +176,7 @@
 	"spanish": "Spanish",
 	"chinese": "Chinese",
 	"japanese": "Japanese",
-	"languageSuccess": "The Language is updated successfully, please restart the APP",
+	"languageSuccess": "The Language is updated successfully",
 	"agreeWithPrivacy": "Privacy and Term",
 	"PrivacyAndTerm": "Privacy and Term",
 	"iAgree": "I agree with",
@@ -785,7 +785,7 @@
 	"decline": "Decline",
 	"agree": "Agree",
 	"notifyLatestOffer": "Notify latest offers & product availability",
-	"weWillSendYouNotification": "We will send you notifications when new products are available or offers are available. You can always change this setting in the settings.",
+	"weWillSendYouNotification": "We will send you notifications when new products are available or offers are available. You can always turn it off in the settings.",
 	"bySignup": "By signing up, you agree to our ",
 	"deleteAccount": "Delete Account",
 	"areYouSureDeleteAccount": "Are you sure to delete your account?",
@@ -802,5 +802,21 @@
 	"pleaseAllowAccessCameraGallery": "Please allow access to the camera and gallery",
 	"failToAssign": "Failed to assign User",
 	"goBack": "Go back",
-	"privacyTerms": ""
+	"privacyTerms": "Privacy & Terms",
+	"results": "Results",
+	"danish": "Danish",
+	"getNotified": "Get notified!",
+	"imIn": "I'm in",
+	"allowCameraAccess": "Allow Camera access?",
+	"weNeedCameraAccessTo": "We need camera access to scan for QR code or Bar code.",
+	"noCameraPermissionIsGranted": "No camera permission is granted. Please grant it in your device's Settings.",
+	"generatingLink": "Generating link...",
+	"invalidYearOfBirth": "Invalid Year of Birth",
+	"failedToGenerateLink": "Failed to generate link",
+	"codExtraFee": "COD Extra Fee",
+	"moreFromStore": "More from {store}",
+	"store": "Store",
+	"changedCurrencyTo": "Changed currency to {currency}",
+	"appearance": "Appearance",
+	"lightTheme": "Light Theme"
 }
diff --git a/lib/l10n/intl_es.arb b/lib/l10n/intl_es.arb
index 47ab7586..422fac45 100644
--- a/lib/l10n/intl_es.arb
+++ b/lib/l10n/intl_es.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "No se pudo asignar el usuario",
 	"pleaseAllowAccessCameraGallery": "Permita el acceso a la cámara y la galería.",
 	"goBack": "Regresa",
-	"privacyTerms": ""
+	"privacyTerms": "Términos y privacidad",
+	"results": "Resultados",
+	"danish": "danés",
+	"allowCameraAccess": "¿Permitir acceso a la cámara?",
+	"getNotified": "¡Ser notificado!",
+	"imIn": "estoy dentro",
+	"weNeedCameraAccessTo": "Necesitamos acceso a la cámara para escanear el código QR o el código de barras.",
+	"generatingLink": "Generando enlace...",
+	"noCameraPermissionIsGranted": "No se concede ningún permiso de cámara. Concédelo en la configuración de tu dispositivo."
 }
diff --git a/lib/l10n/intl_fa.arb b/lib/l10n/intl_fa.arb
index 55e11877..a3de85aa 100644
--- a/lib/l10n/intl_fa.arb
+++ b/lib/l10n/intl_fa.arb
@@ -802,5 +802,13 @@
 	"weWillSendYouNotification": "هنگامی که محصولات جدید در دسترس هستند یا پیشنهادات در دسترس هستند، اعلان هایی را برای شما ارسال می کنیم. همیشه می توانید این تنظیم را در تنظیمات تغییر دهید.",
 	"failToAssign": "تخصیص کاربر ناموفق بود",
 	"pleaseAllowAccessCameraGallery": "لطفاً اجازه دسترسی به دوربین و گالری را بدهید",
-	"goBack": "برگرد"
+	"goBack": "برگرد",
+	"results": "نتایج",
+	"danish": "دانمارکی",
+	"allowCameraAccess": "به دوربین اجازه دسترسی داده شود؟",
+	"getNotified": "مطلع شوید!",
+	"imIn": "من هستم",
+	"weNeedCameraAccessTo": "برای اسکن کد QR یا بارکد به دوربین نیاز داریم.",
+	"generatingLink": "ایجاد لینک...",
+	"noCameraPermissionIsGranted": "هیچ مجوز دوربین داده نمی شود. لطفاً آن را در تنظیمات دستگاه خود اعطا کنید."
 }
diff --git a/lib/l10n/intl_fi.arb b/lib/l10n/intl_fi.arb
index e7953d8a..81ec7562 100644
--- a/lib/l10n/intl_fi.arb
+++ b/lib/l10n/intl_fi.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Käyttäjän määrittäminen epäonnistui",
 	"pleaseAllowAccessCameraGallery": "Salli pääsy kameraan ja galleriaan",
 	"goBack": "Mene takaisin",
-	"privacyTerms": ""
+	"privacyTerms": "YKSITYISYYS JA KÄYTTÖEHDOT",
+	"results": "tulokset",
+	"danish": "Tanskan kieli",
+	"allowCameraAccess": "Sallitaanko kameran käyttöoikeus?",
+	"getNotified": "Saat ilmoituksen!",
+	"imIn": "olen mukana",
+	"weNeedCameraAccessTo": "Tarvitsemme kameran pääsyn QR-koodin tai viivakoodin skannaamiseen.",
+	"generatingLink": "Luodaan linkkiä...",
+	"noCameraPermissionIsGranted": "Kameralupaa ei myönnetä. Anna se laitteesi asetuksista."
 }
diff --git a/lib/l10n/intl_fr.arb b/lib/l10n/intl_fr.arb
index f45e1daf..b429fc0b 100644
--- a/lib/l10n/intl_fr.arb
+++ b/lib/l10n/intl_fr.arb
@@ -22,7 +22,7 @@
 	"saveToWishList": "Enregistrer dans la liste de souhaits",
 	"share": "partager",
 	"cancel": "Annuler",
-	"checkout": "Caisse",
+	"checkout": "Commander",
 	"clearCart": "Vider le panier",
 	"myWishList": "Ma liste de souhaits",
 	"yourBagIsEmpty": "Votre panier est vide",
@@ -42,7 +42,7 @@
 	"country": "Pays",
 	"phoneNumber": "Numéro de téléphone",
 	"email": "Email",
-	"streetName": "Nom de rue",
+	"streetName": "Addresse",
 	"shippingMethod": "Méthode d'expédition",
 	"continueToShipping": "Continuer à la livraison",
 	"continueToReview": "Continuer à la révision",
@@ -112,7 +112,7 @@
 	"products": "Produits",
 	"searchingAddress": "Rechercher adresse",
 	"weFoundProducts": "Nous avons trouvé des {length} produits",
-	"clear": "Clear",
+	"clear": "Vider",
 	"video": "Vidéo",
 	"recentView": "Votre vue récente",
 	"inStock": "En stock",
@@ -160,9 +160,9 @@
 	"signIn": "Connexion",
 	"signUp": "S'inscrire",
 	"next": "Suivant",
-	"done": "fait",
+	"done": "D'accord",
 	"currencies": "devises",
-	"sale": "Vente {percent} %",
+	"sale": "Remise {percent} %",
 	"updateUserInfor": "Mettre à jour le profil",
 	"update": "Mise à jour",
 	"aboutUs": "À propos de nous",
@@ -184,7 +184,7 @@
 	"pullToLoadMore": "Tirez pour charger plus",
 	"loadFail": "Échec du chargement!",
 	"releaseToLoadMore": "Libérer pour charger plus",
-	"noData": "Plus de données",
+	"noData": "Pas de données",
 	"all": "Tous",
 	"filter": "Filtre",
 	"tags": "Tags",
@@ -219,9 +219,9 @@
 	"orderStatusProcessing": "Traitement",
 	"orderStatusCompleted": "Terminé",
 	"orderStatusCancelled": "Annulé",
-	"orderStatusRefunded": "Refunded",
+	"orderStatusRefunded": "Remboursée",
 	"pleaseFillCode": "Veuillez saisir votre code",
-	"warning": "Warning: {message}",
+	"warning": "Avertissement: {message}",
 	"nItems": "{itemCount} produits",
 	"dataEmpty": "Data Empty",
 	"yourAddressExistYourLocal": "Votre adresse existe dans votre local",
@@ -235,19 +235,19 @@
 	"duration": "durée",
 	"addedSuccessfully": "Ajouté avec succès",
 	"notFound": "Introuvable",
-	"error": "Error: {message}",
+	"error": "Erreur: {message}",
 	"goBackHomePage": "Retour à la page d'accueil",
 	"noBlog": "Opps, le blog ne semble plus exister",
 	"prev": "fr-Prev",
-	"skip": "fr-Skip",
+	"skip": "Passer",
 	"download": "télécharger",
 	"daysAgo": "il y a {day} jours",
 	"hoursAgo": "il y a {hour} heures",
 	"minutesAgo": "il y a {minute} minutes",
 	"secondsAgo": "il y a {second} secondes",
 	"rateThisApp": "Noter cette application",
-	"rateThisAppDescription": "Si vous aimez cette application, veuillez prendre un peu de votre temps pour l'examiner! \nCela nous aide vraiment et cela ne devrait pas vous prendre plus d'une minute.",
-	"rate": "taux",
+	"rateThisAppDescription": "Si vous aimez cette application, veuillez prendre un peu de votre temps pour la noter! \nCela nous aide vraiment et cela ne devrait pas vous prendre plus d'une minute.",
+	"rate": "Evaluer",
 	"noThanks": "Non merci",
 	"maybeLater": "Peut-être plus tard",
 	"phone": "Téléphone",
@@ -304,7 +304,7 @@
 	"russian": "Russian",
 	"sold": "Sold: {numberOfUnitsSold}",
 	"almostSoldOut": "Presque épuisé",
-	"endsIn": "Ends in {timeLeft}",
+	"endsIn": "Se termine dans {timeLeft}",
 	"hebrew": "Hebrew",
 	"thailand": "Thai",
 	"additionalServices": "Des services supplémentaires",
@@ -499,8 +499,8 @@
 	"storeSettings": "Paramètres du magasin",
 	"storeSliderBanner": "Bannière de curseur de magasin",
 	"storeStaticBanner": "Stocker la bannière statique",
-	"street": "rue",
-	"street2": "Rue # 2",
+	"street": "Addresse",
+	"street2": "Addresse",
 	"updateFailed": "Mise à jour a échoué!",
 	"updateSuccess": "Mise à jour réussie!",
 	"week": "Semaine {week}",
@@ -766,7 +766,7 @@
 	"burmese": "birman",
 	"productNeedAtLeastOneVariation": "La variable de type de produit nécessite au moins une variante",
 	"albanian": "albanais",
-	"connect": "Relier",
+	"connect": "Se Connecter",
 	"downloadApp": "Télécharger l'application",
 	"support": "Soutien",
 	"productNeedNameAndPrice": "Le type de produit simple nécessite le nom et le prix régulier",
@@ -784,11 +784,11 @@
 	"account": "Compte",
 	"accountDeleteDescription": "La suppression de votre compte supprime les informations personnelles de notre base de données. Votre e-mail devient définitivement réservé et le même e-mail ne peut pas être réutilisé pour enregistrer un nouveau compte.",
 	"agree": "Se mettre d'accord",
-	"allow": "permettre",
+	"allow": "C'est Parfait",
 	"areYouSureDeleteAccount": "Êtes-vous sûr de vouloir supprimer votre compte ?",
 	"bySignup": "En vous inscrivant, vous acceptez nos",
 	"confirmAccountDeletion": "Confirmer la suppression du compte",
-	"decline": "Déclin",
+	"decline": "Non, Merci",
 	"deleteAccount": "Supprimer le compte",
 	"deleteAccountMsg": "Êtes-vous sûr de vouloir supprimer votre compte ? Veuillez lire comment la suppression du compte affectera.",
 	"deleteAccountSuccess": "Compte supprimé avec succès. Votre session a expiré.",
@@ -797,10 +797,18 @@
 	"enterCaptcha": "Saisissez {captcha} pour confirmer :",
 	"needToLoginAgain": "Vous devez vous reconnecter pour effectuer la mise à jour",
 	"notice": "Remarquer",
-	"notifyLatestOffer": "Notifier les dernières offres et la disponibilité des produits",
+	"notifyLatestOffer": "Recevez les dernières offres et les ventes flash!",
 	"weWillSendYouNotification": "Nous vous enverrons des notifications lorsque de nouveaux produits seront disponibles ou que des offres seront disponibles. Vous pouvez toujours modifier ce paramètre dans les paramètres.",
 	"failToAssign": "Échec de l'attribution de l'utilisateur",
 	"pleaseAllowAccessCameraGallery": "Veuillez autoriser l'accès à la caméra et à la galerie",
 	"goBack": "Retourner",
-	"privacyTerms": ""
+	"privacyTerms": "Confidentialité et modalités",
+	"results": "Résultats",
+	"danish": "danois",
+	"allowCameraAccess": "Autoriser l'accès à la caméra ?",
+	"getNotified": "Recevez une notification!",
+	"imIn": "j'en suis",
+	"weNeedCameraAccessTo": "Nous avons besoin d'un accès à la caméra pour scanner le code QR ou le code à barres.",
+	"generatingLink": "Génération du lien...",
+	"noCameraPermissionIsGranted": "Aucune autorisation de caméra n'est accordée. Veuillez l'accorder dans les paramètres de votre appareil."
 }
diff --git a/lib/l10n/intl_he.arb b/lib/l10n/intl_he.arb
index a8510e47..2eaa8cb4 100644
--- a/lib/l10n/intl_he.arb
+++ b/lib/l10n/intl_he.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "הקצאת משתמש נכשלה",
 	"pleaseAllowAccessCameraGallery": "נא לאפשר גישה למצלמה ולגלריה",
 	"goBack": "תחזור",
-	"privacyTerms": ""
+	"privacyTerms": "פרטיות ותנאים",
+	"results": "תוצאות",
+	"danish": "דנית",
+	"allowCameraAccess": "לאפשר גישה למצלמה?",
+	"getNotified": "קבל הודעה!",
+	"imIn": "אני בפנים",
+	"weNeedCameraAccessTo": "אנחנו צריכים גישה למצלמה כדי לסרוק קוד QR או ברקוד.",
+	"generatingLink": "יוצר קישור...",
+	"noCameraPermissionIsGranted": "לא ניתנת הרשאה למצלמה. אנא הענק זאת בהגדרות של המכשיר שלך."
 }
diff --git a/lib/l10n/intl_hi.arb b/lib/l10n/intl_hi.arb
index 3ba221b7..7a8dfa00 100644
--- a/lib/l10n/intl_hi.arb
+++ b/lib/l10n/intl_hi.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "उपयोगकर्ता असाइन करने में विफल",
 	"pleaseAllowAccessCameraGallery": "कृपया कैमरा और गैलरी तक पहुंच की अनुमति दें",
 	"goBack": "वापस जाओ",
-	"privacyTerms": ""
+	"privacyTerms": "गोपनीयता व शर्तें",
+	"results": "परिणाम",
+	"danish": "दानिश",
+	"allowCameraAccess": "कैमरा ऐक्सेस की अनुमति दें?",
+	"getNotified": "सूचित किया गया!",
+	"imIn": "मैं भी शामिल",
+	"weNeedCameraAccessTo": "क्यूआर कोड या बार कोड को स्कैन करने के लिए हमें कैमरा एक्सेस की आवश्यकता होती है।",
+	"generatingLink": "लिंक जनरेट किया जा रहा है...",
+	"noCameraPermissionIsGranted": "कोई कैमरा अनुमति नहीं दी जाती है। कृपया इसे अपने डिवाइस की सेटिंग में प्रदान करें।"
 }
diff --git a/lib/l10n/intl_hu.arb b/lib/l10n/intl_hu.arb
index ab72bbff..f4f87fa3 100644
--- a/lib/l10n/intl_hu.arb
+++ b/lib/l10n/intl_hu.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Nem sikerült a felhasználó hozzárendelése",
 	"pleaseAllowAccessCameraGallery": "Kérjük, engedélyezze a hozzáférést a kamerához és a galériához",
 	"goBack": "Menjen vissza",
-	"privacyTerms": ""
+	"privacyTerms": "Adatvédelem és feltételek",
+	"results": "Eredmények",
+	"danish": "dán",
+	"allowCameraAccess": "Engedélyezi a kamera hozzáférését?",
+	"getNotified": "Értesítsen!",
+	"imIn": "én benne vagyok",
+	"weNeedCameraAccessTo": "A QR-kód vagy vonalkód beolvasásához kamera-hozzáférésre van szükségünk.",
+	"generatingLink": "Link generálása...",
+	"noCameraPermissionIsGranted": "Kameraengedélyt nem adnak. Kérjük, adja meg az eszköz beállításaiban."
 }
diff --git a/lib/l10n/intl_id.arb b/lib/l10n/intl_id.arb
index 0c4cc19b..1c4845a3 100644
--- a/lib/l10n/intl_id.arb
+++ b/lib/l10n/intl_id.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Gagal menetapkan Pengguna",
 	"pleaseAllowAccessCameraGallery": "Mohon izinkan akses ke kamera dan galeri",
 	"goBack": "Kembali",
-	"privacyTerms": ""
+	"privacyTerms": "Privasi & Ketentuan",
+	"results": "Hasil",
+	"danish": "Orang Denmark",
+	"allowCameraAccess": "Izinkan akses Kamera?",
+	"getNotified": "Dapatkan pemberitahuan!",
+	"imIn": "saya ikut",
+	"weNeedCameraAccessTo": "Kami membutuhkan akses kamera untuk memindai kode QR atau kode batang.",
+	"generatingLink": "Membuat tautan...",
+	"noCameraPermissionIsGranted": "Tidak ada izin kamera yang diberikan. Harap berikan di Pengaturan perangkat Anda."
 }
diff --git a/lib/l10n/intl_it.arb b/lib/l10n/intl_it.arb
index 45da4697..c2af08f8 100644
--- a/lib/l10n/intl_it.arb
+++ b/lib/l10n/intl_it.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Impossibile assegnare l'utente",
 	"pleaseAllowAccessCameraGallery": "Si prega di consentire l'accesso alla fotocamera e alla galleria",
 	"goBack": "Torna Indietro",
-	"privacyTerms": ""
+	"privacyTerms": "Termini e Condizioni",
+	"results": "risultati",
+	"danish": "danese",
+	"allowCameraAccess": "Consenti l'accesso alla fotocamera?",
+	"getNotified": "Ricevi una notifica!",
+	"imIn": "Sono dentro",
+	"weNeedCameraAccessTo": "Abbiamo bisogno dell'accesso alla fotocamera per scansionare il codice QR o il codice a barre.",
+	"generatingLink": "Generazione collegamento in corso...",
+	"noCameraPermissionIsGranted": "Non viene concessa alcuna autorizzazione alla fotocamera. Concedilo nelle Impostazioni del tuo dispositivo."
 }
diff --git a/lib/l10n/intl_ja.arb b/lib/l10n/intl_ja.arb
index 4a4d0140..9b240f02 100644
--- a/lib/l10n/intl_ja.arb
+++ b/lib/l10n/intl_ja.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "ユーザーの割り当てに失敗しました",
 	"pleaseAllowAccessCameraGallery": "カメラとギャラリーへのアクセスを許可してください",
 	"goBack": "戻る",
-	"privacyTerms": ""
+	"privacyTerms": "プライバシーと利用規約",
+	"results": "結果",
+	"danish": "デンマーク語",
+	"allowCameraAccess": "カメラアクセスを許可しますか？",
+	"getNotified": "通知を受け取ります！",
+	"imIn": "私は入る",
+	"weNeedCameraAccessTo": "QRコードまたはバーコードをスキャンするにはカメラにアクセスする必要があります。",
+	"generatingLink": "リンクを生成しています...",
+	"noCameraPermissionIsGranted": "カメラの許可は与えられていません。デバイスの設定で付与してください。"
 }
diff --git a/lib/l10n/intl_km.arb b/lib/l10n/intl_km.arb
index b83a55a4..05d855c3 100644
--- a/lib/l10n/intl_km.arb
+++ b/lib/l10n/intl_km.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "បរាជ័យក្នុងការកំណត់អ្នកប្រើប្រាស់",
 	"pleaseAllowAccessCameraGallery": "សូមអនុញ្ញាតឱ្យចូលប្រើកាមេរ៉ា និងវិចិត្រសាល",
 	"goBack": "ត្រឡប់​ក្រោយ",
-	"privacyTerms": ""
+	"privacyTerms": "ឯកជនភាព & លក្ខខណ្ឌ",
+	"results": "លទ្ធផល",
+	"danish": "ដាណឺម៉ាក",
+	"allowCameraAccess": "អនុញ្ញាតឱ្យចូលប្រើកាមេរ៉ា?",
+	"getNotified": "ទទួលបានការជូនដំណឹង!",
+	"imIn": "ខ្ញុំចូល",
+	"weNeedCameraAccessTo": "យើង​ត្រូវ​ការ​ការ​ចូល​ប្រើ​កាមេរ៉ា​ដើម្បី​ស្កេន​រក​កូដ QR ឬ Bar code។",
+	"generatingLink": "កំពុងបង្កើតតំណ...",
+	"noCameraPermissionIsGranted": "គ្មានការអនុញ្ញាតពីកាមេរ៉ាទេ។ សូមផ្តល់វានៅក្នុងការកំណត់ឧបករណ៍របស់អ្នក។"
 }
diff --git a/lib/l10n/intl_ko.arb b/lib/l10n/intl_ko.arb
index f913c118..43371d47 100644
--- a/lib/l10n/intl_ko.arb
+++ b/lib/l10n/intl_ko.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "사용자를 할당하지 못했습니다.",
 	"pleaseAllowAccessCameraGallery": "카메라 및 갤러리에 대한 액세스를 허용하십시오.",
 	"goBack": "돌아가",
-	"privacyTerms": ""
+	"privacyTerms": "개인정보 및 약관",
+	"results": "결과",
+	"danish": "덴마크 말",
+	"allowCameraAccess": "카메라 액세스를 허용하시겠습니까?",
+	"getNotified": "알림 받기!",
+	"imIn": "나는 ~ 안에있다",
+	"weNeedCameraAccessTo": "QR 코드 또는 바코드를 스캔하려면 카메라 액세스 권한이 필요합니다.",
+	"generatingLink": "링크 생성 중...",
+	"noCameraPermissionIsGranted": "카메라 권한이 부여되지 않았습니다. 장치의 설정에서 허용하십시오."
 }
diff --git a/lib/l10n/intl_lo.arb b/lib/l10n/intl_lo.arb
index 2c5247f3..993d02d7 100644
--- a/lib/l10n/intl_lo.arb
+++ b/lib/l10n/intl_lo.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "ລົ້ມເຫລວໃນການມອບໝາຍຜູ້ໃຊ້",
 	"pleaseAllowAccessCameraGallery": "ກະລຸນາອະນຸຍາດໃຫ້ເຂົ້າເຖິງກ້ອງຖ່າຍຮູບ ແລະຄັງຮູບພາບ",
 	"goBack": "ກັບ​ຄືນ",
-	"privacyTerms": ""
+	"privacyTerms": "ຄວາມເປັນສ່ວນຕົວ & ເງື່ອນໄຂ",
+	"results": "ຜົນໄດ້ຮັບ",
+	"danish": "ເດນມາກ",
+	"allowCameraAccess": "ອະນຸຍາດໃຫ້ເຂົ້າເຖິງກ້ອງຖ່າຍຮູບບໍ?",
+	"getNotified": "ໄດ້ຮັບການແຈ້ງເຕືອນ!",
+	"imIn": "ຂ້ອຍຢູ່ໃນ",
+	"weNeedCameraAccessTo": "ພວກເຮົາຕ້ອງການເຂົ້າໃຊ້ກ້ອງຖ່າຍຮູບເພື່ອສະແກນຫາລະຫັດ QR ຫຼື Bar code.",
+	"generatingLink": "ກຳລັງສ້າງລິ້ງ...",
+	"noCameraPermissionIsGranted": "ບໍ່ມີການອະນຸຍາດກ້ອງຖ່າຍຮູບ. ກະລຸນາໃຫ້ມັນຢູ່ໃນການຕັ້ງຄ່າອຸປະກອນຂອງທ່ານ."
 }
diff --git a/lib/l10n/intl_ms.arb b/lib/l10n/intl_ms.arb
index 85b71d9e..47df4962 100644
--- a/lib/l10n/intl_ms.arb
+++ b/lib/l10n/intl_ms.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Gagal menetapkan Pengguna",
 	"pleaseAllowAccessCameraGallery": "Sila benarkan akses kepada kamera dan galeri",
 	"goBack": "PERGI BALIK",
-	"privacyTerms": ""
+	"privacyTerms": "Privasi & Syarat",
+	"results": "Keputusan",
+	"danish": "Denmark",
+	"allowCameraAccess": "Benarkan akses Kamera?",
+	"getNotified": "Dapatkan pemberitahuan!",
+	"imIn": "Saya ikut",
+	"weNeedCameraAccessTo": "Kami memerlukan akses kamera untuk mengimbas kod QR atau kod Bar.",
+	"generatingLink": "Menjana pautan...",
+	"noCameraPermissionIsGranted": "Tiada kebenaran kamera diberikan. Sila berikannya dalam Tetapan peranti anda."
 }
diff --git a/lib/l10n/intl_my.arb b/lib/l10n/intl_my.arb
index 08b4e37b..588aede4 100644
--- a/lib/l10n/intl_my.arb
+++ b/lib/l10n/intl_my.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "အသုံးပြုသူကို သတ်မှတ်ပေးရန် မအောင်မြင်ပါ။",
 	"pleaseAllowAccessCameraGallery": "ကျေးဇူးပြု၍ ကင်မရာနှင့် ပြခန်းသို့ ဝင်ရောက်ခွင့်ပေးပါ။",
 	"goBack": "ပြန်သွားသည်",
-	"privacyTerms": ""
+	"privacyTerms": "ကိုယ်ရေးကိုယ်တာနှင့် စည်းမျဥ်းစည်းကမ်းများ",
+	"results": "ရလဒ်များ",
+	"danish": "ဒိန်းမတ်",
+	"allowCameraAccess": "ကင်မရာသုံးခွင့်ကို ခွင့်ပြုမလား။",
+	"getNotified": "အကြောင်းကြားပါ။",
+	"imIn": "ရောက်နေတာ။",
+	"weNeedCameraAccessTo": "QR ကုဒ် သို့မဟုတ် ဘားကုဒ်ကို စကင်န်ဖတ်ရန် ကင်မရာအသုံးပြုခွင့် လိုအပ်ပါသည်။",
+	"generatingLink": "လင့်ခ်ကို ထုတ်နေသည်...",
+	"noCameraPermissionIsGranted": "ကင်မရာခွင့်ပြုချက် မရှိပါ။ သင့်စက်၏ ဆက်တင်များတွင် ကျေးဇူးပြု၍ ခွင့်ပြုပါ။"
 }
diff --git a/lib/l10n/intl_nl.arb b/lib/l10n/intl_nl.arb
index 94756976..a390cd6f 100644
--- a/lib/l10n/intl_nl.arb
+++ b/lib/l10n/intl_nl.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Kan gebruiker niet toewijzen",
 	"pleaseAllowAccessCameraGallery": "Geef toegang tot de camera en galerij",
 	"goBack": "Ga terug",
-	"privacyTerms": ""
+	"privacyTerms": "Privacy en voorwaarden",
+	"results": "uitslagen",
+	"danish": "Deens",
+	"allowCameraAccess": "Cameratoegang toestaan?",
+	"getNotified": "Ontvang een melding!",
+	"imIn": "Ik doe mee",
+	"weNeedCameraAccessTo": "We hebben cameratoegang nodig om te scannen op QR-code of streepjescode.",
+	"generatingLink": "Link genereren...",
+	"noCameraPermissionIsGranted": "Er wordt geen cameratoestemming verleend. Verleen het a.u.b. in de instellingen van uw apparaat."
 }
diff --git a/lib/l10n/intl_pl.arb b/lib/l10n/intl_pl.arb
index caf124b6..520dd92b 100644
--- a/lib/l10n/intl_pl.arb
+++ b/lib/l10n/intl_pl.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Nie udało się przypisać użytkownika",
 	"pleaseAllowAccessCameraGallery": "Zezwól na dostęp do aparatu i galerii",
 	"goBack": "Wróć",
-	"privacyTerms": ""
+	"privacyTerms": "prywatność i warunki",
+	"results": "wyniki",
+	"danish": "duński",
+	"allowCameraAccess": "Zezwolić na dostęp do aparatu?",
+	"getNotified": "Otrzymywać powiadomienia!",
+	"imIn": "Jestem za",
+	"weNeedCameraAccessTo": "Potrzebujemy dostępu do aparatu, aby zeskanować kod QR lub kod kreskowy.",
+	"generatingLink": "Generowanie linku...",
+	"noCameraPermissionIsGranted": "Nie udzielono pozwolenia na korzystanie z aparatu. Proszę przyznać to w ustawieniach urządzenia."
 }
diff --git a/lib/l10n/intl_pt.arb b/lib/l10n/intl_pt.arb
index 664a6650..019c3be2 100644
--- a/lib/l10n/intl_pt.arb
+++ b/lib/l10n/intl_pt.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Falha ao atribuir usuário",
 	"pleaseAllowAccessCameraGallery": "Por favor, permita o acesso à câmera e à galeria",
 	"goBack": "Volte",
-	"privacyTerms": ""
+	"privacyTerms": "Privacidade e Termos",
+	"results": "resultados",
+	"danish": "dinamarquês",
+	"allowCameraAccess": "Permitir acesso à câmera?",
+	"getNotified": "Seja notificado!",
+	"imIn": "estou dentro",
+	"weNeedCameraAccessTo": "Precisamos de acesso à câmera para escanear o código QR ou código de barras.",
+	"generatingLink": "Gerando link...",
+	"noCameraPermissionIsGranted": "Nenhuma permissão de câmera é concedida. Por favor, conceda-o nas configurações do seu dispositivo."
 }
diff --git a/lib/l10n/intl_ro.arb b/lib/l10n/intl_ro.arb
index fab3b29d..2b2c1594 100644
--- a/lib/l10n/intl_ro.arb
+++ b/lib/l10n/intl_ro.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Nu s-a putut atribui utilizatorul",
 	"pleaseAllowAccessCameraGallery": "Vă rugăm să permiteți accesul la cameră și galerie",
 	"goBack": "Întoarce-te",
-	"privacyTerms": ""
+	"privacyTerms": "Termeni și Condiții",
+	"results": "rezultate",
+	"danish": "danez",
+	"allowCameraAccess": "Permiteți accesul la cameră?",
+	"getNotified": "Fii notificat!",
+	"imIn": "Sunt în",
+	"weNeedCameraAccessTo": "Avem nevoie de acces la cameră pentru a scana codul QR sau codul de bare.",
+	"generatingLink": "Se generează linkul...",
+	"noCameraPermissionIsGranted": "Nu se acordă permisiunea camerei. Vă rugăm să o acordați în Setările dispozitivului dvs."
 }
diff --git a/lib/l10n/intl_ru.arb b/lib/l10n/intl_ru.arb
index 4e05ed15..11d52871 100644
--- a/lib/l10n/intl_ru.arb
+++ b/lib/l10n/intl_ru.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Не удалось назначить пользователя",
 	"pleaseAllowAccessCameraGallery": "Пожалуйста, разрешите доступ к камере и галерее",
 	"goBack": "Вернитесь",
-	"privacyTerms": ""
+	"privacyTerms": "Защита & Условия",
+	"results": "результаты",
+	"danish": "датский",
+	"allowCameraAccess": "Разрешить доступ к камере?",
+	"getNotified": "Получить уведомление!",
+	"imIn": "Я в",
+	"weNeedCameraAccessTo": "Нам нужен доступ к камере для сканирования QR-кода или штрих-кода.",
+	"generatingLink": "Создание ссылки...",
+	"noCameraPermissionIsGranted": "Разрешение на камеру не предоставляется. Пожалуйста, предоставьте его в настройках вашего устройства."
 }
diff --git a/lib/l10n/intl_sk.arb b/lib/l10n/intl_sk.arb
index 005e27a6..c96b96f0 100644
--- a/lib/l10n/intl_sk.arb
+++ b/lib/l10n/intl_sk.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Používateľa sa nepodarilo priradiť",
 	"pleaseAllowAccessCameraGallery": "Povoľte prístup k fotoaparátu a galérii",
 	"goBack": "Vráť sa",
-	"privacyTerms": ""
+	"privacyTerms": "Ochrana osobných údajov a podmienky",
+	"results": "Výsledky",
+	"danish": "dánsky",
+	"allowCameraAccess": "Povoliť prístup k fotoaparátu?",
+	"getNotified": "Nechajte sa upozorniť!",
+	"imIn": "som v",
+	"weNeedCameraAccessTo": "Na skenovanie QR kódu alebo čiarového kódu potrebujeme prístup k fotoaparátu.",
+	"generatingLink": "Generuje sa odkaz...",
+	"noCameraPermissionIsGranted": "Nie je udelené žiadne povolenie pre fotoaparát. Udeľte ho v Nastaveniach svojho zariadenia."
 }
diff --git a/lib/l10n/intl_sq.arb b/lib/l10n/intl_sq.arb
index eacaedf7..d849e119 100644
--- a/lib/l10n/intl_sq.arb
+++ b/lib/l10n/intl_sq.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Caktimi i Përdoruesit dështoi",
 	"pleaseAllowAccessCameraGallery": "Lejo qasjen te kamera dhe galeria",
 	"goBack": "Kthehu mbrapa",
-	"privacyTerms": ""
+	"privacyTerms": "Privatësia dhe Kushtet",
+	"results": "Rezultatet",
+	"danish": "danez",
+	"allowCameraAccess": "Të lejohet aksesi i kamerës?",
+	"getNotified": "Njoftohuni!",
+	"imIn": "une jam ne",
+	"weNeedCameraAccessTo": "Ne kemi nevojë për qasje në kamerë për të skanuar për kodin QR ose kodin bar.",
+	"generatingLink": "Lidhja po gjenerohet...",
+	"noCameraPermissionIsGranted": "Nuk jepet leje për kamerën. Ju lutemi jepni atë në cilësimet e pajisjes tuaj."
 }
diff --git a/lib/l10n/intl_sr.arb b/lib/l10n/intl_sr.arb
index af05b9f6..073bb7f6 100644
--- a/lib/l10n/intl_sr.arb
+++ b/lib/l10n/intl_sr.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Dodjeljivanje korisnika nije uspjelo",
 	"pleaseAllowAccessCameraGallery": "Dozvolite pristup kameri i galeriji",
 	"goBack": "Vrati se",
-	"privacyTerms": ""
+	"privacyTerms": "Privatnost & Uslovi",
+	"results": "Rezultati",
+	"danish": "Danski",
+	"allowCameraAccess": "Dozvoliti pristup kameri?",
+	"getNotified": "Budite obavješteni!",
+	"imIn": "ja sam za",
+	"weNeedCameraAccessTo": "Potreban nam je pristup kameri da skeniramo QR kod ili Bar kod.",
+	"generatingLink": "Generiranje veze...",
+	"noCameraPermissionIsGranted": "Dozvola za kameru nije odobrena. Molimo da to odobrite u postavkama svog uređaja."
 }
diff --git a/lib/l10n/intl_sv.arb b/lib/l10n/intl_sv.arb
index d2f7fbb2..f2a40dfb 100644
--- a/lib/l10n/intl_sv.arb
+++ b/lib/l10n/intl_sv.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Det gick inte att tilldela användare",
 	"pleaseAllowAccessCameraGallery": "Tillåt åtkomst till kameran och galleriet",
 	"goBack": "Gå tillbaka",
-	"privacyTerms": ""
+	"privacyTerms": "SEKRETESS OCH VILLKOR",
+	"results": "Resultat",
+	"danish": "danska",
+	"allowCameraAccess": "Vill du tillåta kameraåtkomst?",
+	"getNotified": "Bli meddelad!",
+	"imIn": "Jag är i",
+	"weNeedCameraAccessTo": "Vi behöver kameraåtkomst för att skanna efter QR-kod eller streckkod.",
+	"generatingLink": "Genererar länk...",
+	"noCameraPermissionIsGranted": "Inget kameratillstånd beviljas. Bevilja det i enhetens inställningar."
 }
diff --git a/lib/l10n/intl_sw.arb b/lib/l10n/intl_sw.arb
index 8dfc32d1..f3b9099c 100644
--- a/lib/l10n/intl_sw.arb
+++ b/lib/l10n/intl_sw.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Imeshindwa kukabidhi Mtumiaji",
 	"pleaseAllowAccessCameraGallery": "Tafadhali ruhusu ufikiaji wa kamera na ghala",
 	"goBack": "Rudi nyuma",
-	"privacyTerms": ""
+	"privacyTerms": "Faragha na Masharti",
+	"results": "Matokeo",
+	"danish": "Kidenmaki",
+	"allowCameraAccess": "Ungependa kuruhusu ufikiaji wa Kamera?",
+	"getNotified": "Pata arifa!",
+	"imIn": "niko ndani",
+	"weNeedCameraAccessTo": "Tunahitaji ufikiaji wa kamera ili kutafuta msimbo wa QR au Msimbo wa Pau.",
+	"generatingLink": "Inazalisha kiungo...",
+	"noCameraPermissionIsGranted": "Hakuna ruhusa ya kamera inayotolewa. Tafadhali iruhusu katika Mipangilio ya kifaa chako."
 }
diff --git a/lib/l10n/intl_ta.arb b/lib/l10n/intl_ta.arb
index b48899c4..cb61158a 100644
--- a/lib/l10n/intl_ta.arb
+++ b/lib/l10n/intl_ta.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "பயனரை ஒதுக்க முடியவில்லை",
 	"pleaseAllowAccessCameraGallery": "கேமரா மற்றும் கேலரியை அணுக அனுமதிக்கவும்",
 	"goBack": "திரும்பிச் செல்லுங்கள்",
-	"privacyTerms": ""
+	"privacyTerms": "தனியுரிமை & விதிமுறைகள்",
+	"results": "முடிவுகள்",
+	"danish": "டேனிஷ்",
+	"allowCameraAccess": "கேமரா அணுகலை அனுமதிக்கவா?",
+	"getNotified": "அறிவிப்பைப் பெறுங்கள்!",
+	"imIn": "நான் உள்ளேன்",
+	"weNeedCameraAccessTo": "QR குறியீடு அல்லது பார் குறியீட்டை ஸ்கேன் செய்ய எங்களுக்கு கேமரா அணுகல் தேவை.",
+	"generatingLink": "இணைப்பை உருவாக்குகிறது...",
+	"noCameraPermissionIsGranted": "கேமரா அனுமதி வழங்கப்படவில்லை. உங்கள் சாதனத்தின் அமைப்புகளில் அதை வழங்கவும்."
 }
diff --git a/lib/l10n/intl_th.arb b/lib/l10n/intl_th.arb
index 4e2c71ac..3fa56035 100644
--- a/lib/l10n/intl_th.arb
+++ b/lib/l10n/intl_th.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "ไม่สามารถมอบหมาย User",
 	"pleaseAllowAccessCameraGallery": "โปรดอนุญาตให้เข้าถึงกล้องและแกลเลอรี่",
 	"goBack": "กลับไป",
-	"privacyTerms": ""
+	"privacyTerms": "ความเป็นส่วนตัวและข้อตกลง",
+	"results": "ผล",
+	"danish": "เดนมาร์ก",
+	"allowCameraAccess": "อนุญาตให้เข้าถึงกล้องไหม",
+	"getNotified": "รับการแจ้งเตือน!",
+	"imIn": "ฉันอยู่ใน",
+	"weNeedCameraAccessTo": "เราต้องการการเข้าถึงกล้องเพื่อสแกนรหัส QR หรือบาร์โค้ด",
+	"generatingLink": "กำลังสร้างลิงค์...",
+	"noCameraPermissionIsGranted": "ไม่ได้รับอนุญาตจากกล้อง โปรดให้สิทธิ์ในการตั้งค่าอุปกรณ์ของคุณ"
 }
diff --git a/lib/l10n/intl_ti.arb b/lib/l10n/intl_ti.arb
new file mode 100644
index 00000000..97a042b2
--- /dev/null
+++ b/lib/l10n/intl_ti.arb
@@ -0,0 +1,812 @@
+{
+	"@@locale": "ti",
+	"seeAll": "ንዅሉ ርአ",
+	"featureProducts": "ዓምዲ ፍርያት",
+	"bagsCollections": "ናይ ቦርሳታት ፍርያት",
+	"womanCollections": "ናይ ሰበይቲ ፍርያት",
+	"manCollections": "ናይ ሰብኡት ፍርያት",
+	"buyNow": "ሕጂ ዓድግ",
+	"products": "ፍርያት",
+	"addToCart": "ኣብ ዓረብያ ጻዓን",
+	"description": " መግለጺ",
+	"readReviews": "ምንባብ ርእይቶታት",
+	"additionalInformation": "ተወሳኺ ሓበሬታ",
+	"noReviews": "ርእይቶ ኣይገበረን",
+	"productAdded": "እዚ ፍርያት እዚ ተወሲኹ ኣሎ",
+	"youMightAlsoLike": "እዚ እውን ክትፈትዎ ትኽእል ኢኻ",
+	"selectTheSize": "ዓቐን ምረጽ",
+	"selectTheColor": "ሕብርታት ምረጽ",
+	"selectTheQuantity": "ብዝሒ ምረጽ",
+	"size": "ዓቐን",
+	"color": "ሕብርታት ",
+	"myCart": "ዓረብያይ",
+	"saveToWishList": "ናብ ዝርዝር ዓቅብ  ",
+	"share": "ኣካፍል",
+	"cancel": "ሰርዝ",
+	"checkout": "ወዲእኻ ውፃእ",
+	"clearCart": "ዓረብያ ኣጽርይ",
+	"myWishList": "ዝርዝር ድለታተይ",
+	"yourBagIsEmpty": "ቦርሳኻ ጥራዩ እዩ ዘሎ",
+	"emptyCartSubtitle": "ኣብዚ ቦርሳ ገና ዋላ ሓንቲ ኣቃሓ ዘይኣቅመጥኻሉ እዩ ዚመስል። ክትመልኦ ኣቃሓ ክትዕድግ ጀምር።",
+	"startShopping": "ምዕዳግ ጀምር",
+	"noFavoritesYet": "ገና ዝፈተኻዮ ኣቃሓ የልቦን",
+	"emptyWishlistSubtitle": "ኣብ ጥቓ እቲ እትፈትዎ ፍርያት ንዝዀነ ልቢ ጠውቕ። ኣብዚ ንዓኻ ኸነዋህልለልካ ኢና",
+	"searchForItems": "ፍርያት ድለ",
+	"shipping": "ዕዳጋ",
+	"review": "ኣቐዲምካ ርአ",
+	"payment": "ክፍሊት",
+	"firstName": "ቀዳማይ ስም",
+	"lastName": "ካልኣይ ስም",
+	"city": "ከተማ ",
+	"stateProvince": " ካውንቲ / ዞባ / ኣውራጃ ",
+	"zipCode": "ዚፕ / ፖስት ኮድ ",
+	"country": "ሃገር",
+	"phoneNumber": "ቍጽሪ ተሌፎን",
+	"email": "ኢ-መይል",
+	"streetName": "ኣድራሻ ጐደና",
+	"enterYourFirstAddress": "ቍጽሪ ቤትን ስም ጐደናን",
+	"shippingMethod": "ቀጥዒ / ቅዲ ምልኣኽ",
+	"continueToShipping": "ምልኣኽ ቀጽል",
+	"continueToReview": "ምግምጋም ምግባር ቀጽል",
+	"continueToPayment": "ምኽፋል ቀጽል",
+	"goBackToAddress": "ናብ ኣድራሻ ተመለስ",
+	"goBackToShipping": "ናብ ምልኣኽ ተመለስ",
+	"goBackToReview": "ናብ ምግምጋም ተመለስ",
+	"address": "ኣድራሻ",
+	"shippingAddress": "መልኣኺ ኣድራሻ",
+	"orderDetail": "ዝርዝር ትእዛዝ",
+	"subtotal": "ንኡስ ድምር",
+	"total": "ድምር",
+	"paymentMethods": "ዓይነት ክፍሊት",
+	"chooseYourPaymentMethod": "ዓይነት ኽፍሊት ምረጽ",
+	"placeMyOrder": "ትእዛዘይ ኣቀምጥ",
+	"itsOrdered": "ትኣዚዙ ኣሎ",
+	"orderNo": "ቍጽሪ ትእዛዝ",
+	"showAllMyOrdered": "ኩሉ ትእዛዘይ ኣርኢ",
+	"backToShop": "ናብ ዕዳጋ ተመለስ",
+	"firstNameIsRequired": "ቀዳማይ ስም የድሊ",
+	"lastNameIsRequired": "ዳሕራይ ስም የድሊ",
+	"streetIsRequired": "ናይ ጐደና ስም የድሊ",
+	"cityIsRequired": "ስም ከተማ የድሊ",
+	"stateIsRequired": "ስም ዞባ የድሊ",
+	"countryIsRequired": "ስም ሃገር የድሊ",
+	"phoneIsRequired": "ቁጽሪ ስልኪ የድሊ",
+	"emailIsRequired": "ኣድራሻ ኢ-መይል የድሊ",
+	"zipCodeIsRequired": "ዚፕ ኮድ የድሊ",
+	"noOrders": "ዝትኣዘዘ የለን",
+	"orderDate": "ዝትኣዘዘሉ ዕለት",
+	"status": "ኵነታት",
+	"paymentMethod": "ኣገባብ ኣከፋፍላ",
+	"orderHistory": "ትእዛዝ ታሪክ",
+	"refundRequest": "ናይ ምምላስ ሕቶ",
+	"recentSearches": "ናይ ቀረባ እዋን ድልያ",
+	"recents": "ናይ ቀረባ እዋን",
+	"byPrice": "ብዋጋ",
+	"byCategory": "በብምድብ",
+	"noInternetConnection": "ኢንተርነት መስመር የለን",
+	"settings": "ኣቀራርባታት",
+	"generalSetting": "ሓፈሻዊ ኣቀራርባታት ",
+	"getNotification": "ምልክታታት ርኸብ",
+	"listMessages": "ዝርዝር መልእኽትታት",
+	"darkTheme": "ጸልማት ድሕረ-ባይታ",
+	"rateTheApp": "ነዚ ኣፕሊኬሽን ደረጃ ግምጋመ ሃብ",
+	"logout": "ውጻእ",
+	"login": "እቶ",
+	"items": "ኣቕሑ",
+	"cart": "ዓረብያ",
+	"shop": "ዓድግ",
+	"search": "ድለ",
+	"blog": "ብሎግ",
+	"apply": "ኣመልክት",
+	"reset": "እንደገና ኣእቱ",
+	"signInWithEmail": "ብኢ-መይል እቶ ",
+	"dontHaveAccount": "ኣካውንት የብለካን?",
+	"signup": "ኣካውንት ክፈት",
+	"welcome": "እንቋዕ ብደሓን መጻእኩም",
+	"close": "ዕጸዎ",
+	"or": "ወይ",
+	"pleaseInput": "በጃኹም ኣብ ኵሉ ባዶ ቦታታት ኣእትዉ",
+	"searchingAddress": "ኣድራሻ  ድለ",
+	"outOfStock": "ካብ ዕዳጋ ወጻኢ",
+	"unavailable": "የለን",
+	"category": "ምድብ",
+	"noProduct": "ፍርያት የልቦን",
+	"weFoundProducts": "ፍርያት {Length} ረኸብና",
+	"clear": "ነጻ",
+	"video": "ቪድዮ",
+	"recentView": "ኣብ ቀረባ እዋን ዝረኣኻዮ",
+	"inStock": "ኣብ ዕዳጋ",
+	"trackingNumberIs": "መከታተሊ ቁጽሪ",
+	"availability": "ዚርከብ",
+	"trackingPage": "መከታተሊ ገጽ",
+	"myPoints": "ነጥብታተይ",
+	"youHavePoints": "ነጥብታት ኣሎካ",
+	"events": "ፍጻመታት",
+	"date": "ዕለት",
+	"point": "ነጥቢ",
+	"orderNotes": "መዘኻኸሪታት ትእዛዝ (ኣማራጺ)",
+	"ratingFirst": "ሓሳብካ ቕድሚ ምልኣኽካ በጃኻ ገምግሞ ምሃብ",
+	"commentFirst": "በጃኻ ሓሳብካ ጽሓፍ",
+	"writeComment": "ሓሳብካ ጽሓፍ",
+	"loading": "ጽዒንካ...",
+	"groduct rating": "ደረጃ ፍርያት",
+	"layout": "ንድፊ",
+	"selectAddress": "ኣድራሻ ምረጽ",
+	"saveAddress": "ኣድራሻ ዓቅብ",
+	"searchInput": "በጃኻ ኣብ ዓውዲ ምንዳይ ውጽኢት ጽሓፍ",
+	"totalTax": "ድምር ግብሪ",
+	"invalidSMSCode": "ዘይቅቡል መረጋገጺ SMS ኮድ",
+	"sendSMSCode": "ኮድ ምርካብ",
+	"verifySMSCode": "ኣረጋግጽ",
+	"showGallery": "ጋለሪ ኣርኢ",
+	"discount": "ቅናስ",
+	"username": "ስም ተጠቃሚ ወይ ኢ-መይል",
+	"password": "ፓስዎርድ",
+	"enterYourEmail": "ኢ-መይልካ ኣእቱ",
+	"enterYourPassword": "ፓስዎርድኻ ኣእቱ",
+	"iwantToCreateAccount": "ኣካውንት ክኽፍት እደሊ እየ",
+	"loginToYourAccount": " ናብ ኣካውንትኻ እቶ",
+	"createAnAccount": "ኣካውንት ፍጠር",
+	"couponCode": "ኩፖን ኮድ",
+	"remove": "ኣልግስ",
+	"couponMsgSuccess": "እንቋዕ ሓጐሰኩም! ኮድ ኩፖን ብዓወት ኣብ ግብሪ ውዒሉ ኣሎ",
+	"saveAddressSuccess": "ኣድራሻኻ ተዓቂቡ ኣሎ",
+	"yourNote": "መዘኻኸሪታት ትእዛዝ (ኣማራጺ)",
+	"writeYourNote": "ብዛዕባ ትእዛዝካ መዘኻኸሪታት። ንምሳሌ፥ ንኣለኣአኻ ትእዛዝካ ዚኸውን ፍሉይ መዘኻኸሪታት ምጽሓፍ።",
+	"orderSuccessTitle1": "ትእዛዝ ብዕዉት መገዲ ኣቐሚጥካዮ ኣለኻ",
+	"orderSuccessMsg1": "ኵነታት እቲ እነብጽሓሉ ኽፍሊ ተጠቒምካ ኵነታት ትእዛዝካ ኽትፈልጥ ትኽእል ኢኻ። ዝርዝር ትእዛዝካን ዝበጥጸሖ ደረጃ ንምክትታል ዚሕግዝ ሊንክ ዝሓዘ ናይ መረጋገጺ ኢ-መይል ክትቅበል ኢኻ።",
+	"orderSuccessTitle2": "ናትካ ሕሳብ",
+	"orderSuccessMsg2": "ኣቐዲሙ እተገልጸ ኢ-መይልን ፓስወርድን ጌርኩም ናብ ሕሳብኩም ኽትኣትዉ ትኽእሉ ኢኹም። ኣብ ናትካ ሕሳብ እዞም ዝስዕቡ ክትገብር ትኽእል ኢኻ ፥ ምትዕርራይ መፍለይ ሕሳብካ ፥ መርማር ታሪኽ ንግዳዊ ልውውጥ ፣ ምትዕርራይ አባል መጥጽሄት።",
+	"signIn": "እቶ",
+	"signUp": "ተመዝገብ",
+	"next": "ቀጺሉ",
+	"done": "ተፈጸመ",
+	"currencies": "ባጠራ",
+	"sale": "መሸጣ {percent}%",
+	"updateUserInfor": "መፍለይ መንነት ሓበሬታ ምትዕርራይ",
+	"update": "ምዕራይ ሓበሬታ መንነት",
+	"aboutUs": "ብዛዕባና",
+	"displayName": "ዝርአ ስም",
+	"niceName": "ጽቡቕ ስም",
+	"english": "እንግሊዝኛ",
+	"swedish": "ስዊድንኛ",
+	"vietnamese": "ቬትናምኛ",
+	"arabic": "ዓረብኛ",
+	"spanish": "ስፓኒሽኛ",
+	"chinese": "ቻይና",
+	"japanese": "ጃፓንኛ",
+	"languageSuccess": "ቋንቋ ብዕዉት መገዲ ተቀይሩ ኣሎ ፥ በጃኻ ነቲ APP እንደገና ጀምሮ",
+	"agreeWithPrivacy": "ብሕታዊን ውዕላትን",
+	"PrivacyAndTerm": "ብሕታዊን ውዕላትን",
+	"iAgree": "እሰማማዕ ኣለኩ ምስ",
+	"categories": "ምድባት",
+	"stores": "ድኳናት",
+	"visitStore": "ድኳን ብጻሕ",
+	"salePrice": "መሸጣ ዋጋ",
+	"regularPrice": "ስሩዕ ዋጋ",
+	"imageGallery": " ሰእላዊ ጋለሪ",
+	"addingYourImage": "ስእልኻ ወስኽ",
+	"postProduct": "ፍርያትካ ዘርግሕ",
+	"createProduct": "ፍርያት ፍጠር",
+	"waitForLoad": "ሰእሊ ኽሳዕ ዚጽዓን ተጸበ",
+	"waitForPost": "ፍርያት ክዝርጋሕ  ምጽባይ",
+	"productName": "ስም ፍርያት",
+	"productType": "ዓይነት ፍርያት",
+	"conversations": "ዝርርብ",
+	"myProducts": "ፍርያተይ",
+	"myProductsEmpty": "ዝዀነ ይኹን ፍርያት የብልኩምን ። ክትፈጥር ፈትን!",
+	"product": "ፍርያት",
+	"contact": "ርክብ",
+	"currentPassword": "እዋናዊ ፓስዎርድ",
+	"newPassword": "ሓድሽ ፓስዎርድ",
+	"addToCartSucessfully": "ኣብ ዓረብያኻ ተወሲኹ ኣሎ",
+	"pullToLoadMore": "ዝያዳ ንምጽዓን ወስኽ",
+	"loadFail": "ምጻዓን ፈሺሉ ኣሎ!",
+	"releaseToLoadMore": "ዝያዳ ንምጻዓን ልቐቖ",
+	"noData": "ካልእ ሓበሬታ የሎን",
+	"all": "ኵሉ",
+	"filter": "መጻረዪ",
+	"tags": "ምልክታት",
+	"attributes": "ባህርያት",
+	"resetPassword": "እንደገና ምቅያር ፓስዎርድ",
+	"resetYourPassword": "ፓስዎርድኻ እንደገና ቀይሮ",
+	"yourUsernameEmail": "ስም ተጠቃሚኻ ወይ ኢ-መይልካ",
+	"getPasswordLink": "ናይ ፓስዎርድኻ ሊንክ ርኸብ",
+	"checkConfirmLink": "መረጋገጺ ሊንክ ንምርካብ ኢ-መይልካ ርአ",
+	"emptyUsername": "ስም ተጠቃሚኻ/ኢ-መይልካ ባዶ ኢዩ ዘሎ",
+	"romanian": "ሮማንያ",
+	"turkish": "ቱርኪ",
+	"italian": "ጣልያን",
+	"indonesian": "ኢንዶኖዥያ",
+	"german": "ጀርመን",
+	"couponInvalid": "ኮድ ኩፖንካ ቅኑዕ ኣይኮነን",
+	"featured": "ብፉሉይ ዝቀረቡ",
+	"onSale": "ብቅናስ ዋጋ",
+	"pleaseCheckInternet": "በጃኹም ነቲ መስመር ኢንተርነትኩም መርምሩ!",
+	"canNotLaunch": "ነዚ ኣፕሊኬሽን እዚ ኽትጅምሮ ኣይትኽእልን ኢኻ፣ እቲ ኣብ config.dart ዘሎ ኣቀራርባ ቕኑዕ ምዃኑ ኣረጋግጽ",
+	"message": "መልእኽቲ",
+	"billingAddress": "ኣድራሻ ሕሳብ",
+	"no": "ኣይኮነን",
+	"yes": "እወ",
+	"areYouSure": "ርግጸኛ ዲኻ?",
+	"doYouWantToExitApp": "ካብ ኣፕሊኬሽን ክትወጽእ ትደሊዶ?",
+	"shoppingCartItems": "ዓረብያ ዕድጊ {totalCartQuantity} ንብረት/ታት",
+	"orderStatusOnHold": "ደው ኢሉ ኣሎ",
+	"orderStatusPendingPayment": "መስርሕ ክፍሊት ውሳነ ይጽበ ኣሎ",
+	"orderStatusFailed": "ፍሹል",
+	"orderStatusProcessing": "ኣብ መስርሕ",
+	"orderStatusPending": "ውሳነ ይጽበ ኣሎ",
+	"orderStatusCompleted": "ተዛዚሙ",
+	"orderStatusCancelled": "ተሰረዘ",
+	"orderStatusRefunded": "እተመልሰ",
+	"pleaseFillCode": "በጃኻ ኮድካ ምልኣዮ",
+	"warning": "መጠንቀቕታ ፦ {message}",
+	"nItems": "{itemCount} ኣቕሑት",
+	"dataEmpty": "ባዶ ሓበሬታ",
+	"yourAddressExistYourLocal": "ኣድራሻኻ ኣብ ከባቢኻ ኣሎ",
+	"ok": "ሐራይ",
+	"youHaveBeenSaveAddressYourLocal": "ኣድራሻኻ ኣብ ሰፈርካ ተዓቒብልካ ኣሎ",
+	"undo": "ተመለስ",
+	"thisPlatformNotSupportWebview": "እዚ መድረኽ እዚ ንወብ ሳይት ዚድግፍ ኣይኰነን",
+	"noBackHistoryItem": "ንድሕሪት ዚምለስ ነገር የልቦን",
+	"noForwardHistoryItem": "ንቕድሚት ዚግስግስ ታሪኽ ኣቕሓ የልቦን",
+	"dateBooking": "ዕለት ምዕዳግ",
+	"duration": "ንውሓት ግዜ",
+	"addedSuccessfully": "ብዕውት ተወሲኹ ኣሎ",
+	"notFound": "ኣይተረኽበን",
+	"error": "ጌጋ ፦ {message}",
+	"goBackHomePage": "ናብ ናይ መጀመርታ ገጽ ተመለስ",
+	"noBlog": "ኦፕስ እቲ ብሎግ ሕጂ ዘሎ ኣይመስልን እዩ",
+	"prev": "ዝሓለፈ",
+	"skip": "ንጠሮ",
+	"download": "ጽዓኖ",
+	"daysAgo": "{day} ቅድሚ ሒደት መዓልትታት",
+	"hoursAgo": "{hour} ቅድሚ ሰዓታት",
+	"minutesAgo": "{minute} ቅድሚ ሒደት ደቓይቕ",
+	"secondsAgo": "{second} ቅድሚ ኻልኢታት",
+	"rateThisApp": "ነዛ ኣፕሊኬሽን እዚኣ ገምግማ",
+	"rateThisAppDescription": "ነዛ ኣፕሊኬሽን እዚኣ ትፈትዋ እንተደኣ ዄንካ በጃኻ ቝሩብ ግዜ ወሲድካ እንደገና ገምግማ/እዚ ምግባርካ ብሓቂ ይሕግዘና ኢዩ ካብ ሓደ ደቒቕ ንላዕሊ ድማ ኣይወስደልካን እዩ ። !",
+	"rate": "ገምጋም",
+	"noThanks": "ደሓን የቐንየለይ",
+	"maybeLater": "ምናልባት ደሓር",
+	"phone": "ተሌፎን",
+	"phoneNumberVerification": "ቍጽሪ ተሌፎን ምርግጋጽ",
+	"enterSendedCode": "እቲ እተላእከ ኮድ ኣእቱ",
+	"pleasefillUpAllCellsProperly": "* በጃኹም ንዅሉ ባዶ ቦታታት ብግቡእ ምልኣዮ",
+	"didntReceiveCode": "እቲ ኮድዶ ኣይተቐበለን? ",
+	"resend": " ደጊምካ ስደዶ",
+	"pleaseInputFillAllFields": "በጃኹም ኣብ ኵሉ ባዶ ቦታ ኣእትዉ",
+	"pleaseAgreeTerms": "በጃኹም ምስ ውዕልና ተሰማምዑ",
+	"url": "ጥብቆ",
+	"nearbyPlaces": "ኣብ ጥቓና ዚርከብ ቦታታት",
+	"noResultFound": "ዋላ ሓንቲ ውጽኢት ኣይተረኽበን",
+	"searchPlace": "መድለዪ ቦታ",
+	"tapSelectLocation": "ነዚ ቦታ እዚ ንምምራጽ ጠውቕ",
+	"brazil": "ፖርትጋልኛ",
+	"backOrder": "ብድሕሪት ምእዛዝ",
+	"french": "ፍራንሳኛ",
+	"loginErrorServiceProvider": "ነቲ ሓበሬታ ኽትሓትት ከላ ምስታ ኣፕሊኬሽን እተተሓሓዘ ጕዳይ ኣሎ በጃኻ ነቲ ጕዳያት ንምፍታሕ ምስ ኣመሓዳሪ ተራኸብ - {message}",
+	"loginCanceled": "እቲ መእተዊ ተሰረዘ",
+	"noPost": "ኦፕስ, እዛ ገጽ እዚኣ ሕጂ ዘላ ኣይመስልን እዩ!",
+	"minimumQuantityIs": "ዝወሓደ መጠን",
+	"youCanOnlyPurchase": "ክትዕድግ ጥራይ ኢኻ እትኽእል",
+	"forThisProduct": "ነዚ ፍርያት እዚ",
+	"currentlyWeOnlyHave": "ኣብዚ እዋን እዚ ጥራይ ዘሎና",
+	"ofThisProduct": "ብዛዕባ እዚ ፍርያት እዚ",
+	"from": "ካብ",
+	"totalCartValue": "ጠቕላላ ድምር ዋጋ ጠለብ እንተ ወሓደ ኪኸውን ኣለዎ",
+	"hungary": "ሃንጋሪን",
+	"streetNameApartment": "ኣፓርታማ (ኣማራጺ)",
+	"enterYourSecondAddress": "ኣፓርታማ፣ ዩኒት፣ ወዘተ (ኣማራጺ)",
+	"streetNameBlock": "መፈተሺ ነቝጣ",
+	"byTag": "ብምልክት",
+	"transactionCancelled": "ንግዳዊ ልውውጥ ተሰረዘ",
+	"tax": "ቀረጽ",
+	"soldBy": "ዝሽየጥ ብ",
+	"shopOrders": "ትእዛዝ ዕዳጋ",
+	"refresh": "ምሕዳስ",
+	"sku": "SKU",
+	"pointRewardMessage": "ነጥብታትካ ኣብ ካርት ከተውዕሎ ዚግብኣካ ናይ ሙግዳል ዋጋ ሕጊ ኣሎ",
+	"availablePoints": " ዘሎካ ነጥብታት ፦ {point}",
+	"selectThePoint": "ነቲ ነጥቢ ምረጽ",
+	"cartDiscount": "ሙጉዳል ዋጋ ኣብ ዓረብያ",
+	"pleaseSelectAllAttributes": "ንነፍሲ ወከፍ ባህርይ እቲ ፍርያት ዚኸውን ኣማራጺ ምረጽ",
+	"booking": "ምምሕዛእ",
+	"bookingError":  "ገለ ሽግር ኣሎ። በጃኻ ጸኒሕካ እንደገና ፈትን።",
+	"bookingNow": "ሕጂ ሕዛእ",
+	"bookingSuccess": "ዕዉት ምሕዛእ",
+	"booked": "ድሮ እተሓዝአ",
+	"waitingForConfirmation": "መረጋገጺ ምጽባይ",
+	"bookingConfirm": "ተረጋጊጹ",
+	"bookingCancelled": "ሕዛእቲ ሰረዘ",
+	"bookingUnavailable": "ሕዛእቲ ኣይተረኽበን",
+	"bookingSummary": "ጸብጻብ ናይ ሕዛእቲ",
+	"dateEnd": "መወዳእታ ዕለት",
+	"dateStart": "መጀመርያ ዕለት",
+	"tickets": "ቲከት",
+	"requestBooking": "ሕዛእቲ ሕተት",
+	"extraServices": "ተወሳኺ ኣገልግሎት",
+	"guests": "ኣጋይሽ",
+	"hour": "ሰዓት",
+	"features": "መዳያት",
+	"removeFromWishList": "ካብ ዝርዝር ድሌት ኣወግድ",
+	"map": "ካርታ",
+	"prices": "ሜኑ",
+	"registerAsVendor": " ከም ተጠቃሚ ሸያጢ ተመዝገብ",
+	"addListing": "ዝርዝር ወስኽ",
+	"bookingHistory": " ታሪኽ ሕዛእቲ",
+	"vendorAdmin": "ምምሕዳር ሸያጢ",
+	"russian": "ሩሲያዊ",
+	"pickADate": "ዕለትን ግዜን ምረጽ",
+	"on": "ኣብ",
+	"yourBookingDetail": "ዝርዝር ሕዛእትኻ",
+	"adults": "ዓበይቲ",
+	"additionalServices": "ተወሳኺ ኣገልግሎት",
+	"none": "ዋላ ሓደ የለን",
+	"thisDateIsNotAvailable": "እዛ ዕለት እዚኣ ኣይትርከብን እያ",
+	"noSlotAvailable": "ቦታ ኣይርከብን እዩ",
+	"payNow": "ሕጂ ክፈል",
+	"sold": "እተሸጠ፦ {numberOfUnitsSold}",
+	"almostSoldOut": " ዳርጋ ተሸይጡ",
+	"endsIn": " እብ {timeLeft} ውሽጢ ከብቅዕ'ዩ",
+	"hebrew": "ህብሪው",
+	"thailand": "ታይ",
+	"hungarian": "ሃንጋሪያን",
+	"vendorInfo": "ሓበሬታ ሸቃጦ",
+	"Netherlands": "ዳትች",
+	"Korean": "ኮርያን",
+	"India": "ሂንዲ",
+	"Dutch": "ዶትች",
+	"useNow": "ሕጅ ተጠቐም",
+	"expired": "ወደቐ ",
+	"validUntilDate": "ቅቡል ክሳብ {date}",
+	"expiringInTime": "ኣብ {time} ግዜ ክወድቅ'ዩ",
+	"fixedCartDiscount": "ቀዋሚ ቅናስ ዋጋ ዓረብያ",
+	"fixedProductDiscount": " ቀዋሚ ቅናስ ዋጋ ፍርያት",
+	"couponHasBeenSavedSuccessfully": "ኩፖን ብዓወት ተመዝጊቡ",
+	"saveForLater": " ንደሓር ኣዋህልል",
+	"refunds": "ገንዘብ ምምላስ",
+	"continues": "ቀጻሊ",
+	"Egypt": "ግብጺ",
+	"UserNameInCorrect": " ስም ተጠቃሚ ወይ ፓስዎርድ ጌጋ እዩ",
+	"Qty": "ብዝሒ",
+	"itemTotal": "ድምር ኣቕሓ",
+	"createdOn": "እተፈጥረ: ",
+	"orderId": "መንነት ኣሰራርሓ: ",
+	"grossSales": " ሓፈሻዊ መሸጣ",
+	"earnings": "ኣታዊ",
+	"allOrders": "እዋናዊ መሸጣ",
+	"yourEarningsThisMonth": "ናይዚ ወርሕዚ ኣታዊ",
+	"searchOrderId": "መንነት ኣሰራርሓ ድለ...",
+	"yourOrders": "ትእዛዝካ",
+	"editProductInfo": " ሓበሬታ ፍርያት ኣረምቲ",
+	"cantFindThisOrderId": "ነዚ መሐበሪ ትእዛዝ እዚ ኺረኽቦ ኣይክእልን እዩ",
+	"showDetails": "ዝርዝር ኣርኢ",
+	"orLoginWith": "ወይ ምስ መእተዊ",
+	"notifications": "ምልክታታት",
+	"back": "ተመለስ",
+	"deliveredTo": "ኣብጸሐ",
+	"orderTotal": "ድምር ትእዛዝ",
+	"addProduct": "ፍርያት ወሲኽካ",
+	"takePicture": "ስእሊ ውሰድ",
+	"chooseFromGallery": "ካብ ጋለሪያ ምረጽ",
+	"chooseFromServer": " ካብ ሰርቨር ምረጽ",
+	"selectImage": "ስእሊ ምረጽ",
+	"more": "...ተወሳኺ",
+	"uploadProduct": "ፍርያት ጸዓን",
+	"name": "ስም",
+	"stockQuantity": "ብዝሒ ቀረብ ",
+	"manageStock": "ምምሕዳር ቀረብ",
+	"shortDescription": " ሓጺር መግለጺ",
+	"updateInfo": "ሓበሬታ ብሓድሽ ምትካአ",
+	"stock": "ቀረብ",
+	"pending": "ተጸበ",
+	"approve": "ተቐባልነት",
+	"approved": "ተቐቢሉ",
+	"rating": "ደረጃ",
+	"change": "ለውጢ",
+	"reviewApproval": "ግምገማ ኣጽድቆ",
+	"home": "ዋና ገጽ",
+	"reviews": "ግምገማታት",
+	"updateStatus": "ምዕባለ እዋናዊ ዅነታት",
+	"chatListScreen": "መልእኽቲ",
+	"cardNumber": "ቍጽሪ ካርድ",
+	"expiredDate": "ግዜኡ ዝሓለፎ ዕለት",
+	"expiredDateHint": "ወርሒ/ዕለት",
+	"cvv": "CVV",
+	"cardHolder": "መትሓዚ ካርድ",
+	"mustSelectOneItem": "1 ኣቕሓ ኽትመርጽ ኣሎካ",
+	"optionsTotal": "ድምር ኣማራጺታት: {price}",
+	"options": "ኣማራጺታት",
+	"pleaseSelectRequiredOptions": "ብኽብረትኩም ዜድሊ ኣማራጺታት ምረጹ!",
+	"location": "ቦታ",
+	"send": "ስደድ",
+	"typeYourMessage": "መልእኽትኻ ኣብዚ ጽሓፍ...",
+	"dashboard": "ሰሌዳ ዳሽቦርድ",
+	"edit": "ኣረምቲ: ",
+	"editWithoutColon": "ኣረምቲ",
+	"thisFeatureDoesNotSupportTheCurrentLanguage": "እዚ መልክዕ እዚ ነቲ ሕጂ ዘሎ ቛንቋ ኣይድግፎን እዩ",
+	"brand": "ብራንድ",
+	"reviewPendingApproval": "ክለሳኻ ተላኢኹ ተቐባልነት ኪረክብ ይጽበ ኣሎ!",
+	"reviewSent": "ክለሰኻ ተላኢኹ ኣሎ!",
+	"publish": "ሕትመት",
+	"private": "ብሕታዊ",
+	"draft": "ንድፊ",
+	"simple": "ቀሊል",
+	"grouped": "እተመደቡ",
+	"variable": "ተለዋዋጢ",
+	"active": "ንጡፍ",
+	"uploading": "ምጽዓን",
+	"uploadFile": "ፋይል ጽዓን",
+	"gallery": "ጋለርይ",
+	"files": "ፋይል",
+	"selectFileCancelled": "ፋይል ሰሪዙ ምረጽ!",
+	"fileIsTooBig": "እቲ ፋይል ኣዝዩ ዓብዪ እዩ። በኽብረትካ ንእሽቶ ፋይል ምረጽ!",
+	"fileUploadFailed": "ፋይል  ምጽዓን ኣይተዓወተን!",
+	"totalProducts": "{total}  ፍርያት",
+	"addAName": "ስም ወስኽ",
+	"addAnAttr": "ባህርያት ወስኽ",
+	"addNew": "ሓድሽ ወስኽ",
+	"selectAll": "ንዅሉ ምረጽ",
+	"selectNone": "ዋላ ሓንቲ ኣይትምረጽ",
+	"visible": "ዚርአ",
+	"variation": "በበይኑ ዝዓይነቱ ፍልልይ",
+	"delete": "ሰርዝ",
+	"direction": "መምርሒ",
+	"noListingNearby": "ኣብ ጥቓና ዝርዝር የልቦን!",
+	"emailDoesNotExist": "እቲ ዝኣተኽሞ ናይ ኢ-መይል ሕሳብ ኣይተረኽበን ። በኽብረትኩም እንደገና ፈትኑ።,",
+	"errorEmailFormat": "ብኽብረትኩ ቅቡል ኣድራሻ ኢ-መይል ኣእቱ።",
+	"errorPasswordFormat": "ብኽብረትኩም እንተ ወሓደ 8 ፊደላት ዝሓዘ ፓስዎርድ ኣእትዉ",
+	"confirmClearTheCart": "እዚ ዓረብያ ናጻ ክትገብሮ ኸም እትደሊ ርግጸኛ ዲኻ?",
+	"keep": "ዓቅብ",
+	"serbian": "ሰርብያን",
+	"Polish": "ፖልሽ",
+	"persian": "ፐርሺያን",
+	"kurdish": "ኩርድሽ",
+	"pleaseSignInBeforeUploading": "ዝዀነ ይኹን ፋይላት ቅድሚ ምጽዓንኩም ብኽብረትኩም ኣብ ሕሳብካም ተመዝጊብኩም እተዉ.",
+	"maximumFileSizeMb": "ዝለዓለ መጠን ፋይል: {size} MB",
+	"loginFailed": "መእተዊ ከይተዓወተ ተረፈ!",
+	"loginSuccess": "መእተዊ ዕዉት!",
+	"loginInvalid": "ነዛ ኣፕሊኬሽን እዚኣ ኽትጥቀመላ ኣይፍቀደልካን እዩ.",
+	"updateFailed": "እዋናዊ ሓበሬታ ኣይተዓወተን",
+	"updateSuccess": "እዋናዊ ሓበሬታ ተዓወተ!",
+	"ukrainian": "ኡክረንያን",
+	"bengali": "በንጋሊ",
+	"chatWithStoreOwner": "ምስ ዋና ድኳን ኣዕልል",
+	"chatViaWhatApp": "ዕላል ብ ዋትስኣብ",
+	"chatViaFacebook": "ዕላል ብ ፌስቡክ መሰንጀር",
+	"callTo": "ደውል ናብ ",
+	"messageTo": "መልእኽጢ ስደድ ናብ",
+	"week": "ሰሙን {week}",
+	"storeSettings": "ኩነታት ድኳን",
+	"storeLogo": "ድኳን ምልክት (ሎጎ)",
+	"link": "ጥብቆ",
+	"shopName": "ስም ዱካን",
+	"shopSlug": "ዱካን ስሉግ",
+	"shopEmail": "ኢ-መይል ድኳን",
+	"shopPhone": "ዱካን ቴሌፎን",
+	"bannerType": "ዓይነት ባነር",
+	"storeStaticBanner": "ዘይንቀሳቐስ ባንነር ድኳን",
+	"storeSliderBanner": "ስላይድ ባንነር ድኳን",
+	"bannerYoutubeURL": "ናይ ዩውቱበ ባነር ጥብቆ",
+	"storeMobileBanner": "ሞባይል ባንነር ኣቐምጦ",
+	"bannerListType": "ዝርዝር ባነር",
+	"listBannerType": "ዝርዝር ዓይነት ባንነር",
+	"listBannerVideo": "ዝርዝር ባነር ቪድዮ",
+	"storeListBanner": "ዝርዝር ባንነር",
+	"street": "ጐደና",
+	"street2": "ጐደና 2",
+	"hideEmail": "ኢ-መይል ሕባእ",
+	"hidePhone": "ቴለፎን ሕባእ",
+	"hideAddress": "ኣድራሻ ሕባእ",
+	"hideMap": "ካርታ ሕባእ",
+	"hideAbout": "ብዛዕባ ሕባእ",
+	"hidePolicy": "ፖሊሲ ሕባእ",
+	"enterYourEmailOrUsername": "ኢ-መይልካ ወይ ስም ተጠቃሚኻ ኣእቱ",
+	"enterYourFirstName": "ቀዳማይ ስምኩም ኣእትዉ",
+	"enterYourLastName": "ዳሓራዋይ ስምኩም ኣእትዉ",
+	"enterYourPhoneNumber": "ቍጽሪ ተሌፎንኩም ኣእቱዉ",
+	"refundOrderSuccess": "ትእዛዝካ ብዕዉት መገዲ ኺመልሰልካ ሕተት!!",
+	"addASlug": "ስሉግ ወስኽ",
+	"refundOrderFailed": "እቲ ትእዛዝ ኪኽፈሎ ዝቐረበ ሕቶ ኣይተዓወተን",
+	"confirm": "ኣረጋግጽ",
+	"confirmDeleteItem": "ነዚ ኣቕሓ እዚ ክትድምስሶ ኸም እትደሊ ርግጸኛ ዲኻ?",
+	"markAsRead": "ከምዝተነበበ ምልክት ግበር",
+	"markAsUnread": "ከምዘይተነበበ ምልክት ግበር",
+	"noFileToDownload": "ክጽዓን ዘለዎ ፋይል የለን።",
+	"orderStatusShipped": "እተላእከ",
+	"orderStatusReversed": "ኣንፈቱ ተቐየረ",
+	"orderStatusCanceledReversal": "እተሰረዘ ለውጢ",
+	"orderStatusChargeBack": "ተመሊስካ ኽፍሊት",
+	"orderStatusDenied": "ተኸልከለ",
+	"orderStatusExpired": "ግዜ ሓሊፉ",
+	"orderStatusProcessed": "መስርሕ",
+	"orderStatusVoided": "ባዶነት",
+	"delivered": "በጽሐ",
+	"incorrectPassword": "ዘይቁኑዕ ፓስዎርድ",
+	"deliveryDetails": "ዝርዝር ናይ ምብጽጻሕ",
+	"assigned": "እተመደቡ",
+	"call": "ደውል",
+	"fullName": "ምሉእ ስም",
+	"chat": "ዕላል",
+	"updatePassword": "ፓስዎርድ ምትዕርራይ",
+	"customerDetail": "ናይ ዓሚል ዝርዝር",
+	"storeInformation": "ሓበሬታ ጸዓን",
+	"markAsShipped": "ተላኢኹ ኢልኩም ምልክት ግበሩ",
+	"shipped": "ተላኢኹ",
+	"productCreateReview": "ፍርያትካ ድሕሪ ኽለሳ ኺርአ እዩ.",
+	"postSuccessfully": "ልጠፋኻ ብ ዓወት ተፈጢሩ",
+	"postFail": "ልጠፋኻ ኣይተፈጥረን",
+	"postTitle": "ኣርእስቲ",
+	"postContent": "ትሕዝቶ",
+	"postImageFeature": "መልክዕ ስእሊ",
+	"submitYourPost": "ልጠፋኻ ኣቕርብ",
+	"postManagement": "ምምሕዳር ልጠፋ",
+	"addNewPost": "ሓድሽ ልጠፋ ፍጠር",
+	"monthsAgo": "{month} ቅድሚ ኣዋርሕ",
+	"yearsAgo": "{year} ቅድሚ ዓመታት",
+	"weFoundBlogs": "ብሎግ/ብሎጋት ረኺብና",
+	"startExploring": "ዳህሳስ ጀምር",
+	"commentSuccessfully": "ዕዉት ሓሳብ ምሃብ, ሓሳብኩም ኽሳዕ ዚጸደቕ ብኽብረትኩም ተጸበዩ",
+	"loginToComment": "ሓሳብ ንምሃብ ብኽብረትኩም ተመዝግቡ",
+	"pageView": "ገጽ ምርኣይ",
+	"addNewBlog": "ሓዲሽ ብሎግ የእቱ ",
+	"momentAgo": "ቅድሚ እተወሰነ ህሞት",
+	"webView": "ወብ ሳይት ምርኣይ",
+	"privacyPolicy": "ፖሊሲ ውልቃዊ ጕዳያት",
+	"addANewPost": "ሓዲሽ ልጠፋ የእቱ",
+	"title": "ኣርእስቲ",
+	"content": "ትሕዝቶ",
+	"imageFeature": "ስእሊ መልክዕ ",
+	"submit": "ኣእቱ",
+	"createNewPostSuccessfully": "ልጥፋኹም ብ ዓወት ብ ንድፊ ተፈጢሩ ኣሎ  .ብኽብረትኩም ኣብ ናይ ምሕዳሪ ቦታኹም ርኣዮዎ.",
+	"emptySearch": "ኣቕሑ ገና ኣይደለኹምን. ሕጂ ንጀምር - ክንሕግዘኩም ኢና.",
+	"createPost": "ልጠፋኹም ፍጠሩ",
+	"emptyComment": "ሓሳባትኩም ባዶ ኪኸውን ኣይክእልን እዩ",
+	"hindi": "ህንዲ",
+	"korean": "ኮርያን",
+	"dutch": "ዳትች",
+	"relatedLayoutTitle": "ከተፍቅሮ እትኽእል ነገራት",
+	"audioDetected": "ኣቕሓ/ኣቕሓታት ኣውድዮ ተረኺቡ.  ኣውድዮ መጻወቲ ክትውስኽ ትደሊዶ?",
+	"dateASC": "ምድያብ ዕለት ",
+	"DateDESC": "ምውራድ ዕለት",
+	"seeOrder": "ትእዛዝ ርአ",
+	"openMap": "ካርታ",
+	"allDeliveryOrders": "ኩሉ ትእዛዛት",
+	"orderSummary": "ጸብጻብ ትእዛዛት",
+	"note": "መዘኻኸሪ ትእዛዝ",
+	"searchByName": "ብስም ድለ...",
+	"orderIdWithoutColon": "ትእዛዝ መንነት",
+	"deliveryNotificationError": "ሓበሬታ የልቦን.\n እዚ ትእዛዝ እዚ ለቒቑ.",
+	"deliveryManagement": "ምብጻሕ",
+	"deliveryBoy": "ኣበጻጻሒ ኣቑሑ:",
+	"recurringTotals": "ብተደጋጋሚ ዚርአ ቝጽሪ",
+	"firstRenewal": "ቀዳማይ ምሕዳስ",
+	"atLeastThreeCharacters": "እንተ ወሓደ 3 ቃላት...",
+	"popular": "ህቡብ",
+	"latestProducts": "እዋናዊ ፍርያት",
+	"seeReviews": "ኽለሳ ርአ",
+	"deliveryDate": "ዝበጽሓሉ ዕለት",
+	"youHaveAssignedToOrder": "ትእዛዝ ክትእዝዝ መዲብካ ኣለኻ #{total}",
+	"distance": "~{total} ኪሎሜተር",
+	"registerFailed": "ምዝገባ ከይተዓወተ ተረፈ",
+	"registerSuccess": "ምዝገባ ተዓወተ",
+	"invalidPhoneNumber": "ዘይቅቡል ቍጽሪ ተሌፎን",
+	"requestTooMany": "ኣብ ውሽጢ ሓጺር ግዜ ብዙሕ ኮድ ሓቲትኩም ኣለኹም. ብኽብረትኩም ጸኒሕኩም ፈትኑ.",
+	"phoneEmpty": "ተሌፎን ጥራዩ እዩ",
+	"choosePlan": "መደብ ምረጽ",
+	"recommended": "ብሉጽነቱ መስከረ",
+	"paidStatus": "እተኸፍሎ ደረጃ",
+	"paid": "ተኸፍለ",
+	"unpaid": "ዘይተኸፍለ",
+	"mobileVerification": "ተንቀሳቓሲ ተሌፎን ን ምርግጋጽ",
+	"enterYourMobile": "ብኽብረትኩም ቁጽሪ ሞባይልኩም ኣእትዉ",
+	"phoneHintFormat": "ቅርጺ: +447823456789",
+	"verificationCode": "ኮድ ምርግጋጽ (6 ቁጽሪታት)",
+	"userExists": "እዚ ስም ተጠቃሚ/ኢ-መይል እዚ ኣይተረኽበን.",
+	"accountSetup": "ሕሳብ ክፈት",
+	"youNotBeAsked": "ድሕሪ ምዝዛሙ ኣብ ዚቕጽል እዋን ኣይክትሕተትን ኢኻ",
+	"openNow": "ሕጂ ክፈት",
+	"closeNow": "ሕጂ ተዓጽወ",
+	"storeClosed": "ሕጂ እቲ ድኳን ተዓጽዩ ኣሎ",
+	"comment": "ሓሳብ ምሃብ",
+	"firstComment": "ናይ መጀምርያ ርእይቶ ኣብ መዝገብ ዚህብ ሰብ ኩን!",
+	"greaterDistance": ">{total} ኪሎሜተር",
+	"addToCartMaximum": "እቲ ዝለዓለ መጠን ቁጽሪ ሓሊፉ ኣሎ",
+	"playAll": "ኵሉ ተጻወት",
+	"Tamil": "ታሚል",
+	"customerNote": "መዘኻኸሪ ዓማዊል",
+	"stop": "ደው በል",
+	"youCanOnlyOrderSingleStore": "ካብ ሓንቲ ድኳን ጥራይ ክትዕድግ ትኽእል.",
+	"instantlyClose": "ብኡንብኡ ዕጸዎ",
+	"dateWiseClose": "ብ ዕለት ዕጾ ",
+	"enableVacationMode": "ናይ ዕረፍቲ ግዜ ስርዓት ኣተግብር",
+	"disablePurchase": "ሽመታ ስንብታ",
+	"vacationType": "ዓይነት ናይ ዕረፍቲ ጊዜ",
+	"selectDates": "ዕለት ምረጽ",
+	"vacationMessage": "መልእኽቲ ካብ ዕረፍቲ ጊዜ",
+	"storeVacation": "ድኳን ናይ ዕረፍቲ ጊዜ",
+	"cantPickDateInThePast": "ናይ ዝሓለፈ ዕለት ኣይፍቀድን እዩ",
+	"endDateCantBeAfterFirstDate": "ብኽብረትኩም ሓደ ዕለት ድሕሪ እታ ቐዳመይቲ ዕለት ምረጹ",
+	"onVacation": "ኣብ ዕረፍቲ",
+	"refundRequested": "ገንዘብ ኪኽፈሎ ሕቶ ዝቐረበ",
+	"myWallet": "ቦርሳይ",
+	"viaWallet": "ብቦርሳ",
+	"payByWallet": "ብቦርሳ ምኽፋል",
+	"lastTransactions": "ናይ መወዳእታ ንግዳዊ ልውውጥ",
+	"doNotAnyTransactions": "ገና ዋላ ሓንቲ ልውውጥ የብልኩምን",
+	"topUp": "ምምላእ",
+	"transfer": "ምትሕልላፍ",
+	"historyTransaction": "ታሪኽ",
+	"topUpProductNotFound": "ምምላእ ፍርያት ኣይተረኽበን",
+	"transactionResult": "ውጽኢት ንግዳዊ ልውውጥ",
+	"transferFailed": "ምትሕልላፍ ዝፈሸለ",
+	"errorAmountTransfer": "እቲ ዝኣተወ መጠን ገንዘብ ካብቲ ሕጂ ዘሎ መጠን ቦርሳ ይበዝሕ ። በጃኻ እንደገና ፈትን!",
+	"backToWallet": "ናብ ቦርሳ ተመለስ",
+	"transferSuccess": "ምምሕልላፍ ሰሊጡ",
+	"viewRecentTransactions": "ነቲ ኣብ ቀረባ እዋን እተገብረ ንግዳዊ ልውውጥ ርኣዮ",
+	"amount": "መጠን",
+	"noteTransfer": "መዘኻኸሪ (ኣማራጺ)",
+	"transferConfirm": "መረጋገጺ ምምሕልላፍ",
+	"balance": "ጠቕላላ",
+	"confirmClearCartWhenTopUp": "እዚ ዓረብያ ምስ መላእካያ ክትጸሪ እያ።",
+	"warningCurrencyMessageForWallet": "እቲ ኣብዚ እዋን እዚ እተመርጸ ባጤራ ነቲ ኣብ ቦርሳ ዘሎ ኣቕሓ ኣይርከብን እዩ:: በጃኻ ናብ {default_currency} ለወጥዎ",
+	"transferErrorMessage": "ናብዚ ተጠቃሚ እዚ ኸተግዕዝ ኣይትኽእልን ኢኻ",
+	"czech": "ቸክ",
+	"chooseCategory": "ምድብ ምረጽ",
+	"chooseType": "ዓይነት ምረጽ",
+	"external": "ደጋዊ",
+	"pleaseChooseCategory": "በጃኻ ምድብ ምረጽ",
+	"pleaseAddPrice": "በጃኻ ዋጋ ኣእቱ",
+	"pleaseEnterProductName": "በጃኻ ስም እቲ ፍርያት ኣእቱ",
+	"hasBeenDeleted": "ተደምሲሱ",
+	"basicInformation": "መሰረታዊ ሓበሬታ",
+	"storeEmail": "ኢ-መይል ድኳን",
+	"pointMsgMaximumDiscountPoint": "ዝለዓለ ቅናስ ነጥቢ ",
+	"pointMsgOverMaximumDiscountPoint": "ኣብ ዝለዓለ ቅናስ ነጥቢ ኢኻ በጺሕካ ዘሎኻ ",
+	"pointMsgSuccess": "ነጥቢ ቅናስ ዋጋ ብዓወት ተዓይሉ",
+	"pointMsgRemove": "ነጥቢ ቅናስ ኣልጊሱ ኣሎ",
+	"pointMsgEnter": "በጃኻ ነጥቢ ቅናስ ኣእትዎ",
+	"prepaid": "ኣቐዲምካ ምኽፋል",
+	"pointMsgOverTotalBill": "The total discount value is over the bill total",
+	"pointMsgConfigNotFound": "ኣብ ሰርቨር ናይ ቅናስ ነጥቢ ኣይተረኽበን",
+	"pointMsgNotEnough": "እኹል ቅናስ ነጥቢ የብልኩምን ። ጠቕላላ ቅናስ ነጥቢ ቝጽሪ",
+	"scannerLoginFirst": "ስካን ንምግባር ፈለማ ናብ ኣካውንትኻ ኽትኣቱ ኣሎካ",
+	"scannerCannotScan": "እዚ ኣቕሓ እዚ ስካን ክግበር ኣይክእልን እዩ",
+	"scannerOrderAvailable": "እዚ ትእዛዝ እዚ ኣብ ኣካውንትኻ ኣይርከብን እዩ",
+	"storeAddress": "ኣድራሻ ድኳን",
+	"storeBrand": "ብራንድ ድኳን",
+	"storeLocation": "ቦታ ድኳን",
+	"pleaseSelectImages": "በጃኻ ስእልታት ምረጽ",
+	"pleaseSelectALocation": "በጃኻ ቦታ ምረጽ",
+	"storeBanner": "ሰንደቕ ዕላማ (Banner)",
+	"finishSetup": "ምድላው ዛዘም",
+	"isEverythingSet": "ኵሉ ነገር እተሰርዐ ድዩ ?...",
+	"getStarted": "ጀምር",
+	"online": "ኣብ መስመር",
+	"somethingWrong": "ገለ ሽግር ኣጋጢሙ ኣሎ። በጃኻ ጸኒሕካ እንደገና ፈትን።",
+	"chooseStaff": "ሰራሕተኛታት ምረጽ",
+	"morning": "ንግሆ",
+	"afternoon": "ድሕሪ ቀትሪ",
+	"evening": "ምሸት",
+	"expectedDeliveryDate": "ትጽቢት እተገብረሉ ዕለት ምብጻሕ",
+	"qtyTotal": "ብዝሒ ፦ {total}",
+	"added": "ተወሲኹ",
+	"reOrder": "ዳግም ምዕዳግ",
+	"yourOrderHasBeenAdded": "ትእዛዝካ ተወሰኸልካ ኣሎ",
+	"finnish": "ፊንላንድኛ",
+	"greek": "ግሪኽ",
+	"tamil": "ታሚልኛ",
+	"khmer": "ክመር",
+	"pleaseSelectADate": "ዕለት መቝጸርያ ምረጽ",
+	"allBrands": "ኵሉ ብራንድ",
+	"kannada": "ካናዳኛ",
+	"marathi": "ማራቲኛ ",
+	"history": "ታሪኽ",
+	"favorite": "ዝፈትውዎ",
+	"orders": "ትእዛዛት",
+	"state": "State",
+	"save": "ምዕቃብ",
+	"addToOrder": "ናብ ትእዛዝ ወስኮ",
+	"invoice": "Invoice",
+	"complete": "ተዛዚሙ",
+	"cash": "ኻሽ",
+	"malay": "ማላይ",
+	"bosnian": "ቦስንያኛ",
+	"allProducts": "ኵሉ ፍርያት",
+	"lao": "Lao",
+	"slovak": "ስሎቫክኛ",
+	"swahili": "ስዋሂሊ",
+	"posAddressToolTip": "እዚ ኣድራሻ እዚ ኣብቲ ኸባቢ ኣብ ዚርከብ ኤለክትሮኒካዊ መሳርሒ ክዕቀብ እዩ። ኣድራሻ እቲ ተጠቃሚ ግን ኣይኰነን ።",
+	"usernameAndPasswordRequired": "ስም ተጠቃሚን ፓስወልን የድሊ",
+	"loginToContinue": "ክትቅጽል በጃኻ ናብ ኣካውንትኻ ኣእቱ",
+	"doYouWantToLogout": "ካብ ኣካውንትኻ ክትወጽእ ትደሊዶ ?",
+	"setAnAddressInSettingPage": "በጃኹም ኣድራሻ ኣብቲ ናይ ኣድራሻ ገጽ ኣዳልዉ",
+	"receivedMoney": "ገንዘብ ተቐበለ",
+	"debit": "Debit",
+	"transactionDetail": "ዝርዝር ንግዳዊ ልውውጥ",
+	"paymentSuccessful": "ክፍሊት ዕዉት",
+	"time": "ግዜ",
+	"transactionFee": "ምትሕልላፍ ክፍሊት",
+	"freeOfCharge": "ብናጻ ክፍሊት",
+	"walletBalance": "ቦርሳ ድምር ",
+	"moreInformation": "ዝያዳ ሓበሬታ",
+	"walletName": "ስም ቦርሳ",
+	"noteMessage": "ኖታ",
+	"sendBack": "ተመሊስካ ስደዶ",
+	"noPrinters": "ሓተምቲ ኣይነበሩን",
+	"select": "ሕረ",
+	"checking": "ትምርምር...",
+	"printing": "ሕትመት...",
+	"turnOnBle": "ብሉቱዝ ወላዓዮ",
+	"dateTime": "ግዜ ዕለት",
+	"orderNumber": "ቍጽሪ ትእዛዝ",
+	"printReceipt": "ቅብሊት ሕትመት",
+	"printerSelection": "ምርጫ ሓታሚት",
+	"printerNotFound": "ሓታሚት ኣይተረኽበትን",
+	"item": "ኣቕሓ",
+	"bleState": "ብሉቱዝ ኣዳፐር {state}",
+	"printer": "ሓታሚት",
+	"changePrinter": "ሓታሚት ቐይር",
+	"selectPrinter": "ሓታሚት ምረጽ",
+	"bleHasNotBeenEnabled": "ብሉቱዝ ኣይተወለዐን ዘሎ",
+	"attributeAlreadyExists": "ድሮ ዘሎ ባህርይ",
+	"deleteAll": "ንዅሉ ደምስሶ",
+	"createVariants": "ኵሉ ዓይነት ኣማራጺታት ፍጠር",
+	"anyAttr": "ዝዀነ {attribute}",
+	"newVariation": "ሓድሽ ለውጢ",
+	"yourProductIsUnderReview": "ፍርያትካ ኣብ ትሕቲ ምርመራ ኣሎ",
+	"orderConfirmation": "መረጋገጺ ትእዛዝ",
+	"orderConfirmationMsg": "ነዚ ትእዛዝ እዚ ኸም ክትገብሮ ርግጸኛ ዲኻ ?",
+	"thisProductNotSupport": "እዚ ፍርያት እዚ ደገፍ ኣይኰነን",
+	"pleaseSelectAttr": "በጃኻ ንነፍሲ ወከፍ ንጡፍ ባህርይ እንተ ወሓደ 1 ኣማራጺ ምረጽ",
+	"yourApplicationIsUnderReview": " ኣፕሊኬሽንካ ኣብ ትሕቲ ምርመራ ኣሎ",
+	"chineseSimplified": "ቻይንኛ (ቀሊል)",
+	"chineseTraditional": "ቻይንኛ (ባህላዊ)",
+	"receiver": "ተቐባሊ",
+	"burmese": "በርምሰኛ",
+	"albanian": "ኣልባኒያኛ",
+	"productNeedAtLeastOneVariation": "ዓይነት ፍርያት እንተ ወሓደ ሓደ ዓይነት ለውጢ የድልዮ",
+	"productNeedNameAndPrice": "ዓይነት ፍርያት ስምን ስሩዕ ዋጋን የድልዮ",
+	"sortBy": "ብቅደም ተከተል",
+	"dateLatest": "ዕለት፦ እዋናዊ",
+	"dateOldest": "ዕለት፦ ጥንታዊ",
+	"priceLowToHigh": "ዋጋ፦ ዝተሓተ ናብ ዝለዓለ",
+	"priceHighToLow": "ዋጋ ፦ ዝለዓለ ናብ ዝተሓተ",
+	"support": "ደገፍ",
+	"downloadApp": "ኣፕሊኬሽን ምጽዓን",
+	"connect": "ኣራኽብ",
+	"sellOnOsbisy": "ኣብ ኦስቢሲ ሽጥ",
+	"tigrinya": "ትግርኛ",
+	"amharic": "ኣምሓርኛ",
+	"language": "ቋንቋታት",
+	"loadingLink": "መራኸቢ ምጽዓን...",
+	"canNotLoadThisLink": "መራኸቢ ክጽዕኖ ኣይክእልን",
+	"imageNetwork": "መርበብ ስእሊ",
+	"pasteYourImageUrl": "ናይ ስእልኻ መራኸቢ ቕድሓዮ",
+	"useThisImage": "ነዚ ስእሊ እዚ ተጠቐመሉ",
+	"failedToLoadImage": "ስእልኻ ኺስከም ኣይከኣለን",
+	"allow": "ፍቐደሉ",
+	"decline": "ምንጻግ",
+	"agree": "እሳማማዕ",
+	"notifyLatestOffer": "አፍልጠኒ እዋናዊ ሕሱር ጠለባትን ከምውን ፍርያትን ህላወነት ",
+	"weWillSendYouNotification": "ሓድሽ ፍርያት ኣብ ዚርከብሉ ወይ ኣጋጣሚታት ኣብ ዚቐርበሉ እዋን ምልክታ ኽንልእከልካ ኢና ። ነዚ ዅነታት እዚ ወትሩ ኽትቅይሮ ትኽእል ኢኻ።",
+	"bySignup": "ክትምዝገብ ከለኻ ምስዚ ሓሳብ እዚ ትሰማማዕ ኢኻ ",
+	"deleteAccount": "ኣካውንትኻ ኣወግድ",
+	"areYouSureDeleteAccount": "ኣካውንትኻ ኸም እትድምስስ ርግጸኛ ዲኻ ?",
+	"deleteAccountMsg": "ኣካውንትኻ ኸተጥፍእ ከም እትደሊ ርግጸኛ ዲኻ? ምጥፋእ ኣካውንትኻ ብኸመይ ከም ዚጸልዎ ኣንብብ ።",
+	"accountDeleteDescription": "ኣካውንትኻ ምጥፋእ ናይ ብሕቲ ሓበሬታ ኻብ ናይ ሓበሬታ ቤትና የልግስ ።",
+	"emailDeleteDescription": "ኣካውንትኻ ምስ እትድምስስ ካብ ኵሉ ዝርዝር ደብዳበታት ሓበሬታት ኣይክትኣቱን ኢኻ።",
+	"enterCaptcha": "ነዚ ንምርግጋጽ ናብ {captcha} ኣተዉ፦",
+	"account": "ኣካውንት",
+	"emailSubscription": "ምምዝጋብ ኢ-መይል",
+	"confirmAccountDeletion": "ምጥፋእ ኣካውንትኻ ኣረጋግጽ",
+	"notice": "ሓበሬታ",
+	"needToLoginAgain": "እዋናዊ ሓበሬታ ንምርካብ እንደገና ኽትኣቱ ኣሎካ",
+	"deleteAccountSuccess": "እቲ ኣካውንትኻ ብዕዉት መገዲ ተደምሰሰ ። ምጥቃምም ጌዜካ ኣብቂዑ ኣሎ ።",
+	"pleaseAllowAccessCameraGallery": "በጃኹም ናብ ካሜራን ጋለሪን ክትኣትዉ ፍቐዱሎም",
+	"failToAssign": "ንተጠቃሚ ምምዳብ ተሳኢኑ ኣሎ",
+	"goBack": "ተመለስ",
+	"privacyTerms": "",
+	"companyName": "ስም ኩባንያ (ኣማራጺ)"
+}
\ No newline at end of file
diff --git a/lib/l10n/intl_tr.arb b/lib/l10n/intl_tr.arb
index 0bd03225..80439e10 100644
--- a/lib/l10n/intl_tr.arb
+++ b/lib/l10n/intl_tr.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Kullanıcı atanamadı",
 	"pleaseAllowAccessCameraGallery": "Lütfen kameraya ve galeriye erişime izin verin",
 	"goBack": "Geri Dön",
-	"privacyTerms": ""
+	"privacyTerms": "Gizlilik ve Şartlar",
+	"results": "Sonuçlar",
+	"danish": "Danimarkalı",
+	"allowCameraAccess": "Kamera erişimine izin verilsin mi?",
+	"getNotified": "Haberdar ol!",
+	"imIn": "Varım",
+	"weNeedCameraAccessTo": "QR kodunu veya Barkodu taramak için kamera erişimine ihtiyacımız var.",
+	"generatingLink": "Bağlantı oluşturuluyor...",
+	"noCameraPermissionIsGranted": "Kamera izni verilmez. Lütfen cihazınızın Ayarlarında verin."
 }
diff --git a/lib/l10n/intl_uk.arb b/lib/l10n/intl_uk.arb
index b9fd6b7a..952c95a8 100644
--- a/lib/l10n/intl_uk.arb
+++ b/lib/l10n/intl_uk.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Не вдалося призначити користувача",
 	"pleaseAllowAccessCameraGallery": "Будь ласка, надайте доступ до камери та галереї",
 	"goBack": "Повертайся",
-	"privacyTerms": ""
+	"privacyTerms": "Конфіденційність та умови",
+	"results": "результати",
+	"danish": "Датська",
+	"allowCameraAccess": "Дозволити доступ до камери?",
+	"getNotified": "Отримуйте сповіщення!",
+	"imIn": "я з вами",
+	"weNeedCameraAccessTo": "Нам потрібен доступ до камери, щоб відсканувати QR-код або штрих-код.",
+	"generatingLink": "Створення посилання...",
+	"noCameraPermissionIsGranted": "Дозвіл на камеру не надається. Надайте це в налаштуваннях свого пристрою."
 }
diff --git a/lib/l10n/intl_uz.arb b/lib/l10n/intl_uz.arb
index 7286f66c..c07bd5f8 100644
--- a/lib/l10n/intl_uz.arb
+++ b/lib/l10n/intl_uz.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Foydalanuvchini tayinlab bo‘lmadi",
 	"pleaseAllowAccessCameraGallery": "Kamera va galereyaga kirishga ruxsat bering",
 	"goBack": "Ortga qaytish",
-	"privacyTerms": ""
+	"privacyTerms": "Maxfiylik va Shartlar",
+	"results": "natijalar",
+	"danish": "Daniya",
+	"allowCameraAccess": "Kameradan foydalanishga ruxsat berilsinmi?",
+	"getNotified": "Xabar oling!",
+	"imIn": "Men kirdim",
+	"weNeedCameraAccessTo": "QR-kod yoki shtrix-kodni skanerlash uchun bizga kamera ruxsati kerak.",
+	"generatingLink": "Havola yaratilmoqda...",
+	"noCameraPermissionIsGranted": "Kameraga ruxsat berilmagan. Iltimos, uni qurilmangiz sozlamalarida bering."
 }
diff --git a/lib/l10n/intl_vi.arb b/lib/l10n/intl_vi.arb
index 78c19c83..ac65f81d 100644
--- a/lib/l10n/intl_vi.arb
+++ b/lib/l10n/intl_vi.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "Không chỉ định được người dùng",
 	"pleaseAllowAccessCameraGallery": "Vui lòng cho phép truy cập vào máy ảnh và thư viện",
 	"goBack": "Quay lại",
-	"privacyTerms": ""
+	"privacyTerms": "Quyền riêng tư & Điều khoản",
+	"results": "các kết quả",
+	"danish": "người Đan Mạch",
+	"allowCameraAccess": "Cho phép truy cập Máy ảnh?",
+	"getNotified": "Nhận được thông báo!",
+	"imIn": "Tôi tham gia",
+	"weNeedCameraAccessTo": "Chúng tôi cần quyền truy cập máy ảnh để quét mã QR hoặc mã vạch.",
+	"generatingLink": "Đang tạo liên kết ...",
+	"noCameraPermissionIsGranted": "Không có quyền đối với máy ảnh được cấp. Vui lòng cấp nó trong Cài đặt của thiết bị của bạn."
 }
diff --git a/lib/l10n/intl_zh.arb b/lib/l10n/intl_zh.arb
index e5360a5d..b10a8efc 100644
--- a/lib/l10n/intl_zh.arb
+++ b/lib/l10n/intl_zh.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "分配用户失败",
 	"pleaseAllowAccessCameraGallery": "请允许访问相机和图库",
 	"goBack": "回去",
-	"privacyTerms": ""
+	"privacyTerms": "隐私权与条款",
+	"results": "结果",
+	"danish": "丹麦",
+	"allowCameraAccess": "允许相机访问？",
+	"getNotified": "得到通知！",
+	"imIn": "算我一个",
+	"weNeedCameraAccessTo": "我们需要相机访问权限来扫描二维码或条形码。",
+	"generatingLink": "正在生成链接...",
+	"noCameraPermissionIsGranted": "未授予相机权限。请在您设备的设置中授予它。"
 }
diff --git a/lib/l10n/intl_zh_CN.arb b/lib/l10n/intl_zh_CN.arb
index 4c88cbe2..56ed0f32 100644
--- a/lib/l10n/intl_zh_CN.arb
+++ b/lib/l10n/intl_zh_CN.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "分配用户失败",
 	"pleaseAllowAccessCameraGallery": "请允许访问相机和图库",
 	"goBack": "回去",
-	"privacyTerms": ""
+	"privacyTerms": "隐私权与条款",
+	"results": "结果",
+	"danish": "丹麦",
+	"allowCameraAccess": "允许相机访问？",
+	"getNotified": "得到通知！",
+	"imIn": "算我一个",
+	"weNeedCameraAccessTo": "我们需要相机访问权限来扫描二维码或条形码。",
+	"generatingLink": "正在生成链接...",
+	"noCameraPermissionIsGranted": "未授予相机权限。请在您设备的设置中授予它。"
 }
diff --git a/lib/l10n/intl_zh_TW.arb b/lib/l10n/intl_zh_TW.arb
index 74d7a932..5b1e559e 100644
--- a/lib/l10n/intl_zh_TW.arb
+++ b/lib/l10n/intl_zh_TW.arb
@@ -802,5 +802,13 @@
 	"failToAssign": "分配用戶失敗",
 	"pleaseAllowAccessCameraGallery": "請允許訪問相機和圖庫",
 	"goBack": "回去",
-	"privacyTerms": ""
+	"privacyTerms": "隱私權與條款",
+	"results": "結果",
+	"danish": "丹麥",
+	"allowCameraAccess": "允許相機訪問？",
+	"getNotified": "得到通知！",
+	"imIn": "算我一個",
+	"weNeedCameraAccessTo": "我們需要相機訪問權限來掃描二維碼或條形碼。",
+	"generatingLink": "正在生成鏈接...",
+	"noCameraPermissionIsGranted": "未授予相機權限。請在您設備的設置中授予它。"
 }
diff --git a/lib/main.dart b/lib/main.dart
index 13ee95db..5d32f741 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -70,12 +70,19 @@ void main() {
     }
 
     await GmsCheck().checkGmsAvailability(enableLog: foundation.kDebugMode);
-    if (isMobile) {
-      /// Init Firebase settings due to version 0.5.0+ requires to.
-      /// Use await to prevent any usage until the initialization is completed.
-      await Services().firebase.init();
-      await Configurations().loadRemoteConfig();
+
+    try {
+      if (isMobile) {
+        /// Init Firebase settings due to version 0.5.0+ requires to.
+        /// Use await to prevent any usage until the initialization is completed.
+        await Services().firebase.init();
+        await Configurations().loadRemoteConfig();
+      }
+    } catch (e) {
+      printLog(e);
+      printLog('🔴 Firebase init issue');
     }
+
     await DependencyInjection.inject();
     Services().setAppConfig(serverConfig);
 
diff --git a/lib/main_layout/main_layout.dart b/lib/main_layout/main_layout.dart
index 2a06187b..c79d4dc6 100644
--- a/lib/main_layout/main_layout.dart
+++ b/lib/main_layout/main_layout.dart
@@ -1,4 +1,5 @@
 import 'package:flutter/material.dart';
+import 'package:responsive_builder/responsive_builder.dart';
 
 import '../modules/dynamic_layout/helper/helper.dart';
 import 'layout_desktop.dart';
@@ -11,11 +12,21 @@ class MainLayout extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     var body = widget;
-
-    if (Layout.isDisplayDesktop(context)) {
+    final deviceType = getDeviceType(MediaQuery.of(context).size);
+    if (Layout.isDisplayDesktop(context) &&
+        deviceType == DeviceScreenType.desktop) {
       body = LayoutDesktop(widget: widget);
     }
 
-    return Material(child: body);
+    return Overlay(
+      key: ValueKey('screenType:$deviceType'),
+      initialEntries: [
+        OverlayEntry(
+          builder: (context) {
+            return Material(child: body);
+          },
+        ),
+      ],
+    );
   }
 }
diff --git a/lib/menu/appbar.dart b/lib/menu/appbar.dart
index da358d36..66ecbaa4 100644
--- a/lib/menu/appbar.dart
+++ b/lib/menu/appbar.dart
@@ -14,6 +14,8 @@ import '../routes/flux_navigate.dart';
 import '../widgets/common/index.dart';
 
 class FluxAppBar extends StatefulWidget implements PreferredSizeWidget {
+  const FluxAppBar({Key? key}) : super(key: key);
+
   @override
   State<FluxAppBar> createState() => _FluxAppBarState();
 
@@ -30,8 +32,9 @@ class _FluxAppBarState extends State<FluxAppBar> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance
-        .addPostFrameCallback((_) => afterFirstLayout(context));
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) afterFirstLayout(context);
+    });
   }
 
   void afterFirstLayout(BuildContext context) {
@@ -70,59 +73,132 @@ class _FluxAppBarState extends State<FluxAppBar> {
 
   @override
   Widget build(BuildContext context) {
-    if (appBar == null || (appBar?.items?.isEmpty ?? true)) {
-      return const SizedBox();
-    }
-
-    return Container(
-      height: widget.preferredSize.height,
-      decoration: BoxDecoration(
-        color: appBar?.backgroundColor != null
-            ? HexColor(appBar?.backgroundColor)
-            : Theme.of(context).backgroundColor,
-      ),
-      child: Row(
-        mainAxisAlignment: MainAxisAlignment.spaceBetween,
-        children: appBar?.items?.map(
-              (AppBarItemConfig item) {
-                Widget widget;
-                switch (item.type) {
-                  case 'space':
-                    return const Spacer();
-                  case 'location':
-                    widget = Container(
-                      height: this.widget.preferredSize.height,
-                      padding: EdgeInsets.only(
-                        left: item.paddingLeft.toDouble(),
-                        right: item.paddingRight.toDouble(),
-                        top: item.paddingTop.toDouble(),
-                        bottom: item.paddingBottom.toDouble(),
-                      ),
-                      child: Column(
-                        mainAxisAlignment: MainAxisAlignment.center,
-                        crossAxisAlignment: CrossAxisAlignment.start,
-                        children: <Widget>[
-                          if (!item.hideTitle)
-                            Row(
-                              children: [
-                                const SizedBox(width: 4.0),
-                                Text(
-                                  item.title ?? S.of(context).selectAddress,
-                                  style: const TextStyle(
-                                    fontSize: 10.0,
-                                    fontWeight: FontWeight.w300,
-                                  ),
-                                ),
-                                const Icon(
-                                  Icons.arrow_drop_down,
-                                  size: 16.0,
+    return Selector<AppModel, AppBarConfig?>(
+      selector: (context, model) => model.appConfig?.appBar,
+      shouldRebuild: (oldValue, newValue) => oldValue?.toJson().toString() != newValue?.toJson().toString(),
+      builder: (context, value, child) {
+        if (value == null || (value.items?.isEmpty ?? true)) {
+          return const SizedBox();
+        }
+        return Container(
+          height: widget.preferredSize.height,
+          decoration: BoxDecoration(
+            color: value.backgroundColor != null
+                ? HexColor(value.backgroundColor)
+                : Theme.of(context).backgroundColor,
+          ),
+          child: Row(
+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
+            children: value.items?.map(
+                  (AppBarItemConfig item) {
+                    Widget widget;
+                    switch (item.type) {
+                      case 'space':
+                        return const Spacer();
+                      case 'location':
+                        widget = Container(
+                          height: this.widget.preferredSize.height,
+                          padding: EdgeInsets.only(
+                            left: item.paddingLeft.toDouble(),
+                            right: item.paddingRight.toDouble(),
+                            top: item.paddingTop.toDouble(),
+                            bottom: item.paddingBottom.toDouble(),
+                          ),
+                          child: Column(
+                            mainAxisAlignment: MainAxisAlignment.center,
+                            crossAxisAlignment: CrossAxisAlignment.start,
+                            children: <Widget>[
+                              if (!item.hideTitle)
+                                Row(
+                                  children: [
+                                    const SizedBox(width: 4.0),
+                                    Text(
+                                      item.title ?? S.of(context).selectAddress,
+                                      style: const TextStyle(
+                                        fontSize: 10.0,
+                                        fontWeight: FontWeight.w300,
+                                      ),
+                                    ),
+                                    const Icon(
+                                      Icons.arrow_drop_down,
+                                      size: 16.0,
+                                    ),
+                                    const Spacer(),
+                                  ],
                                 ),
-                                const Spacer(),
-                              ],
+                              Row(
+                                mainAxisSize: MainAxisSize.max,
+                                children: [
+                                  DeferredWidget(
+                                    defer_icon.loadLibrary,
+                                    () => Icon(
+                                      defer_icon.iconPicker(
+                                        item.icon!,
+                                        item.fontFamily!,
+                                      ),
+                                      size: item.iconSize.toDouble(),
+                                      color: item.iconColor != null
+                                          ? HexColor(item.iconColor)
+                                          : Theme.of(context).primaryColor,
+                                    ),
+                                  ),
+                                  Expanded(
+                                    child: Text(
+                                      currentAddress?.toString() ?? '',
+                                      style: const TextStyle(
+                                        fontSize: 14.0,
+                                        fontWeight: FontWeight.w500,
+                                      ),
+                                      overflow: TextOverflow.ellipsis,
+                                    ),
+                                  ),
+                                ],
+                              ),
+                            ],
+                          ),
+                        );
+                        break;
+                      case 'text':
+                        var textColor = item.textColor != null
+                            ? HexColor(item.textColor)
+                            : Theme.of(context).colorScheme.secondary;
+                        widget = Container(
+                          alignment: Tools.getAlignment(
+                            item.alignment,
+                            defaultValue: Alignment.center,
+                          ),
+                          height: this.widget.preferredSize.height,
+                          padding: EdgeInsets.only(
+                            left: item.paddingLeft.toDouble(),
+                            right: item.paddingRight.toDouble(),
+                            top: item.paddingTop.toDouble(),
+                            bottom: item.paddingBottom.toDouble(),
+                          ),
+                          child: Text(
+                            item.title ?? '',
+                            style: TextStyle(
+                              fontSize: Helper.formatDouble(item.fontSize),
+                              fontWeight: Tools.getFontWeight(
+                                item.fontWeight,
+                                defaultValue: FontWeight.w300,
+                              ),
+                              color: textColor.withOpacity(
+                                  Helper.formatDouble(item.textOpacity) ?? 0.5),
                             ),
-                          Row(
+                          ),
+                        );
+                        break;
+                      case 'search':
+                        widget = Padding(
+                          padding: EdgeInsets.only(
+                            left: item.paddingLeft.toDouble(),
+                            right: item.paddingRight.toDouble(),
+                            top: item.paddingTop.toDouble(),
+                            bottom: item.paddingBottom.toDouble(),
+                          ),
+                          child: Row(
                             mainAxisSize: MainAxisSize.max,
-                            children: [
+                            children: <Widget>[
                               DeferredWidget(
                                 defer_icon.loadLibrary,
                                 () => Icon(
@@ -136,242 +212,199 @@ class _FluxAppBarState extends State<FluxAppBar> {
                                       : Theme.of(context).primaryColor,
                                 ),
                               ),
-                              Expanded(
-                                child: Text(
-                                  currentAddress?.toString() ?? '',
-                                  style: const TextStyle(
-                                    fontSize: 14.0,
-                                    fontWeight: FontWeight.w500,
+                              SizedBox(
+                                width: 4.0,
+                                height: this.widget.preferredSize.height,
+                              ),
+                              if (!item.hideTitle)
+                                Expanded(
+                                  child: Text(
+                                    item.title ?? '',
+                                    overflow: TextOverflow.ellipsis,
+                                    style: Theme.of(context)
+                                        .textTheme
+                                        .bodyText2
+                                        ?.copyWith(
+                                          fontSize: Helper.formatDouble(
+                                              item.fontSize),
+                                          fontWeight: Tools.getFontWeight(
+                                            item.fontWeight,
+                                            defaultValue: FontWeight.w300,
+                                          ),
+                                          color: Theme.of(context)
+                                              .colorScheme
+                                              .secondary
+                                              .withOpacity(Helper.formatDouble(
+                                                      item.textOpacity) ??
+                                                  0.5),
+                                        ),
                                   ),
-                                  overflow: TextOverflow.ellipsis,
                                 ),
-                              ),
                             ],
                           ),
-                        ],
-                      ),
-                    );
-                    break;
-                  case 'text':
-                    var textColor = item.textColor != null
-                        ? HexColor(item.textColor)
-                        : Theme.of(context).colorScheme.secondary;
-                    widget = Container(
-                      alignment: Tools.getAlignment(
-                        item.alignment,
-                        defaultValue: Alignment.center,
-                      ),
-                      height: this.widget.preferredSize.height,
-                      padding: EdgeInsets.only(
-                        left: item.paddingLeft.toDouble(),
-                        right: item.paddingRight.toDouble(),
-                        top: item.paddingTop.toDouble(),
-                        bottom: item.paddingBottom.toDouble(),
-                      ),
-                      child: Text(
-                        item.title ?? '',
-                        style: TextStyle(
-                          fontSize: Helper.formatDouble(item.fontSize),
-                          fontWeight: Tools.getFontWeight(
-                            item.fontWeight,
-                            defaultValue: FontWeight.w300,
-                          ),
-                          color: textColor.withOpacity(
-                              Helper.formatDouble(item.textOpacity) ?? 0.5),
-                        ),
-                      ),
-                    );
-                    break;
-                  case 'search':
-                    widget = Padding(
-                      padding: EdgeInsets.only(
-                        left: item.paddingLeft.toDouble(),
-                        right: item.paddingRight.toDouble(),
-                        top: item.paddingTop.toDouble(),
-                        bottom: item.paddingBottom.toDouble(),
-                      ),
-                      child: Row(
-                        mainAxisSize: MainAxisSize.max,
-                        children: <Widget>[
-                          DeferredWidget(
-                            defer_icon.loadLibrary,
-                            () => Icon(
-                              defer_icon.iconPicker(
-                                item.icon!,
-                                item.fontFamily!,
+                        );
+                        break;
+                      case 'icon':
+                        widget = SizedBox(
+                          height: item.size.toDouble(),
+                          width: item.size.toDouble(),
+                          child: IconButton(
+                            color: item.iconColor != null
+                                ? HexColor(item.iconColor)
+                                : Theme.of(context)
+                                    .colorScheme
+                                    .secondary
+                                    .withOpacity(0.9),
+                            iconSize: item.iconSize.toDouble(),
+                            padding: EdgeInsets.only(
+                              left: item.paddingLeft.toDouble(),
+                              right: item.paddingRight.toDouble(),
+                              top: item.paddingTop.toDouble(),
+                              bottom: item.paddingBottom.toDouble(),
+                            ),
+                            icon: DeferredWidget(
+                              defer_icon.loadLibrary,
+                              () => Icon(
+                                defer_icon.iconPicker(
+                                  item.icon!,
+                                  item.fontFamily!,
+                                ),
                               ),
-                              size: item.iconSize.toDouble(),
-                              color: item.iconColor != null
-                                  ? HexColor(item.iconColor)
-                                  : Theme.of(context).primaryColor,
                             ),
+                            onPressed: () => handleItemAction(item),
                           ),
-                          SizedBox(
-                            width: 4.0,
-                            height: this.widget.preferredSize.height,
+                        );
+                        break;
+                      case 'logo':
+                        widget = Padding(
+                          padding: EdgeInsets.only(
+                            left: item.paddingLeft.toDouble(),
+                            right: item.paddingRight.toDouble(),
+                            top: item.paddingTop.toDouble(),
+                            bottom: item.paddingBottom.toDouble(),
                           ),
-                          if (!item.hideTitle)
-                            Expanded(
-                              child: Text(
-                                item.title ?? '',
-                                overflow: TextOverflow.ellipsis,
-                                style: Theme.of(context)
-                                    .textTheme
-                                    .bodyText2
-                                    ?.copyWith(
-                                      fontSize:
-                                          Helper.formatDouble(item.fontSize),
-                                      fontWeight: Tools.getFontWeight(
-                                        item.fontWeight,
-                                        defaultValue: FontWeight.w300,
-                                      ),
-                                      color: Theme.of(context)
-                                          .colorScheme
-                                          .secondary
-                                          .withOpacity(Helper.formatDouble(
-                                                  item.textOpacity) ??
-                                              0.5),
-                                    ),
+                          child: InkWell(
+                            onTap: () => handleItemAction(item),
+                            child: FluxImage(
+                              imageUrl: context.select(
+                                (AppModel _) => _.themeConfig.logo,
                               ),
+                              width: item.width?.toDouble(),
+                              height: item.height?.toDouble(),
+                              fit: ImageTools.boxFit(item.imageBoxFit),
+                              color: item.imageColor != null
+                                  ? HexColor(item.imageColor)
+                                  : null,
                             ),
-                        ],
-                      ),
-                    );
-                    break;
-                  case 'icon':
-                    widget = SizedBox(
-                      height: item.size.toDouble(),
-                      width: item.size.toDouble(),
-                      child: IconButton(
-                        color: item.iconColor != null
-                            ? HexColor(item.iconColor)
-                            : Theme.of(context)
-                                .colorScheme
-                                .secondary
-                                .withOpacity(0.9),
-                        iconSize: item.iconSize.toDouble(),
-                        padding: EdgeInsets.only(
-                          left: item.paddingLeft.toDouble(),
-                          right: item.paddingRight.toDouble(),
-                          top: item.paddingTop.toDouble(),
-                          bottom: item.paddingBottom.toDouble(),
-                        ),
-                        icon: DeferredWidget(
-                          defer_icon.loadLibrary,
-                          () => Icon(
-                            defer_icon.iconPicker(
-                              item.icon!,
-                              item.fontFamily!,
+                          ),
+                        );
+                        break;
+                      case 'image':
+                        widget = Padding(
+                          padding: EdgeInsets.only(
+                            left: item.paddingLeft.toDouble(),
+                            right: item.paddingRight.toDouble(),
+                            top: item.paddingTop.toDouble(),
+                            bottom: item.paddingBottom.toDouble(),
+                          ),
+                          child: InkWell(
+                            onTap: () => handleItemAction(item),
+                            child: FluxImage(
+                              imageUrl: item.image!,
+                              width: item.width?.toDouble(),
+                              height: item.height?.toDouble(),
+                              fit: ImageTools.boxFit(item.imageBoxFit),
+                              color: item.imageColor != null
+                                  ? HexColor(item.imageColor)
+                                  : null,
                             ),
                           ),
-                        ),
-                        onPressed: () => handleItemAction(item),
-                      ),
-                    );
-                    break;
-                  case 'image':
-                    widget = Padding(
-                      padding: EdgeInsets.only(
-                        left: item.paddingLeft.toDouble(),
-                        right: item.paddingRight.toDouble(),
-                        top: item.paddingTop.toDouble(),
-                        bottom: item.paddingBottom.toDouble(),
-                      ),
-                      child: InkWell(
-                        onTap: () => handleItemAction(item),
-                        child: FluxImage(
-                          imageUrl: item.image!,
-                          width: item.width?.toDouble(),
-                          height: item.height?.toDouble(),
-                          fit: ImageTools.boxFit(item.imageBoxFit),
-                          color: item.imageColor != null
-                              ? HexColor(item.imageColor)
-                              : null,
-                        ),
-                      ),
-                    );
-                    break;
-                  default:
-                    return const SizedBox();
-                }
+                        );
+                        break;
+                      default:
+                        return const SizedBox();
+                    }
 
-                /// Add badge number.
-                if (item.type == 'icon' &&
-                    ['cart', 'notification'].contains(item.action)) {
-                  var badgeCount = 0;
-                  if (item.action == 'notification') {
-                    badgeCount =
-                        Provider.of<NotificationModel>(context).unreadCount;
-                  }
-                  if (item.action == 'cart') {
-                    badgeCount =
-                        Provider.of<CartModel>(context).totalCartQuantity;
-                  }
+                    /// Add badge number.
+                    if (item.type == 'icon' &&
+                        ['cart', 'notification'].contains(item.action)) {
+                      var badgeCount = 0;
+                      if (item.action == 'notification') {
+                        badgeCount =
+                            Provider.of<NotificationModel>(context).unreadCount;
+                      }
+                      if (item.action == 'cart') {
+                        badgeCount =
+                            Provider.of<CartModel>(context).totalCartQuantity;
+                      }
 
-                  widget = Stack(
-                    children: [
-                      widget,
-                      if (badgeCount > 0)
-                        Positioned(
-                          right: 0,
-                          top: 0,
-                          child: Container(
-                            padding: const EdgeInsets.all(1),
-                            decoration: BoxDecoration(
-                              color: Colors.red,
-                              borderRadius: BorderRadius.circular(16),
-                            ),
-                            constraints: const BoxConstraints(
-                              minWidth: 18,
-                              minHeight: 18,
-                            ),
-                            child: Text(
-                              '$badgeCount',
-                              style: const TextStyle(
-                                color: Colors.white,
-                                fontSize: 12,
-                                height: 1.3,
+                      widget = Stack(
+                        children: [
+                          widget,
+                          if (badgeCount > 0)
+                            Positioned(
+                              right: 0,
+                              top: 0,
+                              child: Container(
+                                padding: const EdgeInsets.all(1),
+                                decoration: BoxDecoration(
+                                  color: Colors.red,
+                                  borderRadius: BorderRadius.circular(16),
+                                ),
+                                constraints: const BoxConstraints(
+                                  minWidth: 18,
+                                  minHeight: 18,
+                                ),
+                                child: Text(
+                                  '$badgeCount',
+                                  style: const TextStyle(
+                                    color: Colors.white,
+                                    fontSize: 12,
+                                    height: 1.3,
+                                  ),
+                                  textAlign: TextAlign.center,
+                                ),
                               ),
-                              textAlign: TextAlign.center,
-                            ),
-                          ),
-                        )
-                    ],
-                  );
-                }
-
-                /// Add margin & background.
-                widget = Container(
-                  decoration: BoxDecoration(
-                    color: item.backgroundColor != null
-                        ? HexColor(item.backgroundColor)
-                        : Colors.transparent,
-                    borderRadius: BorderRadius.circular(item.radius.toDouble()),
-                  ),
-                  margin: EdgeInsets.only(
-                    left: item.marginLeft.toDouble(),
-                    right: item.marginRight.toDouble(),
-                    top: item.marginTop.toDouble(),
-                    bottom: item.marginBottom.toDouble(),
-                  ),
-                  child: widget,
-                );
+                            )
+                        ],
+                      );
+                    }
 
-                /// Handle expanded widget.
-                if (['search', 'text', 'location'].contains(item.type)) {
-                  widget = Expanded(
-                    child: GestureDetector(
-                      onTap: () => handleItemAction(item),
+                    /// Add margin & background.
+                    widget = Container(
+                      decoration: BoxDecoration(
+                        color: item.backgroundColor != null
+                            ? HexColor(item.backgroundColor)
+                            : Colors.transparent,
+                        borderRadius:
+                            BorderRadius.circular(item.radius.toDouble()),
+                      ),
+                      margin: EdgeInsets.only(
+                        left: item.marginLeft.toDouble(),
+                        right: item.marginRight.toDouble(),
+                        top: item.marginTop.toDouble(),
+                        bottom: item.marginBottom.toDouble(),
+                      ),
                       child: widget,
-                    ),
-                  );
-                }
+                    );
 
-                return widget;
-              },
-            ).toList() ??
-            [],
-      ),
+                    /// Handle expanded widget.
+                    if (['search', 'text', 'location'].contains(item.type)) {
+                      widget = Expanded(
+                        child: GestureDetector(
+                          onTap: () => handleItemAction(item),
+                          child: widget,
+                        ),
+                      );
+                    }
+
+                    return widget;
+                  },
+                ).toList() ??
+                [],
+          ),
+        );
+      },
     );
   }
 
@@ -398,6 +431,18 @@ class _FluxAppBarState extends State<FluxAppBar> {
       case 'notification':
         FluxNavigate.pushNamed(RouteList.notify);
         break;
+      case 'product':
+      case 'category':
+      case 'url':
+      case 'launch_url':
+      case 'blog':
+      case 'blog_category':
+        if (item.actionLink?.isNotEmpty ?? false) {
+          NavigateTools.onTapNavigateOptions(config: {
+            item.action: item.actionLink,
+          }, context: context);
+        }
+        break;
       default:
     }
   }
diff --git a/lib/menu/maintab.dart b/lib/menu/maintab.dart
index cceaac72..8d267e9d 100644
--- a/lib/menu/maintab.dart
+++ b/lib/menu/maintab.dart
@@ -6,9 +6,11 @@ import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:new_version/new_version.dart';
 import 'package:provider/provider.dart';
+import 'package:shared_preferences/shared_preferences.dart';
 
 import '../common/config.dart';
 import '../common/constants.dart';
+import '../common/tools/in_app_update_for_android.dart';
 import '../generated/l10n.dart';
 import '../main_layout/layout_left_menu.dart';
 import '../models/index.dart';
@@ -18,6 +20,8 @@ import '../modules/dynamic_layout/index.dart';
 import '../routes/flux_navigate.dart';
 import '../routes/route.dart';
 import '../screens/index.dart' show NotificationScreen;
+import '../screens/users/age_restriction_screen.dart';
+import '../services/dependency_injection.dart';
 import '../widgets/overlay/custom_overlay_state.dart';
 import 'maintab_delegate.dart';
 import 'side_menu.dart';
@@ -76,9 +80,27 @@ class MainTabsState extends CustomOverlayState<MainTabs>
     _initTabDelegate();
     _initTabData(context);
 
-    if (kAdvanceConfig.enableVersionCheck) {
+    // In App Update For Android will have higher priority than Enable Version Check
+    if (isAndroid && kAdvanceConfig.inAppUpdateForAndroid.enable) {
+      unawaited(InAppUpdateForAndroid().checkForUpdate());
+    } else if (kAdvanceConfig.enableVersionCheck) {
       NewVersion().showAlertIfNecessary(context: context);
     }
+
+    final hasAskedAge = injector<SharedPreferences>()
+            .getBool(LocalStorageKey.askedAgeRestriction) ??
+        false;
+    if (appSetting.ageRestrictionConfig.enable &&
+        (appSetting.ageRestrictionConfig.alwaysShowUponOpen || !hasAskedAge)) {
+      await Navigator.of(context, rootNavigator: true).push(
+        MaterialPageRoute(
+          builder: (context) => AgeRestrictionScreen(
+            config: appSetting.ageRestrictionConfig,
+          ),
+          fullscreenDialog: true,
+        ),
+      );
+    }
   }
 
   /// init the Event Bus listening
@@ -222,7 +244,7 @@ class MainTabsState extends CustomOverlayState<MainTabs>
       sideMenuBackgroundImage: appConfig.drawer?.backgroundImage,
       colorFilter: appConfig.drawer?.colorFilter,
       filter: appConfig.drawer?.filter,
-      drawer: const SideBarMenu(),
+      drawer: (appConfig.drawer?.enable ?? true) ? const SideBarMenu() : null,
       child: CupertinoTheme(
         data: CupertinoThemeData(
           primaryColor: Theme.of(context).colorScheme.secondary,
@@ -239,7 +261,8 @@ class MainTabsState extends CustomOverlayState<MainTabs>
         child: WillPopScope(
           onWillPop: _handleWillPopScopeRoot,
           child: LayoutLeftMenu(
-            menu: const SideBarMenu(),
+            menu:
+                (appConfig.drawer?.enable ?? true) ? const SideBarMenu() : null,
             content: MediaQuery(
               data: isDesktopDisplay
                   ? media.copyWith(
@@ -281,11 +304,11 @@ class MainTabsState extends CustomOverlayState<MainTabs>
 
 extension TabBarMenuExtention on MainTabsState {
   /// on change tabBar name
-  void _onChangeTab(String? nameTab) {
+  void _onChangeTab(String? nameTab, {bool allowPush = true}) {
     if (saveIndexTab[nameTab] != null) {
       tabController.animateTo(saveIndexTab[nameTab]);
       _emitChildTabName();
-    } else {
+    } else if (allowPush) {
       FluxNavigate.pushNamed(nameTab.toString(), forceRootNavigator: true);
     }
   }
diff --git a/lib/menu/maintab_delegate.dart b/lib/menu/maintab_delegate.dart
index 6fabfd8e..976365ec 100644
--- a/lib/menu/maintab_delegate.dart
+++ b/lib/menu/maintab_delegate.dart
@@ -6,7 +6,7 @@ typedef TabName = String? Function();
 
 class MainTabControlDelegate {
   int? index;
-  late Function(String? nameTab) changeTab;
+  late Function(String? nameTab, {bool allowPush}) changeTab;
   late Function(int index) tabAnimateTo;
   late TabKey tabKey;
   late TabName currentTabName;
diff --git a/lib/menu/side_menu.dart b/lib/menu/side_menu.dart
index cc08acb8..93793d7e 100644
--- a/lib/menu/side_menu.dart
+++ b/lib/menu/side_menu.dart
@@ -22,7 +22,7 @@ class SideMenu extends StatefulWidget {
   final String? colorFilter;
   final num? filter;
   final ZoomConfig? zoomConfig;
-  final Widget drawer;
+  final Widget? drawer;
   final bool tabBarOnTop;
 
   const SideMenu({
@@ -37,7 +37,7 @@ class SideMenu extends StatefulWidget {
     this.floatingActionButton,
     this.zoomConfig,
     this.tabBarOnTop = false,
-    required this.drawer,
+    this.drawer,
   });
 
   @override
@@ -167,7 +167,9 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
       floatingActionButtonLocation: widget.floatingActionButtonLocation,
       floatingActionButton: widget.floatingActionButton,
       body: widget.child,
-      drawer: !enableDrawer || Layout.isDisplayDesktop(context)
+      drawer: widget.drawer == null ||
+              !enableDrawer ||
+              Layout.isDisplayDesktop(context)
           ? null
           : Drawer(
               child: enableBackground
@@ -194,7 +196,7 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
                               widget.filter?.toDouble() ?? 0.0,
                             ),
                           ),
-                        widget.drawer,
+                        if (widget.drawer != null) widget.drawer!,
                       ],
                     )
                   : widget.drawer,
@@ -262,13 +264,12 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
               menuScreenWidth:
                   MediaQuery.of(context).size.width * zoomConfig.slideWidth -
                       zoomConfig.slideMargin,
-              menuScreen: widget.drawer,
+              menuScreen: widget.drawer ?? const SizedBox(),
               mainScreen: ValueListenableBuilder<DrawerState>(
                 valueListenable: _drawerController.stateNotifier ??
                     ValueNotifier(DrawerState.open),
                 builder: (context, value, child) {
-                  var isOpen =
-                      value == DrawerState.open || value == DrawerState.open;
+                  var isOpen = value != DrawerState.closed;
                   return GestureDetector(
                     onTap: isOpen
                         ? () {
@@ -277,10 +278,11 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
                         : null,
                     child: AbsorbPointer(
                       absorbing: isOpen,
-                      child: renderLayout(),
+                      child: child,
                     ),
                   );
                 },
+                child: renderLayout(),
               ),
             ),
           ),
diff --git a/lib/menu/sidebar.dart b/lib/menu/sidebar.dart
index faef2b91..ff7f6771 100644
--- a/lib/menu/sidebar.dart
+++ b/lib/menu/sidebar.dart
@@ -25,7 +25,7 @@ class SideBarMenu extends StatefulWidget {
 
 class MenuBarState extends State<SideBarMenu> {
   bool get isEcommercePlatform =>
-      !Config().isListingType || !Config().isWordPress;
+      !ServerConfig().isListingType || !ServerConfig().isWordPress;
 
   DrawerMenuConfig get drawer =>
       Provider.of<AppModel>(context, listen: false).appConfig?.drawer ??
@@ -147,8 +147,7 @@ class MenuBarState extends State<SideBarMenu> {
               style: textStyle,
             ),
             onTap: () => pushNavigation(
-              Provider.of<AppModel>(context, listen: false).vendorType ==
-                      VendorType.single
+              !Provider.of<AppModel>(context, listen: false).isMultivendor
                   ? RouteList.category
                   : RouteList.vendorCategory,
             ),
@@ -157,7 +156,7 @@ class MenuBarState extends State<SideBarMenu> {
       case 'cart':
         {
           if ((!Services().widget.enableShoppingCart(null)) ||
-              Config().isListingType) {
+              ServerConfig().isListingType) {
             return const SizedBox();
           }
           return ListTile(
@@ -288,6 +287,43 @@ class MenuBarState extends State<SideBarMenu> {
           if (value?.contains('button') ?? false) {
             return GeneralButtonWidget(item: item);
           }
+          if (value?.contains('product') ?? false) {
+            return GeneralProductWidget(
+              item: item,
+              useTile: true,
+              iconColor: iconColor,
+              textStyle: textStyle,
+            );
+          }
+          if (value?.contains('category') ?? false) {
+            return GeneralCategoryWidget(
+              item: item,
+              useTile: true,
+              iconColor: iconColor,
+              textStyle: textStyle,
+            );
+          }
+          if (value?.contains('banner') ?? false) {
+            return GeneralBannerWidget(
+              item: item,
+            );
+          }
+          if (value?.contains('blogCategory') ?? false) {
+            return GeneralBlogCategoryWidget(
+              item: item,
+              useTile: true,
+              iconColor: iconColor,
+              textStyle: textStyle,
+            );
+          }
+          if (value?.contains('blog') ?? false) {
+            return GeneralBlogWidget(
+              item: item,
+              useTile: true,
+              iconColor: iconColor,
+              textStyle: textStyle,
+            );
+          }
         }
 
         return const SizedBox();
diff --git a/lib/models/app_model.dart b/lib/models/app_model.dart
index ccca9a2f..0b58af82 100644
--- a/lib/models/app_model.dart
+++ b/lib/models/app_model.dart
@@ -18,9 +18,9 @@ import 'category_model.dart';
 
 class AppModel with ChangeNotifier {
   AppConfig? appConfig;
-  VendorType? vendorType;
   AdvertisementConfig advertisement = const AdvertisementConfig();
   Map? deeplink;
+  late bool isMultivendor;
 
   /// Loading State setting
   bool isLoading = true;
@@ -81,9 +81,7 @@ class AppModel with ChangeNotifier {
     _langCode = lang ?? kAdvanceConfig.defaultLanguage;
 
     advertisement = AdvertisementConfig.fromJson(adConfig: kAdConfig);
-    vendorType = kFluxStoreMV.contains(serverConfig['type'])
-        ? VendorType.multi
-        : VendorType.single;
+    isMultivendor = ServerConfig().typeName.isMultiVendor;
   }
 
   void _updateAndSaveDefaultLanguage(String? lang) async {
@@ -143,7 +141,8 @@ class AppModel with ChangeNotifier {
   Future<void> changeCurrency(String? item, BuildContext context,
       {String? code}) async {
     try {
-      Provider.of<CartModel>(context, listen: false).changeCurrency(item);
+      Provider.of<CartModel>(context, listen: false)
+          .changeCurrency(code ?? item);
       var prefs = injector<SharedPreferences>();
       currency = item;
       currencyCode = code;
@@ -191,7 +190,7 @@ class AppModel with ChangeNotifier {
         var loadAppConfigDone = false;
 
         /// load config from Notion
-        if (Config().type == ConfigType.notion) {
+        if (ServerConfig().type == ConfigType.notion) {
           final appCfg = await Services().widget.onGetAppConfig(langCode);
 
           if (appCfg != null) {
@@ -230,7 +229,7 @@ class AppModel with ChangeNotifier {
 
       /// apply App Caching if isCaching is enable
       /// not use for Fluxbuilder
-      if (!Config().isBuilder) {
+      if (!ServerConfig().isBuilder) {
         await Services().widget.onLoadedAppConfig(langCode, (configCache) {
           appConfig = AppConfig.fromJson(configCache);
         });
diff --git a/lib/models/cart/cart_model_bigcommerce.dart b/lib/models/cart/cart_model_bigcommerce.dart
index a5cd8702..903c89d4 100644
--- a/lib/models/cart/cart_model_bigcommerce.dart
+++ b/lib/models/cart/cart_model_bigcommerce.dart
@@ -3,7 +3,6 @@ import 'package:flutter/material.dart';
 import 'package:shared_preferences/shared_preferences.dart';
 
 import '../../common/config.dart';
-import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../services/index.dart';
 import '../entities/index.dart' show Product, ProductVariation;
@@ -458,7 +457,7 @@ class CartModelBigCommerce
 
   @override
   double? getShippingCost() {
-    var isMultiVendor = kFluxStoreMV.contains(serverConfig['type']);
+    var isMultiVendor = ServerConfig().typeName.isMultiVendor;
     return isMultiVendor ? getShippingVendorCost() : super.getShippingCost();
   }
 
diff --git a/lib/models/cart/cart_model_magento.dart b/lib/models/cart/cart_model_magento.dart
index 00da3aba..0d92267f 100644
--- a/lib/models/cart/cart_model_magento.dart
+++ b/lib/models/cart/cart_model_magento.dart
@@ -47,7 +47,8 @@ class CartModelMagento
       } else {
         var productId = Product.cleanProductID(key);
 
-        var price = PriceTools.getPriceProductValue(item[productId], currency,
+        var price = PriceTools.getPriceProductValue(
+            item[productId], currencyCode,
             onSale: true)!;
         if (price.isNotEmpty) {
           return sum + double.parse(price) * productsInCart[key]!;
@@ -84,13 +85,13 @@ class CartModelMagento
   @override
   String getCoupon() {
     if (discountAmount > 0) {
-      return '-${PriceTools.getCurrencyFormatted(discountAmount, currencyRates, currency: currency)!}';
+      return '-${PriceTools.getCurrencyFormatted(discountAmount, currencyRates, currency: currencyCode)!}';
     } else {
       if (couponObj != null) {
         if (couponObj!.discountType == 'percent') {
           return '-${couponObj!.amount}%';
         } else {
-          return '-${PriceTools.getCurrencyFormatted(couponObj!.amount! * totalCartQuantity, currencyRates, currency: currency)!}';
+          return '-${PriceTools.getCurrencyFormatted(couponObj!.amount! * totalCartQuantity, currencyRates, currency: currencyCode)!}';
         }
       } else {
         return '';
@@ -117,6 +118,10 @@ class CartModelMagento
     if (kPaymentConfig.enableShipping) {
       subtotal += getShippingCost()!;
     }
+    if (taxes.isNotEmpty) {
+      subtotal += taxesTotal;
+    }
+    subtotal += getCODExtraFee();
     return subtotal;
   }
 
@@ -226,10 +231,10 @@ class CartModelMagento
   Future getCurrency() async {
     try {
       var prefs = await SharedPreferences.getInstance();
-      currency = prefs.getString('currency') ??
-          kAdvanceConfig.defaultCurrency?.currencyDisplay;
+      currencyCode = prefs.getString('currencyCode') ??
+          kAdvanceConfig.defaultCurrency?.currencyCode;
     } catch (e) {
-      currency = kAdvanceConfig.defaultCurrency?.currencyDisplay;
+      currencyCode = kAdvanceConfig.defaultCurrency?.currencyCode;
     }
   }
 
diff --git a/lib/models/cart/cart_model_shopify.dart b/lib/models/cart/cart_model_shopify.dart
index 80037bee..6ff5f4fe 100644
--- a/lib/models/cart/cart_model_shopify.dart
+++ b/lib/models/cart/cart_model_shopify.dart
@@ -45,8 +45,8 @@ class CartModelShopify
             double.parse(productVariationInCart[key]!.price!) *
                 productsInCart[key]!;
       } else {
-        var price =
-            PriceTools.getPriceProductValue(item[key], currency, onSale: true)!;
+        var price = PriceTools.getPriceProductValue(item[key], currencyCode,
+            onSale: true)!;
         if (price.isNotEmpty) {
           return (sum ?? 0) + double.parse(price) * productsInCart[key]!;
         }
@@ -66,7 +66,7 @@ class CartModelShopify
       if (couponObj!.discountType == 'percent') {
         return '-${couponObj!.amount}%';
       } else {
-        return '-${PriceTools.getCurrencyFormatted(couponObj!.amount! * totalCartQuantity, currencyRates, currency: currency)!}';
+        return '-${PriceTools.getCurrencyFormatted(couponObj!.amount! * totalCartQuantity, currencyRates, currency: currencyCode)!}';
       }
     } else {
       return '';
diff --git a/lib/models/cart/cart_model_woo.dart b/lib/models/cart/cart_model_woo.dart
index 591e6a2b..79118aab 100644
--- a/lib/models/cart/cart_model_woo.dart
+++ b/lib/models/cart/cart_model_woo.dart
@@ -3,7 +3,6 @@ import 'package:flutter/material.dart';
 import 'package:shared_preferences/shared_preferences.dart';
 
 import '../../common/config.dart';
-import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../services/index.dart';
 import '../entities/index.dart' show Product, ProductVariation, Tax;
@@ -62,6 +61,8 @@ class CartModelWoo
 
     subtotal -= walletAmount;
 
+    subtotal += getCODExtraFee();
+
     return subtotal;
   }
 
@@ -302,8 +303,10 @@ class CartModelWoo
       if (variation.id != null) {
         key += '-${variation.id}';
       }
-      for (var option in options!.keys) {
-        key += '-$option${options[option]}';
+      if (options != null) {
+        for (var option in options.keys) {
+          key += '-$option${options[option]}';
+        }
       }
     } else if (product.bookingInfo != null) {
       key += '-${product.bookingInfo!.timeStart.toString()}';
@@ -347,7 +350,9 @@ class CartModelWoo
         }
 
         /// Not selected all attributes.
-        if (options!.isNotEmpty && options.values.contains(null)) {
+        if (options != null &&
+            options.isNotEmpty &&
+            options.values.contains(null)) {
           message = S.current.pleaseSelectAllAttributes;
           return message;
         }
@@ -466,7 +471,7 @@ class CartModelWoo
 
   @override
   double? getShippingCost() {
-    var isMultiVendor = kFluxStoreMV.contains(serverConfig['type']);
+    var isMultiVendor = ServerConfig().typeName.isMultiVendor;
     return isMultiVendor ? getShippingVendorCost() : super.getShippingCost();
   }
 
diff --git a/lib/models/cart/mixin/address_mixin.dart b/lib/models/cart/mixin/address_mixin.dart
index 74515cbe..4c8fd970 100644
--- a/lib/models/cart/mixin/address_mixin.dart
+++ b/lib/models/cart/mixin/address_mixin.dart
@@ -23,7 +23,7 @@ mixin AddressMixin on CartMixin {
   }
 
   Future<Address?> getShippingAddress() async {
-    if (Config().isVendorManagerType()) {
+    if (ServerConfig().isVendorManagerType()) {
       return null;
     }
     final storage = injector<LocalStorage>();
diff --git a/lib/models/cart/mixin/cart_mixin.dart b/lib/models/cart/mixin/cart_mixin.dart
index 2070e739..ad9a582e 100644
--- a/lib/models/cart/mixin/cart_mixin.dart
+++ b/lib/models/cart/mixin/cart_mixin.dart
@@ -12,7 +12,7 @@ mixin CartMixin {
   PaymentMethod? paymentMethod;
 
   String? notes;
-  String? currency;
+  String? currencyCode;
   Map<String, dynamic>? currencyRates;
 
   final Map<String?, Product?> item = {};
@@ -43,7 +43,7 @@ mixin CartMixin {
     } else {
       var productId = Product.cleanProductID(id);
 
-      var price = PriceTools.getPriceProductValue(item[productId], currency,
+      var price = PriceTools.getPriceProductValue(item[productId], currencyCode,
           onSale: true);
       if ((price?.isNotEmpty ?? false) && productsInCart[id] != null) {
         return double.parse(price!) * productsInCart[id]!;
@@ -121,11 +121,19 @@ mixin CartMixin {
     item[product.id] = product;
     productsInCart[key] = quantity;
 
-    currency = kAdvanceConfig.defaultCurrency?.currencyCode;
+    currencyCode = kAdvanceConfig.defaultCurrency?.currencyCode;
   }
 
   void setTaxInfo(List<Tax> taxes, double taxesTotal) {
     this.taxes = taxes;
     this.taxesTotal = taxesTotal;
   }
+
+  double getCODExtraFee() {
+    final enabled = (kPaymentConfig.smartCOD?.enabled ?? false) && ((paymentMethod?.id?.contains('cod') ?? false) || (paymentMethod?.id?.contains('cashondelivery') ?? false));
+    final extraFee = kPaymentConfig.smartCOD?.extraFee ?? 0;
+    final amountStop = kPaymentConfig.smartCOD?.amountStop ?? 0;
+    final subtotal = getSubTotal() ?? 0;
+    return (enabled && extraFee > 0 && subtotal < amountStop) && double.tryParse('$extraFee') != null ? double.parse('$extraFee') : 0;
+  }
 }
diff --git a/lib/models/cart/mixin/coupon_mixin.dart b/lib/models/cart/mixin/coupon_mixin.dart
index 781db3cf..71ac721d 100644
--- a/lib/models/cart/mixin/coupon_mixin.dart
+++ b/lib/models/cart/mixin/coupon_mixin.dart
@@ -67,7 +67,7 @@ mixin CouponMixin on CartMixin implements ChangeNotifier {
 
   String getCoupon() {
     if (couponObj != null) {
-      return '-${PriceTools.getCurrencyFormatted(getCouponCost(), currencyRates, currency: currency)}';
+      return '-${PriceTools.getCurrencyFormatted(getCouponCost(), currencyRates, currency: currencyCode)}';
     }
     return '';
   }
diff --git a/lib/models/cart/mixin/currency_mixin.dart b/lib/models/cart/mixin/currency_mixin.dart
index cbf767bc..c368caea 100644
--- a/lib/models/cart/mixin/currency_mixin.dart
+++ b/lib/models/cart/mixin/currency_mixin.dart
@@ -8,39 +8,15 @@ mixin CurrencyMixin on CartMixin {
   Future getCurrency() async {
     try {
       var prefs = injector<SharedPreferences>();
-      currency = prefs.getString('currency') ??
-          kAdvanceConfig.defaultCurrency?.currencyDisplay;
-    } catch (e) {
-      currency = 'USD';
-    }
-  }
-
-  Future getCurrencyString() async {
-    String? currency;
-    try {
-      var prefs = await SharedPreferences.getInstance();
-      currency = prefs.getString('currency') ??
-          kAdvanceConfig.defaultCurrency?.currencyDisplay;
-    } catch (e) {
-      currency = kAdvanceConfig.defaultCurrency?.currencyDisplay;
-    }
-    return currency;
-  }
-
-  Future getCurrencyCode() async {
-    String? currencyCode;
-    try {
-      var prefs = await SharedPreferences.getInstance();
       currencyCode = prefs.getString('currencyCode') ??
           kAdvanceConfig.defaultCurrency?.currencyCode;
     } catch (e) {
-      currencyCode = kAdvanceConfig.defaultCurrency?.currencyCode;
+      currencyCode = 'USD';
     }
-    return currencyCode;
   }
 
   void changeCurrency(value) {
-    currency = value;
+    currencyCode = value;
   }
 
   void changeCurrencyRates(value) {
diff --git a/lib/models/cart/mixin/local_mixin.dart b/lib/models/cart/mixin/local_mixin.dart
index 5b27ea87..8312c8f3 100644
--- a/lib/models/cart/mixin/local_mixin.dart
+++ b/lib/models/cart/mixin/local_mixin.dart
@@ -106,7 +106,7 @@ mixin LocalMixin on CartMixin {
   }
 
   Future<void> getCartInLocal() async {
-    if (Config().isVendorManagerType()) {
+    if (ServerConfig().isVendorManagerType()) {
       return;
     }
     final storage = injector<LocalStorage>();
diff --git a/lib/models/cart/mixin/vendor_mixin.dart b/lib/models/cart/mixin/vendor_mixin.dart
index 26e55c95..0c4f1b4c 100644
--- a/lib/models/cart/mixin/vendor_mixin.dart
+++ b/lib/models/cart/mixin/vendor_mixin.dart
@@ -1,3 +1,4 @@
+import '../../entities/product.dart';
 import 'cart_mixin.dart';
 
 mixin VendorMixin on CartMixin {
@@ -11,7 +12,8 @@ mixin VendorMixin on CartMixin {
     var isValid = true;
     var storeId;
     if (productsInCart.keys.isNotEmpty) {
-      productsInCart.keys.forEach((id) {
+      productsInCart.keys.forEach((key) {
+        var id = Product.cleanProductID(key);
         final product = getProductById(id);
         if (storeId == null) {
           storeId = product?.store?.id;
diff --git a/lib/models/category_model.dart b/lib/models/category_model.dart
index 8c780949..55ec3ba6 100644
--- a/lib/models/category_model.dart
+++ b/lib/models/category_model.dart
@@ -88,14 +88,15 @@ class CategoryModel with ChangeNotifier {
     // Override total product after remap
     for (var category in _categories!) {
       if (category.isRoot) {
-        category = category.copyWith(
-          totalProduct: _categories!
-              .where((element) => element.parent == category.id.toString())
-              .fold(
-                  0,
-                  (previousValue, element) =>
-                      previousValue! + (element.totalProduct ?? 0)),
-        );
+        final totalProduct = _categories!
+            .where((element) => element.parent == category.id.toString())
+            .fold(
+                0,
+                (int previousValue, element) =>
+                    previousValue + (element.totalProduct ?? 0));
+        if (totalProduct > 0) {
+          category = category.copyWith(totalProduct: totalProduct);
+        }
         categoryList[category.id] = category;
       }
     }
diff --git a/lib/models/entities/blog.dart b/lib/models/entities/blog.dart
index 0c257365..b3eee5b2 100644
--- a/lib/models/entities/blog.dart
+++ b/lib/models/entities/blog.dart
@@ -62,7 +62,7 @@ class Blog {
         commentCount = 0;
 
   factory Blog.fromJson(Map<String, dynamic>? json) {
-    switch (Config().type) {
+    switch (ServerConfig().type) {
       case ConfigType.woo:
       case ConfigType.opencart:
       case ConfigType.magento:
@@ -73,21 +73,21 @@ class Blog {
       case ConfigType.mylisting:
       case ConfigType.listeo:
       case ConfigType.listpro:
-        return Blog._fromWooJson(json!);
+        return Blog.fromWooJson(json!);
       case ConfigType.shopify:
-        return Blog._fromShopifyJson(json!);
+        return Blog.fromShopifyJson(json!);
       case ConfigType.strapi:
-        return Blog._fromStrapiJson(json!);
+        return Blog.fromStrapiJson(json!);
       case ConfigType.notion:
-        return Blog._fromNotionJson(json!);
+        return Blog.fromNotionJson(json!);
       case ConfigType.bigCommerce:
-        return Blog._fromBigCommerceJson(json!);
+        return Blog.fromBigCommerceJson(json!);
       default:
         return const Blog.empty(0);
     }
   }
 
-  Blog._fromShopifyJson(Map<String, dynamic> json)
+  Blog.fromShopifyJson(Map<String, dynamic> json)
       : id = json['id'],
         author = json['authorV2']['name'],
         title = json['title'],
@@ -106,14 +106,14 @@ class Blog {
         link = json['url'],
         commentCount = 0;
 
-  factory Blog._fromStrapiJson(Map<String, dynamic> json) {
+  factory Blog.fromStrapiJson(Map<String, dynamic> json) {
     var model = SerializerBlog.fromJson(json);
     final id = model.id;
     final author = model.user?.displayName ?? '';
     final title = model.title ?? '';
     final subTitle = model.subTitle ?? '';
     final content = model.content ?? '';
-    final imageFeature = Config().url! + model.images!.first.url!;
+    final imageFeature = ServerConfig().url + model.images!.first.url!;
     final date = model.date ?? '';
     return Blog(
       author: author,
@@ -126,7 +126,7 @@ class Blog {
     );
   }
 
-  factory Blog._fromWooJson(Map<String, dynamic> json) {
+  factory Blog.fromWooJson(Map<String, dynamic> json) {
     String? imageFeature;
     var imgJson = json['better_featured_image'];
     if (imgJson != null) {
@@ -180,7 +180,7 @@ class Blog {
     );
   }
 
-  factory Blog._fromNotionJson(Map<String, dynamic> json) {
+  factory Blog.fromNotionJson(Map<String, dynamic> json) {
     var img = NotionDataTools.fromFile(json['properties']['Image']);
 
     try {
@@ -227,7 +227,7 @@ class Blog {
     }
   }
 
-  factory Blog._fromBigCommerceJson(Map<String, dynamic> json) {
+  factory Blog.fromBigCommerceJson(Map<String, dynamic> json) {
     try {
       var id = json['id'];
       var title = HtmlUnescape().convert(json['title'] ?? '');
@@ -396,7 +396,7 @@ class Blog {
   static List<String> _parseAudioLink(String content) {
     /// Detect .mp3 URLs in post content.
     final regExp = RegExp(
-      r'(https?|ftp|file):\/\/(www.)?(.*?)\.(mp3|m4a)',
+      r'(https?|ftp|file)://(www.)?(.*?)\.(mp3|m4a)',
       multiLine: true,
       caseSensitive: false,
     );
diff --git a/lib/models/entities/category.dart b/lib/models/entities/category.dart
index 97eccf07..8a0257e8 100644
--- a/lib/models/entities/category.dart
+++ b/lib/models/entities/category.dart
@@ -224,7 +224,7 @@ class Category {
       /// at CMS DashBoard > Settings > Media
       /// Automatically get category image by following common format:
       /// https://customer-site.com/wp-content/uploads/category-{category-id}.jpeg
-      image = '${Config().url}/wp-content/uploads/category-$id.jpeg';
+      image = '${ServerConfig().url}/wp-content/uploads/category-$id.jpeg';
     }
   }
   // final image = parsedJson['image'];
diff --git a/lib/models/entities/coupon.dart b/lib/models/entities/coupon.dart
index f90d4317..b2918a8a 100644
--- a/lib/models/entities/coupon.dart
+++ b/lib/models/entities/coupon.dart
@@ -19,7 +19,7 @@ class Coupons {
     String? couponCode,
   }) async {
     try {
-      final endpoint = '${Config().url}/wp-json/api/flutter_woo/coupon';
+      final endpoint = '${ServerConfig().url}/wp-json/api/flutter_woo/coupon';
       var params = Order().toJson(
           cartModel, cartModel.user != null ? cartModel.user!.id : null, false);
       params['coupon_code'] = couponCode;
@@ -27,7 +27,9 @@ class Coupons {
         endpoint.toUri()!,
         body: json.encode(params),
       );
-
+      if(response.statusCode == 502){
+        return null;
+      }
       final body = json.decode(response.body) ?? {};
       if (response.statusCode == HttpStatus.ok) {
         return Discount.fromJson(body);
diff --git a/lib/models/entities/fstore_notification.dart b/lib/models/entities/fstore_notification.dart
index 14a67bc0..14df11fe 100644
--- a/lib/models/entities/fstore_notification.dart
+++ b/lib/models/entities/fstore_notification.dart
@@ -37,17 +37,9 @@ class FStoreNotification {
   }
 
   Map<String, dynamic> toJson() {
-    final val = <String, dynamic>{};
-
-    void writeNotNull(String key, dynamic value) {
-      if (value != null) {
-        val[key] = value;
-      }
-    }
-
-    writeNotNull('enable', enable);
-    writeNotNull(
-        'listNotification', listNotification.map((e) => e.toJson()).toList());
-    return val;
+    return {
+      'enable': enable,
+      'listNotification': listNotification.map((e) => e.toJson()).toList(),
+    };
   }
 }
diff --git a/lib/models/entities/fstore_notification_item.dart b/lib/models/entities/fstore_notification_item.dart
index b6b947f2..94c55c57 100644
--- a/lib/models/entities/fstore_notification_item.dart
+++ b/lib/models/entities/fstore_notification_item.dart
@@ -26,11 +26,16 @@ class FStoreNotificationItem {
     return timeago.format(date);
   }
 
+  String? get dynamicLink => additionalData?['dynamic_link'];
+
+  String? get image => additionalData?['image'];
+
   factory FStoreNotificationItem.fromJson(Map<String, dynamic> json) {
     return FStoreNotificationItem(
       id: json['id'],
       title: json['title'],
       body: json['body'],
+      additionalData: json['additionalData'],
       date: DateTime.tryParse(json['date']),
     );
   }
diff --git a/lib/models/entities/payment_method.dart b/lib/models/entities/payment_method.dart
index be067410..665f785b 100644
--- a/lib/models/entities/payment_method.dart
+++ b/lib/models/entities/payment_method.dart
@@ -9,6 +9,13 @@ class PaymentMethod {
   String? description;
   bool? enabled;
 
+  PaymentMethod({
+    this.id,
+    this.title,
+    this.description,
+    this.enabled,
+  });
+
   Map<String, dynamic> toJson() {
     return {
       'id': id,
diff --git a/lib/models/entities/product.dart b/lib/models/entities/product.dart
index cf2ae6c4..d2a0d505 100644
--- a/lib/models/entities/product.dart
+++ b/lib/models/entities/product.dart
@@ -321,9 +321,7 @@ class Product {
       status = parsedJson['status'];
       name = HtmlUnescape().convert(parsedJson['name']);
       type = parsedJson['type'];
-      description = isNotBlank(parsedJson['description'])
-          ? parsedJson['description']
-          : parsedJson['short_description'];
+      description = '${parsedJson['description'] ?? ''}';
       shortDescription = parsedJson['short_description'];
       permalink = parsedJson['permalink'];
       price = parsedJson['price'] != null ? parsedJson['price'].toString() : '';
@@ -532,6 +530,17 @@ class Product {
         }
       }
 
+      /// Mapping the product meta data
+      var metaImages = parsedJson['meta_data'].firstWhere(
+        (item) => item['key'] == kProductDetail.productMetaDataKey,
+        orElse: () => null,
+      );
+      if (metaImages != null && metaImages['value'] != null) {
+        for (var item in metaImages['value']) {
+          list.add(item['url']);
+        }
+      }
+
       images = list;
       imageFeature = images.isNotEmpty ? images[0] : null;
 
@@ -640,7 +649,9 @@ class Product {
               addOns = [];
 
               for (var value in values) {
-                if (value['options'] != null) {
+                /// Customer Defined Price (custom_price) doesn't have any options.
+                if (value['options'] != null ||
+                    value['type'] == 'custom_price') {
                   final item = ProductAddons.fromJson(value);
                   if (item.name != null && !addOnNames.contains(item.name)) {
                     defaultAddonsOptions[item.name!] = item.defaultOptions;
@@ -690,8 +701,8 @@ class Product {
       id = parsedJson['product_id'] ?? '0';
       name = HtmlUnescape().convert(parsedJson['name']);
       description = parsedJson['description'];
-      permalink = serverConfig['url'] +
-          '/index.php?route=product/product&product_id=$id';
+      permalink =
+          '${ServerConfig().url}/index.php?route=product/product&product_id=$id';
       regularPrice = parsedJson['price'];
       salePrice = parsedJson['special'];
       price = salePrice ?? regularPrice;
@@ -715,7 +726,7 @@ class Product {
         }
       }
       if (list.isEmpty && parsedJson['image'] != null) {
-        list.add('${Config().url}/image/${parsedJson['image']}');
+        list.add('${ServerConfig().url}/image/${parsedJson['image']}');
       }
       images = list;
       imageFeature = images.isNotEmpty ? images[0] : '';
@@ -750,10 +761,15 @@ class Product {
           json['variants']['edges'][0]['node']['compareAtPriceV2'];
       var compareAtPrice =
           compareAtPriceV2 != null ? compareAtPriceV2['amount'] : null;
-      var categories =
+      var collections =
           json['collections'] != null ? json['collections']['edges'] : null;
       var defaultCategory =
-          (categories?.isNotEmpty ?? false) ? categories[0]['node'] : null;
+          (collections?.isNotEmpty ?? false) ? collections[0]['node'] : null;
+      if (collections is List) {
+        for (var item in collections) {
+          categories.add(Category.fromJsonShopify(item['node']));
+        }
+      }
 
       categoryId = json['categoryId'] ?? (defaultCategory ?? {})['id'];
       id = json['id'];
@@ -767,11 +783,20 @@ class Product {
       type = '';
       salePrice = price;
       stockQuantity = json['totalInventory'];
+      var productTags = json['tags'];
+      if (productTags is List) {
+        for (var item in productTags) {
+          tags.add(Tag(
+            id: item,
+            name: item,
+          ));
+        }
+      }
 
-      inStock = json['availableForSale'];
-      if ((stockQuantity ?? 0) <= 0) {
-        inStock = false;
-        stockQuantity = 0;
+      inStock = json['availableForSale'] ?? false;
+      if ((stockQuantity ?? 0) <= 0 && inStock!) {
+        backordersAllowed = true;
+        stockQuantity = null;
       }
       ratingCount = 0;
       averageRating = 0;
@@ -816,8 +841,9 @@ class Product {
     try {
       id = parsedJson['id'] != null ? parsedJson['id'].toString() : '0';
       var productName = parsedJson['name'];
-      name =
-          (productName is List && productName.isNotEmpty) ? '${productName[0]?['value']}' : '$productName';
+      name = (productName is List && productName.isNotEmpty)
+          ? '${productName[0]?['value']}'
+          : '$productName';
       description =
           parsedJson['description'] is String ? parsedJson['description'] : '';
       var linkRewrite = parsedJson['link_rewrite'];
@@ -1317,7 +1343,7 @@ class Product {
 
   /// Get productID from mix String productID-ProductVariantID+productAddonOptions
   static String cleanProductID(productString) {
-    if (Config().type == ConfigType.notion) {
+    if (ServerConfig().type == ConfigType.notion) {
       return '$productString'.substring(0, NotionDataTools.lengthId);
     }
 
diff --git a/lib/models/entities/product_addons.dart b/lib/models/entities/product_addons.dart
index 9e6029d8..8c2f0edb 100644
--- a/lib/models/entities/product_addons.dart
+++ b/lib/models/entities/product_addons.dart
@@ -32,6 +32,8 @@ class ProductAddons {
 
   bool get isLongTextType => type == 'custom_textarea';
 
+  bool get isCustomPriceType => type == 'custom_price';
+
   bool get isFileUploadType => type == 'file_upload';
 
   ProductAddons.fromJson(Map<String, dynamic> json) {
diff --git a/lib/models/entities/product_attribute.dart b/lib/models/entities/product_attribute.dart
index 007f62ae..8ec6aabd 100644
--- a/lib/models/entities/product_attribute.dart
+++ b/lib/models/entities/product_attribute.dart
@@ -37,7 +37,7 @@ class ProductAttribute {
     label = parsedJson['label'] ?? parsedJson['name']?.replaceAll('pa_', '');
     name = parsedJson['name']?.replaceAll('pa_', '');
 
-    slug = parsedJson['slug'].toString().toLowerCase();
+    slug = parsedJson['slug']?.toString().toLowerCase();
     isVariation = parsedJson['variation'] ?? false;
     isVisible = parsedJson['visible'] ?? false;
     isDefault = parsedJson['default'] ?? false;
diff --git a/lib/models/entities/product_variation.dart b/lib/models/entities/product_variation.dart
index 750abdcb..2ca3abfb 100644
--- a/lib/models/entities/product_variation.dart
+++ b/lib/models/entities/product_variation.dart
@@ -233,7 +233,7 @@ class ProductVariation {
     final imageUrl =
         getCustomAttribute(parsedJson['custom_attributes'], 'image');
     imageFeature = imageUrl != null
-        ? getProductImageUrlByName(Config().url, imageUrl)
+        ? getProductImageUrlByName(ServerConfig().url, imageUrl)
         : product.imageFeature;
 
     var attributeList = <Attribute>[];
@@ -320,15 +320,15 @@ class ProductVariation {
         compareAtPriceV2 != null ? compareAtPriceV2['amount'] : null;
 
     id = parsedJson['id'];
-    price = priceV2 != null ? priceV2['amount'] : null;
-    regularPrice = compareAtPrice ?? price;
-    onSale = compareAtPrice != null && compareAtPrice != price;
-    inStock = parsedJson['availableForSale'];
-    salePrice = price;
+    regularPrice = priceV2 != null ? priceV2['amount'] : null;
+    salePrice = compareAtPrice;
+    price = salePrice ?? regularPrice;
+    onSale = salePrice != null && salePrice != price;
+    inStock = parsedJson['availableForSale'] ?? false;
     stockQuantity = parsedJson['quantityAvailable'];
-    if (stockQuantity == null || stockQuantity! <= 0) {
-      stockQuantity = 0;
-      inStock = false;
+    if (stockQuantity == null || stockQuantity! <= 0 && inStock!) {
+      backordersAllowed = true;
+      stockQuantity = null;
     }
     imageFeature = parsedJson['image']['src'];
 
diff --git a/lib/models/entities/review.dart b/lib/models/entities/review.dart
index 35ea4ab4..8f6cdc05 100644
--- a/lib/models/entities/review.dart
+++ b/lib/models/entities/review.dart
@@ -97,7 +97,7 @@ class Review {
           ? double.parse(parsedJson['rating'].toString())
           : 0.0;
 
-      if (Config().typeName == 'listpro') {
+      if (ServerConfig().typeName == 'listpro') {
         rating = parsedJson['lp_listingpro_options']['rating'] != null &&
                 parsedJson['lp_listingpro_options']['rating']
                     .toString()
diff --git a/lib/models/entities/tag.dart b/lib/models/entities/tag.dart
index fe070b96..d0445e2e 100644
--- a/lib/models/entities/tag.dart
+++ b/lib/models/entities/tag.dart
@@ -3,7 +3,7 @@ import 'dart:convert';
 import '../../common/constants.dart';
 
 class Tag {
-  int? id;
+  String? id;
   String? name;
   String? slug;
   String? description;
@@ -19,7 +19,7 @@ class Tag {
 
   Tag.fromJson(Map<String, dynamic> json) {
     try {
-      id = json['id'];
+      id = json['id']?.toString();
       name = json['name'];
       slug = json['slug'];
       description = json['description'];
diff --git a/lib/models/entities/tax.dart b/lib/models/entities/tax.dart
index 5d2c7ecc..abde5090 100644
--- a/lib/models/entities/tax.dart
+++ b/lib/models/entities/tax.dart
@@ -7,4 +7,9 @@ class Tax {
     title = parsedJson['label'];
     amount = double.parse('${(parsedJson['value'] ?? 0.0)}');
   }
+
+  Tax.fromMagentoJson(Map<String, dynamic> parsedJson, double subtotal) {
+    title = parsedJson['code'];
+    amount = double.parse('${(parsedJson['rate'] ?? 0.0)}') * subtotal / 100;
+  }
 }
diff --git a/lib/models/mixins/language_mixin.dart b/lib/models/mixins/language_mixin.dart
index 09790acb..769051ad 100644
--- a/lib/models/mixins/language_mixin.dart
+++ b/lib/models/mixins/language_mixin.dart
@@ -5,7 +5,7 @@ import '../../services/service_config.dart';
 import '../app_model.dart';
 
 mixin LanguageMixin {
-  String? get langCode => Config().isBuilder
+  String? get langCode => ServerConfig().isBuilder
       ? 'en'
       : Provider.of<AppModel>(App.fluxStoreNavigatorKey.currentContext!,
               listen: false)
diff --git a/lib/models/notification_model.dart b/lib/models/notification_model.dart
index ee04891e..0c8ebefc 100644
--- a/lib/models/notification_model.dart
+++ b/lib/models/notification_model.dart
@@ -53,6 +53,12 @@ class NotificationModel extends ChangeNotifier {
     _saveDataToLocal();
   }
 
+  void removeAllMessages() {
+    _fStoreNotification = _fStoreNotification.copyWith(listNotification: []);
+    notifyListeners();
+    _saveDataToLocal();
+  }
+
   void saveMessage(FStoreNotificationItem item) {
     final notifications = _fStoreNotification.listNotification;
     final isExist = notifications.any((element) => element.id == item.id);
diff --git a/lib/models/order/fee_item.dart b/lib/models/order/fee_item.dart
new file mode 100644
index 00000000..15b5a828
--- /dev/null
+++ b/lib/models/order/fee_item.dart
@@ -0,0 +1,11 @@
+class FeeItem {
+  String? id;
+  String? name;
+  String? total;
+
+  FeeItem.fromJson(Map<String, dynamic> parsedJson) {
+    id = parsedJson['id'].toString();
+    name = parsedJson['name'];
+    total = parsedJson['total'];
+  }
+}
diff --git a/lib/models/order/order.dart b/lib/models/order/order.dart
index 47e579b5..94c7f33d 100644
--- a/lib/models/order/order.dart
+++ b/lib/models/order/order.dart
@@ -11,6 +11,7 @@ import '../../services/index.dart';
 import '../entities/store_delivery_date.dart';
 import '../index.dart';
 import '../serializers/order.dart';
+import 'fee_item.dart';
 import 'user_location.dart';
 
 export 'delivery_status.dart';
@@ -70,6 +71,8 @@ class Order {
   AfterShipTracking? aftershipTracking;
   String? deliveryDate;
   List<StoreDeliveryDate>? storeDeliveryDates;
+  List<FeeItem> feeLines = [];
+  String? currencyCode;
 
   int get totalQuantity {
     var quantity = 0;
@@ -82,7 +85,7 @@ class Order {
   Order({this.id, this.number, this.status, this.createdAt, this.total});
 
   factory Order.fromJson(Map<String, dynamic>? parsedJson) {
-    switch (Config().type) {
+    switch (ServerConfig().type) {
       case ConfigType.opencart:
         return Order._fromOpencartJson(parsedJson!);
       case ConfigType.magento:
@@ -149,6 +152,7 @@ class Order {
       id = parsedJson['id'].toString();
       customerNote = parsedJson['customer_note'];
       number = parsedJson['number'];
+      currencyCode = parsedJson['currency'];
       status = parseOrderStatus(parsedJson['status']);
       createdAt = parsedJson['date_created'] != null
           ? DateTime.parse(parsedJson['date_created'])
@@ -172,6 +176,10 @@ class Order {
         quantity += int.tryParse("${item["quantity"]}") ?? 0;
       });
 
+      parsedJson['fee_lines']?.forEach((item) {
+        feeLines.add(FeeItem.fromJson(item));
+      });
+
       billing = Address.fromJson(parsedJson['billing']);
       shipping = Address.fromJson(parsedJson['shipping']);
       shippingMethodTitle = parsedJson['shipping_lines'] != null &&
@@ -404,10 +412,12 @@ class Order {
           : 0.0;
       paymentMethodTitle = parsedJson['payment']['additional_information'][0];
       shippingMethodTitle = parsedJson['shipping_description'];
-      totalShipping = parsedJson['shipping_amount'] != null
-          ? double.parse("${parsedJson['shipping_amount']}")
+      totalShipping = parsedJson['shipping_incl_tax'] != null
+          ? double.parse("${parsedJson['shipping_incl_tax']}")
+          : 0.0;
+      totalTax = parsedJson['tax_amount'] != null
+          ? double.parse("${parsedJson['tax_amount']}")
           : 0.0;
-      totalTax = 0.0;
       parsedJson['items']?.forEach((item) {
         quantity += int.parse('${item['qty_ordered']}');
         lineItems.add(ProductItem.fromMagentoJson(item));
@@ -588,9 +598,20 @@ class Order {
       var productId = Product.cleanProductID(key);
       var productVariantId = ProductVariation.cleanProductVariantID(key);
 
+      var product = cartModel.item[productId];
+      var itemPrice =
+          cartModel.getProductPrice(key) + cartModel.getProductAddonsPrice(key);
+      itemPrice = PriceTools.getPriceValueByCurrency(
+          itemPrice,
+          cartModel.currencyCode ??
+              kAdvanceConfig.defaultCurrency?.currencyCode ??
+              'USD',
+          cartModel.currencyRates ?? {});
       var item = {
         'product_id': productId,
-        'quantity': cartModel.productsInCart[key]
+        'quantity': cartModel.productsInCart[key],
+        'subtotal': '$itemPrice',
+        'total': '$itemPrice'
       };
 
       var attrNames = <String?>[];
@@ -605,18 +626,18 @@ class Order {
         }
       }
 
-      var product = cartModel.item[productId];
       if (cartModel.productsMetaDataInCart[key] != null) {
         var metaData = <Map<String, dynamic>>[];
         cartModel.productsMetaDataInCart[key].forEach((k, v) {
           if (!attrNames.contains(k)) {
             for (var element in product!.attributes!) {
-              if (element.name == k) {
+              if (element.name?.toLowerCase() == k.toString().toLowerCase()) {
                 Map<String, dynamic>? option = element.options!
                     .firstWhere((e) => e['name'] == v, orElse: () => null);
                 if (option != null) {
                   metaData.add({
-                    'key': 'attribute_${element.slug}',
+                    'key':
+                        'attribute_${element.slug ?? option['taxonomy'] ?? element.name}',
                     'value': option['slug'] ?? option['name']
                   });
                 }
@@ -660,7 +681,7 @@ class Order {
 
           final price = PriceTools.getCurrencyFormatted(
               option.price ?? 0.0, cartModel.currencyRates,
-              currency: cartModel.currency);
+              currency: cartModel.currencyCode);
           metaData.add({
             'key':
                 "${option.parent}${(option.price?.isNotEmpty ?? false) ? ' ($price)' : ''}",
@@ -689,7 +710,7 @@ class Order {
       'set_paid': paid,
       'line_items': lineItems,
       'customer_id': userId,
-      'currency': cartModel.currency
+      'currency': cartModel.currencyCode?.toUpperCase(),
     };
     try {
       if (cartModel.paymentMethod != null) {
@@ -718,7 +739,7 @@ class Order {
 
       if (kPaymentConfig.enableAddress && cartModel.address != null) {
         params['billing'] = cartModel.address!.toJson();
-        if (Config().type == ConfigType.wcfm) {
+        if (ServerConfig().type == ConfigType.wcfm) {
           params['shipping'] = cartModel.address!.toWCFMJson();
         } else {
           params['shipping'] = cartModel.address!.toJson();
@@ -727,27 +748,39 @@ class Order {
         params['shipping'].removeWhere((key, value) => value == null);
       }
 
-      var isMultiVendor = kFluxStoreMV.contains(serverConfig['type']);
+      var isMultiVendor = ServerConfig().typeName.isMultiVendor;
       if (isMultiVendor) {
         if (kPaymentConfig.enableShipping &&
             cartModel.selectedShippingMethods.isNotEmpty) {
           var shippings = <Map<String, dynamic>>[];
           for (var element in cartModel.selectedShippingMethods) {
+            final shippingFee = PriceTools.getPriceValueByCurrency(
+                element.shippingMethods[0].cost,
+                cartModel.currencyCode ??
+                    kAdvanceConfig.defaultCurrency?.currencyCode ??
+                    'USD',
+                cartModel.currencyRates ?? {});
             shippings.add({
               'method_id': '${element.shippingMethods[0].id}',
               'method_title': element.shippingMethods[0].title,
-              'total': '${element.shippingMethods[0].cost}'
+              'total': '$shippingFee'
             });
           }
           params['shipping_lines'] = shippings;
         }
       } else {
         if (kPaymentConfig.enableShipping && cartModel.shippingMethod != null) {
+          final shippingFee = PriceTools.getPriceValueByCurrency(
+              cartModel.getShippingCost(),
+              cartModel.currencyCode ??
+                  kAdvanceConfig.defaultCurrency?.currencyCode ??
+                  'USD',
+              cartModel.currencyRates ?? {});
           params['shipping_lines'] = [
             {
               'method_id': cartModel.shippingMethod!.id,
               'method_title': cartModel.shippingMethod!.title,
-              'total': cartModel.getShippingCost().toString()
+              'total': shippingFee.toString()
             }
           ];
         }
@@ -774,6 +807,16 @@ class Order {
         ];
         params['total'] = cartModel.getTotal();
       }
+      if (cartModel.getCODExtraFee() > 0) {
+        params['fee_lines'] = [
+          {
+            'name': 'COD Extra Fee',
+            'tax_status': 'taxable',
+            'total': '${cartModel.getCODExtraFee()}',
+            'amount': '${cartModel.getCODExtraFee()}'
+          }
+        ];
+      }
       if (cartModel.couponObj != null) {
         params['coupon_lines'] = [
           {'code': cartModel.couponObj!.code}
@@ -982,7 +1025,7 @@ class Order {
       'SetPaid': NotionDataTools.toCheckBox(paid),
       'Number': NotionDataTools.toNumber(idNotionOrder),
       'DiscountTotal': NotionDataTools.toNumber(discountTotal),
-      'Currency': NotionDataTools.toRichText('${cartModel.currency}'),
+      'Currency': NotionDataTools.toRichText('${cartModel.currencyCode}'),
       'ShippingTotal':
           NotionDataTools.toNumber(cartModel.shippingMethod?.cost ?? 0),
       'CreatedAt': NotionDataTools.toDate(DateTime.now()),
diff --git a/lib/models/order/product_item.dart b/lib/models/order/product_item.dart
index 29c32b57..b951f5e8 100644
--- a/lib/models/order/product_item.dart
+++ b/lib/models/order/product_item.dart
@@ -1,6 +1,6 @@
-import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
+import '../../services/service_config.dart';
 import '../entities/delivery_user.dart';
 import '../index.dart';
 import '../serializers/product.dart';
@@ -44,7 +44,7 @@ class ProductItem {
         try {
           product = Product.fromJson(productData);
           if (productData['store'] != null) {
-            switch (serverConfig['type']) {
+            switch (ServerConfig().typeName) {
               case 'wcfm':
                 product?.store = Store.fromWCFMJson(productData['store']);
                 break;
diff --git a/lib/models/payment_method_model.dart b/lib/models/payment_method_model.dart
index 387ec9ab..b3dfb9f0 100644
--- a/lib/models/payment_method_model.dart
+++ b/lib/models/payment_method_model.dart
@@ -1,13 +1,19 @@
 import 'package:flutter/material.dart';
 
+import '../common/config.dart';
+import '../common/constants.dart';
 import '../models/cart/cart_model.dart';
 import '../services/index.dart';
 import 'entities/payment_method.dart';
 import 'entities/shipping_method.dart';
 
+const kStripeApplePayMethod = 'stripe_v2_apple_pay';
+const kStripeGooglePayMethod = 'stripe_v2_google_pay';
+
 class PaymentMethodModel extends ChangeNotifier {
   final Services _service = Services();
-  late List<PaymentMethod> paymentMethods;
+  List<PaymentMethod> paymentMethods = [];
+
   bool isLoading = true;
   String? message;
 
@@ -22,6 +28,35 @@ class PaymentMethodModel extends ChangeNotifier {
           shippingMethod: shippingMethod,
           token: token,
           langCode: langCode)!;
+
+      final shouldShowApplePay = isIos &&
+          kStripeConfig['enabled'] == true &&
+          kStripeConfig['useV1'] != true &&
+          kStripeConfig['enableApplePay'] == true &&
+          ServerConfig().isPayPluginSupported;
+      if (shouldShowApplePay) {
+        paymentMethods.add(PaymentMethod(
+          id: kStripeApplePayMethod,
+          title: 'Apple Pay',
+          enabled: true,
+        ));
+      }
+
+      final shouldShowGooglePay = isAndroid &&
+          kStripeConfig['enabled'] == true &&
+          kStripeConfig['useV1'] != true &&
+          kStripeConfig['enableGooglePay'] == true &&
+          ServerConfig().isPayPluginSupported;
+      if (shouldShowGooglePay) {
+        paymentMethods.add(
+          PaymentMethod(
+            id: kStripeGooglePayMethod,
+            title: 'Google Pay',
+            enabled: true,
+          ),
+        );
+      }
+
       isLoading = false;
       message = null;
       notifyListeners();
diff --git a/lib/models/product_model.dart b/lib/models/product_model.dart
index 7cda5429..12f1e49a 100644
--- a/lib/models/product_model.dart
+++ b/lib/models/product_model.dart
@@ -2,6 +2,7 @@ import 'dart:async';
 import 'dart:convert';
 import 'dart:io' show File;
 
+import 'package:async/async.dart';
 import 'package:collection/collection.dart';
 import 'package:flutter/material.dart';
 import 'package:localstorage/localstorage.dart';
@@ -35,6 +36,8 @@ class ProductModel with ChangeNotifier {
   String? errMsg;
   bool? isEnd;
 
+  List<Product>? recentSearch;
+
   List<ProductVariation> variations = [];
   List<String> variationsFeatureImages = [];
   ProductVariation? selectedVariation;
@@ -45,6 +48,8 @@ class ProductModel with ChangeNotifier {
 
   bool get isLoading => _isLoading;
 
+  CancelableOperation? _cancelLoadProduct;
+
   void clearProductVariations() {
     variations.clear();
     variationsFeatureImages = [];
@@ -163,6 +168,12 @@ class ProductModel with ChangeNotifier {
       List? include,
       String? search}) async {
     try {
+      if (isFetching) {
+        await _cancelLoadProduct?.cancel();
+      }
+
+      isFetching = true;
+
       if (categoryId != null) {
         this.categoryId = categoryId;
       }
@@ -172,11 +183,10 @@ class ProductModel with ChangeNotifier {
       if (listingLocation != null) {
         listingLocationId = listingLocation;
       }
-      isFetching = true;
       isEnd = false;
       notifyListeners();
       String? cursor;
-      if (Config().isNotion && (productsList?.isNotEmpty ?? false)) {
+      if (ServerConfig().isNotion && (productsList?.isNotEmpty ?? false)) {
         if (page == 1) {
           cursor = null;
         } else {
@@ -184,7 +194,8 @@ class ProductModel with ChangeNotifier {
         }
       }
 
-      final products = await _service.api.fetchProductsByCategory(
+      _cancelLoadProduct =
+          CancelableOperation.fromFuture(_service.api.fetchProductsByCategory(
         categoryId: categoryId,
         tagId: tagId,
         minPrice: minPrice,
@@ -202,7 +213,9 @@ class ProductModel with ChangeNotifier {
         nextCursor: cursor,
         include: include?.join(','),
         search: search,
-      );
+      ));
+
+      final products = await _cancelLoadProduct!.value;
 
       isEnd = products!.isEmpty || products.length < apiPageSize;
 
@@ -212,6 +225,10 @@ class ProductModel with ChangeNotifier {
         productsList = [...productsList!, ...products];
       }
 
+      if (search?.isNotEmpty ?? false) {
+        recentSearch = productsList;
+      }
+
       isFetching = false;
       errMsg = null;
 
@@ -227,8 +244,10 @@ class ProductModel with ChangeNotifier {
   }
 
   void setProductsList(List<Product> products, {bool notify = true}) {
+    if (products.isNotEmpty) {
+      isFetching = false;
+    }
     productsList = products;
-    isFetching = false;
     isEnd = false;
     if (notify) notifyListeners();
   }
@@ -326,11 +345,13 @@ class ProductModel with ChangeNotifier {
     var list = <Product>[];
     if (response != null) {
       var products = [];
+
       /// sort include product
       var include = config['include'];
       if (include != null && include is List) {
-        for(var productID in include) {
-          var item = (response as List).firstWhereOrNull((element) => element['id'].toString() == productID.toString());
+        for (var productID in include) {
+          var item = (response as List).firstWhereOrNull(
+              (element) => element['id'].toString() == productID.toString());
           if (item != null) {
             products.add(item);
           }
diff --git a/lib/models/search_model.dart b/lib/models/search_model.dart
index fbb5630f..f8dfec5b 100644
--- a/lib/models/search_model.dart
+++ b/lib/models/search_model.dart
@@ -52,7 +52,7 @@ class SearchModel extends ChangeNotifier with LanguageMixin {
   List<Product>? get products => _products;
 
   void _initPage() {
-    if (!Config().isShopify) {
+    if (!ServerConfig().isShopify) {
       _page = 1;
       return;
     }
@@ -60,7 +60,7 @@ class SearchModel extends ChangeNotifier with LanguageMixin {
   }
 
   void _updatePage() {
-    if (!Config().isShopify && _page != null) {
+    if (!ServerConfig().isShopify && _page != null) {
       _page++;
     }
   }
diff --git a/lib/models/user_model.dart b/lib/models/user_model.dart
index 210104a2..5730c9f9 100644
--- a/lib/models/user_model.dart
+++ b/lib/models/user_model.dart
@@ -158,7 +158,7 @@ class UserModel with ChangeNotifier {
   Future<void> saveUser(User? user) async {
     try {
       if (Services().firebase.isEnabled &&
-          kFluxStoreMV.contains(serverConfig['type'])) {
+          ServerConfig().typeName.isMultiVendor) {
         Services().firebase.saveUserToFirestore(user: user);
       }
 
diff --git a/lib/models/vendor/vendor_shipping_model.dart b/lib/models/vendor/vendor_shipping_model.dart
index 143c011b..80fa80a5 100644
--- a/lib/models/vendor/vendor_shipping_model.dart
+++ b/lib/models/vendor/vendor_shipping_model.dart
@@ -20,7 +20,7 @@ class VendorShippingMethodModel extends ChangeNotifier {
   List<OrderDeliveryDate>? get deliveryDates => _deliveryDates;
 
   Future<void> getShippingMethods(
-      {CartModel? cartModel, required List<Store?> stores}) async {
+      {CartModel? cartModel, required List<Store?> stores, String? langCode}) async {
     try {
       isLoading = true;
       list = [];
@@ -28,13 +28,13 @@ class VendorShippingMethodModel extends ChangeNotifier {
       for (var i = 0; i < stores.length; i++) {
         final store = stores[i];
         var items = await _service.api
-            .getShippingMethods(cartModel: cartModel, store: store)!;
+            .getShippingMethods(cartModel: cartModel, store: store, langCode: langCode)!;
         if (items.isNotEmpty) {
           list.add(VendorShippingMethod(store, items));
         }
       }
       if ((kAdvanceConfig.enableDeliveryDateOnCheckout) &&
-          serverConfig['type'] == 'wcfm') {
+          ServerConfig().typeName.isWcfm) {
         for (var i = 0; i < stores.length; i++) {
           final store = stores[i];
           if (store != null) {
diff --git a/lib/modules/audio/views/widgets/open_container.dart b/lib/modules/audio/views/widgets/open_container.dart
deleted file mode 100644
index a1d300e2..00000000
--- a/lib/modules/audio/views/widgets/open_container.dart
+++ /dev/null
@@ -1,867 +0,0 @@
-// Copyright 2013 The Flutter Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-import 'package:flutter/material.dart';
-import 'package:flutter/scheduler.dart';
-
-/// Signature for `action` callback function provided to [OpenContainer.openBuilder].
-///
-/// Parameter `returnValue` is the value which will be provided to [OpenContainer.onClosed]
-/// when `action` is called.
-typedef CloseContainerActionCallback<S> = void Function({S? returnValue});
-
-/// Signature for a function that creates a [Widget] in open state within an
-/// [OpenContainer].
-///
-/// The `action` callback provided to [OpenContainer.openBuilder] can be used
-/// to close the container.
-typedef OpenContainerBuilder<S> = Widget Function(
-  BuildContext context,
-  CloseContainerActionCallback<S> action,
-);
-
-/// Signature for a function that creates a [Widget] in closed state within an
-/// [OpenContainer].
-///
-/// The `action` callback provided to [OpenContainer.closedBuilder] can be used
-/// to open the container.
-typedef CloseContainerBuilder = Widget Function(
-  BuildContext context,
-  VoidCallback action,
-);
-
-/// The [OpenContainer] widget's fade transition type.
-///
-/// This determines the type of fade transition that the incoming and outgoing
-/// contents will use.
-enum ContainerTransitionType {
-  /// Fades the incoming element in over the outgoing element.
-  fade,
-
-  /// First fades the outgoing element out, and starts fading the incoming
-  /// element in once the outgoing element has completely faded out.
-  fadeThrough,
-}
-
-/// Callback function which is called when the [OpenContainer]
-/// is closed.
-typedef ClosedCallback<S> = void Function(S data);
-
-@optionalTypeArgs
-class OpenContainer<T extends Object?> extends StatefulWidget {
-  /// Creates an [OpenContainer].
-  ///
-  /// All arguments except for [key] must not be null. The arguments
-  /// [openBuilder] and [closedBuilder] are required.
-  const OpenContainer({
-    Key? key,
-    this.closedColor = Colors.white,
-    this.openColor = Colors.white,
-    this.middleColor,
-    this.closedElevation = 1.0,
-    this.openElevation = 4.0,
-    this.closedShape = const RoundedRectangleBorder(
-      borderRadius: BorderRadius.all(Radius.circular(4.0)),
-    ),
-    this.openShape = const RoundedRectangleBorder(),
-    this.onClosed,
-    required this.closedBuilder,
-    required this.openBuilder,
-    this.tappable = true,
-    this.transitionDuration = const Duration(milliseconds: 300),
-    this.transitionType = ContainerTransitionType.fade,
-    this.useRootNavigator = false,
-    this.routeSettings,
-    this.clipBehavior = Clip.antiAlias,
-  }) : super(key: key);
-
-  /// Background color of the container while it is closed.
-  ///
-  /// When the container is opened, it will first transition from this color
-  /// to [middleColor] and then transition from there to [openColor] in one
-  /// smooth animation. When the container is closed, it will transition back to
-  /// this color from [openColor] via [middleColor].
-  ///
-  /// Defaults to [Colors.white].
-  ///
-  /// See also:
-  ///
-  ///  * [Material.color], which is used to implement this property.
-  final Color closedColor;
-
-  /// Background color of the container while it is open.
-  ///
-  /// When the container is closed, it will first transition from [closedColor]
-  /// to [middleColor] and then transition from there to this color in one
-  /// smooth animation. When the container is closed, it will transition back to
-  /// [closedColor] from this color via [middleColor].
-  ///
-  /// Defaults to [Colors.white].
-  ///
-  /// See also:
-  ///
-  ///  * [Material.color], which is used to implement this property.
-  final Color openColor;
-
-  /// The color to use for the background color during the transition
-  /// with [ContainerTransitionType.fadeThrough].
-  ///
-  /// Defaults to [Theme]'s [ThemeData.canvasColor].
-  ///
-  /// See also:
-  ///
-  ///  * [Material.color], which is used to implement this property.
-  final Color? middleColor;
-
-  /// Elevation of the container while it is closed.
-  ///
-  /// When the container is opened, it will transition from this elevation to
-  /// [openElevation]. When the container is closed, it will transition back
-  /// from [openElevation] to this elevation.
-  ///
-  /// Defaults to 1.0.
-  ///
-  /// See also:
-  ///
-  ///  * [Material.elevation], which is used to implement this property.
-  final double closedElevation;
-
-  /// Elevation of the container while it is open.
-  ///
-  /// When the container is opened, it will transition to this elevation from
-  /// [closedElevation]. When the container is closed, it will transition back
-  /// from this elevation to [closedElevation].
-  ///
-  /// Defaults to 4.0.
-  ///
-  /// See also:
-  ///
-  ///  * [Material.elevation], which is used to implement this property.
-  final double openElevation;
-
-  /// Shape of the container while it is closed.
-  ///
-  /// When the container is opened it will transition from this shape to
-  /// [openShape]. When the container is closed, it will transition back to this
-  /// shape.
-  ///
-  /// Defaults to a [RoundedRectangleBorder] with a [Radius.circular] of 4.0.
-  ///
-  /// See also:
-  ///
-  ///  * [Material.shape], which is used to implement this property.
-  final ShapeBorder closedShape;
-
-  /// Shape of the container while it is open.
-  ///
-  /// When the container is opened it will transition from [closedShape] to
-  /// this shape. When the container is closed, it will transition from this
-  /// shape back to [closedShape].
-  ///
-  /// Defaults to a rectangular.
-  ///
-  /// See also:
-  ///
-  ///  * [Material.shape], which is used to implement this property.
-  final ShapeBorder openShape;
-
-  /// Called when the container was popped and has returned to the closed state.
-  ///
-  /// The return value from the popped screen is passed to this function as an
-  /// argument.
-  ///
-  /// If no value is returned via [Navigator.pop] or [OpenContainer.openBuilder.action],
-  /// `null` will be returned by default.
-  final ClosedCallback<T?>? onClosed;
-
-  /// Called to obtain the child for the container in the closed state.
-  ///
-  /// The [Widget] returned by this builder is faded out when the container
-  /// opens and at the same time the widget returned by [openBuilder] is faded
-  /// in while the container grows to fill the surrounding [Navigator].
-  ///
-  /// The `action` callback provided to the builder can be called to open the
-  /// container.
-  final CloseContainerBuilder closedBuilder;
-
-  /// Called to obtain the child for the container in the open state.
-  ///
-  /// The [Widget] returned by this builder is faded in when the container
-  /// opens and at the same time the widget returned by [closedBuilder] is
-  /// faded out while the container grows to fill the surrounding [Navigator].
-  ///
-  /// The `action` callback provided to the builder can be called to close the
-  /// container.
-  final OpenContainerBuilder<T> openBuilder;
-
-  /// Whether the entire closed container can be tapped to open it.
-  ///
-  /// Defaults to true.
-  ///
-  /// When this is set to false the container can only be opened by calling the
-  /// `action` callback that is provided to the [closedBuilder].
-  final bool tappable;
-
-  /// The time it will take to animate the container from its closed to its
-  /// open state and vice versa.
-  ///
-  /// Defaults to 300ms.
-  final Duration transitionDuration;
-
-  /// The type of fade transition that the container will use for its
-  /// incoming and outgoing widgets.
-  ///
-  /// Defaults to [ContainerTransitionType.fade].
-  final ContainerTransitionType transitionType;
-
-  /// The [useRootNavigator] argument is used to determine whether to push the
-  /// route for [openBuilder] to the Navigator furthest from or nearest to
-  /// the given context.
-  ///
-  /// By default, [useRootNavigator] is false and the route created will push
-  /// to the nearest navigator.
-  final bool useRootNavigator;
-
-  /// Provides additional data to the [openBuilder] route pushed by the Navigator.
-  final RouteSettings? routeSettings;
-
-  /// The [closedBuilder] will be clipped (or not) according to this option.
-  ///
-  /// Defaults to [Clip.antiAlias], and must not be null.
-  ///
-  /// See also:
-  ///
-  ///  * [Material.clipBehavior], which is used to implement this property.
-  final Clip clipBehavior;
-
-  @override
-  OpenContainerState<T> createState() => OpenContainerState<T>();
-}
-
-class OpenContainerState<T> extends State<OpenContainer<T?>> {
-  // Key used in [_OpenContainerRoute] to hide the widget returned by
-  // [OpenContainer.openBuilder] in the source route while the container is
-  // opening/open. A copy of that widget is included in the
-  // [_OpenContainerRoute] where it fades out. To avoid issues with double
-  // shadows and transparency, we hide it in the source route.
-  final GlobalKey<_HideableState> _hideableKey = GlobalKey<_HideableState>();
-
-  // Key used to steal the state of the widget returned by
-  // [OpenContainer.openBuilder] from the source route and attach it to the
-  // same widget included in the [_OpenContainerRoute] where it fades out.
-  final GlobalKey _closedBuilderKey = GlobalKey();
-
-  Future<void> openContainer() async {
-    final middleColor = widget.middleColor ?? Theme.of(context).canvasColor;
-    final data = await Navigator.of(
-      context,
-      rootNavigator: widget.useRootNavigator,
-    ).push(_OpenContainerRoute<T>(
-      closedColor: widget.closedColor,
-      openColor: widget.openColor,
-      middleColor: middleColor,
-      closedElevation: widget.closedElevation,
-      openElevation: widget.openElevation,
-      closedShape: widget.closedShape,
-      openShape: widget.openShape,
-      closedBuilder: widget.closedBuilder,
-      openBuilder: widget.openBuilder,
-      hideableKey: _hideableKey,
-      closedBuilderKey: _closedBuilderKey,
-      transitionDuration: widget.transitionDuration,
-      transitionType: widget.transitionType,
-      useRootNavigator: widget.useRootNavigator,
-      routeSettings: widget.routeSettings,
-    ));
-    if (widget.onClosed != null) {
-      widget.onClosed!(data);
-    }
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    return _Hideable(
-      key: _hideableKey,
-      child: GestureDetector(
-        onTap: widget.tappable ? openContainer : null,
-        child: Material(
-          clipBehavior: widget.clipBehavior,
-          color: widget.closedColor,
-          elevation: widget.closedElevation,
-          shape: widget.closedShape,
-          child: Builder(
-            key: _closedBuilderKey,
-            builder: (BuildContext context) {
-              return widget.closedBuilder(context, openContainer);
-            },
-          ),
-        ),
-      ),
-    );
-  }
-}
-
-class _Hideable extends StatefulWidget {
-  const _Hideable({
-    Key? key,
-    required this.child,
-  }) : super(key: key);
-
-  final Widget child;
-
-  @override
-  State<_Hideable> createState() => _HideableState();
-}
-
-class _HideableState extends State<_Hideable> {
-  /// When non-null the child is replaced by a [SizedBox] of the set size.
-  Size? get placeholderSize => _placeholderSize;
-  Size? _placeholderSize;
-  set placeholderSize(Size? value) {
-    if (_placeholderSize == value) {
-      return;
-    }
-    setState(() {
-      _placeholderSize = value;
-    });
-  }
-
-  /// When true the child is not visible, but will maintain its size.
-  ///
-  /// The value of this property is ignored when [placeholderSize] is non-null
-  /// (i.e. [isInTree] returns false).
-  bool get isVisible => _visible;
-  bool _visible = true;
-  set isVisible(bool value) {
-    if (_visible == value) {
-      return;
-    }
-    setState(() {
-      _visible = value;
-    });
-  }
-
-  /// Whether the child is currently included in the tree.
-  ///
-  /// When it is included, it may be visible or not according to [isVisible].
-  bool get isInTree => _placeholderSize == null;
-
-  @override
-  Widget build(BuildContext context) {
-    if (_placeholderSize != null) {
-      return SizedBox.fromSize(size: _placeholderSize);
-    }
-    return Opacity(
-      opacity: _visible ? 1.0 : 0.0,
-      child: widget.child,
-    );
-  }
-}
-
-class _OpenContainerRoute<T> extends ModalRoute<T> {
-  _OpenContainerRoute({
-    required this.closedColor,
-    required this.openColor,
-    required this.middleColor,
-    required double closedElevation,
-    required this.openElevation,
-    required ShapeBorder closedShape,
-    required this.openShape,
-    required this.closedBuilder,
-    required this.openBuilder,
-    required this.hideableKey,
-    required this.closedBuilderKey,
-    required this.transitionDuration,
-    required this.transitionType,
-    required this.useRootNavigator,
-    required RouteSettings? routeSettings,
-  })  : _elevationTween = Tween<double>(
-          begin: closedElevation,
-          end: openElevation,
-        ),
-        _shapeTween = ShapeBorderTween(
-          begin: closedShape,
-          end: openShape,
-        ),
-        _colorTween = _getColorTween(
-          transitionType: transitionType,
-          closedColor: closedColor,
-          openColor: openColor,
-          middleColor: middleColor,
-        ),
-        _closedOpacityTween = _getClosedOpacityTween(transitionType),
-        _openOpacityTween = _getOpenOpacityTween(transitionType),
-        super(settings: routeSettings);
-
-  static _FlippableTweenSequence<Color?> _getColorTween({
-    required ContainerTransitionType transitionType,
-    required Color closedColor,
-    required Color openColor,
-    required Color middleColor,
-  }) {
-    switch (transitionType) {
-      case ContainerTransitionType.fade:
-        return _FlippableTweenSequence<Color?>(
-          <TweenSequenceItem<Color?>>[
-            TweenSequenceItem<Color>(
-              tween: ConstantTween<Color>(closedColor),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<Color?>(
-              tween: ColorTween(begin: closedColor, end: openColor),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<Color>(
-              tween: ConstantTween<Color>(openColor),
-              weight: 3 / 5,
-            ),
-          ],
-        );
-      case ContainerTransitionType.fadeThrough:
-        return _FlippableTweenSequence<Color?>(
-          <TweenSequenceItem<Color?>>[
-            TweenSequenceItem<Color?>(
-              tween: ColorTween(begin: closedColor, end: middleColor),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<Color?>(
-              tween: ColorTween(begin: middleColor, end: openColor),
-              weight: 4 / 5,
-            ),
-          ],
-        );
-    }
-  }
-
-  static _FlippableTweenSequence<double> _getClosedOpacityTween(
-      ContainerTransitionType transitionType) {
-    switch (transitionType) {
-      case ContainerTransitionType.fade:
-        return _FlippableTweenSequence<double>(
-          <TweenSequenceItem<double>>[
-            TweenSequenceItem<double>(
-              tween: ConstantTween<double>(1.0),
-              weight: 1,
-            ),
-          ],
-        );
-      case ContainerTransitionType.fadeThrough:
-        return _FlippableTweenSequence<double>(
-          <TweenSequenceItem<double>>[
-            TweenSequenceItem<double>(
-              tween: Tween<double>(begin: 1.0, end: 0.0),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<double>(
-              tween: ConstantTween<double>(0.0),
-              weight: 4 / 5,
-            ),
-          ],
-        );
-    }
-  }
-
-  static _FlippableTweenSequence<double> _getOpenOpacityTween(
-      ContainerTransitionType transitionType) {
-    switch (transitionType) {
-      case ContainerTransitionType.fade:
-        return _FlippableTweenSequence<double>(
-          <TweenSequenceItem<double>>[
-            TweenSequenceItem<double>(
-              tween: ConstantTween<double>(0.0),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<double>(
-              tween: Tween<double>(begin: 0.0, end: 1.0),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<double>(
-              tween: ConstantTween<double>(1.0),
-              weight: 3 / 5,
-            ),
-          ],
-        );
-      case ContainerTransitionType.fadeThrough:
-        return _FlippableTweenSequence<double>(
-          <TweenSequenceItem<double>>[
-            TweenSequenceItem<double>(
-              tween: ConstantTween<double>(0.0),
-              weight: 1 / 5,
-            ),
-            TweenSequenceItem<double>(
-              tween: Tween<double>(begin: 0.0, end: 1.0),
-              weight: 4 / 5,
-            ),
-          ],
-        );
-    }
-  }
-
-  final Color closedColor;
-  final Color openColor;
-  final Color middleColor;
-  final double openElevation;
-  final ShapeBorder openShape;
-  final CloseContainerBuilder closedBuilder;
-  final OpenContainerBuilder<T> openBuilder;
-
-  // See [_OpenContainerState._hideableKey].
-  final GlobalKey<_HideableState> hideableKey;
-
-  // See [_OpenContainerState._closedBuilderKey].
-  final GlobalKey closedBuilderKey;
-
-  @override
-  final Duration transitionDuration;
-  final ContainerTransitionType transitionType;
-
-  final bool useRootNavigator;
-
-  final Tween<double> _elevationTween;
-  final ShapeBorderTween _shapeTween;
-  final _FlippableTweenSequence<double> _closedOpacityTween;
-  final _FlippableTweenSequence<double> _openOpacityTween;
-  final _FlippableTweenSequence<Color?> _colorTween;
-
-  static final TweenSequence<Color?> _scrimFadeInTween = TweenSequence<Color?>(
-    <TweenSequenceItem<Color?>>[
-      TweenSequenceItem<Color?>(
-        tween: ColorTween(begin: Colors.transparent, end: Colors.black54),
-        weight: 1 / 5,
-      ),
-      TweenSequenceItem<Color>(
-        tween: ConstantTween<Color>(Colors.black54),
-        weight: 4 / 5,
-      ),
-    ],
-  );
-  static final Tween<Color?> _scrimFadeOutTween = ColorTween(
-    begin: Colors.transparent,
-    end: Colors.black54,
-  );
-
-  // Key used for the widget returned by [OpenContainer.openBuilder] to keep
-  // its state when the shape of the widget tree is changed at the end of the
-  // animation to remove all the craft that was necessary to make the animation
-  // work.
-  final GlobalKey _openBuilderKey = GlobalKey();
-
-  // Defines the position and the size of the (opening) [OpenContainer] within
-  // the bounds of the enclosing [Navigator].
-  final RectTween _rectTween = RectTween();
-
-  AnimationStatus? _lastAnimationStatus;
-  AnimationStatus? _currentAnimationStatus;
-
-  @override
-  TickerFuture didPush() {
-    _takeMeasurements(navigatorContext: hideableKey.currentContext!);
-
-    animation!.addStatusListener((AnimationStatus status) {
-      _lastAnimationStatus = _currentAnimationStatus;
-      _currentAnimationStatus = status;
-      switch (status) {
-        case AnimationStatus.dismissed:
-          _toggleHideable(hide: false);
-          break;
-        case AnimationStatus.completed:
-          _toggleHideable(hide: true);
-          break;
-        case AnimationStatus.forward:
-        case AnimationStatus.reverse:
-          break;
-      }
-    });
-
-    return super.didPush();
-  }
-
-  @override
-  bool didPop(T? result) {
-    _takeMeasurements(
-      navigatorContext: subtreeContext!,
-      delayForSourceRoute: true,
-    );
-    return super.didPop(result);
-  }
-
-  @override
-  void dispose() {
-    if (hideableKey.currentState?.isVisible == false) {
-      // This route may be disposed without dismissing its animation if it is
-      // removed by the navigator.
-      _ambiguate(SchedulerBinding.instance)!
-          .addPostFrameCallback((Duration d) => _toggleHideable(hide: false));
-    }
-    super.dispose();
-  }
-
-  void _toggleHideable({required bool hide}) {
-    if (hideableKey.currentState != null) {
-      hideableKey.currentState!
-        ..placeholderSize = null
-        ..isVisible = !hide;
-    }
-  }
-
-  void _takeMeasurements({
-    required BuildContext navigatorContext,
-    bool delayForSourceRoute = false,
-  }) {
-    final navigator = Navigator.of(
-      navigatorContext,
-      rootNavigator: useRootNavigator,
-    ).context.findRenderObject()! as RenderBox;
-    final navSize = _getSize(navigator);
-    _rectTween.end = Offset.zero & navSize;
-
-    void takeMeasurementsInSourceRoute([Duration? _]) {
-      if (!navigator.attached || hideableKey.currentContext == null) {
-        return;
-      }
-      _rectTween.begin = _getRect(hideableKey, navigator);
-      hideableKey.currentState!.placeholderSize = _rectTween.begin!.size;
-    }
-
-    if (delayForSourceRoute) {
-      _ambiguate(SchedulerBinding.instance)!
-          .addPostFrameCallback(takeMeasurementsInSourceRoute);
-    } else {
-      takeMeasurementsInSourceRoute();
-    }
-  }
-
-  Size _getSize(RenderBox render) {
-    assert(render.hasSize);
-    return render.size;
-  }
-
-  // Returns the bounds of the [RenderObject] identified by `key` in the
-  // coordinate system of `ancestor`.
-  Rect _getRect(GlobalKey key, RenderBox ancestor) {
-    assert(key.currentContext != null);
-    assert(ancestor.hasSize);
-    final render = key.currentContext!.findRenderObject()! as RenderBox;
-    assert(render.hasSize);
-    return MatrixUtils.transformRect(
-      render.getTransformTo(ancestor),
-      Offset.zero & render.size,
-    );
-  }
-
-  bool get _transitionWasInterrupted {
-    var wasInProgress = false;
-    var isInProgress = false;
-
-    switch (_currentAnimationStatus) {
-      case AnimationStatus.completed:
-      case AnimationStatus.dismissed:
-        isInProgress = false;
-        break;
-      case AnimationStatus.forward:
-      case AnimationStatus.reverse:
-        isInProgress = true;
-        break;
-      case null:
-        break;
-    }
-    switch (_lastAnimationStatus) {
-      case AnimationStatus.completed:
-      case AnimationStatus.dismissed:
-        wasInProgress = false;
-        break;
-      case AnimationStatus.forward:
-      case AnimationStatus.reverse:
-        wasInProgress = true;
-        break;
-      case null:
-        break;
-    }
-    return wasInProgress && isInProgress;
-  }
-
-  void closeContainer({T? returnValue}) {
-    Navigator.of(subtreeContext!).pop(returnValue);
-  }
-
-  @override
-  Widget buildPage(
-    BuildContext context,
-    Animation<double> animation,
-    Animation<double> secondaryAnimation,
-  ) {
-    return Align(
-      alignment: Alignment.topLeft,
-      child: AnimatedBuilder(
-        animation: animation,
-        builder: (BuildContext context, Widget? child) {
-          if (animation.isCompleted) {
-            return SizedBox.expand(
-              child: Material(
-                color: openColor,
-                elevation: openElevation,
-                shape: openShape,
-                child: Builder(
-                  key: _openBuilderKey,
-                  builder: (BuildContext context) {
-                    return openBuilder(context, closeContainer);
-                  },
-                ),
-              ),
-            );
-          }
-
-          final Animation<double> curvedAnimation = CurvedAnimation(
-            parent: animation,
-            curve: Curves.fastOutSlowIn,
-            reverseCurve:
-                _transitionWasInterrupted ? null : Curves.fastOutSlowIn.flipped,
-          );
-          TweenSequence<Color?>? colorTween;
-          TweenSequence<double>? closedOpacityTween, openOpacityTween;
-          Animatable<Color?>? scrimTween;
-          switch (animation.status) {
-            case AnimationStatus.dismissed:
-            case AnimationStatus.forward:
-              closedOpacityTween = _closedOpacityTween;
-              openOpacityTween = _openOpacityTween;
-              colorTween = _colorTween;
-              scrimTween = _scrimFadeInTween;
-              break;
-            case AnimationStatus.reverse:
-              if (_transitionWasInterrupted) {
-                closedOpacityTween = _closedOpacityTween;
-                openOpacityTween = _openOpacityTween;
-                colorTween = _colorTween;
-                scrimTween = _scrimFadeInTween;
-                break;
-              }
-              closedOpacityTween = _closedOpacityTween.flipped;
-              openOpacityTween = _openOpacityTween.flipped;
-              colorTween = _colorTween.flipped;
-              scrimTween = _scrimFadeOutTween;
-              break;
-            case AnimationStatus.completed:
-              assert(false); // Unreachable.
-              break;
-          }
-          assert(colorTween != null);
-          assert(closedOpacityTween != null);
-          assert(openOpacityTween != null);
-          assert(scrimTween != null);
-
-          final rect = _rectTween.evaluate(curvedAnimation)!;
-          return SizedBox.expand(
-            child: Container(
-              color: scrimTween!.evaluate(curvedAnimation),
-              child: Align(
-                alignment: Alignment.topLeft,
-                child: Transform.translate(
-                  offset: Offset(rect.left, rect.top),
-                  child: SizedBox(
-                    width: rect.width,
-                    height: rect.height,
-                    child: Material(
-                      clipBehavior: Clip.antiAlias,
-                      animationDuration: Duration.zero,
-                      color: colorTween!.evaluate(animation),
-                      shape: _shapeTween.evaluate(curvedAnimation),
-                      elevation: _elevationTween.evaluate(curvedAnimation),
-                      child: Stack(
-                        fit: StackFit.passthrough,
-                        children: <Widget>[
-                          // Closed child fading out.
-                          FittedBox(
-                            fit: BoxFit.fitWidth,
-                            alignment: Alignment.topLeft,
-                            child: SizedBox(
-                              width: _rectTween.begin!.width,
-                              height: _rectTween.begin!.height,
-                              child: (hideableKey.currentState?.isInTree ??
-                                      false)
-                                  ? null
-                                  : Opacity(
-                                      opacity: closedOpacityTween!
-                                          .evaluate(animation),
-                                      child: Builder(
-                                        key: closedBuilderKey,
-                                        builder: (BuildContext context) {
-                                          // Use dummy "open container" callback
-                                          // since we are in the process of opening.
-                                          return closedBuilder(context, () {});
-                                        },
-                                      ),
-                                    ),
-                            ),
-                          ),
-
-                          // Open child fading in.
-                          FittedBox(
-                            fit: BoxFit.fitWidth,
-                            alignment: Alignment.topLeft,
-                            child: SizedBox(
-                              width: _rectTween.end!.width,
-                              height: _rectTween.end!.height,
-                              child: Opacity(
-                                opacity: openOpacityTween!.evaluate(animation),
-                                child: Builder(
-                                  key: _openBuilderKey,
-                                  builder: (BuildContext context) {
-                                    return openBuilder(context, closeContainer);
-                                  },
-                                ),
-                              ),
-                            ),
-                          ),
-                        ],
-                      ),
-                    ),
-                  ),
-                ),
-              ),
-            ),
-          );
-        },
-      ),
-    );
-  }
-
-  @override
-  bool get maintainState => true;
-
-  @override
-  Color? get barrierColor => null;
-
-  @override
-  bool get opaque => true;
-
-  @override
-  bool get barrierDismissible => false;
-
-  @override
-  String? get barrierLabel => null;
-}
-
-class _FlippableTweenSequence<T> extends TweenSequence<T> {
-  _FlippableTweenSequence(this._items) : super(_items);
-
-  final List<TweenSequenceItem<T>> _items;
-  _FlippableTweenSequence<T>? _flipped;
-
-  _FlippableTweenSequence<T>? get flipped {
-    if (_flipped == null) {
-      final newItems = <TweenSequenceItem<T>>[];
-      for (var i = 0; i < _items.length; i++) {
-        newItems.add(TweenSequenceItem<T>(
-          tween: _items[i].tween,
-          weight: _items[_items.length - 1 - i].weight,
-        ));
-      }
-      _flipped = _FlippableTweenSequence<T>(newItems);
-    }
-    return _flipped;
-  }
-}
-
-T? _ambiguate<T>(T? value) => value;
diff --git a/lib/modules/digits_mobile_login/views/login_sms_screen.dart b/lib/modules/digits_mobile_login/views/login_sms_screen.dart
index 231b93ca..bf532be4 100644
--- a/lib/modules/digits_mobile_login/views/login_sms_screen.dart
+++ b/lib/modules/digits_mobile_login/views/login_sms_screen.dart
@@ -9,7 +9,6 @@ import '../../../generated/l10n.dart';
 import '../../../models/index.dart';
 import '../../../screens/login_sms/login_sms_screen.dart';
 import '../../../screens/login_sms/verify.dart';
-import '../../../services/services.dart';
 import '../services/index.dart';
 
 class DigitsMobileLoginScreen extends LoginSMSScreen {
@@ -24,17 +23,12 @@ class _LoginSMSState extends LoginSMSScreenState<DigitsMobileLoginScreen> {
   final _services = DigitsMobileLoginServices();
 
   @override
-  Future<void> loginSMS(context) async {
-    if (phoneNumber == null) {
+  void loginSMS(context) {
+    if (viewModel.phoneNumber.isEmpty) {
       Tools.showSnackBar(
           ScaffoldMessenger.of(context), S.of(context).pleaseInput);
     } else {
-      await playAnimation();
       try {
-        await _services.loginCheck(
-            countryCode: countryCode?.dialCode,
-            mobile: phoneNumber?.replaceAll(countryCode!.dialCode!, ''));
-
         Future autoRetrieve(String verId) {
           return stopAnimation();
         }
@@ -46,8 +40,8 @@ class _LoginSMSState extends LoginSMSScreenState<DigitsMobileLoginScreen> {
             MaterialPageRoute(
               builder: (context) => VerifyCode(
                 verId: verId,
-                phoneNumber: phoneNumber,
-                verifySuccessStream: verifySuccessStream.stream,
+                phoneNumber: viewModel.phoneFullText,
+                verifySuccessStream: viewModel.getStreamSuccess,
                 resendToken: forceCodeResend,
                 callback: _submitLogin,
               ),
@@ -55,23 +49,23 @@ class _LoginSMSState extends LoginSMSScreenState<DigitsMobileLoginScreen> {
           );
         }
 
-        final verifiedSuccess = verifySuccessStream.add;
-
         void verifyFailed(exception) {
           stopAnimation();
           failMessage(exception.message, context);
         }
 
-        Services().firebase.verifyPhoneNumber(
-              phoneNumber: phoneNumber!,
-              codeAutoRetrievalTimeout: autoRetrieve,
-              codeSent: smsCodeSent,
-              verificationCompleted: verifiedSuccess,
-              verificationFailed: verifyFailed,
-            );
+        viewModel.verify(
+            autoRetrieve: autoRetrieve,
+            smsCodeSent: smsCodeSent,
+            verifyFailed: verifyFailed,
+            startVerify: () async {
+              await playAnimation();
+              await _services.loginCheck(
+                  countryCode: viewModel.countryDialCode,
+                  mobile: viewModel.phoneNumber);
+            });
       } catch (e) {
-        await stopAnimation();
-        failMessage(e.toString(), context);
+        stopAnimation().then((value) => failMessage(e.toString(), context));
       }
     }
   }
@@ -82,8 +76,8 @@ class _LoginSMSState extends LoginSMSScreenState<DigitsMobileLoginScreen> {
       final fToken = await user.getIdToken();
       var loggedInUser = await _services.login(
           otp: smsCode,
-          countryCode: countryCode?.dialCode,
-          mobile: phoneNumber?.replaceAll(countryCode!.dialCode!, ''),
+          countryCode: viewModel.countryDialCode,
+          mobile: viewModel.phoneNumber,
           fToken: fToken);
       await Provider.of<UserModel>(context, listen: false)
           .setUser(loggedInUser);
diff --git a/lib/modules/dynamic_layout/config/app_config.dart b/lib/modules/dynamic_layout/config/app_config.dart
index ba5d348e..2730fac6 100644
--- a/lib/modules/dynamic_layout/config/app_config.dart
+++ b/lib/modules/dynamic_layout/config/app_config.dart
@@ -89,6 +89,7 @@ class DrawerMenuConfig {
   String? colorFilter;
   num filter = 0.0;
   bool safeArea = false;
+  bool enable = true;
 
   DrawerMenuConfig({
     this.logo,
@@ -104,6 +105,7 @@ class DrawerMenuConfig {
     this.colorFilter,
     this.filter = 0.0,
     this.safeArea = false,
+    this.enable = true,
   });
 
   DrawerMenuConfig.fromJson(dynamic json) {
@@ -116,6 +118,8 @@ class DrawerMenuConfig {
     colorFilter = json['colorFilter'];
     filter = json['filter'] ?? 0.0;
     safeArea = json['safeArea'] ?? false;
+    enable = json['enable'] ?? true;
+
     if (json['items'] != null) {
       items = [];
       json['items'].forEach((v) {
@@ -150,6 +154,7 @@ class DrawerMenuConfig {
     map['safeArea'] = safeArea;
     map['logoConfig'] = logoConfig.toJson();
     map['zoomConfig'] = zoomConfig?.toJson();
+    map['enable'] = enable == true;
     if (items != null) {
       map['items'] = items?.map((v) => v.toJson()).toList();
     }
@@ -471,6 +476,7 @@ class AppBarItemConfig {
   num? width;
   num? height;
   String? key;
+  String? actionLink;
 
   AppBarItemConfig({
     this.type,
@@ -504,6 +510,7 @@ class AppBarItemConfig {
     this.width,
     this.height,
     this.key,
+    this.actionLink,
   });
 
   AppBarItemConfig.fromJson(dynamic json) {
@@ -538,6 +545,7 @@ class AppBarItemConfig {
     width = json['width'];
     height = json['height'];
     key = json['key'];
+    actionLink = json['actionLink'];
   }
 
   Map<String, dynamic> toJson() {
@@ -573,6 +581,7 @@ class AppBarItemConfig {
     if (width != null) data['width'] = width;
     if (height != null) data['height'] = height;
     if (key != null) data['key'] = key;
+    if (actionLink != null) data['actionLink'] = actionLink;
     return data;
   }
 }
diff --git a/lib/modules/dynamic_layout/config/app_setting.dart b/lib/modules/dynamic_layout/config/app_setting.dart
index 98f329c2..91f4d41b 100644
--- a/lib/modules/dynamic_layout/config/app_setting.dart
+++ b/lib/modules/dynamic_layout/config/app_setting.dart
@@ -1,3 +1,4 @@
+import '../../../common/config/models/age_restriction_config.dart';
 import 'tab_bar_config.dart';
 import 'tab_bar_floating_config.dart';
 import 'tab_bar_indicator_config.dart';
@@ -7,6 +8,8 @@ var kDefaultTabBar = TabBarConfig(
   tabBarFloating: TabBarFloatingConfig(),
 );
 
+final kDefaultAgeRestrictionConfig = AgeRestrictionConfig();
+
 class AppSetting {
   late String mainColor;
   late String fontFamily;
@@ -19,6 +22,7 @@ class AppSetting {
   late String? productDetail;
   late String? blogDetail;
   late bool? useMaterial3;
+  AgeRestrictionConfig ageRestrictionConfig = kDefaultAgeRestrictionConfig;
 
   AppSetting({
     this.mainColor = '',
@@ -32,6 +36,7 @@ class AppSetting {
     this.blogDetail,
     this.useMaterial3,
     required this.tabBarConfig,
+    required this.ageRestrictionConfig,
   });
 
   AppSetting.fromJson(Map config) {
@@ -48,6 +53,12 @@ class AppSetting {
     if (config['TabBarConfig'] != null) {
       tabBarConfig = TabBarConfig.fromJson(config['TabBarConfig']);
     }
+
+    if (config['AgeRestriction'] is Map) {
+      ageRestrictionConfig = AgeRestrictionConfig.fromMap(
+        config['AgeRestriction'],
+      );
+    }
   }
 
   AppSetting copyWith({
@@ -62,6 +73,7 @@ class AppSetting {
     String? blogDetail,
     TabBarConfig? tabBarConfig,
     bool? useMaterial3,
+    AgeRestrictionConfig? ageRestrictionConfig,
   }) {
     return AppSetting(
       mainColor: mainColor ?? this.mainColor,
@@ -75,6 +87,7 @@ class AppSetting {
       blogDetail: blogDetail ?? this.blogDetail,
       tabBarConfig: tabBarConfig ?? this.tabBarConfig,
       useMaterial3: useMaterial3 ?? this.useMaterial3,
+      ageRestrictionConfig: ageRestrictionConfig ?? this.ageRestrictionConfig,
     );
   }
 }
diff --git a/lib/modules/dynamic_layout/config/header_config.dart b/lib/modules/dynamic_layout/config/header_config.dart
index d728f492..90d11441 100644
--- a/lib/modules/dynamic_layout/config/header_config.dart
+++ b/lib/modules/dynamic_layout/config/header_config.dart
@@ -46,6 +46,7 @@ class HeaderConfig {
   num paddingTop = 0.0;
   num paddingBottom = 0.0;
   num height = 44.0;
+  num minWidth = 0.0;
 
   /// other type
   BoxShadowConfig? boxShadow;
@@ -76,6 +77,7 @@ class HeaderConfig {
     this.height = 44.0,
     this.boxShadow,
     this.rotate = const [],
+    this.minWidth = 0.0,
   });
 
   HeaderConfig.fromJson(dynamic json) {
@@ -106,6 +108,7 @@ class HeaderConfig {
         : null;
 
     rotate = List<String>.from(json['rotate'] ?? []);
+    minWidth = json['minWidth'] ?? 0.0;
   }
 
   Map<String, dynamic> toJson() {
@@ -134,6 +137,7 @@ class HeaderConfig {
     map['height'] = height;
     map['boxShadow'] = boxShadow?.toJson();
     map['rotate'] = rotate;
+    map['minWidth'] = minWidth;
     map.removeWhere((key, value) => value == null);
     return map;
   }
diff --git a/lib/modules/dynamic_layout/config/product_config.dart b/lib/modules/dynamic_layout/config/product_config.dart
index 606f5a65..17aefc0c 100644
--- a/lib/modules/dynamic_layout/config/product_config.dart
+++ b/lib/modules/dynamic_layout/config/product_config.dart
@@ -73,6 +73,7 @@ class ProductConfig {
   bool showCartButtonWithQuantity = false;
   bool enableParallax = false;
   double parallaxImageRatio = 1.2;
+  bool hideEmptyProductLayout = false;
 
   ProductConfig({
     this.category,
@@ -114,6 +115,7 @@ class ProductConfig {
     this.titleLine,
     this.orderby,
     this.limit,
+    this.hideEmptyProductLayout = false,
     required this.rows,
     required this.columns,
     required this.imageRatio,
@@ -131,40 +133,35 @@ class ProductConfig {
 
     rows = 1;
     columns = 3;
-    titleLine = Helper.formatInt(kProductCard['titleLine']);
-    orderby = kProductCard['orderby'];
-    vMargin = Helper.formatDouble(kProductCard['vMargin']) ?? 0.0;
-    hMargin = Helper.formatDouble(kProductCard['hMargin']) ?? 6.0;
+    titleLine = Helper.formatInt(kProductCard.titleLine);
+    orderby = kProductCard.orderby;
+    vMargin = Helper.formatDouble(kProductCard.vMargin) ?? 0.0;
+    hMargin = Helper.formatDouble(kProductCard.hMargin) ?? 6.0;
     imageRatio = kAdvanceConfig.ratioProductImage * 1.0;
     imageBoxfit = Configurations.productCard['boxFit'] ??
         Configurations.productCard['fit'] ??
         'cover';
-    hidePrice = kProductCard['hidePrice'] ?? false;
-    hideTitle = kProductCard['hideTitle'] ?? false;
-    hideStore = kProductCard['hideStore'] ?? false;
-    showCartButton = kProductCard['showCartButton'] ?? false;
-    showCartIcon = kProductCard['showCartIcon'] ?? true;
-    showCartIconColor = kProductCard['showCartIconColor'] ?? false;
+    hidePrice = kProductCard.hidePrice;
+    hideTitle = kProductCard.hideTitle;
+    hideStore = kProductCard.hideStore;
+    showCartButton = kProductCard.showCartButton;
+    showCartIcon = kProductCard.showCartIcon;
+    showCartIconColor = kProductCard.showCartIconColor;
     enableBottomAddToCart = kAdvanceConfig.enableBottomAddToCart;
-    showCartButtonWithQuantity =
-        kProductCard['showCartButtonWithQuantity'] ?? false;
+    showCartButtonWithQuantity = kProductCard.showCartButtonWithQuantity;
     showQuantity = kProductDetail.showQuantityInList;
-    enableRating = kProductCard['enableRating'] ?? true;
+    enableRating = kProductCard.enableRating;
     showCountDown = false;
-    hideEmptyProductListRating =
-        kProductCard['hideEmptyProductListRating'] ?? false;
+    hideEmptyProductListRating = kProductCard.hideEmptyProductListRating;
     showStockStatus = kAdvanceConfig.showStockStatus;
-    if (kProductCard['borderRadius'] != null) {
-      borderRadius = Helper.formatDouble(kProductCard['borderRadius']);
-    }
-    if (kProductCard['boxShadow'] != null) {
-      boxShadow = BoxShadowConfig.fromJson(kProductCard['boxShadow']);
+    if (kProductCard.borderRadius != null) {
+      borderRadius = Helper.formatDouble(kProductCard.borderRadius);
     }
-    if (kProductCard['cardDesign'] != null) {
-      cardDesign = kProductCard['cardDesign'] == 'glass'
-          ? CardDesign.glass
-          : CardDesign.card;
+    if (kProductCard.boxShadow != null) {
+      boxShadow = BoxShadowConfig.fromJson(kProductCard.boxShadow);
     }
+    cardDesign =
+        kProductCard.cardDesign == 'glass' ? CardDesign.glass : CardDesign.card;
   }
 
   ProductConfig.fromJson(dynamic json) {
@@ -262,6 +259,7 @@ class ProductConfig {
 
     enableParallax = json['parallax'] ?? false;
     parallaxImageRatio = Helper.formatDouble(json['parallaxImageRatio']) ?? 1.2;
+    hideEmptyProductLayout = json['hideEmptyProductLayout'] ?? false;
   }
 
   Map<String, dynamic> toJson() {
@@ -335,6 +333,7 @@ class ProductConfig {
     map['showCartButtonWithQuantity'] = showCartButtonWithQuantity;
     map['parallax'] = enableParallax;
     map['parallaxImageRatio'] = parallaxImageRatio;
+    map['hideEmptyProductLayout'] = hideEmptyProductLayout;
     map.removeWhere((key, value) => value == null);
     return map;
   }
diff --git a/lib/modules/dynamic_layout/dynamic_layout.dart b/lib/modules/dynamic_layout/dynamic_layout.dart
index 09b3a3a1..a8fea0ca 100644
--- a/lib/modules/dynamic_layout/dynamic_layout.dart
+++ b/lib/modules/dynamic_layout/dynamic_layout.dart
@@ -22,6 +22,7 @@ import 'config/index.dart';
 import 'divider/divider.dart';
 import 'header/header_search.dart';
 import 'header/header_text.dart';
+import 'helper/helper.dart';
 import 'instagram_story/instagram_story.dart';
 import 'logo/logo.dart';
 import 'product/product_list_simple.dart';
@@ -44,7 +45,7 @@ class DynamicLayout extends StatelessWidget {
     final appModel = Provider.of<AppModel>(context, listen: true);
 
     switch (config['layout']) {
-      case 'logo':
+      case Layout.logo:
         final themeConfig = appModel.themeConfig;
         return Logo(
           config: LogoConfig.fromJson(config),
@@ -65,12 +66,12 @@ class DynamicLayout extends StatelessWidget {
           onTapDrawerMenu: () => NavigateTools.onTapOpenDrawerMenu(context),
         );
 
-      case 'header_text':
+      case Layout.headerText:
         return HeaderText(
           config: HeaderConfig.fromJson(config),
         );
 
-      case 'header_search':
+      case Layout.headerSearch:
         return HeaderSearch(
           config: HeaderConfig.fromJson(config),
           onSearch: () {
@@ -80,9 +81,9 @@ class DynamicLayout extends StatelessWidget {
             );
           },
         );
-      case 'featuredVendors':
+      case Layout.featuredVendors:
         return Services().widget.renderFeatureVendor(config);
-      case 'category':
+      case Layout.category:
         if (config['type'] == 'image') {
           return CategoryImages(
             config: CategoryConfig.fromJson(config),
@@ -127,11 +128,11 @@ class DynamicLayout extends StatelessWidget {
             );
           },
         );
-      case 'bannerAnimated':
+      case Layout.bannerAnimated:
         if (kIsWeb) return const SizedBox();
         return BannerAnimated(config: BannerConfig.fromJson(config));
 
-      case 'bannerImage':
+      case Layout.bannerImage:
         if (config['isSlider'] == true) {
           return BannerSlider(
             config: BannerConfig.fromJson(config),
@@ -166,73 +167,75 @@ class DynamicLayout extends StatelessWidget {
           },
         );
 
-      case 'blog':
+      case Layout.blog:
         return BlogGrid(config: BlogConfig.fromJson(config));
 
-      case 'video':
+      case Layout.video:
         return VideoLayout(config: config);
 
-      case 'story':
+      case Layout.story:
         return StoryWidget(
           config: config,
         );
-      case 'recentView':
-        if (Config().isBuilder) {
+
+      /// Product Layout styles
+      case Layout.recentView:
+        if (ServerConfig().isBuilder) {
           return ProductRecentPlaceholder();
         }
         return Services().widget.renderHorizontalListItem(config);
-      case 'fourColumn':
-      case 'threeColumn':
-      case 'twoColumn':
-      case 'staggered':
-      case 'saleOff':
-      case 'card':
-      case 'listTile':
+      case Layout.fourColumn:
+      case Layout.threeColumn:
+      case Layout.twoColumn:
+      case Layout.staggered:
+      case Layout.saleOff:
+      case Layout.card:
+      case Layout.listTile:
         return Services()
             .widget
             .renderHorizontalListItem(config, cleanCache: cleanCache);
 
       /// New product layout style.
-      case 'largeCardHorizontalListItems':
-      case 'largeCard':
+      case Layout.largeCardHorizontalListItems:
+      case Layout.largeCard:
         return Services().widget.renderLargeCardHorizontalListItems(config);
-      case 'simpleVerticalListItems':
-      case 'simpleList':
+      case Layout.simpleVerticalListItems:
+      case Layout.simpleList:
         return SimpleVerticalProductList(
           config: ProductConfig.fromJson(config),
         );
 
-      case 'brand':
+      case Layout.brand:
         return BrandLayout(
           config: BrandConfig.fromJson(config),
         );
 
       /// FluxNews
-      case 'sliderList':
+      case Layout.sliderList:
         return Services().widget.renderSliderList(config);
-      case 'sliderItem':
+      case Layout.sliderItem:
         return Services().widget.renderSliderItem(config);
 
-      case 'geoSearch':
+      case Layout.geoSearch:
         return Services().widget.renderGeoSearch(config);
-      case 'divider':
+      case Layout.divider:
         return DividerLayout(config: DividerConfig.fromJson(config));
-      case 'spacer':
+      case Layout.spacer:
         return SpacerLayout(config: SpacerConfig.fromJson(config));
-      case 'button':
+      case Layout.button:
         return ButtonLayout(config: ButtonConfig.fromJson(config));
-      case 'testimonial':
+      case Layout.testimonial:
         return TestimonialLayout(config: TestimonialConfig.fromJson(config));
-      case 'sliderTestimonial':
+      case Layout.sliderTestimonial:
         return SliderTestimonial(
           config: SliderTestimonialConfig.fromJson(config),
         );
-      case 'instagramStory':
+      case Layout.instagramStory:
         return InstagramStory(
           config: InstagramStoryConfig.fromJson(config),
         );
-      case 'tiktokVideos':
-        if (Config().isBuilder || !isMobile) {
+      case Layout.tiktokVideos:
+        if (ServerConfig().isBuilder || !isMobile) {
           return TikTokVideosPlaceholder();
         }
         return TikTokVideos(
diff --git a/lib/modules/dynamic_layout/geo_search/geo_search.dart b/lib/modules/dynamic_layout/geo_search/geo_search.dart
index 24ef40a8..67a3b531 100644
--- a/lib/modules/dynamic_layout/geo_search/geo_search.dart
+++ b/lib/modules/dynamic_layout/geo_search/geo_search.dart
@@ -29,9 +29,9 @@ class _GeoSearchState extends State<GeoSearch> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((_) async {
-      await _locationService.init();
+    WidgetsBinding.instance.endOfFrame.then((_) async {
       if (mounted) {
+        await _locationService.init();
         setState(() {});
       }
     });
diff --git a/lib/modules/dynamic_layout/header/header_type.dart b/lib/modules/dynamic_layout/header/header_type.dart
index f0d60c69..610b25d7 100644
--- a/lib/modules/dynamic_layout/header/header_type.dart
+++ b/lib/modules/dynamic_layout/header/header_type.dart
@@ -24,23 +24,28 @@ class HeaderType extends StatelessWidget {
       color: textColor.withOpacity(textOpacity.toDouble()),
     );
 
-    switch (config.type) {
-      case 'rotate':
-        return AnimatedTextItem(
+    Widget renderAnimatedText({required List<AnimatedText> animatedTexts}) {
+       return AnimatedTextItem(
           title: config.title,
           textStyle: textStyle,
+          minWidth: config.minWidth.toDouble(),
+          animatedTexts: animatedTexts,
+        );
+    }
+
+    switch (config.type) {
+      case 'rotate':
+        return renderAnimatedText(
           animatedTexts: [
             for (var name in config.rotate)
               RotateAnimatedText(
                 name,
                 textStyle: textStyle,
               ),
-          ],
+          ]
         );
       case 'fade':
-        return AnimatedTextItem(
-          title: config.title,
-          textStyle: textStyle,
+        return renderAnimatedText(
           animatedTexts: [
             for (var name in config.rotate)
               FadeAnimatedText(
@@ -50,9 +55,7 @@ class HeaderType extends StatelessWidget {
           ],
         );
       case 'typer':
-        return AnimatedTextItem(
-          title: config.title,
-          textStyle: textStyle,
+        return renderAnimatedText(
           animatedTexts: [
             for (var name in config.rotate)
               TyperAnimatedText(
@@ -62,9 +65,7 @@ class HeaderType extends StatelessWidget {
           ],
         );
       case 'typewriter':
-        return AnimatedTextItem(
-          title: config.title,
-          textStyle: textStyle,
+        return renderAnimatedText(
           animatedTexts: [
             for (var name in config.rotate)
               TypewriterAnimatedText(
@@ -74,9 +75,7 @@ class HeaderType extends StatelessWidget {
           ],
         );
       case 'scale':
-        return AnimatedTextItem(
-          title: config.title,
-          textStyle: textStyle,
+        return renderAnimatedText(
           animatedTexts: [
             for (var name in config.rotate)
               ScaleAnimatedText(
@@ -86,9 +85,7 @@ class HeaderType extends StatelessWidget {
           ],
         );
       case 'color':
-        return AnimatedTextItem(
-          title: config.title,
-          textStyle: textStyle,
+        return renderAnimatedText(
           animatedTexts: [
             for (var name in config.rotate)
               ColorizeAnimatedText(
@@ -122,33 +119,37 @@ class HeaderType extends StatelessWidget {
 class AnimatedTextItem extends StatelessWidget {
   final String? title;
   final TextStyle? textStyle;
+  final double minWidth;
   final List<AnimatedText> animatedTexts;
 
   const AnimatedTextItem({
     this.title,
     this.textStyle,
+    this.minWidth = 0.0,
     required this.animatedTexts,
   });
 
   @override
   Widget build(BuildContext context) {
-    return Row(
-      children: [
-        if (title?.isNotEmpty ?? false) ...[
-          Text(
-            title!,
-            style: textStyle ?? const TextStyle(fontSize: 16.0),
-          ),
-          const SizedBox(width: 10.0),
-        ],
-        Expanded(
-          child: AnimatedTextKit(
+    return Container(
+      constraints: BoxConstraints(minWidth: minWidth),
+      child: Row(
+        mainAxisSize: MainAxisSize.min,
+        children: [
+          if (title?.isNotEmpty ?? false) ...[
+            Text(
+              title!,
+              style: textStyle ?? const TextStyle(fontSize: 16.0),
+            ),
+            const SizedBox(width: 10.0),
+          ],
+          AnimatedTextKit(
             isRepeatingAnimation: true,
             animatedTexts: animatedTexts,
             repeatForever: true,
           ),
-        )
-      ],
+        ],
+      ),
     );
   }
 }
diff --git a/lib/modules/dynamic_layout/helper/countdown_timer.dart b/lib/modules/dynamic_layout/helper/countdown_timer.dart
index 75787e68..87efa5ee 100644
--- a/lib/modules/dynamic_layout/helper/countdown_timer.dart
+++ b/lib/modules/dynamic_layout/helper/countdown_timer.dart
@@ -1,28 +1,67 @@
 import 'package:flutter/material.dart';
 
-class CountDownTimer extends StatelessWidget {
+class CountDownTimer extends StatefulWidget {
   final Duration countdownDuration;
   final VoidCallback? onEnd;
 
   const CountDownTimer(this.countdownDuration, {Key? key, this.onEnd})
       : super(key: key);
 
+  @override
+  StateCountDownTimer createState() => StateCountDownTimer();
+}
+
+class StateCountDownTimer extends State<CountDownTimer>
+    with SingleTickerProviderStateMixin {
+  ValueNotifier<Duration> valueNotifier = ValueNotifier(Duration.zero);
+
+  late AnimationController controller;
+  late Animation<double> animation;
+
+  @override
+  void initState() {
+    super.initState();
+    controller =
+        AnimationController(duration: widget.countdownDuration, vsync: this);
+    animation = Tween<double>(
+            begin: widget.countdownDuration.inMilliseconds.toDouble(), end: 0)
+        .animate(controller);
+    animation
+      ..addListener(_listener)
+      ..addStatusListener(_statusListener);
+    controller.forward();
+  }
+
+  void _listener() {
+    var timer = Duration(milliseconds: animation.value.toInt());
+    if (timer.inSeconds != valueNotifier.value.inSeconds) {
+      valueNotifier.value = timer;
+    }
+  }
+
+  void _statusListener(status) {
+    if (status == AnimationStatus.completed) {
+      widget.onEnd?.call();
+    }
+  }
+
+  @override
+  void dispose() {
+    controller.removeListener(_listener);
+    controller.removeStatusListener(_statusListener);
+    controller.dispose();
+    super.dispose();
+  }
+
   @override
   Widget build(BuildContext context) {
     const size = 22.0;
 
     return Directionality(
       textDirection: TextDirection.ltr,
-      child: TweenAnimationBuilder<Duration>(
-        duration: countdownDuration,
-        tween: Tween(begin: countdownDuration, end: Duration.zero),
-        onEnd: () {
-          /// Timer ended
-          if (onEnd != null) {
-            onEnd!();
-          }
-        },
-        builder: (BuildContext context, Duration value, Widget? child) {
+      child: ValueListenableBuilder<Duration>(
+        valueListenable: valueNotifier,
+        builder: (context, value, child) {
           if (value.inMilliseconds == 0) {
             return const SizedBox();
           }
diff --git a/lib/modules/dynamic_layout/helper/helper.dart b/lib/modules/dynamic_layout/helper/helper.dart
index 73e693e3..6e32f8cd 100644
--- a/lib/modules/dynamic_layout/helper/helper.dart
+++ b/lib/modules/dynamic_layout/helper/helper.dart
@@ -8,6 +8,7 @@ import '../../../common/constants.dart';
 import '../../../services/service_config.dart';
 
 class Layout {
+  /// Product or Blog Layout styles
   static const String columns = 'columns';
   static const String twoColumn = 'twoColumn';
   static const String threeColumn = 'threeColumn';
@@ -16,7 +17,43 @@ class Layout {
   static const String saleOff = 'saleOff';
   static const String card = 'card';
   static const String listTile = 'listTile';
+  static const String pinterest = 'pinterest';
+  static const String menu = 'menu';
   static const String staggered = 'staggered';
+  static const String simpleList = 'simpleList';
+  static const String simpleVerticalListItems = 'simpleVerticalListItems';
+  static const String largeCard = 'largeCard';
+  static const String largeCardHorizontalListItems =
+      'largeCardHorizontalListItems';
+  static const String sliderList = 'sliderList';
+  static const String sliderItem = 'sliderItem';
+
+  /// Other Type Layout styles
+  static const String logo = 'logo';
+  static const String brand = 'brand';
+  static const String story = 'story';
+  static const String video = 'video';
+  static const String blog = 'blog';
+  static const String category = 'category';
+  static const String featuredVendors = 'featuredVendors';
+  static const String geoSearch = 'geoSearch';
+
+  /// Header Style
+  static const String headerSearch = 'header_search';
+  static const String headerText = 'header_text';
+
+  /// Banner Layout style
+  static const String bannerImage = 'bannerImage';
+  static const String bannerAnimated = 'bannerAnimated';
+
+  /// Common Layout style
+  static const String divider = 'divider';
+  static const String spacer = 'spacer';
+  static const String button = 'button';
+  static const String testimonial = 'testimonial';
+  static const String sliderTestimonial = 'sliderTestimonial';
+  static const String instagramStory = 'instagramStory';
+  static const String tiktokVideos = 'tiktokVideos';
 
   static bool isDisplayDesktop(BuildContext context) {
     final deviceType = getDeviceType(MediaQuery.of(context).size);
@@ -123,7 +160,10 @@ class Helper {
     return defaultValue;
   }
 
-  static BoxFit boxFit(String? fit) {
+  static BoxFit boxFit(
+    String? fit, {
+    BoxFit? defaultValue,
+  }) {
     switch (fit) {
       case 'contain':
         return BoxFit.contain;
@@ -138,13 +178,13 @@ class Helper {
       case 'cover':
         return BoxFit.cover;
       default:
-        return BoxFit.fitWidth;
+        return defaultValue ?? BoxFit.fitWidth;
     }
   }
 
   /// check tablet screen
   static bool isTablet(MediaQueryData query) {
-    if (Config().isBuilder) {
+    if (ServerConfig().isBuilder) {
       return false;
     }
 
diff --git a/lib/modules/dynamic_layout/index.dart b/lib/modules/dynamic_layout/index.dart
index c1379f24..64b41888 100644
--- a/lib/modules/dynamic_layout/index.dart
+++ b/lib/modules/dynamic_layout/index.dart
@@ -25,7 +25,6 @@ export 'product/product_list_large_card.dart';
 export 'product/product_list_simple.dart';
 export 'product/product_list_tile.dart';
 export 'product/product_staggered.dart';
-export 'search/home_search_page.dart';
 export 'spacer/spacer.dart';
 export 'story/index.dart';
 export 'tabbar/tab_indicator/material_indicator.dart';
diff --git a/lib/modules/dynamic_layout/instagram_story/instagram_story.dart b/lib/modules/dynamic_layout/instagram_story/instagram_story.dart
index 6a9ae9a8..2e138c46 100644
--- a/lib/modules/dynamic_layout/instagram_story/instagram_story.dart
+++ b/lib/modules/dynamic_layout/instagram_story/instagram_story.dart
@@ -26,7 +26,11 @@ class _StateInstagramStory extends State<InstagramStory> {
   void initState() {
     super.initState();
 
-    WidgetsBinding.instance.addPostFrameCallback((_) => loadInit());
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        loadInit();
+      }
+    });
   }
 
   @override
diff --git a/lib/modules/dynamic_layout/product/future_builder.dart b/lib/modules/dynamic_layout/product/future_builder.dart
index 9a435c0e..e8f509aa 100644
--- a/lib/modules/dynamic_layout/product/future_builder.dart
+++ b/lib/modules/dynamic_layout/product/future_builder.dart
@@ -30,27 +30,24 @@ class ProductFutureBuilder extends StatefulWidget {
 }
 
 class _ProductListLayoutState extends State<ProductFutureBuilder> {
-  List<Product>? products;
+  ValueNotifier<List<Product>?> productsNotifier = ValueNotifier(null);
 
   @override
   void initState() {
-    // print('init state _ProductListLayoutState 🟢');
-
-    if (products != null) {
+    super.initState();
+    if (productsNotifier.value != null) {
       return;
     }
-    WidgetsBinding.instance.addPostFrameCallback((_) async {
-      products = await getProductLayout(context);
-
-      Provider.of<RecentModel>(context, listen: false).addListener(() async {
-        if (widget.config.layout == Layout.recentView) {
-          products = await getProductLayout(context);
-        }
-      });
-
-      setState(() {});
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        productsNotifier.value = await getProductLayout(context);
+        Provider.of<RecentModel>(context, listen: false).addListener(() async {
+          if (widget.config.layout == Layout.recentView) {
+            productsNotifier.value = await getProductLayout(context);
+          }
+        });
+      }
     });
-    super.initState();
   }
 
   Future<List<Product>?> getProductLayout(context) {
@@ -82,40 +79,49 @@ class _ProductListLayoutState extends State<ProductFutureBuilder> {
     final isSaleOffLayout = widget.config.layout == Layout.saleOff;
     if (isRecentLayout && recentProduct.length < 3) return const SizedBox();
 
-    return LayoutBuilder(
-      builder: (context, constraint) {
-        var maxWidth = Layout.isDisplayDesktop(context)
-            ? kMaxProductWidth
-            : constraint.maxWidth;
-
-        if (products == null) {
-          if (widget.waiting != null) return widget.waiting!;
-
-          return widget.config.layout == Layout.listTile
-              ? EmptyProductTile(maxWidth: maxWidth)
-              : widget.config.rows > 1
-                  ? EmptyProductGrid(
-                      config: widget.config,
-                      maxWidth: maxWidth,
-                    )
-                  : EmptyProductList(
-                      config: widget.config,
-                      maxWidth: maxWidth,
-                    );
-        }
-
-        /// Hide sale off layout when product list is empty.
-        if (products == null &&
-            isSaleOffLayout &&
-            (kSaleOffProduct['HideEmptySaleOffLayout'] ?? false)) {
-          return const SizedBox();
-        }
-
-        return widget.child(
-          maxWidth: maxWidth,
-          products: products,
-        );
-      },
-    );
+    return ValueListenableBuilder<List<Product>?>(
+        valueListenable: productsNotifier,
+        builder: (context, products, child) {
+          return LayoutBuilder(
+            builder: (context, constraint) {
+              var maxWidth = Layout.isDisplayDesktop(context)
+                  ? kMaxProductWidth
+                  : constraint.maxWidth;
+
+              if (products == null) {
+                if (widget.waiting != null) return widget.waiting!;
+
+                return widget.config.layout == Layout.listTile
+                    ? EmptyProductTile(maxWidth: maxWidth)
+                    : widget.config.rows > 1
+                        ? EmptyProductGrid(
+                            config: widget.config,
+                            maxWidth: maxWidth,
+                          )
+                        : EmptyProductList(
+                            config: widget.config,
+                            maxWidth: maxWidth,
+                          );
+              }
+
+              /// Hide sale off layout when product list is empty.
+              if (products.isEmpty &&
+                  isSaleOffLayout &&
+                  (kSaleOffProduct['HideEmptySaleOffLayout'] ?? false)) {
+                return const SizedBox();
+              }
+
+              /// Hide section if product list is empty.
+              if (widget.config.hideEmptyProductLayout && products.isEmpty) {
+                return const SizedBox();
+              }
+
+              return widget.child(
+                maxWidth: maxWidth,
+                products: products,
+              );
+            },
+          );
+        });
   }
 }
diff --git a/lib/modules/dynamic_layout/product/product_grid.dart b/lib/modules/dynamic_layout/product/product_grid.dart
index f0e6e201..264eec54 100644
--- a/lib/modules/dynamic_layout/product/product_grid.dart
+++ b/lib/modules/dynamic_layout/product/product_grid.dart
@@ -17,40 +17,32 @@ class ProductGrid extends StatelessWidget {
     required this.config,
   }) : super(key: key);
 
-  double getGridRatio() {
-    switch (config.layout) {
-      case Layout.twoColumn:
-        return 1.5;
-      case Layout.threeColumn:
-      default:
-        return 1.7;
-    }
-  }
-
-  double getHeightRatio() {
-    switch (config.layout) {
-      case Layout.twoColumn:
-        return 1.7;
-      case Layout.threeColumn:
-      default:
-        return 1.3;
-    }
-  }
-
   @override
   Widget build(BuildContext context) {
-    if (products == null) {
+    final productList = products;
+    if (productList == null || productList is! List || productList.isEmpty) {
       return const SizedBox();
     }
-    var ratioProductImage = config.imageRatio;
     const padding = 12.0;
-    var width = maxWidth - padding;
+    final ratioProductImage = config.imageRatio;
+    final gridWidth = maxWidth - padding;
+    final columns = getColumnCount();
+
     var rows = config.rows;
     var productHeight = Layout.buildProductHeight(
       layout: config.layout,
       defaultHeight: maxWidth,
     );
 
+    if (ratioProductImage < 1) {
+      productHeight = productHeight * (ratioProductImage * 1.2);
+    }
+
+    /// Not create a new row until the item is out of the screen.
+    if (products.length <= columns) {
+      rows = 1;
+    }
+
     return Container(
       padding: const EdgeInsets.only(left: padding, top: padding),
       decoration: BoxDecoration(
@@ -59,20 +51,24 @@ class ProductGrid extends StatelessWidget {
       ),
       height: rows * productHeight * getHeightRatio(),
       child: GridView.count(
-        childAspectRatio: ratioProductImage * getGridRatio(),
+        childAspectRatio:
+            (ratioProductImage * (ratioProductImage < 1 ? 1.5 : 1)) *
+                getGridRatio(),
         scrollDirection: Axis.horizontal,
         physics: config.isSnapping ?? false
             ? CustomScrollPhysic(
                 width: Layout.buildProductWidth(
-                    screenWidth: width / ratioProductImage,
-                    layout: config.layout))
+                  screenWidth: gridWidth / ratioProductImage,
+                  layout: config.layout,
+                ),
+              )
             : const ScrollPhysics(),
         crossAxisCount: rows,
-        children: List.generate(products.length, (i) {
+        children: List.generate(productList.length, (i) {
           return Services().widget.renderProductCardView(
-                item: products[i],
+                item: productList[i],
                 width: Layout.buildProductWidth(
-                    screenWidth: width, layout: config.layout),
+                    screenWidth: gridWidth, layout: config.layout),
                 maxWidth: Layout.buildProductMaxWidth(layout: config.layout),
                 height: productHeight,
                 ratioProductImage: ratioProductImage,
@@ -82,4 +78,34 @@ class ProductGrid extends StatelessWidget {
       ),
     );
   }
+
+  double getColumnCount() {
+    switch (config.layout) {
+      case Layout.twoColumn:
+        return 2;
+      case Layout.threeColumn:
+      default:
+        return 3;
+    }
+  }
+
+  double getGridRatio() {
+    switch (config.layout) {
+      case Layout.twoColumn:
+        return 1.5;
+      case Layout.threeColumn:
+      default:
+        return 1.7;
+    }
+  }
+
+  double getHeightRatio() {
+    switch (config.layout) {
+      case Layout.twoColumn:
+        return 1.7;
+      case Layout.threeColumn:
+      default:
+        return 1.3;
+    }
+  }
 }
diff --git a/lib/modules/dynamic_layout/product/product_list_tile.dart b/lib/modules/dynamic_layout/product/product_list_tile.dart
index c9352b94..a8be9c07 100644
--- a/lib/modules/dynamic_layout/product/product_list_tile.dart
+++ b/lib/modules/dynamic_layout/product/product_list_tile.dart
@@ -42,7 +42,7 @@ class ProductListTitle extends StatelessWidget {
       builder: (context, constraints) {
         return SizedBox(
           width: constraints.maxWidth,
-          height: constraints.maxWidth + 180,
+          height: (constraints.maxWidth + 180) * config.imageRatio,
           child: PageView(
             children: <Widget>[
               for (var i = 0; i < products!.length; i = i + 3)
diff --git a/lib/modules/dynamic_layout/search/home_search_page.dart b/lib/modules/dynamic_layout/search/home_search_page.dart
deleted file mode 100644
index cf1e5e54..00000000
--- a/lib/modules/dynamic_layout/search/home_search_page.dart
+++ /dev/null
@@ -1,284 +0,0 @@
-import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
-import 'package:inspireui/inspireui.dart' show AutoHideKeyboard;
-import 'package:provider/provider.dart';
-
-import '../../../common/config.dart';
-import '../../../common/constants.dart';
-import '../../../models/index.dart'
-    show
-        AppModel,
-        CategoryModel,
-        FilterAttributeModel,
-        FilterTagModel,
-        SearchModel,
-        UserModel;
-import '../../../screens/index.dart'
-    show FilterSearch, RecentSearchesCustom, SearchBox, SearchResultsCustom;
-import '../../../widgets/scanner/scanner_button.dart';
-
-class HomeSearchPage extends StatefulWidget {
-  const HomeSearchPage();
-  @override
-  State<StatefulWidget> createState() => _HomeSearchPageState();
-}
-
-class _HomeSearchPageState<T> extends State<HomeSearchPage> {
-  // This node is owned, but not hosted by, the search page. Hosting is done by
-  // the text field.
-  final _searchFieldNode = FocusNode();
-  final _searchFieldController = TextEditingController();
-
-  bool isVisibleSearch = false;
-  bool _showResult = false;
-  List<String>? _suggestSearch;
-
-  SearchModel get _searchModel =>
-      Provider.of<SearchModel>(context, listen: false);
-
-  String get _searchKeyword => _searchFieldController.text;
-
-//
-  List<String> get suggestSearch =>
-      _suggestSearch
-          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
-          .toList() ??
-      <String>[];
-
-  @override
-  void initState() {
-    super.initState();
-    _searchFieldNode.addListener(() {
-      if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
-        _showResult = false;
-      } else {
-        _showResult = !_searchFieldNode.hasFocus;
-      }
-    });
-  }
-
-  @override
-  void dispose() {
-    _searchFieldNode.dispose();
-    _searchFieldController.dispose();
-//    _searchModel.dispose();
-    super.dispose();
-  }
-
-  void _onSearchTextChange(String value) {
-    if (value.isEmpty) {
-      _showResult = false;
-      setState(() {});
-      return;
-    }
-
-    if (_searchFieldNode.hasFocus) {
-      if (suggestSearch.isEmpty) {
-        final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-        setState(() {
-          _showResult = true;
-          _searchModel.loadProduct(name: value, userId: userId);
-        });
-      } else {
-        setState(() {
-          _showResult = false;
-        });
-      }
-    }
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    assert(debugCheckHasMaterialLocalizations(context));
-    var theme = Theme.of(context);
-    theme = Theme.of(context).copyWith(
-      primaryColor: Colors.white,
-      primaryIconTheme: theme.primaryIconTheme.copyWith(color: Colors.grey),
-      primaryTextTheme: theme.textTheme,
-    );
-    final searchFieldLabel = MaterialLocalizations.of(context).searchFieldLabel;
-    final suggestSearch =
-        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
-
-    var routeName = isIos ? '' : searchFieldLabel;
-
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    _suggestSearch =
-        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
-
-    return Semantics(
-      explicitChildNodes: true,
-      scopesRoute: true,
-      namesRoute: true,
-      label: routeName,
-      child: Scaffold(
-        backgroundColor: theme.backgroundColor,
-        resizeToAvoidBottomInset: false,
-        appBar: AppBar(
-          backgroundColor: theme.backgroundColor,
-          iconTheme: theme.primaryIconTheme,
-          // textTheme: theme.primaryTextTheme,
-          systemOverlayStyle: SystemUiOverlayStyle.light,
-          titleSpacing: 0,
-          leading: IconButton(
-            icon:
-                Icon(isIos ? Icons.arrow_back_ios : Icons.arrow_back, size: 20),
-            onPressed: close,
-          ),
-          title: SearchBox(
-            showSearchIcon: false,
-            showCancelButton: false,
-            autoFocus: true,
-            controller: _searchFieldController,
-            focusNode: _searchFieldNode,
-            onChanged: _onSearchTextChange,
-            onSubmitted: _onSubmit,
-          ),
-          actions: _buildActions(),
-        ),
-        body: AutoHideKeyboard(
-          child: Column(
-            children: [
-              Align(
-                alignment: Alignment.topLeft,
-                child: Padding(
-                  padding: const EdgeInsets.only(left: 15, top: 8),
-                  child: SizedBox(
-                    height: 32,
-                    child: FilterSearch(
-                      onChange: (searchFilter) {
-                        _searchModel.searchByFilter(
-                          searchFilter,
-                          _searchKeyword,
-                          userId: userId,
-                        );
-                      },
-                    ),
-                  ),
-                ),
-              ),
-              const SizedBox(height: 8),
-              Expanded(
-                child: AnimatedSwitcher(
-                  duration: const Duration(milliseconds: 300),
-                  reverseDuration: const Duration(milliseconds: 300),
-                  child: _showResult
-                      ? buildResult()
-                      : Align(
-                          alignment: Alignment.topCenter,
-                          child: Consumer<FilterTagModel>(
-                            builder: (context, tagModel, child) {
-                              return Consumer<CategoryModel>(
-                                builder: (context, categoryModel, child) {
-                                  return Consumer<FilterAttributeModel>(
-                                    builder: (context, attributeModel, child) {
-                                      if (tagModel.isLoading ||
-                                          categoryModel.isLoading ||
-                                          attributeModel.isLoading) {
-                                        return kLoadingWidget(context);
-                                      }
-                                      var child = _buildRecentSearch();
-
-                                      if (_searchFieldNode.hasFocus &&
-                                          suggestSearch.isNotEmpty) {
-                                        child = _buildSuggestions();
-                                      }
-
-                                      return child;
-                                    },
-                                  );
-                                },
-                              );
-                            },
-                          ),
-                        ),
-                ),
-              ),
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-
-  Widget _buildRecentSearch() {
-    return RecentSearchesCustom(onTap: _onSubmit);
-  }
-
-  Widget _buildSuggestions() {
-    return Card(
-      elevation: 0,
-      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
-      color: Theme.of(context).primaryColorLight,
-      child: ListView.builder(
-        shrinkWrap: true,
-        padding: const EdgeInsets.only(
-          left: 10,
-          right: 10,
-        ),
-        itemCount: suggestSearch.length,
-        itemBuilder: (_, index) {
-          final keyword = suggestSearch[index];
-          return GestureDetector(
-            onTap: () => _onSubmit(keyword),
-            child: ListTile(
-              title: Text(keyword),
-            ),
-          );
-        },
-      ),
-    );
-  }
-
-  Widget buildResult() {
-    return SearchResultsCustom(
-      name: _searchKeyword,
-    );
-  }
-
-  List<Widget> _buildActions() {
-    return <Widget>[
-      _searchFieldController.text.isEmpty
-          ? IconButton(
-              tooltip: 'Search',
-              icon: const Icon(Icons.search),
-              onPressed: () {},
-            )
-          : IconButton(
-              tooltip: 'Clear',
-              icon: const Icon(Icons.clear),
-              onPressed: () {
-                _searchFieldController.clear();
-                _searchFieldNode.requestFocus();
-              },
-            ),
-      Consumer<UserModel>(
-        builder: (_, model, __) => ScannerButton(
-          user: model.user,
-        ),
-      ),
-    ];
-  }
-
-  void _onSubmit(String name) {
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    _searchFieldController.text = name;
-    setState(() {
-      _showResult = true;
-      _searchModel.loadProduct(name: name, userId: userId);
-    });
-
-    var currentFocus = FocusScope.of(context);
-    if (!currentFocus.hasPrimaryFocus) {
-      currentFocus.unfocus();
-    }
-  }
-
-  void close() {
-    var currentFocus = FocusScope.of(context);
-    if (!currentFocus.hasPrimaryFocus) {
-      currentFocus.unfocus();
-    }
-    Navigator.of(context).pop();
-  }
-}
diff --git a/lib/modules/dynamic_layout/slider_testimonial/index.dart b/lib/modules/dynamic_layout/slider_testimonial/index.dart
index 1c87c7a1..2bc8f1b2 100644
--- a/lib/modules/dynamic_layout/slider_testimonial/index.dart
+++ b/lib/modules/dynamic_layout/slider_testimonial/index.dart
@@ -38,7 +38,8 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
         return;
       }
       if (position >= items.length - 1 && _controller!.hasClients) {
-        _controller!.jumpToPage(0);
+        position = 0;
+        _controller!.jumpToPage(position);
       } else {
         if (_controller!.hasClients) {
           _controller!.animateToPage(position + 1,
diff --git a/lib/modules/dynamic_layout/story/story_card.dart b/lib/modules/dynamic_layout/story/story_card.dart
index eb123ec8..6821a797 100644
--- a/lib/modules/dynamic_layout/story/story_card.dart
+++ b/lib/modules/dynamic_layout/story/story_card.dart
@@ -33,10 +33,12 @@ class _StoryCardState extends State<StoryCard> {
 
   @override
   void initState() {
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      setState(() {
-        _opacity = 1;
-      });
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        setState(() {
+          _opacity = 1;
+        });
+      }
     });
 
     super.initState();
@@ -132,13 +134,16 @@ class _StoryCardState extends State<StoryCard> {
                                       config['tab_number'] != null ||
                                       config['screen'] != null;
                                   NavigateTools.onTapNavigateOptions(
-                                      context: popLayout
-                                          ? (widget.buildContext ?? context)
-                                          : context,
-                                      config: config);
-                                  if (popLayout && Navigator.canPop(context)) {
-                                    Navigator.pop(context);
-                                  }
+                                          context: popLayout
+                                              ? (widget.buildContext ?? context)
+                                              : context,
+                                          config: config)
+                                      .then((value) {
+                                    if (popLayout &&
+                                        Navigator.canPop(context)) {
+                                      Navigator.pop(context);
+                                    }
+                                  });
                                 },
                                 child: StoryText(
                                   widget.story!.contents![index],
diff --git a/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart b/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart
index 316d184c..a294e1dd 100644
--- a/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart
+++ b/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart
@@ -35,6 +35,14 @@ class TabBarIcon extends StatelessWidget {
     Widget icon = Builder(
       builder: (context) {
         var iconColor = IconTheme.of(context).color;
+        if (item.icon.isEmpty) {
+          return Icon(
+            Icons.question_mark,
+            color: iconColor,
+            size: config.iconSize,
+          );
+        }
+
         var isImage = item.icon.contains('/');
         return isImage
             ? FluxImage(
diff --git a/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart b/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart
index 578a2a3c..6600df26 100644
--- a/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart
+++ b/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart
@@ -37,7 +37,11 @@ class _StateTikTokVideos extends State<TikTokVideos> {
   void initState() {
     super.initState();
 
-    WidgetsBinding.instance.addPostFrameCallback((_) => loadInit());
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        loadInit();
+      }
+    });
   }
 
   void loadInit() async {
diff --git a/lib/modules/dynamic_layout/vertical/pinterest_card.dart b/lib/modules/dynamic_layout/vertical/pinterest_card.dart
index c56795c0..ea0acc6b 100644
--- a/lib/modules/dynamic_layout/vertical/pinterest_card.dart
+++ b/lib/modules/dynamic_layout/vertical/pinterest_card.dart
@@ -29,7 +29,7 @@ class PinterestCard extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
-    final currency = Provider.of<CartModel>(context).currency;
+    final currency = Provider.of<CartModel>(context).currencyCode;
     final currencyRates = Provider.of<CartModel>(context).currencyRates;
     final isTablet = Helper.isTablet(MediaQuery.of(context));
 
@@ -130,9 +130,11 @@ class PinterestCard extends StatelessWidget {
                               ),
                             if (showCart &&
                                 !item.isEmptyProduct() &&
-                                !Config().isListingType) ...[
+                                !ServerConfig().isListingType) ...[
                               Align(
-                                alignment: context.isRtl ? Alignment.centerLeft : Alignment.centerRight,
+                                alignment: context.isRtl
+                                    ? Alignment.centerLeft
+                                    : Alignment.centerRight,
                                 child: CartIcon(product: item, config: config),
                               ),
                               const SizedBox(height: 40)
diff --git a/lib/modules/dynamic_layout/vertical/product_select_card.dart b/lib/modules/dynamic_layout/vertical/product_select_card.dart
index 91e2f36c..13b64e40 100644
--- a/lib/modules/dynamic_layout/vertical/product_select_card.dart
+++ b/lib/modules/dynamic_layout/vertical/product_select_card.dart
@@ -30,7 +30,7 @@ class ProductSelectCard extends StatelessWidget {
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
     final addProductToCart = Provider.of<CartModel>(context).addProductToCart;
-    final currency = Provider.of<CartModel>(context).currency;
+    final currency = Provider.of<CartModel>(context).currencyCode;
     final currencyRates = Provider.of<CartModel>(context).currencyRates;
     final isTablet = Helper.isTablet(MediaQuery.of(context));
     var titleFontSize = isTablet ? 24.0 : 14.0;
@@ -109,7 +109,7 @@ class ProductSelectCard extends StatelessWidget {
                           spacing: 0.0),
                     if (isShowCart &&
                         !item!.isEmptyProduct() &&
-                        !Config().isListingType)
+                        !ServerConfig().isListingType)
                       Material(
                         child: Padding(
                           padding: const EdgeInsets.all(2.0),
diff --git a/lib/modules/dynamic_layout/vertical/vertical.dart b/lib/modules/dynamic_layout/vertical/vertical.dart
index 9eefc1d5..663809ba 100644
--- a/lib/modules/dynamic_layout/vertical/vertical.dart
+++ b/lib/modules/dynamic_layout/vertical/vertical.dart
@@ -4,6 +4,7 @@ import '../../../models/product_model.dart';
 import '../../../services/service_config.dart';
 import '../config/product_config.dart';
 import '../helper/header_view.dart';
+import '../helper/helper.dart';
 import 'menu_layout.dart';
 import 'pinterest_layout.dart';
 import 'vertical_layout.dart';
@@ -16,9 +17,9 @@ class VerticalLayout extends StatelessWidget {
   Widget renderLayout() {
     var productConfig = ProductConfig.fromJson(config ?? {});
     switch (config['layout']) {
-      case 'menu':
+      case Layout.menu:
         return MenuLayout(config: productConfig);
-      case 'pinterest':
+      case Layout.pinterest:
         return PinterestLayout(config: productConfig);
       default:
         return VerticalViewLayout(config: productConfig);
@@ -33,7 +34,7 @@ class VerticalLayout extends StatelessWidget {
         if (config['name'] != null)
           HeaderView(
             headerText: config['name'] ?? '',
-            showSeeAll: !Config().isListingType,
+            showSeeAll: !ServerConfig().isListingType,
             callback: () => ProductModel.showList(
               context: context,
               config: config,
diff --git a/lib/modules/dynamic_layout/vertical/vertical_layout.dart b/lib/modules/dynamic_layout/vertical/vertical_layout.dart
index 3c7e3b86..9adde7e8 100644
--- a/lib/modules/dynamic_layout/vertical/vertical_layout.dart
+++ b/lib/modules/dynamic_layout/vertical/vertical_layout.dart
@@ -20,8 +20,8 @@ class VerticalViewLayout extends StatefulWidget {
 
 class _PinterestLayoutState extends State<VerticalViewLayout> {
   final Services _service = Services();
-  List<Product> _products = [];
-  bool canLoad = true;
+  ValueNotifier<List<Product>> products = ValueNotifier<List<Product>>([]);
+  ValueNotifier<bool> canLoad = ValueNotifier(true);
   int _page = 0;
   bool loading = false;
 
@@ -30,20 +30,16 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
     var config = widget.config.toJson();
     _page = _page + 1;
     config['page'] = _page;
-    if (!canLoad) return;
+    if (!canLoad.value) return;
     loading = true;
     var newProducts = await _service.api.fetchProductsLayout(
         config: config,
         lang: Provider.of<AppModel>(context, listen: false).langCode);
     if (newProducts == null || newProducts.isEmpty) {
-      setState(() {
-        canLoad = false;
-      });
+      canLoad.value = false;
     }
     if (newProducts != null && newProducts.isNotEmpty) {
-      setState(() {
-        _products = [..._products, ...newProducts];
-      });
+      products.value = [...products.value, ...newProducts];
     }
     loading = false;
   }
@@ -51,7 +47,9 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
   @override
   void initState() {
     super.initState();
-    _loadProduct();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) _loadProduct();
+    });
   }
 
   @override
@@ -68,61 +66,72 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
       widthContent = isTablet ? 3 : 2; //two columns
     }
     // ignore: division_optimization
-    var rows = (_products.length / widthContent).toInt();
-    if (rows * widthContent < _products.length) rows++;
 
     return Column(
       mainAxisAlignment: MainAxisAlignment.start,
       children: [
-        ListView.builder(
-            padding: EdgeInsets.symmetric(
-              vertical: widget.config.vPadding,
-              horizontal: widget.config.hPadding,
-            ),
-            cacheExtent: 1500,
-            physics: const NeverScrollableScrollPhysics(),
-            shrinkWrap: true,
-            itemCount: _products.length,
-            itemBuilder: (context, index) {
-              if (widget.config.layout == 'list') {
-                return ProductSimpleView(
-                  item: _products[index],
-                  type: SimpleType.backgroundColor,
-                );
-              }
-              return Row(
-                mainAxisAlignment: MainAxisAlignment.start,
-                crossAxisAlignment: CrossAxisAlignment.start,
-                children: List.generate(widthContent, (child) {
-                  return Expanded(
-                    child: index * widthContent + child < _products.length
-                        ? LayoutBuilder(
-                            builder: (context, constraints) {
-                              return Padding(
-                                padding: const EdgeInsets.only(bottom: 5),
-                                child: Services().widget.renderProductCardView(
-                                    item:
-                                        _products[index * widthContent + child],
-                                    width: constraints.maxWidth,
-                                    config: widget.config,
-                                    ratioProductImage:
-                                        widget.config.imageRatio),
-                              );
-                            },
-                          )
-                        : const SizedBox(),
-                  );
-                }),
-              );
+        ValueListenableBuilder<List<Product>>(
+            valueListenable: products,
+            builder: (context, value, child) {
+              var rows = value.length ~/ widthContent;
+              if (rows * widthContent < value.length) rows++;
+              return ListView.builder(
+                  padding: EdgeInsets.symmetric(
+                    vertical: widget.config.vPadding,
+                    horizontal: widget.config.hPadding,
+                  ),
+                  cacheExtent: 1500,
+                  physics: const NeverScrollableScrollPhysics(),
+                  shrinkWrap: true,
+                  itemCount: value.length,
+                  itemBuilder: (context, index) {
+                    if (widget.config.layout == 'list') {
+                      return ProductSimpleView(
+                        item: value[index],
+                        type: SimpleType.backgroundColor,
+                      );
+                    }
+                    return Row(
+                      mainAxisAlignment: MainAxisAlignment.start,
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: List.generate(widthContent, (child) {
+                        return Expanded(
+                          child: index * widthContent + child < value.length
+                              ? LayoutBuilder(
+                                  builder: (context, constraints) {
+                                    return Padding(
+                                      padding: const EdgeInsets.only(bottom: 5),
+                                      child: Services()
+                                          .widget
+                                          .renderProductCardView(
+                                              item: value[
+                                                  index * widthContent + child],
+                                              width: constraints.maxWidth,
+                                              config: widget.config,
+                                              ratioProductImage:
+                                                  widget.config.imageRatio),
+                                    );
+                                  },
+                                )
+                              : const SizedBox(),
+                        );
+                      }),
+                    );
+                  });
             }),
         VisibilityDetector(
           key: const Key('loading_vertical'),
           onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
-          child: !canLoad
-              ? const SizedBox()
-              : Center(
-                  child: Text(S.of(context).loading),
-                ),
+          child: ValueListenableBuilder<bool>(
+            valueListenable: canLoad,
+            builder: (context, value, child) {
+              if (!value) return const SizedBox();
+              return child ?? const SizedBox();
+            },
+            child: Center(
+              child: Text(S.of(context).loading),
+            ),
+          ),
         )
       ],
     );
diff --git a/lib/modules/firebase/dynamic_link_service.dart b/lib/modules/firebase/dynamic_link_service.dart
index 55bd8bd4..6b37fb30 100644
--- a/lib/modules/firebase/dynamic_link_service.dart
+++ b/lib/modules/firebase/dynamic_link_service.dart
@@ -89,6 +89,22 @@ class DynamicLinkService {
           );
         }
 
+        /// PRODUCT TAGS CASE
+      } else if (url.contains('/product-tag/')) {
+        final slug = Uri.tryParse(url)?.pathSegments.last;
+
+        if (slug == null) throw '';
+
+        final tag = await Services().api.getTagBySlug(slug);        
+        if (tag != null) {
+          await FluxNavigate.pushNamed(
+            RouteList.backdrop,
+            arguments: BackDropArguments(
+              tag: tag.id.toString(),
+            ),
+          );
+        }
+
         /// VENDOR CASE
       } else if (url.contains('/store/')) {
         final vendor = await Services().api.getStoreByPermalink(url);
@@ -98,6 +114,22 @@ class DynamicLinkService {
             arguments: StoreDetailArgument(store: vendor),
           );
         }
+      } else if (url.contains('/brand/')) {
+        final slug = Uri.tryParse(url)?.pathSegments.last;
+
+        if (slug == null) throw '';
+
+        final brand = await Services().api.getBrandBySlug(slug);
+        if (brand != null) {
+          await FluxNavigate.pushNamed(
+            RouteList.backdrop,
+            arguments: BackDropArguments(
+              brandId: brand.id,
+              brandName: brand.name,
+              brandImg: brand.image,
+            ),
+          );
+        }
       } else {
         var blog = await Services().api.getBlogByPermalink(url);
         if (blog != null) {
@@ -159,7 +191,26 @@ class DynamicLinkService {
         .getProductCategoryById(categoryId: productCategoryId);
     var url;
     if (cate != null) {
-      url = serverConfig['url'] + '/product-category/' + cate.slug;
+      url = '${ServerConfig().url}/product-category/${cate.slug}';
+    }
+    return url;
+  }
+
+  Future<String> generateProductTagUrl(dynamic productTagId) async {
+    final tag =
+        await _service.api.getTagById(tagId: productTagId.toString());
+    var url;
+    if (tag != null) {
+      url = '${ServerConfig().url}/product-tag/${tag.slug}';
+    }
+    return url;
+  }
+
+  Future<String> generateProductBrandUrl(dynamic brandCategoryId) async {
+    final cate = await _service.api.getBrandById(brandCategoryId);
+    var url;
+    if (cate != null) {
+      url = serverConfig['url'] + '/brand/' + cate.slug;
     }
     return url;
   }
diff --git a/lib/modules/firebase/firebase_notification_service.dart b/lib/modules/firebase/firebase_notification_service.dart
index bbfd7e72..c857f5ad 100644
--- a/lib/modules/firebase/firebase_notification_service.dart
+++ b/lib/modules/firebase/firebase_notification_service.dart
@@ -7,6 +7,8 @@ import '../../common/constants.dart';
 import '../../models/entities/index.dart';
 import '../../services/notification/notification_service.dart';
 
+const _topicAll = 'all-notifications';
+
 class FirebaseNotificationService extends NotificationService {
   final _instance = FirebaseMessaging.instance;
 
@@ -43,6 +45,8 @@ class FirebaseNotificationService extends NotificationService {
       sound: true,
     );
 
+    await _instance.subscribeToTopic('all-notifications');
+
     final initMessage = await _instance.getInitialMessage();
     if (initMessage != null) {
       delegate.onMessageOpenedApp(FStoreNotificationItem(
@@ -101,6 +105,7 @@ class FirebaseNotificationService extends NotificationService {
 
   @override
   void disableNotification() {
+    _instance.unsubscribeFromTopic(_topicAll);
     _instance.setForegroundNotificationPresentationOptions(
       alert: false, // Required to display a heads up notification
       badge: false,
@@ -113,6 +118,7 @@ class FirebaseNotificationService extends NotificationService {
 
   @override
   void enableNotification() {
+    _instance.subscribeToTopic(_topicAll);
     _instance.setForegroundNotificationPresentationOptions(
       alert: true, // Required to display a heads up notification
       badge: true,
diff --git a/lib/modules/native_payment/flutterwave/services.dart b/lib/modules/native_payment/flutterwave/services.dart
new file mode 100644
index 00000000..d48777f8
--- /dev/null
+++ b/lib/modules/native_payment/flutterwave/services.dart
@@ -0,0 +1,105 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:flutterwave_standard/core/transaction_status.dart';
+import 'package:flutterwave_standard/flutterwave.dart';
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+import '../../../services/services.dart';
+
+class FlutterwaveServices {
+  FlutterwaveServices(
+      {required this.amount,
+      required this.orderId,
+      this.email,
+      this.name,
+      this.phone,
+      this.currency,
+      this.paymentMethod});
+
+  var publicKey = kFlutterwaveConfig['publicKey'];
+
+  final domain = Services().api.domain;
+  final String amount;
+  final String orderId;
+  final String? name;
+  final String? phone;
+  final String? email;
+  final String? currency;
+  final String? paymentMethod;
+
+  Future<void> _verifyPayment(String? txref) async {
+    try {
+      await httpGet(
+        '$domain/wp-json/api/flutter_flutterwave/flw_verify_payment?txref=$txref'
+            .toUri()!,
+        headers: {'content-type': 'application/json'},
+      );
+      return;
+    } catch (e) {
+      rethrow;
+    }
+  }
+
+  Future openPayment(BuildContext context, Function(bool) onLoading) async {
+    try {
+      Future.delayed(const Duration(milliseconds: 200), () {
+        onLoading(true);
+      });
+      final style = FlutterwaveStyle(
+          appBarText: paymentMethod,
+          buttonColor: Theme.of(context).primaryColor,
+          appBarColor: Theme.of(context).primaryColor,
+          appBarIcon: const Icon(Icons.arrow_back, color: Colors.white),
+          appBarTitleTextStyle: const TextStyle(
+              color: Colors.white, fontSize: 18, fontWeight: FontWeight.normal),
+          buttonTextStyle: const TextStyle(
+              color: Colors.white,
+              fontSize: 16,
+              fontWeight: FontWeight.normal));
+
+      final customer = Customer(
+          name: name ?? '', phoneNumber: phone ?? '', email: email ?? '');
+
+      final flutterwave = Flutterwave(
+          context: context,
+          style: style,
+          publicKey: publicKey,
+          currency: currency,
+          redirectUrl: 'https://google.com',
+          txRef: 'WOOC_${orderId}_${DateTime.now().millisecondsSinceEpoch}',
+          amount: amount,
+          customer: customer,
+          paymentOptions: 'ussd, card, barter, payattitude',
+          customization: Customization(),
+          isTestMode: kFlutterwaveConfig['production']);
+      var response = await flutterwave.charge();
+      if (response.success == true) {
+        await _verifyPayment(response.txRef);
+        onLoading(false);
+      } else if (response.status == TransactionStatus.ERROR) {
+        onLoading(false);
+        throw 'Payment is failed';
+      } else {
+        onLoading(false);
+      }
+    } catch (e) {
+      onLoading(false);
+      if (e is PlatformException) {
+        if (e.details is Map && Map.from(e.details)['response'] != null) {
+          throw '${e.message ?? ''} ${Map.from(e.details)['response']}';
+        } else {
+          throw '${e.message ?? ''} ${e.details}';
+        }
+      } else if (e.toString() ==
+          "type 'Null' is not a subtype of type 'FutureOr<ChargeResponse>'") {
+        // handle back button
+        throw 'Cancelled';
+      } else {
+        rethrow;
+      }
+    }
+  }
+}
diff --git a/lib/modules/native_payment/index.dart b/lib/modules/native_payment/index.dart
deleted file mode 100644
index 559418f7..00000000
--- a/lib/modules/native_payment/index.dart
+++ /dev/null
@@ -1,4 +0,0 @@
-export 'mercado_pago/index.dart';
-export 'paypal/index.dart';
-export 'paytm/services.dart';
-export 'razorpay/services.dart';
diff --git a/lib/modules/native_payment/mercado_pago/index.dart b/lib/modules/native_payment/mercado_pago/index.dart
index ab0c0b3e..8e277063 100644
--- a/lib/modules/native_payment/mercado_pago/index.dart
+++ b/lib/modules/native_payment/mercado_pago/index.dart
@@ -6,11 +6,13 @@ import 'package:webview_flutter/webview_flutter.dart';
 
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
-import '../../../models/index.dart' show AppModel, CartModel, Product;
+import '../../../models/index.dart'
+    show AppModel, CartModel, Product, UserModel;
+import '../../../services/service_config.dart';
 import 'services.dart';
 
 class MercadoPagoPayment extends StatefulWidget {
-  final Function? onFinish;
+  final Function(dynamic, bool)? onFinish;
 
   const MercadoPagoPayment({this.onFinish});
 
@@ -26,7 +28,7 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
   final MercadoPagoServices _services = MercadoPagoServices();
   String? url;
   String? id = '';
-  final kReturnSuccessUrl = serverConfig['url'] + '/success';
+  final kReturnSuccessUrl = '${ServerConfig().url}/success';
 
   Map<String, dynamic> getOrderParams() {
     var cartModel = Provider.of<CartModel>(context, listen: false);
@@ -52,20 +54,23 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
     var temp = <String, dynamic>{
       'items': items,
       'back_urls': {'success': kReturnSuccessUrl},
+      'shipments': {'cost': cartModel.getShippingCost()}
     };
 
+    final userEmail = context.read<UserModel>().user?.email;
+    if (userEmail != null) {
+      temp['payer'] = {'email': userEmail};
+    }
+
     return temp;
   }
 
   Future<void> customWebViewListener(WebViewController controller) async {
     var currentUrl = await (controller.currentUrl() as Future<String>);
-    if (currentUrl.contains(kReturnSuccessUrl) ||
-        currentUrl.contains('congrats/approved')) {
-      widget.onFinish!(id);
-      Navigator.of(context).pop();
-    } else {
-      await Future.delayed(const Duration(seconds: 2))
-          .then((value) => customWebViewListener(controller));
+    if (!_handleUrlCallback(context, currentUrl)) {
+      await Future.delayed(const Duration(seconds: 2)).then(
+        (value) => customWebViewListener(controller),
+      );
     }
   }
 
@@ -73,14 +78,16 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
   void initState() {
     super.initState();
 
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) async {
-      var map = await _services.getPaymentUrl(getOrderParams());
-      url = map['paymentUrl'];
-      id = map['orderId'];
-      if (url == null) {
-        return;
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        var map = await _services.getPaymentUrl(getOrderParams());
+        url = map['paymentUrl'];
+        id = map['orderId'];
+        if (url == null) {
+          return;
+        }
+        setState(() {});
       }
-      setState(() {});
     });
   }
 
@@ -93,7 +100,7 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
           backgroundColor: Theme.of(context).backgroundColor,
           leading: GestureDetector(
             onTap: () {
-              widget.onFinish!(null);
+              widget.onFinish?.call(null, false);
               Navigator.pop(context);
             },
             child: const Icon(Icons.arrow_back_ios),
@@ -104,11 +111,7 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
           onWebViewCreated: customWebViewListener,
           javascriptMode: JavascriptMode.unrestricted,
           navigationDelegate: (NavigationRequest request) {
-            if (request.url.contains(kReturnSuccessUrl) ||
-                request.url.contains('congrats/approved')) {
-              widget.onFinish!(id);
-              Navigator.of(context).pop();
-            }
+            _handleUrlCallback(context, request.url);
             return NavigationDecision.navigate;
           },
         ),
@@ -121,7 +124,7 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
           leading: IconButton(
               icon: const Icon(Icons.arrow_back),
               onPressed: () {
-                widget.onFinish!(null);
+                widget.onFinish?.call(null, false);
                 Navigator.of(context).pop();
               }),
           backgroundColor: kGrey200,
@@ -131,4 +134,18 @@ class MercadoPagoPaymentState extends State<MercadoPagoPayment> {
       ),
     );
   }
+
+  bool _handleUrlCallback(BuildContext context, String url) {
+    /// Efecty, customers needs to make the payment at the physical branch and
+    /// they need a voucher with the data to be able to pay this in the physical establishment.
+    /// Order will be created as not paid.
+    final isEfectyPaymentMethod = url.contains('congrats/instructions');
+    final paid = !isEfectyPaymentMethod;
+    if (url.contains(kReturnSuccessUrl) || url.contains('congrats/approved')) {
+      widget.onFinish?.call(id, paid);
+      Navigator.of(context).pop();
+      return true;
+    }
+    return false;
+  }
 }
diff --git a/lib/modules/native_payment/paypal/index.dart b/lib/modules/native_payment/paypal/index.dart
index 0f038778..be23f79f 100644
--- a/lib/modules/native_payment/paypal/index.dart
+++ b/lib/modules/native_payment/paypal/index.dart
@@ -72,7 +72,7 @@ class PaypalPaymentState extends State<PaypalPayment> {
           Provider.of<AppModel>(context, listen: false).currencyRate;
       final cartModel = Provider.of<CartModel>(context, listen: false);
       var p = PriceTools.getPriceValueByCurrency(
-          price, cartModel.currency!, currencyRate);
+          price, cartModel.currencyCode!, currencyRate);
       final formatCurrency = NumberFormat('#,##0.00', 'en_US');
       return formatCurrency.format(p);
     } else {
diff --git a/lib/modules/native_payment/paystack/services.dart b/lib/modules/native_payment/paystack/services.dart
new file mode 100644
index 00000000..21aeef63
--- /dev/null
+++ b/lib/modules/native_payment/paystack/services.dart
@@ -0,0 +1,98 @@
+import 'dart:async';
+import 'dart:convert' as convert;
+
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:flutter_paystack/flutter_paystack.dart';
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+import '../../../services/services.dart';
+
+class PayStackServices {
+  PayStackServices({required this.amount, required this.orderId, this.email});
+
+  var publicKey = kPayStackConfig['publicKey'];
+  final _plugin = PaystackPlugin();
+
+  final domain = Services().api.domain;
+  final String amount;
+  final String orderId;
+  final String? email;
+
+  Future<String?> _initializeTransaction(params) async {
+    try {
+      var response = await httpPost(
+        '$domain/wp-json/api/flutter_paystack/initialize_transaction'.toUri()!,
+        body: convert.jsonEncode(params),
+        headers: {'content-type': 'application/json'},
+      );
+
+      final body = convert.jsonDecode(response.body);
+      if (response.statusCode == 200 &&
+          body['access_code'] != null &&
+          body['access_code'].toString().isNotEmpty) {
+        return body['access_code'];
+      } else if (body['message'] != null) {
+        throw body['message'];
+      }
+      return null;
+    } catch (e) {
+      rethrow;
+    }
+  }
+
+  Future<void> _verifyPayStackTransaction(params) async {
+    try {
+      await httpPost(
+        '$domain/wp-json/api/flutter_paystack/verify_paystack_transaction'
+            .toUri()!,
+        body: convert.jsonEncode(params),
+        headers: {'content-type': 'application/json'},
+      );
+      return;
+    } catch (e) {
+      rethrow;
+    }
+  }
+
+  Future openPayment(BuildContext context, Function(bool) onLoading) async {
+    try {
+      Future.delayed(const Duration(milliseconds: 200), () {
+        onLoading(true);
+      });
+      await _plugin.initialize(publicKey: publicKey);
+      var params = {'order_id': orderId};
+      var accessCode = await _initializeTransaction(params);
+      var charge = Charge()
+        ..amount = double.parse(amount).toInt() * 100
+        ..accessCode = accessCode
+        ..email = email;
+      onLoading(false);
+      var response = await _plugin.checkout(
+        context,
+        method: CheckoutMethod.selectable,
+        charge: charge,
+      );
+      if (response.status == true && response.message == 'Success') {
+        onLoading(true);
+        await _verifyPayStackTransaction({'reference': response.reference});
+        onLoading(false);
+        return;
+      } else {
+        throw response.message;
+      }
+    } catch (e) {
+      onLoading(false);
+      if (e is PlatformException) {
+        if (e.details is Map && Map.from(e.details)['response'] != null) {
+          throw '${e.message ?? ''} ${Map.from(e.details)['response']}';
+        } else {
+          throw '${e.message ?? ''} ${e.details}';
+        }
+      } else {
+        rethrow;
+      }
+    }
+  }
+}
diff --git a/lib/modules/native_payment/paytm/services.dart b/lib/modules/native_payment/paytm/services.dart
index 137fae1e..c8c1c337 100644
--- a/lib/modules/native_payment/paytm/services.dart
+++ b/lib/modules/native_payment/paytm/services.dart
@@ -16,7 +16,7 @@ class PayTmServices {
   final String orderId;
   final String? email;
 
-  Future<String?> generateTxnToken(params) async {
+  Future<String?> _generateTxnToken(params) async {
     try {
       var response = await httpPost(
         '$domain/wp-json/api/flutter_paytm/generate_txn_token'.toUri()!,
@@ -45,7 +45,7 @@ class PayTmServices {
         'amount': amount,
         'cust_id': email ?? 'CUST_$orderId'
       };
-      final txnToken = await generateTxnToken(params);
+      final txnToken = await _generateTxnToken(params);
       if (txnToken != null) {
         var merchantId = kPayTmConfig['merchantId'];
         var isProduction = kPayTmConfig['production'] ?? false;
diff --git a/lib/modules/product_reviews/product_reviews_model.dart b/lib/modules/product_reviews/product_reviews_model.dart
index acc9226b..b84202fb 100644
--- a/lib/modules/product_reviews/product_reviews_model.dart
+++ b/lib/modules/product_reviews/product_reviews_model.dart
@@ -5,6 +5,8 @@ import '../../services/index.dart';
 enum LoadState { loading, loaded, loadMore, noData, noMore }
 
 class ProductReviewsModel extends ChangeNotifier {
+  bool _mounted = false;
+  bool get mounted => _mounted;
   final _services = Services();
   final _perPage = 10;
   int _page = 1;
@@ -20,8 +22,10 @@ class ProductReviewsModel extends ChangeNotifier {
   }
 
   void _updateState(state) {
-    _state = state;
-    notifyListeners();
+    if (!mounted) {
+      _state = state;
+      notifyListeners();
+    }
   }
 
   Future<void> getComments() async {
@@ -63,4 +67,10 @@ class ProductReviewsModel extends ChangeNotifier {
     }
     _updateState(LoadState.loaded);
   }
+
+  @override
+  void dispose() {
+    super.dispose();
+    _mounted = true;
+  }
 }
diff --git a/lib/modules/tera_wallet/views/my_wallet_screen.dart b/lib/modules/tera_wallet/views/my_wallet_screen.dart
index 99747387..22571fc8 100644
--- a/lib/modules/tera_wallet/views/my_wallet_screen.dart
+++ b/lib/modules/tera_wallet/views/my_wallet_screen.dart
@@ -27,9 +27,11 @@ class _MyWalletScreenState extends State<MyWalletScreen> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      _walletModel.getBalance();
-      _walletModel.getListTransaction();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        _walletModel.getBalance();
+        _walletModel.getListTransaction();
+      }
     });
   }
 
@@ -195,6 +197,8 @@ class _MyWalletScreenState extends State<MyWalletScreen> {
                           .copyWith(
                             color: Colors.white,
                           ),
+                      overflow: TextOverflow.ellipsis,
+                      maxLines: 2,
                     ),
                     // const SizedBox(height: 12),
                     // Text(
diff --git a/lib/modules/tera_wallet/views/partial_payment.dart b/lib/modules/tera_wallet/views/partial_payment.dart
index 0233af90..24ff3488 100644
--- a/lib/modules/tera_wallet/views/partial_payment.dart
+++ b/lib/modules/tera_wallet/views/partial_payment.dart
@@ -28,9 +28,11 @@ class _PayPartialPaymentState extends State<PayPartialPayment> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      cartModel.setWalletAmount(0.0);
-      walletModel.getBalance();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        cartModel.setWalletAmount(0.0);
+        walletModel.getBalance();
+      }
     });
   }
 
@@ -43,10 +45,11 @@ class _PayPartialPaymentState extends State<PayPartialPayment> {
 
     final cartModel = Provider.of<CartModel>(context, listen: false);
 
-    final currency = Provider.of<AppModel>(context, listen: false).currency;
+    final currencyCode =
+        Provider.of<AppModel>(context, listen: false).currencyCode;
     final defaultCurrency = kAdvanceConfig.defaultCurrency?.currencyCode;
     final disablePayment = defaultCurrency.toString().toLowerCase() !=
-        currency.toString().toLowerCase();
+        currencyCode.toString().toLowerCase();
 
     return Consumer<WalletModel>(
       builder: (context, value, child) {
diff --git a/lib/modules/tera_wallet/views/transfer_screen.dart b/lib/modules/tera_wallet/views/transfer_screen.dart
index 1e40b2cc..8aa2afe5 100644
--- a/lib/modules/tera_wallet/views/transfer_screen.dart
+++ b/lib/modules/tera_wallet/views/transfer_screen.dart
@@ -63,12 +63,14 @@ class _TransferScreenState extends State<TransferScreen> {
       locale: _numberFormat.locale,
       symbol: _numberFormat.currencySymbol,
     );
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      Future.delayed(const Duration(milliseconds: 200), () {
-        if (_emailTextController.text.isNotEmpty) {
-          _numberFocusNode.requestFocus();
-        }
-      });
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        Future.delayed(const Duration(milliseconds: 200), () {
+          if (_emailTextController.text.isNotEmpty) {
+            _numberFocusNode.requestFocus();
+          }
+        });
+      }
     });
   }
 
diff --git a/lib/modules/tera_wallet/views/widgets/payment_method_item.dart b/lib/modules/tera_wallet/views/widgets/payment_method_item.dart
index b102a982..519532d5 100644
--- a/lib/modules/tera_wallet/views/widgets/payment_method_item.dart
+++ b/lib/modules/tera_wallet/views/widgets/payment_method_item.dart
@@ -24,19 +24,19 @@ class PaymentMethodItem extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    final currency = Provider.of<AppModel>(context, listen: false).currency;
+    final currencyCode = Provider.of<AppModel>(context, listen: false).currencyCode;
     final cartModel = Provider.of<CartModel>(context, listen: false);
     final defaultCurrency = kAdvanceConfig.defaultCurrency?.currencyCode;
     final disablePayment = defaultCurrency.toString().toLowerCase() !=
-        currency.toString().toLowerCase();
+        currencyCode.toString().toLowerCase();
 
     return Consumer<WalletModel>(builder: (context, model, child) {
       if (model.balance > 0 && (cartModel.getTotal() ?? 0) <= model.balance) {
         return base.PaymentMethodItem(
             paymentMethod: paymentMethod,
-            onSelected: disablePayment ? null : onSelected,
+            onSelected: disablePayment == true ? null : onSelected,
             selectedId: selectedId,
-            descWidget: disablePayment
+            descWidget: disablePayment == true
                 ? WarningCurrency(defaultCurrency: defaultCurrency ?? '')
                 : CurrentBalance(balance: model.balance));
       } else {
diff --git a/lib/modules/vendor_on_boarding/vendor_information/vendor_location_information_screen.dart b/lib/modules/vendor_on_boarding/vendor_information/vendor_location_information_screen.dart
index aadef8f8..85d11564 100644
--- a/lib/modules/vendor_on_boarding/vendor_information/vendor_location_information_screen.dart
+++ b/lib/modules/vendor_on_boarding/vendor_information/vendor_location_information_screen.dart
@@ -132,28 +132,31 @@ class _VendorLocationInformationState extends State<VendorLocationInformation> {
     _uuid = const Uuid().v4();
     super.initState();
 
-    WidgetsBinding.instance.addPostFrameCallback((_) async {
-      final model = Provider.of<VendorOnBoardingModel>(context, listen: false);
-      _locationController.text = model.location;
-      _lat = model.lat;
-      _long = model.long;
-      if (_lat == null && _long == null) {
-        final locationService = injector<LocationService>();
-        await locationService.init();
-        if (locationService.canUseLocation) {
-          final data = {
-            'location': '',
-            'lat': locationService.locationData?.latitude ?? 0.0,
-            'long': locationService.locationData?.longitude ?? 0.0,
-          };
-          _lat = locationService.locationData?.latitude ?? 0.0;
-          _long = locationService.locationData?.longitude ?? 0.0;
-          _markers.add(
-            Marker(
-                markerId: MarkerId('$_lat-$_long'),
-                position: LatLng(_lat!, _long!)),
-          );
-          model.updateLocation(data);
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        final model =
+            Provider.of<VendorOnBoardingModel>(context, listen: false);
+        _locationController.text = model.location;
+        _lat = model.lat;
+        _long = model.long;
+        if (_lat == null && _long == null) {
+          final locationService = injector<LocationService>();
+          await locationService.init();
+          if (locationService.canUseLocation) {
+            final data = {
+              'location': '',
+              'lat': locationService.locationData?.latitude ?? 0.0,
+              'long': locationService.locationData?.longitude ?? 0.0,
+            };
+            _lat = locationService.locationData?.latitude ?? 0.0;
+            _long = locationService.locationData?.longitude ?? 0.0;
+            _markers.add(
+              Marker(
+                  markerId: MarkerId('$_lat-$_long'),
+                  position: LatLng(_lat!, _long!)),
+            );
+            model.updateLocation(data);
+          }
         }
       }
     });
diff --git a/lib/modules/vendor_on_boarding/vendor_onboarding_services.dart b/lib/modules/vendor_on_boarding/vendor_onboarding_services.dart
index ccb2dc71..06e75e75 100644
--- a/lib/modules/vendor_on_boarding/vendor_onboarding_services.dart
+++ b/lib/modules/vendor_on_boarding/vendor_onboarding_services.dart
@@ -3,6 +3,7 @@ import 'dart:convert';
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/error_codes/error_codes.dart';
+import '../../services/service_config.dart';
 
 class VendorOnBoardingServices {
   late final _url;
@@ -17,12 +18,12 @@ class VendorOnBoardingServices {
   }
 
   VendorOnBoardingServices._internal() {
-    _url = serverConfig['url'];
-    _type = serverConfig['type'];
+    _url = ServerConfig().url;
+    _type = ServerConfig().type;
     if (_type == 'vendorAdmin') {
-      _platform = serverConfig['platform'] ?? 'wcfm';
+      _platform = ServerConfig().platform;
     } else {
-      _platform = serverConfig['type'];
+      _platform = ServerConfig().typeName;
     }
   }
 
diff --git a/lib/modules_ext/booking/booking.dart b/lib/modules_ext/booking/booking.dart
new file mode 100644
index 00000000..d673e677
--- /dev/null
+++ b/lib/modules_ext/booking/booking.dart
@@ -0,0 +1,6 @@
+library booking;
+
+export '../../models/booking/booking_model.dart';
+export '../../models/booking/staff_booking_model.dart';
+export 'viewmodel/booking_viewmodel.dart';
+export 'views/product_booking_layout.dart';
diff --git a/lib/modules_ext/booking/booking_constants.dart b/lib/modules_ext/booking/booking_constants.dart
new file mode 100644
index 00000000..7b3b1a9e
--- /dev/null
+++ b/lib/modules_ext/booking/booking_constants.dart
@@ -0,0 +1,6 @@
+class BookingConstants {
+  static const double maxHeightBookingWidget = 860;
+  static const String keyBookingChangeDate = 'keyBookingChangeDate';
+  static const String keyBookingNow = 'keyBookingNow';
+  static const bool requiredStaff = false;
+}
diff --git a/lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_collection.json b/lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_collection.json
new file mode 100644
index 00000000..b12a6473
--- /dev/null
+++ b/lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_collection.json
@@ -0,0 +1,3751 @@
+{
+	"info": {
+		"_postman_id": "ed27bf23-272d-4c98-9b54-cd8415ae9d6e",
+		"name": "Woo API Booking",
+		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
+	},
+	"item": [
+		{
+			"name": "API Product and Order",
+			"item": [
+				{
+					"name": "Create Order",
+					"protocolProfileBehavior": {
+						"disabledSystemHeaders": {
+							"content-type": true
+						}
+					},
+					"request": {
+						"method": "POST",
+						"header": [
+							{
+								"key": "Content-Type",
+								"type": "text",
+								"value": "application/json"
+							},
+							{
+								"key": "Cache-Control",
+								"type": "text",
+								"value": "no-cache",
+								"disabled": true
+							}
+						],
+						"body": {
+							"mode": "raw",
+							"raw": "{\n    \"set_paid\": false,\n    \"line_items\": [\n        {\n            \"product_id\": \"174\",\n            \"quantity\": 1\n        }\n    ],\n    \"customer_id\": \"10\",\n    \"payment_method\": \"cod\",\n    \"payment_method_title\": \"Cash on delivery\",\n    \"billing\": {\n        \"first_name\": \"hieu\\t\",\n        \"last_name\": \"hieu\",\n        \"address_1\": \"Ha Noi\",\n        \"address_2\": \"\",\n        \"city\": \"Ha Noi\",\n        \"state\": \"56\",\n        \"country\": \"VN\",\n        \"email\": \"hieuinspireui@gmail.com\",\n        \"phone\": \"0933388989\",\n        \"postcode\": \"700000\",\n        \"mapUrl\": null\n    },\n    \"shipping\": {\n        \"first_name\": \"hieu\\t\",\n        \"last_name\": \"hieu\",\n        \"address_1\": \"Ha Noi\",\n        \"address_2\": \"\",\n        \"city\": \"Ha Noi\",\n        \"state\": \"56\",\n        \"country\": \"VN\",\n        \"email\": \"hieuinspireui@gmail.com\",\n        \"phone\": \"0933388989\",\n        \"postcode\": \"700000\",\n        \"mapUrl\": null\n    },\n    \"shipping_lines\": [\n        {\n            \"method_id\": \"free_shipping:2\",\n            \"method_title\": \"Free shipping\",\n            \"total\": \"0.0\"\n        }\n    ]\n}"
+						},
+						"url": {
+							"raw": "{{baseUrlWoo}}/orders?{{keyVerify}}",
+							"host": [
+								"{{baseUrlWoo}}"
+							],
+							"path": [
+								"orders"
+							],
+							"query": [
+								{
+									"key": "{{keyVerify}}",
+									"value": null
+								}
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Get list customer",
+					"request": {
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlWoo}}/customers?{{keyVerify}}",
+							"host": [
+								"{{baseUrlWoo}}"
+							],
+							"path": [
+								"customers"
+							],
+							"query": [
+								{
+									"key": "{{keyVerify}}",
+									"value": null
+								}
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Get list product",
+					"request": {
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlWoo}}/products?{{keyVerify}}",
+							"host": [
+								"{{baseUrlWoo}}"
+							],
+							"path": [
+								"products"
+							],
+							"query": [
+								{
+									"key": "{{keyVerify}}",
+									"value": null
+								}
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Get orther ",
+					"request": {
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlWoo}}/orders?{{keyVerify}}",
+							"host": [
+								"{{baseUrlWoo}}"
+							],
+							"path": [
+								"orders"
+							],
+							"query": [
+								{
+									"key": "{{keyVerify}}",
+									"value": null
+								}
+							]
+						}
+					},
+					"response": []
+				}
+			],
+			"protocolProfileBehavior": {}
+		},
+		{
+			"name": "API Booking Custom",
+			"item": [
+				{
+					"name": "Availability API Controller",
+					"request": {
+						"auth": {
+							"type": "oauth1",
+							"oauth1": [
+								{
+									"key": "consumerSecret",
+									"value": "{{consumer_secret}}",
+									"type": "string"
+								},
+								{
+									"key": "consumerKey",
+									"value": "{{consumer_key}}",
+									"type": "string"
+								},
+								{
+									"key": "signatureMethod",
+									"value": "HMAC-SHA1",
+									"type": "string"
+								},
+								{
+									"key": "version",
+									"value": "1.0",
+									"type": "string"
+								},
+								{
+									"key": "addParamsToHeader",
+									"value": false,
+									"type": "boolean"
+								},
+								{
+									"key": "addEmptyParamsToSign",
+									"value": false,
+									"type": "boolean"
+								}
+							]
+						},
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlBooking}}/wp-json/wc-appointments/v1/availabilities?filter[0][key]=kind_id&filter[0][value]=7",
+							"host": [
+								"{{baseUrlBooking}}"
+							],
+							"path": [
+								"wp-json",
+								"wc-appointments",
+								"v1",
+								"availabilities"
+							],
+							"query": [
+								{
+									"key": "filter[0][key]",
+									"value": "kind_id"
+								},
+								{
+									"key": "filter[0][value]",
+									"value": "7"
+								}
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Create Order",
+					"request": {
+						"auth": {
+							"type": "oauth1",
+							"oauth1": [
+								{
+									"key": "consumerSecret",
+									"value": "{{consumer_secret}}",
+									"type": "string"
+								},
+								{
+									"key": "consumerKey",
+									"value": "{{consumer_key}}",
+									"type": "string"
+								},
+								{
+									"key": "signatureMethod",
+									"value": "HMAC-SHA1",
+									"type": "string"
+								},
+								{
+									"key": "version",
+									"value": "1.0",
+									"type": "string"
+								},
+								{
+									"key": "addParamsToHeader",
+									"value": false,
+									"type": "boolean"
+								},
+								{
+									"key": "addEmptyParamsToSign",
+									"value": false,
+									"type": "boolean"
+								}
+							]
+						},
+						"method": "POST",
+						"header": [],
+						"body": {
+							"mode": "raw",
+							"raw": "{\n  \"payment_method\": \"cod\",\n  \"payment_method_title\": \"Direct Bank Transfer\",\n  \"set_paid\": true,\n  \"billing\": {\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"address_1\": \"969 Market\",\n    \"address_2\": \"\",\n    \"city\": \"San Francisco\",\n    \"state\": \"CA\",\n    \"postcode\": \"94103\",\n    \"country\": \"US\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"(555) 555-5555\"\n  },\n  \"shipping\": {\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"address_1\": \"969 Market\",\n    \"address_2\": \"\",\n    \"city\": \"San Francisco\",\n    \"state\": \"CA\",\n    \"postcode\": \"94103\",\n    \"country\": \"US\"\n  },\n  \"line_items\": [\n    {\n      \"product_id\": 7,\n      \"quantity\": 1\n    }\n  ],\n  \"customer_id\":1\n}",
+							"options": {
+								"raw": {
+									"language": "json"
+								}
+							}
+						},
+						"url": {
+							"raw": "{{host}}/wp-json/wc/v2/orders",
+							"host": [
+								"{{host}}"
+							],
+							"path": [
+								"wp-json",
+								"wc",
+								"v2",
+								"orders"
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Create Booking",
+					"request": {
+						"auth": {
+							"type": "noauth"
+						},
+						"method": "POST",
+						"header": [],
+						"body": {
+							"mode": "raw",
+							"raw": "{\n  \"wc_appointments_field_start_date_month\":\"08\",\n  \"wc_appointments_field_start_date_day\":\"06\",\n  \"wc_appointments_field_start_date_year\":\"2020\",\n  \"wc_appointments_field_start_date_time\":\"12:00\",\n  \"wc_appointments_field_addons_duration\":\"0\",\n  \"wc_appointments_field_addons_cost\":\"0\",\n  \"product_id\":\"174\",\n  \"order_id\":\"24120\"\n}",
+							"options": {
+								"raw": {
+									"language": "json"
+								}
+							}
+						},
+						"url": {
+							"raw": "{{host}}/wp-json/api/flutter_booking/checkout",
+							"host": [
+								"{{host}}"
+							],
+							"path": [
+								"wp-json",
+								"api",
+								"flutter_booking",
+								"checkout"
+							]
+						}
+					},
+					"response": []
+				}
+			],
+			"event": [
+				{
+					"listen": "prerequest",
+					"script": {
+						"id": "b2d13059-c8fd-4641-86b0-bee029230d55",
+						"type": "text/javascript",
+						"exec": [
+							""
+						]
+					}
+				},
+				{
+					"listen": "test",
+					"script": {
+						"id": "a1996fda-8bb7-4f94-90e8-6d5917f2306f",
+						"type": "text/javascript",
+						"exec": [
+							""
+						]
+					}
+				}
+			],
+			"protocolProfileBehavior": {}
+		},
+		{
+			"name": "API Booking Plugin",
+			"item": [
+				{
+					"name": "appointment",
+					"item": [
+						{
+							"name": "Appointments",
+							"protocolProfileBehavior": {
+								"disableBodyPruning": true
+							},
+							"request": {
+								"method": "GET",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments?context=view",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view"
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments",
+							"request": {
+								"method": "POST",
+								"header": [
+									{
+										"key": "Content-Type",
+										"value": "application/json; charset=utf-8",
+										"type": "text"
+									}
+								],
+								"body": {
+									"mode": "raw",
+									"raw": "{\n    \"all_day\": false,\n    \"cost\": \"22.50\",\n    \"customer_id\": 0,\n    \"date_created\": 1595506030,\n    \"date_modified\": 1595506030,\n    \"start\": 1595757600,\n    \"end\": 1595761200,\n    \"order_id\": 5456,\n    \"order_item_id\": 6,\n    \"parent_id\": 0,\n    \"product_id\": 5308,\n    \"staff_id\": [],\n    \"staff_ids\": [],\n    \"status\": \"unpaid\",\n    \"customer_status\": \"no-show\",\n    \"qty\": 0,\n    \"timezone\": \"\"\n    \n}"
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments?{{keyVerify}}",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments"
+									],
+									"query": [
+										{
+											"key": "{{keyVerify}}",
+											"value": null
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/{id}",
+							"request": {
+								"method": "GET",
+								"header": [],
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/2?context=view",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"2"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view"
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/{id}",
+							"request": {
+								"method": "POST",
+								"header": [
+									{
+										"key": "Content-Type",
+										"value": "application/json; charset=utf-8",
+										"type": "text"
+									}
+								],
+								"body": {
+									"mode": "raw",
+									"raw": "{\n    \"customer_id\": 8,\n    \"start\": 1595512800,\n    \"end\": 1595516400,\n    \"order_id\": 5452,\n    \"product_id\":5328\n}"
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/5455?{{keyVerify}}",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"5455"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "{{keyVerify}}",
+											"value": null
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/{id}",
+							"request": {
+								"method": "PUT",
+								"header": [
+									{
+										"key": "Content-Type",
+										"value": "application/json; charset=utf-8",
+										"type": "text"
+									}
+								],
+								"body": {
+									"mode": "raw",
+									"raw": "{   \n    \"order_id\":5456,\n    \"meta_data\": [\n        {\n            \"key\": \"all_day\",\n            \"value\": false\n        },\n        {\n            \"key\": \"_appointment_cost\",\n            \"value\": \"24.50\"\n        },\n        {\n            \"key\": \"_appointment_status\",\n            \"value\": \"unpaid\"\n        },\n        {\n            \"key\": \"_appointment_customer_status\",\n            \"value\": \"no-show\"\n        },\n        {\n            \"key\": \"_appointment_product_id\",\n            \"value\": 5308\n        },\n        {\n            \"key\": \"_appointment_start\",\n            \"value\": \"2020-07-26 10:00:00\"\n        },\n        {\n            \"key\": \"_appointment_end\",\n            \"value\": \"2020-07-26 11:00:00\"\n        },\n        {\n            \"key\": \"_appointment_qty\",\n            \"value\": 1\n        },\n        {\n            \"key\": \"_appointment_customer_id\",\n            \"value\": 8\n        },\n        {\n            \"key\": \"_appointment_order_item_id\",\n            \"value\": 6\n        },\n        {\n            \"key\": \"_appointment_order_id\",\n            \"value\": 5456\n        },\n        {\n            \"key\": \"_appointment_parent_id\",\n            \"value\": 5456\n        }\n    ]\n}"
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/5459?{{keyVerify}}&context=edit",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"5459"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "{{keyVerify}}",
+											"value": null
+										},
+										{
+											"key": "context",
+											"value": "edit"
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/{id}",
+							"request": {
+								"method": "PATCH",
+								"header": [
+									{
+										"key": "Content-Type",
+										"value": "application/json; charset=utf-8",
+										"type": "text"
+									}
+								],
+								"body": {
+									"mode": "raw",
+									"raw": "{\n    \"customer_id\": 8,\n    \"start\": 1595512800,\n    \"end\": 1595516400,\n    \"order_id\": 5452,\n    \"product_id\":5328\n}"
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/5455?{{keyVerify}}",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"5455"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "{{keyVerify}}",
+											"value": null
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/{id}",
+							"request": {
+								"method": "DELETE",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/2",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"2"
+									],
+									"query": [
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/batch",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"batch"
+									],
+									"query": [
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/batch",
+							"request": {
+								"method": "PUT",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"batch"
+									],
+									"query": [
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/batch",
+							"request": {
+								"method": "PATCH",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"batch"
+									],
+									"query": [
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Appointments/{id} Copy",
+							"request": {
+								"method": "PUT",
+								"header": [
+									{
+										"key": "Content-Type",
+										"value": "application/json; charset=utf-8",
+										"type": "text"
+									}
+								],
+								"body": {
+									"mode": "raw",
+									"raw": "{   \n    \"order_id\":5456,\n    \"meta_data\": [\n        {\n            \"key\": \"all_day\",\n            \"value\": false\n        },\n        {\n            \"key\": \"_appointment_cost\",\n            \"value\": \"24.50\"\n        },\n        {\n            \"key\": \"_appointment_status\",\n            \"value\": \"unpaid\"\n        },\n        {\n            \"key\": \"_appointment_customer_status\",\n            \"value\": \"no-show\"\n        },\n        {\n            \"key\": \"_appointment_product_id\",\n            \"value\": 5308\n        },\n        {\n            \"key\": \"_appointment_start\",\n            \"value\": \"2020-07-26 10:00:00\"\n        },\n        {\n            \"key\": \"_appointment_end\",\n            \"value\": \"2020-07-26 11:00:00\"\n        },\n        {\n            \"key\": \"_appointment_qty\",\n            \"value\": 1\n        },\n        {\n            \"key\": \"_appointment_customer_id\",\n            \"value\": 8\n        },\n        {\n            \"key\": \"_appointment_order_item_id\",\n            \"value\": 6\n        },\n        {\n            \"key\": \"_appointment_order_id\",\n            \"value\": 5456\n        },\n        {\n            \"key\": \"order_id\",\n            \"value\": 5456\n        }\n    ]\n}"
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/appointments/5459?{{keyVerify}}&context=edit",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"appointments",
+										"5459"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "after",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "before",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "{{keyVerify}}",
+											"value": null
+										},
+										{
+											"key": "context",
+											"value": "edit"
+										}
+									]
+								}
+							},
+							"response": []
+						}
+					],
+					"protocolProfileBehavior": {},
+					"_postman_isSubFolder": true
+				},
+				{
+					"name": "products",
+					"item": [
+						{
+							"name": "Products",
+							"request": {
+								"method": "GET",
+								"header": [],
+								"url": {
+									"raw": "{{baseUrlBooking}}/products",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "type",
+											"value": "",
+											"description": "\"type\": {\n              \"required\": false,\n              \"default\": \"simple\",\n              \"enum\": [\n                \"simple\",\n                \"grouped\",\n                \"external\",\n                \"variable\"\n              ],\n              \"description\": \"Product type.\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "featured",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "catalog_visibility",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "short_description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sku",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "regular_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sale_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "virtual",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloadable",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloads",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_limit",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_expiry",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "external_url",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "button_text",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "manage_stock",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_quantity",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "backorders",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sold_individually",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "weight",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "dimensions",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "reviews_allowed",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "upsell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "cross_sell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent_id",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "purchase_note",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "categories",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tags",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "images",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "default_attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/{id}",
+							"request": {
+								"method": "GET",
+								"header": [],
+								"url": {
+									"raw": "{{host_w}}/products/5308",
+									"host": [
+										"{{host_w}}"
+									],
+									"path": [
+										"products",
+										"5308"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/{id}",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "type",
+											"value": "",
+											"description": "\"type\": {\n              \"required\": false,\n              \"enum\": [\n                \"simple\",\n                \"grouped\",\n                \"external\",\n                \"variable\"\n              ],\n              \"description\": \"Product type.\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "status",
+											"value": "",
+											"description": "\"status\": {\n              \"required\": false,\n              \"enum\": [\n                \"draft\",\n                \"pending\",\n                \"private\",\n                \"publish\",\n                \"future\"\n              ],\n              \"description\": \"Product status (post status).\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "featured",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "catalog_visibility",
+											"value": "",
+											"description": "\"catalog_visibility\": {\n              \"required\": false,\n              \"enum\": [\n                \"visible\",\n                \"catalog\",\n                \"search\",\n                \"hidden\"\n              ],\n              \"description\": \"Catalog visibility.\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "short_description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sku",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "regular_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sale_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "virtual",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloadable",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloads",
+											"value": "",
+											"description": "downloads\": {\n              \"required\": false,\n              \"description\": \"List of downloadable files.\",\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"description\": \"File ID.\",\n                    \"type\": \"string\",\n                    \"context\": [\n                      \"view\",\n                      \"edit\"\n                    ]\n                  },\n                  \"name\": {\n                    \"description\": \"File name.\",\n                    \"type\": \"string\",\n                    \"context\": [\n                      \"view\",\n                      \"edit\"\n                    ]\n                  },\n                  \"file\": {\n                    \"description\": \"File URL.\",\n                    \"type\": \"string\",\n                    \"context\": [\n                      \"view\",\n                      \"edit\"\n                    ]\n                  }\n                }\n              }\n            },",
+											"type": "text"
+										},
+										{
+											"key": "download_limit",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_expiry",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "external_url",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "button_text",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_status",
+											"value": "",
+											"description": " \"tax_status\": {\n              \"required\": false,\n              \"enum\": [\n                \"taxable\",\n                \"shipping\",\n                \"none\"\n              ],\n              \"description\": \"Tax status.\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "tax_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "manage_stock",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_quantity",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_status",
+											"value": "",
+											"description": " \"stock_status\": {\n              \"required\": false,\n              \"enum\": [\n                \"instock\",\n                \"outofstock\",\n                \"onbackorder\"\n              ],\n              \"description\": \"Controls the stock status of the product.\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "backorders",
+											"value": "",
+											"description": "\"backorders\": {\n              \"required\": false,\n              \"enum\": [\n                \"no\",\n                \"notify\",\n                \"yes\"\n              ],\n              \"description\": \"If managing stock, this controls if backorders are allowed.\",\n              \"type\": \"string\"\n            },",
+											"type": "text"
+										},
+										{
+											"key": "sold_individually",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "weight",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "dimensions",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "reviews_allowed",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "upsell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "cross_sell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent_id",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "purchase_note",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "categories",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tags",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "images",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "default_attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/5640",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"5640"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/{id}",
+							"request": {
+								"method": "DELETE",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/5640",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"5640"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/batch",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "type",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "featured",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "catalog_visibility",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "short_description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sku",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "regular_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sale_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "virtual",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloadable",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloads",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_limit",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_expiry",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "external_url",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "button_text",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "manage_stock",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_quantity",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "backorders",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sold_individually",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "weight",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "dimensions",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "reviews_allowed",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "upsell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "cross_sell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent_id",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "purchase_note",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "categories",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tags",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "images",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "default_attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/batch",
+							"request": {
+								"method": "PUT",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "type",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "featured",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "catalog_visibility",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "short_description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sku",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "regular_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sale_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "virtual",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloadable",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloads",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_limit",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_expiry",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "external_url",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "button_text",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "manage_stock",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_quantity",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "backorders",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sold_individually",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "weight",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "dimensions",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "reviews_allowed",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "upsell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "cross_sell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent_id",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "purchase_note",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "categories",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tags",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "images",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "default_attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/batch",
+							"request": {
+								"method": "PATCH",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_created_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "type",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "featured",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "catalog_visibility",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "short_description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sku",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "regular_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sale_price",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_from_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "date_on_sale_to_gmt",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "virtual",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloadable",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "downloads",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_limit",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "download_expiry",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "external_url",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "button_text",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tax_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "manage_stock",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_quantity",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "stock_status",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "backorders",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "sold_individually",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "weight",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "dimensions",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping_class",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "reviews_allowed",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "upsell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "cross_sell_ids",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent_id",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "purchase_note",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "categories",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "tags",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "images",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "default_attributes",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories ",
+							"protocolProfileBehavior": {
+								"disableBodyPruning": true
+							},
+							"request": {
+								"method": "GET",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories?context=view&page=1&per_page=10&search&exclude&include&order&orderby&hide_empty&parent&product&slug",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view"
+										},
+										{
+											"key": "page",
+											"value": "1"
+										},
+										{
+											"key": "per_page",
+											"value": "10"
+										},
+										{
+											"key": "search",
+											"value": null
+										},
+										{
+											"key": "exclude",
+											"value": null
+										},
+										{
+											"key": "include",
+											"value": null
+										},
+										{
+											"key": "order",
+											"value": null
+										},
+										{
+											"key": "orderby",
+											"value": null
+										},
+										{
+											"key": "hide_empty",
+											"value": null
+										},
+										{
+											"key": "parent",
+											"value": null
+										},
+										{
+											"key": "product",
+											"value": null
+										},
+										{
+											"key": "slug",
+											"value": null
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories ",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/{id}",
+							"protocolProfileBehavior": {
+								"disableBodyPruning": true
+							},
+							"request": {
+								"method": "GET",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": []
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/2?context=view",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"2"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view"
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/{id}",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/2",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"2"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/{id}",
+							"request": {
+								"method": "PUT",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/2",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"2"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/{id}",
+							"request": {
+								"method": "PATCH",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/2",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"2"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/{id}",
+							"request": {
+								"method": "DELETE",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/2",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"2"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/batch",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/batch",
+							"request": {
+								"method": "PUT",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Products/categories/batch",
+							"request": {
+								"method": "PATCH",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "slug",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "parent",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "description",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "display",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "image",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "menu_order",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/products/categories/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"products",
+										"categories",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						}
+					],
+					"protocolProfileBehavior": {},
+					"_postman_isSubFolder": true
+				},
+				{
+					"name": "staff",
+					"item": [
+						{
+							"name": "Staff",
+							"request": {
+								"method": "GET",
+								"header": [],
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff?context&page&per_page&search&exclude&include&offset&order&orderby&email&role",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": null
+										},
+										{
+											"key": "page",
+											"value": null
+										},
+										{
+											"key": "per_page",
+											"value": null
+										},
+										{
+											"key": "search",
+											"value": null
+										},
+										{
+											"key": "exclude",
+											"value": null
+										},
+										{
+											"key": "include",
+											"value": null
+										},
+										{
+											"key": "offset",
+											"value": null
+										},
+										{
+											"key": "order",
+											"value": null
+										},
+										{
+											"key": "orderby",
+											"value": null
+										},
+										{
+											"key": "email",
+											"value": null
+										},
+										{
+											"key": "role",
+											"value": null
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": null
+										},
+										{
+											"key": "first_name",
+											"value": null
+										},
+										{
+											"key": "last_name",
+											"value": null
+										},
+										{
+											"key": "username",
+											"value": null
+										},
+										{
+											"key": "password",
+											"value": null
+										},
+										{
+											"key": "billing",
+											"value": null
+										},
+										{
+											"key": "shipping",
+											"value": null
+										},
+										{
+											"key": "meta_data",
+											"value": null
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "per_page",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "search",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "exclude",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "include",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "offset",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "order",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "orderby",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "email",
+											"value": null,
+											"disabled": true
+										},
+										{
+											"key": "role",
+											"value": null,
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff Batch",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "first_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "last_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "username",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "password",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "billing",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff Batch",
+							"request": {
+								"method": "PUT",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "first_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "last_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "username",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "password",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "billing",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff Batch",
+							"request": {
+								"method": "PATCH",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "first_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "last_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "username",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "password",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "billing",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/batch",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"batch"
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff/{id}",
+							"request": {
+								"method": "GET",
+								"header": [],
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/1?context=view",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"1"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view"
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff/{id}",
+							"request": {
+								"method": "POST",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "first_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "last_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "username",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "password",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "billing",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/1",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"1"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff/{id}",
+							"request": {
+								"method": "PUT",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "first_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "last_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "username",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "password",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "billing",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/1",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"1"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff/{id}",
+							"request": {
+								"method": "PATCH",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "email",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "first_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "last_name",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "username",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "password",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "billing",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "shipping",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "meta_data",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/1",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"1"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						},
+						{
+							"name": "Staff/{id}",
+							"request": {
+								"method": "DELETE",
+								"header": [],
+								"body": {
+									"mode": "formdata",
+									"formdata": [
+										{
+											"key": "id",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "force",
+											"value": "",
+											"type": "text"
+										},
+										{
+											"key": "reassign",
+											"value": "",
+											"type": "text"
+										}
+									]
+								},
+								"url": {
+									"raw": "{{baseUrlBooking}}/staff/1",
+									"host": [
+										"{{baseUrlBooking}}"
+									],
+									"path": [
+										"staff",
+										"1"
+									],
+									"query": [
+										{
+											"key": "context",
+											"value": "view",
+											"disabled": true
+										}
+									]
+								}
+							},
+							"response": []
+						}
+					],
+					"protocolProfileBehavior": {},
+					"_postman_isSubFolder": true
+				},
+				{
+					"name": "Slots API Controller",
+					"request": {
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlBooking}}/slots",
+							"host": [
+								"{{baseUrlBooking}}"
+							],
+							"path": [
+								"slots"
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Availability API Controller",
+					"request": {
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlBooking}}/availabilities",
+							"host": [
+								"{{baseUrlBooking}}"
+							],
+							"path": [
+								"availabilities"
+							]
+						}
+					},
+					"response": []
+				},
+				{
+					"name": "Booking API Wordpress ",
+					"request": {
+						"method": "GET",
+						"header": [],
+						"url": {
+							"raw": "{{baseUrlBooking}}",
+							"host": [
+								"{{baseUrlBooking}}"
+							]
+						}
+					},
+					"response": []
+				}
+			],
+			"protocolProfileBehavior": {}
+		}
+	],
+	"protocolProfileBehavior": {}
+}
\ No newline at end of file
diff --git a/lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_environment.json b/lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_environment.json
new file mode 100644
index 00000000..5f5b4302
--- /dev/null
+++ b/lib/modules_ext/booking/docs/postman/WooAPIBooking.postman_environment.json
@@ -0,0 +1,29 @@
+{
+	"id": "35a9bb1e-c44f-4498-a5f4-607661406e43",
+	"name": "ENV BOOKING ",
+	"values": [
+		{
+			"key": "baseUrlBooking",
+			"value": "https://mstore.io/wp-json/wc-appointments/v1",
+			"enabled": true
+		},
+		{
+			"key": "baseUrlWoo",
+			"value": "https://mstore.io/wp-json/wc/v3",
+			"enabled": true
+		},
+		{
+			"key": "keyVerify",
+			"value": "consumer_key=ck_c16d601d14a44c8080418c1ab9336b72ae8faff2&consumer_secret=cs_1c11c4d0ee3bef861421bf3622f20f6b49c8497a",
+			"enabled": true
+		},
+		{
+			"key": "host",
+			"value": "https://mstore.io",
+			"enabled": true
+		}
+	],
+	"_postman_variable_scope": "environment",
+	"_postman_exported_at": "2020-08-07T04:12:24.232Z",
+	"_postman_exported_using": "Postman/7.29.1"
+}
\ No newline at end of file
diff --git a/lib/modules_ext/booking/run_test.sh b/lib/modules_ext/booking/run_test.sh
new file mode 100644
index 00000000..1681383c
--- /dev/null
+++ b/lib/modules_ext/booking/run_test.sh
@@ -0,0 +1,67 @@
+#!/usr/bin/env bash
+
+red=$(tput setaf 1)
+none=$(tput sgr0)
+
+show_help() {
+    printf "usage: $0 [--help] [--report] [--test] [<path to package>]
+Script for running all unit and widget tests with code coverage.
+(run from root of repo)
+where:
+    <path to package>
+        runs all tests with coverage and reports
+    -t, --test
+        runs all tests with coverage, but no report
+    -r, -c, --report
+        generate a coverage report
+        (requires lcov, install with Homebrew)
+    -h, --help
+        print this message
+"
+}
+
+run_tests() {
+    if [[ -f "pubspec.yaml" ]]; then
+        rm -f coverage/lcov.info
+        rm -f coverage/lcov-final.info
+        flutter test --no-test-assets --coverage
+    else
+        printf "\n${red}Error: this is not a Flutter project${none}"
+        exit 1
+    fi
+}
+
+run_report() {
+    if [[ -f "coverage/lcov.info" ]]; then
+        lcov -r coverage/lcov.info '*/__test*__/*' -o coverage/lcov_cleaned.info
+        genhtml -o coverage coverage/lcov_cleaned.info
+        open coverage/index-sort-l.html
+    else
+        printf "\n${red}Error: no coverage info was generated${none}"
+        exit 1
+    fi
+}
+
+case $1 in
+-h | --help)
+    show_help
+    ;;
+-t | --test)
+    printf "Start Test"
+    if [ ! -z "$2" ]; then
+      directory=$2
+    fi
+    printf "TEST IN $directory"
+    run_tests
+    ;;
+-r | -c | --report)
+    run_report
+    ;;
+*)
+    if [ ! -z "$1" ]; then
+      directory=$1
+    fi
+    run_tests
+    run_report
+    ;;
+esac
diff --git a/lib/modules_ext/booking/services/booking_service_mixin.dart b/lib/modules_ext/booking/services/booking_service_mixin.dart
new file mode 100644
index 00000000..f2b7a9bc
--- /dev/null
+++ b/lib/modules_ext/booking/services/booking_service_mixin.dart
@@ -0,0 +1,17 @@
+import 'package:flutter/cupertino.dart';
+
+import '../../../models/booking/booking_model.dart';
+import '../../../models/entities/product.dart';
+import '../views/product_booking_layout.dart';
+
+mixin BookingServiceMixin {
+  /// Get Booking Layout
+  Widget getBookingLayout(
+      {required Product product, Function(BookingModel)? onCallBack}) {
+    return ProductBookingLayout(
+      key: ValueKey('keyProductBooking${product.id}'),
+      product: product,
+      onCallBack: onCallBack,
+    );
+  }
+}
diff --git a/lib/modules_ext/booking/viewmodel/booking_viewmodel.dart b/lib/modules_ext/booking/viewmodel/booking_viewmodel.dart
new file mode 100644
index 00000000..59ddaefe
--- /dev/null
+++ b/lib/modules_ext/booking/viewmodel/booking_viewmodel.dart
@@ -0,0 +1,82 @@
+import 'package:flutter/material.dart';
+
+import '../../../models/booking/booking_value.dart';
+import '../../../models/booking/staff_booking_model.dart';
+import '../../../services/index.dart';
+
+class BookingViewmodel extends ValueNotifier<BookingValue> {
+  BookingViewmodel(String? idProduct)
+      : super(BookingValue(
+          staffs: [],
+          selectDate: '',
+          listSlotSelect: [],
+          isLoadingSlot: true,
+          idProduct: idProduct,
+        )) {
+    getListStaff().then((value) {
+      updateSlot(DateTime.now()).then((value) => updateStatusLoading(false));
+    });
+  }
+  void updateStatusLoading(isLoading) {
+    value = value.copyWith(isLoadingSlot: isLoading);
+  }
+
+  void clear() {
+    value = BookingValue(
+      staffs: [],
+      selectDate: '',
+      listSlotSelect: [],
+      isLoadingSlot: false,
+      idProduct: '',
+    );
+  }
+}
+
+extension BookingViewmodelProperties on BookingViewmodel {
+  List<StaffBookingModel>? get staffs => value.staffs;
+  List<String>? get listSlotSelect =>
+      (value.listSlotSelect?.isNotEmpty ?? false) ? value.listSlotSelect : [];
+  String? get selectDate => value.selectDate;
+  bool get isLoadingSlot => value.isLoadingSlot;
+
+  set staffs(List<StaffBookingModel>? staffs) {
+    value.staffs!.clear();
+    value.staffs!.addAll(staffs!);
+    value = value.copyWith(staffs: value.staffs);
+  }
+
+  set listSlotSelect(List<String>? listSlotSelect) {
+    value = value.copyWith(listSlotSelect: listSlotSelect);
+  }
+
+  set selectDate(String? selectDate) {
+    value = value.copyWith(selectDate: selectDate);
+  }
+}
+
+extension BookingInteractor on BookingViewmodel {
+  Services get _service => Services();
+  Future<void> getListStaff() async {
+    final listStaff = await _service.api.getListStaff(value.idProduct)!;
+    if (listStaff.isNotEmpty) {
+      staffs = listStaff as List<StaffBookingModel>;
+    }
+  }
+
+  Future<void> updateSlot(DateTime date, [int? idStaff]) async {
+    updateStatusLoading(true);
+    var dateChoose = '${date.year}-${date.month}-${date.day}';
+    listSlotSelect!.clear();
+
+    final listSlot = await _service.api.getSlotBooking(
+      value.idProduct,
+      '$idStaff',
+      dateChoose,
+    )!;
+
+    if (listSlot.isNotEmpty) {
+      listSlotSelect = listSlot;
+    }
+    updateStatusLoading(false);
+  }
+}
diff --git a/lib/modules_ext/booking/views/booking_widget.dart b/lib/modules_ext/booking/views/booking_widget.dart
new file mode 100644
index 00000000..0dc3954b
--- /dev/null
+++ b/lib/modules_ext/booking/views/booking_widget.dart
@@ -0,0 +1,199 @@
+import 'package:dropdown_search/dropdown_search.dart';
+import 'package:flutter/material.dart';
+
+import '../../../common/config.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/booking/booking_model.dart';
+import '../../../models/booking/staff_booking_model.dart';
+import '../../../models/index.dart' show Product;
+import '../booking_constants.dart';
+import '../viewmodel/booking_viewmodel.dart';
+import 'widgets/calendar/calendar.dart';
+import 'widgets/choose_time/choose_time_widget.dart';
+
+class BookingWidget extends StatefulWidget {
+  final Function(BookingModel)? onBooking;
+  final Product product;
+  final BookingViewmodel? viewModel;
+  final Widget? loadingWidget;
+  final bool requiredStaff;
+
+  const BookingWidget({
+    Key? key,
+    required this.product,
+    required this.viewModel,
+    this.onBooking,
+    this.loadingWidget,
+    this.requiredStaff = false,
+  }) : super(key: key);
+
+  @override
+  State<BookingWidget> createState() => _BookingWidgetState();
+}
+
+class _BookingWidgetState extends State<BookingWidget> {
+  BookingViewmodel? get _viewModel => widget.viewModel;
+  bool get _staffNotEmpty => _viewModel!.staffs?.isNotEmpty ?? false;
+
+  final BookingModel _info = BookingModel();
+  final List<StaffBookingModel> _listStaff = [];
+  DateTime _currentDate = DateTime.now();
+  StaffBookingModel? _staff;
+  DateTime? hour;
+
+  @override
+  void initState() {
+    hour = _currentDate;
+
+    _info
+      ..staffs ??= []
+      ..setDay(_currentDate)
+      ..idProduct = widget.product.id;
+
+    if (_staffNotEmpty) {
+      _staff = _viewModel!.staffs![0];
+      _listStaff.addAll(_viewModel!.staffs!);
+      _info.staffs!
+        ..clear()
+        ..add(_staff);
+    }
+
+    _viewModel!.addListener(_changeUIByController);
+    super.initState();
+  }
+
+  void _changeUIByController() {
+    if (_viewModel!.staffs?.isNotEmpty ?? false) {
+      _listStaff.clear();
+      _listStaff.addAll(_viewModel!.staffs!);
+      _info.staffs!
+        ..clear()
+        ..add(_staff);
+    }
+
+    setState(() {});
+  }
+
+  @override
+  void dispose() {
+    _viewModel!.removeListener(_changeUIByController);
+    super.dispose();
+  }
+
+  Widget? kLoading() {
+    if (widget.loadingWidget != null) {
+      return widget.loadingWidget;
+    }
+    return const SizedBox(
+      width: 50,
+      height: 50,
+      child: CircularProgressIndicator(),
+    );
+  }
+
+  Widget _renderSlotTime() {
+    if (_viewModel!.isLoadingSlot) {
+      return SizedBox(height: 300, child: Center(child: kLoading()));
+    }
+
+    final listSlotTimeBooking =
+        widget.viewModel!.listSlotSelect!.map(DateTime.parse).toList();
+
+    return ChooseTimeWidget(
+      key: ValueKey('${_viewModel!.selectDate}_keyChooseTime'),
+      initValue: hour,
+      listSlotTime: listSlotTimeBooking,
+      selectDate: _currentDate,
+      onChooseTime: (hourChoose) {
+        hour = hourChoose;
+        _info.setHour(hourChoose);
+        setState(() {});
+      },
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    if (widget.product.inStock ?? false) {
+      return Padding(
+        padding: const EdgeInsets.all(10),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.stretch,
+          children: [
+            DropdownSearch<StaffBookingModel>(
+              popupProps: PopupPropsMultiSelection.bottomSheet(
+                itemBuilder: (context, item, isSelected) => Padding(
+                  padding: const EdgeInsets.all(10),
+                  child: Text(item.displayName ?? ''),
+                ),
+              ),
+              items: _listStaff,
+              dropdownDecoratorProps: DropDownDecoratorProps(
+                dropdownSearchDecoration: InputDecoration(
+                  labelText: S.of(context).chooseStaff,
+                ),
+              ),
+              clearButtonProps: const ClearButtonProps(isVisible: true),
+              onChanged: (value) {
+                _staff = value;
+                _viewModel!.updateSlot.call(_currentDate, _staff?.id);
+              },
+              selectedItem: _staff,
+              dropdownBuilder: (context, selectedItem) {
+                return Text(selectedItem?.displayName ?? '');
+              },
+            ),
+            Container(
+              height: 400,
+              margin: const EdgeInsets.only(bottom: 10),
+              decoration: BoxDecoration(
+                border: Border(
+                  bottom: BorderSide(
+                    color: Theme.of(context).buttonTheme.colorScheme!.onPrimary,
+                    style: BorderStyle.solid,
+                    width: 0.5,
+                  ),
+                ),
+              ),
+              child: CalendarWidget.booking(
+                context,
+                key: const ValueKey(BookingConstants.keyBookingChangeDate),
+                selectedDateTime: _currentDate,
+                onDayPressed: (DateTime date, events) {
+                  _info.setDay(date);
+                  // hour = null;
+                  _viewModel!.updateSlot.call(date, _staff?.id);
+                  setState(() => _currentDate = date);
+                },
+                limitDay: kProductDetail.limitDayBooking,
+              ),
+            ),
+            _renderSlotTime(),
+            ElevatedButton(
+              style: ElevatedButton.styleFrom(
+                primary: Theme.of(context).primaryColor,
+                onPrimary: Colors.white,
+                elevation: 0.1,
+              ),
+              key: const ValueKey(BookingConstants.keyBookingNow),
+              onPressed:
+                  (_info.isEmpty) || (widget.requiredStaff && _staff == null)
+                      ? null
+                      : () => widget.onBooking?.call(_info),
+              child: Text(S.of(context).bookingNow),
+            )
+          ],
+        ),
+      );
+    } else {
+      return Padding(
+        padding: const EdgeInsets.all(15.0),
+        child: Text(S.of(context).outOfStock,
+            style: Theme.of(context).textTheme.subtitle2!.copyWith(
+                  color: const Color(0xFFe74c3c),
+                  fontWeight: FontWeight.w600,
+                )),
+      );
+    }
+  }
+}
diff --git a/lib/modules_ext/booking/views/product_booking_layout.dart b/lib/modules_ext/booking/views/product_booking_layout.dart
new file mode 100644
index 00000000..2cd4bfe8
--- /dev/null
+++ b/lib/modules_ext/booking/views/product_booking_layout.dart
@@ -0,0 +1,78 @@
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/tools/flash.dart';
+import '../../../models/booking/booking_model.dart';
+import '../../../models/index.dart' show CartModel, Product;
+import '../booking_constants.dart';
+import '../viewmodel/booking_viewmodel.dart';
+import 'booking_widget.dart';
+
+class ProductBookingLayout extends StatefulWidget {
+  final Product? product;
+  final Function(BookingModel bookingInfo)? onCallBack;
+
+  const ProductBookingLayout({Key? key, this.product, this.onCallBack})
+      : super(key: key);
+
+  @override
+  State<ProductBookingLayout> createState() => _ProductBookingLayoutState();
+}
+
+class _ProductBookingLayoutState extends State<ProductBookingLayout>
+    with SingleTickerProviderStateMixin {
+  BookingViewmodel? _bookingViewmodel;
+
+  var top = 0.0;
+  void onBooking(BuildContext ct, BookingModel model,
+      {bool requiredStaff = false}) {
+    if (model.isEmpty == false &&
+        ((requiredStaff && (model.staffs?.isNotEmpty ?? false) ||
+            (!requiredStaff)))) {
+      widget.product!.bookingInfo = model;
+      if (widget.onCallBack != null) {
+        widget.onCallBack!(widget.product!.bookingInfo!);
+        return;
+      }
+      addToCartForProductBooking(ct);
+    }
+  }
+
+  void addToCartForProductBooking(BuildContext ct) {
+    final cartModel = Provider.of<CartModel>(context, listen: false);
+    var message = cartModel.addProductToCart(
+        context: ct, product: widget.product, quantity: 1);
+    if (message.isNotEmpty) {
+      FlashHelper.errorBar(context, message: message);
+    }
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    _bookingViewmodel = BookingViewmodel(widget.product!.id);
+  }
+
+  @override
+  void dispose() {
+    FlashHelper.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    FlashHelper.init(context);
+    return SliverToBoxAdapter(
+      child: BookingWidget(
+        // key: ValueKey('booking${widget.product!.id}'),
+        product: widget.product!,
+        viewModel: _bookingViewmodel,
+        requiredStaff: BookingConstants.requiredStaff,
+        onBooking: (model) {
+          onBooking(context, model,
+              requiredStaff: BookingConstants.requiredStaff);
+        },
+      ),
+    );
+  }
+}
diff --git a/lib/modules_ext/booking/views/widgets/calendar/calendar.dart b/lib/modules_ext/booking/views/widgets/calendar/calendar.dart
new file mode 100644
index 00000000..a9036c96
--- /dev/null
+++ b/lib/modules_ext/booking/views/widgets/calendar/calendar.dart
@@ -0,0 +1,91 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_calendar_carousel/classes/event.dart';
+import 'package:flutter_calendar_carousel/flutter_calendar_carousel.dart';
+import 'package:intl/intl.dart' show DateFormat;
+import 'package:provider/provider.dart';
+
+import '../../../../../models/index.dart' show AppModel;
+
+class CalendarWidget extends StatefulWidget {
+  final BuildContext context;
+  final DateTime selectedDateTime;
+  final Function(DateTime, List<EventInterface>) onDayPressed;
+  final int? limitDay;
+
+  const CalendarWidget.booking(
+    this.context, {
+    Key? key,
+    required this.selectedDateTime,
+    required this.onDayPressed,
+    this.limitDay = 14,
+  }) : super(key: key);
+
+  @override
+  State<CalendarWidget> createState() => _CalendarWidgetState();
+}
+
+class _CalendarWidgetState extends State<CalendarWidget> {
+  String header = '';
+
+  @override
+  void initState() {
+    header = DateFormat('MMMM yyyy').format(DateTime.now());
+    super.initState();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return CalendarCarousel(
+      onDayPressed: widget.onDayPressed,
+      headerText: header,
+      headerTitleTouchable: true,
+      weekFormat: false,
+      selectedDateTime: widget.selectedDateTime,
+      showIconBehindDayText: true,
+      daysHaveCircularBorder: false,
+      customGridViewPhysics: const NeverScrollableScrollPhysics(),
+      markedDateShowIcon: true,
+      markedDateIconMaxShown: 2,
+      onCalendarChanged: (time) {
+        setState(() {
+          header = DateFormat('MMMM yyyy').format(time);
+        });
+      },
+      headerTextStyle: TextStyle(
+          color: Theme.of(context).colorScheme.secondary, fontSize: 20),
+      leftButtonIcon: Icon(
+        Icons.arrow_back,
+        color: Theme.of(context).iconTheme.color,
+      ),
+      rightButtonIcon: Icon(
+        Icons.arrow_forward,
+        color: Theme.of(context).iconTheme.color,
+      ),
+      minSelectedDate: DateTime.now().subtract(const Duration(days: 1)),
+      maxSelectedDate: widget.limitDay != null
+          ? DateTime.now().add(Duration(days: widget.limitDay!))
+          : null,
+      todayButtonColor: Colors.transparent,
+      todayBorderColor: Colors.transparent,
+      daysTextStyle: TextStyle(color: Theme.of(context).colorScheme.secondary),
+      weekdayTextStyle: TextStyle(
+          color: Theme.of(context).buttonTheme.colorScheme!.onPrimary),
+      todayTextStyle: TextStyle(
+        color: Theme.of(context).primaryColor,
+      ),
+      selectedDayTextStyle: const TextStyle(color: Colors.white),
+      selectedDayBorderColor: Colors.transparent,
+      selectedDayButtonColor: Theme.of(context).primaryColor,
+      weekendTextStyle: TextStyle(
+          color: Theme.of(context).buttonTheme.colorScheme!.onPrimary),
+      markedDateMoreShowTotal: true,
+      inactiveDaysTextStyle: TextStyle(
+        color: Theme.of(context).unselectedWidgetColor.withOpacity(0.5),
+      ),
+      inactiveWeekendTextStyle: TextStyle(
+        color: Theme.of(context).unselectedWidgetColor.withOpacity(0.5),
+      ),
+      locale: Provider.of<AppModel>(context).langCode,
+    );
+  }
+}
diff --git a/lib/modules_ext/booking/views/widgets/choose_time/choose_time_constants.dart b/lib/modules_ext/booking/views/widgets/choose_time/choose_time_constants.dart
new file mode 100644
index 00000000..6d5e0509
--- /dev/null
+++ b/lib/modules_ext/booking/views/widgets/choose_time/choose_time_constants.dart
@@ -0,0 +1,22 @@
+import 'package:flutter/material.dart';
+import '../../../../../generated/l10n.dart';
+
+class ChooseTimeConstants {
+  static List defineLimitTime(BuildContext context) => [
+        {
+          'title': S.of(context).morning,
+          'timeStart': 6,
+          'timeEnd': 11,
+        },
+        {
+          'title': S.of(context).afternoon,
+          'timeStart': 12,
+          'timeEnd': 16,
+        },
+        {
+          'title': S.of(context).evening,
+          'timeStart': 17,
+          'timeEnd': 21,
+        }
+      ];
+}
diff --git a/lib/modules_ext/booking/views/widgets/choose_time/choose_time_widget.dart b/lib/modules_ext/booking/views/widgets/choose_time/choose_time_widget.dart
new file mode 100644
index 00000000..f6fc4915
--- /dev/null
+++ b/lib/modules_ext/booking/views/widgets/choose_time/choose_time_widget.dart
@@ -0,0 +1,153 @@
+import 'package:flutter/material.dart';
+
+import '../../../../../common/constants.dart';
+import 'choose_time_constants.dart';
+
+class ChooseTimeWidget extends StatefulWidget {
+  final DateTime? selectDate;
+  final List<DateTime>? listSlotTime;
+  final int paddingTime;
+  final DateTime? initValue;
+  final ValueChanged<DateTime>? onChooseTime;
+
+  const ChooseTimeWidget({
+    Key? key,
+    this.initValue,
+    this.selectDate,
+    this.paddingTime = 60,
+    this.onChooseTime,
+    this.listSlotTime,
+  })  : assert(
+          paddingTime >= 1 && paddingTime <= 60,
+          ' 1 <= paddingTime <= 60',
+        ),
+        super(key: key);
+
+  @override
+  State<ChooseTimeWidget> createState() => _ChooseTimeWidgetState();
+}
+
+class _ChooseTimeWidgetState extends State<ChooseTimeWidget> {
+  DateTime? get _endTime =>
+      widget.listSlotTime != null && widget.listSlotTime!.isNotEmpty
+          ? widget.listSlotTime?.last
+          : null;
+  final listTitle = <Widget>[];
+  DateTime? _timeSelect;
+
+  List<Widget> _renderTime() {
+    final listWidget = <Widget>[];
+    final currentTime = DateTime.now();
+    for (var j = 0;
+        j < ChooseTimeConstants.defineLimitTime(context).length;
+        j++) {
+      final listSlots = <DateTime>[];
+      final blockTimeCurrent = ChooseTimeConstants.defineLimitTime(context)[j];
+      var listLost = widget.listSlotTime as List;
+
+      for (var i = 0; i < listLost.length; i++) {
+        final slot = widget.listSlotTime![i];
+        if (blockTimeCurrent['timeStart'] <= slot.hour &&
+            blockTimeCurrent['timeEnd'] >= slot.hour &&
+            currentTime.isBefore(slot)) {
+          listSlots.add(slot);
+        }
+      }
+
+      listWidget.add(
+        Expanded(
+          child: Column(
+            children: List.generate(
+              listSlots.length,
+              (index) => _buildButtonTime(listSlots[index]),
+            ),
+          ),
+        ),
+      );
+    }
+
+    return listWidget;
+  }
+
+  @override
+  void didUpdateWidget(ChooseTimeWidget oldWidget) {
+    if (oldWidget.selectDate != widget.selectDate ||
+        widget.initValue != oldWidget.initValue ||
+        ((widget.listSlotTime?.length ?? 0) !=
+            (oldWidget.listSlotTime?.length ?? 0))) {
+      _timeSelect = widget.initValue;
+      setState(() {});
+    }
+    super.didUpdateWidget(oldWidget);
+  }
+
+  @override
+  void initState() {
+    _timeSelect = widget.initValue ?? DateTime.now();
+    Future.delayed(Duration.zero, () {
+      if (_endTime != null && _endTime is DateTime) {
+        ChooseTimeConstants.defineLimitTime(context).last['timeEnd'] =
+            _endTime!.hour;
+      }
+    });
+    super.initState();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final height = isIos ? 350.0 : 250.0;
+    return SizedBox(
+      height: height,
+      child: Column(
+        children: [
+          _renderListTitle(),
+          Expanded(
+            child: SingleChildScrollView(
+              scrollDirection: Axis.vertical,
+              child: Row(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: _renderTime(),
+              ),
+            ),
+          )
+        ],
+      ),
+    );
+  }
+
+  Widget _renderListTitle() {
+    final List lstTitle = <Widget>[];
+    for (var item in ChooseTimeConstants.defineLimitTime(context)) {
+      lstTitle.add(Expanded(
+          child: Text(
+        item['title'],
+        textAlign: TextAlign.center,
+        style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+      )));
+    }
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: lstTitle as List<Widget>,
+    );
+  }
+
+  Widget _buildButtonTime(DateTime time) {
+    return TextButton(
+      style: TextButton.styleFrom(
+        primary: time == _timeSelect
+            ? Theme.of(context).primaryColor
+            : Theme.of(context).colorScheme.secondary,
+        onSurface: time == _timeSelect
+            ? Colors.white
+            : Theme.of(context).buttonTheme.colorScheme!.onPrimary,
+      ),
+      onPressed: () {
+        widget.onChooseTime?.call(time);
+        setState(() {
+          _timeSelect = time;
+        });
+      },
+      child: Text(DateTimeUtils.getTimeBooking(time)),
+    );
+  }
+}
diff --git a/lib/modules_ext/membership_ultimate/common/constants.dart b/lib/modules_ext/membership_ultimate/common/constants.dart
new file mode 100644
index 00000000..0e0332ae
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/common/constants.dart
@@ -0,0 +1,3 @@
+const kReturnUrl = 'https://mstore.io/return';
+const kCancelReturnUrl = 'https://mstore.io/cancel_return';
+const kNotifyUrl = 'https://mstore.io/notify';
diff --git a/lib/modules_ext/membership_ultimate/models/plan.dart b/lib/modules_ext/membership_ultimate/models/plan.dart
new file mode 100644
index 00000000..9657ef29
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/models/plan.dart
@@ -0,0 +1,21 @@
+import 'package:inspireui/utils/logs.dart';
+
+class Plan {
+  dynamic id;
+  String? name;
+  String? label;
+  String? description;
+  String? price;
+
+  Plan.fromJson(Map<String, dynamic> parsedJson) {
+    try {
+      id = parsedJson['id'].toString();
+      name = parsedJson['name'];
+      label = parsedJson['label'];
+      description = parsedJson['description'];
+      price = parsedJson['price'] ?? '0';
+    } catch (e, trace) {
+      printLog(trace);
+    }
+  }
+}
diff --git a/lib/modules_ext/membership_ultimate/route.dart b/lib/modules_ext/membership_ultimate/route.dart
new file mode 100644
index 00000000..09e34054
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/route.dart
@@ -0,0 +1,39 @@
+import 'package:flutter/material.dart';
+
+import '../../common/constants.dart';
+import 'models/plan.dart';
+import 'views/bankinfo_screen.dart';
+import 'views/plans_screen.dart';
+import 'views/signup_screen.dart';
+
+class MembershipUltimateRoute {
+  static dynamic getRoutesWithSettings(RouteSettings settings) {
+    final routes = {
+      RouteList.memberShipUltimatePlans: (context) => PlansScreen(),
+      RouteList.memberShipUltimateSignUp: (context) {
+        final arguments = settings.arguments;
+        if (arguments is Plan) {
+          return MembershipSignUpScreen(plan: arguments);
+        }
+        return errorPage('planId is required');
+      },
+      RouteList.memberShipUltimateBankInfo: (context) {
+        final arguments = settings.arguments;
+        if (arguments is String) {
+          return BankInfoScreen(bankInfo: arguments);
+        }
+        return errorPage('bankInfo is required');
+      },
+    };
+    return routes;
+  }
+
+  static Widget errorPage(String title) => Scaffold(
+        appBar: AppBar(
+          title: const Text('Error'),
+        ),
+        body: Center(
+          child: Text(title),
+        ),
+      );
+}
diff --git a/lib/modules_ext/membership_ultimate/services/index.dart b/lib/modules_ext/membership_ultimate/services/index.dart
new file mode 100644
index 00000000..b7cfc0f6
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/services/index.dart
@@ -0,0 +1,84 @@
+import 'dart:convert' as convert;
+import 'package:inspireui/utils/logs.dart';
+import 'package:quiver/strings.dart';
+
+import '../../../services/services.dart';
+import '../models/plan.dart';
+
+class MembershipServices {
+  final domain = Services().api.domain;
+  
+  Future<List<Plan>> getPlans() async {
+    try {
+      var list = <Plan>[];
+      var response = await httpGet(
+          Uri.parse('$domain/wp-json/api/flutter_membership/plans'));
+      var jsonDecode = convert.jsonDecode(response.body);
+      if (jsonDecode is Map && isNotBlank(jsonDecode['message'])) {
+        throw Exception(jsonDecode['message']);
+      } else {
+        for (var item in jsonDecode) {
+          list.add(Plan.fromJson(item));
+        }
+        return list;
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
+  Future<Map<String, dynamic>> getPayments() async {
+    try {
+      var response = await httpGet(
+          Uri.parse('$domain/wp-json/api/flutter_membership/payments'));
+      var jsonDecode = convert.jsonDecode(response.body);
+      if (jsonDecode is Map && isNotBlank(jsonDecode['message'])) {
+        throw Exception(jsonDecode['message']);
+      } else {
+        return jsonDecode;
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
+  Future<Map<String, dynamic>> signUp(
+      {username,
+      email,
+      firstName,
+      lastName,
+      password,
+      selectedPayment,
+      planId}) async {
+    try {
+      var response = await httpPost(
+          Uri.parse('$domain/wp-json/api/flutter_membership/register'),
+          body: convert.jsonEncode({
+            'user_login': username,
+            'user_email': email,
+            'first_name': firstName,
+            'last_name': lastName,
+            'pass1': password,
+            'pass2': password,
+            'tos': '1',
+            'ihc_payment_gateway_radio': selectedPayment,
+            'ihc_payment_gateway': selectedPayment,
+            'ihcaction': 'register',
+            'lid': planId,
+            'ihcFormType': 'register'
+          }),
+          headers: {'Content-Type': 'application/json'});
+      var jsonDecode = convert.jsonDecode(response.body);
+      if (jsonDecode is Map && isNotBlank(jsonDecode['message'])) {
+        throw Exception(jsonDecode['message']);
+      } else {
+        return jsonDecode;
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+}
diff --git a/lib/modules_ext/membership_ultimate/services/membership_ultimate_service_mixin.dart b/lib/modules_ext/membership_ultimate/services/membership_ultimate_service_mixin.dart
new file mode 100644
index 00000000..41613d19
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/services/membership_ultimate_service_mixin.dart
@@ -0,0 +1,9 @@
+import 'package:flutter/cupertino.dart';
+
+import '../route.dart';
+
+mixin MembershipUltimateServiceMixin {
+  dynamic getMembershipUltimateRoutesWithSettings(RouteSettings settings) {
+    return MembershipUltimateRoute.getRoutesWithSettings(settings);
+  }
+}
diff --git a/lib/modules_ext/membership_ultimate/views/bankinfo_screen.dart b/lib/modules_ext/membership_ultimate/views/bankinfo_screen.dart
new file mode 100644
index 00000000..0bfcf425
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/views/bankinfo_screen.dart
@@ -0,0 +1,50 @@
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+
+import '../../../common/constants.dart';
+import '../../../widgets/html/index.dart';
+
+class BankInfoScreen extends StatefulWidget {
+  final String bankInfo;
+
+  const BankInfoScreen({required this.bankInfo});
+  @override
+  State<BankInfoScreen> createState() => _BankInfoScreenState();
+}
+
+class _BankInfoScreenState extends State<BankInfoScreen> {
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      appBar: AppBar(
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+        backgroundColor: Colors.transparent,
+        elevation: 0.0,
+        leading: IconButton(
+          icon: const Icon(Icons.arrow_back),
+          onPressed: () {
+            Navigator.of(context)
+                .popUntil(ModalRoute.withName(RouteList.login));
+          },
+        ),
+      ),
+      body: SafeArea(
+        child: Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 15.0),
+          child: Column(
+            children: [
+              HtmlWidget(
+                widget.bankInfo,
+                textStyle: const TextStyle(
+                  color: Colors.black,
+                  fontSize: 17.0,
+                ),
+              )
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/modules_ext/membership_ultimate/views/plans_screen.dart b/lib/modules_ext/membership_ultimate/views/plans_screen.dart
new file mode 100644
index 00000000..1509ed37
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/views/plans_screen.dart
@@ -0,0 +1,233 @@
+import 'package:async/async.dart';
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+import '../../../common/tools.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/app_model.dart';
+import '../../../models/cart/cart_model.dart';
+import '../../../widgets/html/index.dart';
+import '../models/plan.dart';
+import '../services/index.dart';
+
+List<Map<String, dynamic>> kPlanItemDesign = [
+  /// isRecommended should be supported via GET APIs, not here.
+  {
+    'isTextColorAccent': true,
+    'backgroundColor': Colors.grey.withOpacity(0.5),
+    'textColor': Colors.black12.withOpacity(0.7),
+    'isRecommended': false,
+  },
+  {
+    'isTextColorAccent': false,
+    'backgroundColor': Colors.indigoAccent.withOpacity(0.9),
+    'textColor': Colors.white70.withOpacity(0.9),
+    'isRecommended': true,
+  },
+  {
+    'isTextColorAccent': false,
+    'backgroundColor': Colors.indigo.withOpacity(0.9),
+    'textColor': Colors.white,
+    'isRecommended': false,
+  }
+];
+
+class PlansScreen extends StatefulWidget {
+  @override
+  State<PlansScreen> createState() => _PlansScreenState();
+}
+
+class _PlansScreenState extends State<PlansScreen> {
+  final _memoizer = AsyncMemoizer<List<Plan>?>();
+  final _services = MembershipServices();
+
+  Future<List<Plan>?> getPlans() {
+    return _memoizer.runOnce(
+      _services.getPlans,
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      appBar: AppBar(
+        systemOverlayStyle: Theme.of(context).appBarTheme.systemOverlayStyle,
+        backgroundColor: Colors.transparent,
+        elevation: 0.0,
+        title: Text(
+          S.of(context).choosePlan,
+          style: Theme.of(context)
+              .textTheme
+              .headline6!
+              .copyWith(fontWeight: FontWeight.bold),
+        ),
+      ),
+      body: FutureBuilder<List<Plan>?>(
+        future: getPlans(),
+        builder: (BuildContext context, AsyncSnapshot<List<Plan>?> snapshot) {
+          switch (snapshot.connectionState) {
+            case ConnectionState.none:
+            case ConnectionState.active:
+            case ConnectionState.waiting:
+              return Center(child: kLoadingWidget(context));
+            case ConnectionState.done:
+            default:
+              if (snapshot.hasError ||
+                  snapshot.data == null ||
+                  snapshot.data!.isEmpty) {
+                return const SizedBox();
+              }
+              return SafeArea(
+                child: ListView.builder(
+                    padding: const EdgeInsets.all(8),
+                    itemCount: snapshot.data!.length,
+                    itemBuilder: (BuildContext context, int index) {
+                      final layout = kPlanItemDesign.length > index
+                          ? kPlanItemDesign[index]
+                          : kPlanItemDesign[0];
+                      return PlanItem(
+                        item: snapshot.data![index],
+                        textColor: layout['textColor'],
+                        backgroundColor: layout['backgroundColor'],
+                        isRecommended: layout['isRecommended'],
+                        isTextColorAccent: layout['isTextColorAccent'],
+                      );
+                    }),
+              );
+          }
+        },
+      ),
+    );
+  }
+}
+
+class PlanItem extends StatelessWidget {
+  final Plan item;
+  final Color backgroundColor;
+  final Color textColor;
+  final bool? isRecommended;
+  final bool isTextColorAccent;
+  const PlanItem(
+      {required this.item,
+      required this.backgroundColor,
+      required this.textColor,
+      this.isRecommended = false,
+      required this.isTextColorAccent});
+
+  @override
+  Widget build(BuildContext context) {
+    final cartModel = Provider.of<CartModel>(context, listen: false);
+    final currencyRate =
+        Provider.of<AppModel>(context, listen: false).currencyRate;
+
+    return Padding(
+      padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 10.0),
+      child: InkWell(
+        splashColor: backgroundColor,
+        onTap: () {
+          Navigator.of(context)
+              .pushNamed(RouteList.memberShipUltimateSignUp, arguments: item);
+        },
+        borderRadius: const BorderRadius.all(
+          Radius.circular(10.0),
+        ),
+        child: Stack(
+          children: [
+            Container(
+              decoration: BoxDecoration(
+                  borderRadius: const BorderRadius.all(
+                    Radius.circular(10.0),
+                  ),
+                  color: backgroundColor),
+              child: Column(
+                children: [
+                  SizedBox(
+                    height: 50,
+                    child: Center(
+                      child: Text(
+                        item.label!,
+                        style: Theme.of(context).textTheme.subtitle1!.copyWith(
+                              color: isTextColorAccent
+                                  ? Theme.of(context).colorScheme.secondary
+                                  : textColor,
+                              fontWeight: FontWeight.w700,
+                            ),
+                      ),
+                    ),
+                  ),
+                  SizedBox(
+                    height: 70,
+                    child: Center(
+                      child: Text(
+                        PriceTools.getCurrencyFormatted(
+                            item.price, currencyRate,
+                            currency: cartModel.currencyCode)!,
+                        style: Theme.of(context).textTheme.headline2!.copyWith(
+                              color: isTextColorAccent
+                                  ? Theme.of(context).colorScheme.secondary
+                                  : textColor,
+                            ),
+                      ),
+                    ),
+                  ),
+                  SizedBox(
+                    width: double.maxFinite,
+                    child: Padding(
+                      padding: const EdgeInsets.symmetric(
+                          vertical: 20.0, horizontal: 20.0),
+                      child: HtmlWidget(
+                        item.description!,
+                        textStyle:
+                            Theme.of(context).textTheme.bodyText2!.copyWith(
+                                  color: isTextColorAccent
+                                      ? Theme.of(context).colorScheme.secondary
+                                      : textColor,
+                                ),
+                      ),
+                    ),
+                  ),
+                ],
+              ),
+            ),
+            if (isRecommended!)
+              const Positioned(
+                top: 10,
+                right: 10,
+                child: _RecommendedSign(),
+              )
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+class _RecommendedSign extends StatelessWidget {
+  const _RecommendedSign({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      width: 90,
+      height: 20,
+      decoration: const BoxDecoration(
+        color: Colors.green,
+        borderRadius: BorderRadius.all(
+          Radius.circular(4.0),
+        ),
+      ),
+      child: Center(
+        child: Text(
+          S.of(context).recommended,
+          style: Theme.of(context)
+              .textTheme
+              .bodyText2!
+              .copyWith(fontSize: 12.0, fontWeight: FontWeight.bold),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/modules_ext/membership_ultimate/views/signup_screen.dart b/lib/modules_ext/membership_ultimate/views/signup_screen.dart
new file mode 100644
index 00000000..0acaf1d1
--- /dev/null
+++ b/lib/modules_ext/membership_ultimate/views/signup_screen.dart
@@ -0,0 +1,429 @@
+import 'package:flutter/gestures.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/constants.dart';
+import '../../../common/tools.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/index.dart' show AppModel;
+import '../../../screens/checkout/payment_webview_screen.dart';
+import '../../../screens/home/privacy_term_screen.dart';
+import '../../../widgets/common/custom_text_field.dart';
+import '../../../widgets/common/flux_image.dart';
+import '../common/constants.dart';
+import '../models/plan.dart';
+import '../services/index.dart';
+
+class MembershipSignUpScreen extends StatefulWidget {
+  final Plan plan;
+
+  const MembershipSignUpScreen({required this.plan});
+
+  @override
+  State<MembershipSignUpScreen> createState() => _RegistrationScreenState();
+}
+
+class _RegistrationScreenState extends State<MembershipSignUpScreen> {
+  final _scaffoldMessengerKey = GlobalKey<ScaffoldMessengerState>();
+  final _emailController = TextEditingController();
+  final _services = MembershipServices();
+
+  Map<String, dynamic>? payments;
+  String? selectedPayment;
+
+  String? firstName, lastName, emailAddress, username, password;
+  bool isChecked = false;
+  bool isLoading = false;
+
+  final firstNameNode = FocusNode();
+  final lastNameNode = FocusNode();
+  final usernameNode = FocusNode();
+  final emailNode = FocusNode();
+  final passwordNode = FocusNode();
+
+  @override
+  void initState() {
+    super.initState();
+
+    Future.delayed(Duration.zero, () async {
+      if (double.parse(widget.plan.price!) > 0) {
+        payments = await _services.getPayments();
+        setState(() {
+          if (payments != null && payments!.keys.isNotEmpty) {
+            selectedPayment = payments!.keys.first;
+          }
+        });
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    _emailController.dispose();
+    firstNameNode.dispose();
+    lastNameNode.dispose();
+    emailNode.dispose();
+    passwordNode.dispose();
+    usernameNode.dispose();
+    super.dispose();
+  }
+
+  void _snackBar(String text) {
+    if (mounted) {
+      final snackBar = SnackBar(
+        content: Text(text),
+        duration: const Duration(seconds: 10),
+        action: SnackBarAction(
+          label: S.of(context).close,
+          onPressed: () {
+            // Some code to undo the change.
+          },
+        ),
+      );
+
+      _scaffoldMessengerKey.currentState?.showSnackBar(snackBar);
+    }
+  }
+
+  void goBackLogin() {
+    Navigator.of(context).popUntil(ModalRoute.withName(RouteList.login));
+  }
+
+  Future<void> _submitRegister(
+      {String? firstName,
+      String? lastName,
+      String? emailAddress,
+      String? password,
+      String? username}) async {
+    if (firstName == null ||
+        lastName == null ||
+        emailAddress == null ||
+        password == null ||
+        username == null) {
+      _snackBar(S.of(context).pleaseInputFillAllFields);
+    } else if (isChecked == false) {
+      _snackBar(S.of(context).pleaseAgreeTerms);
+    } else {
+      if (!emailAddress.validateEmail()) {
+        _snackBar(S.of(context).errorEmailFormat);
+        return;
+      }
+
+      if (password.length < 8) {
+        _snackBar(S.of(context).errorPasswordFormat);
+        return;
+      }
+
+      try {
+        setState(() {
+          isLoading = true;
+        });
+        final res = await _services.signUp(
+            username: username,
+            email: emailAddress,
+            firstName: firstName,
+            lastName: lastName,
+            password: password,
+            selectedPayment: selectedPayment,
+            planId: widget.plan.id);
+        setState(() {
+          isLoading = false;
+        });
+        if (res['success'] == true) {
+          goBackLogin();
+        } else if (res['bankInfo'] != null) {
+          await Navigator.of(context).pushNamed(
+              RouteList.memberShipUltimateBankInfo,
+              arguments: res['bankInfo']);
+        } else if (res['redirectUrl'] != null) {
+          var uri = Uri.parse(res['redirectUrl']);
+          var queryParams = {
+            ...uri.queryParameters,
+            'return': kReturnUrl,
+            'cancel_return': kCancelReturnUrl,
+            'notify_url': kNotifyUrl
+          };
+          uri = uri.replace(queryParameters: queryParams);
+          await Navigator.push(
+            context,
+            MaterialPageRoute(
+              builder: (context) => PaymentWebview(
+                  url: uri.toString(),
+                  onFinish: (number) {
+                    if (number != null) {
+                      goBackLogin();
+                    }
+                  }),
+            ),
+          );
+        }
+      } catch (e) {
+        setState(() {
+          isLoading = false;
+        });
+        _snackBar(e.toString());
+      }
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final appModel = Provider.of<AppModel>(context, listen: true);
+    final themeConfig = appModel.themeConfig;
+
+    return ScaffoldMessenger(
+      key: _scaffoldMessengerKey,
+      child: Scaffold(
+        backgroundColor: Theme.of(context).backgroundColor,
+        appBar: AppBar(
+          systemOverlayStyle: SystemUiOverlayStyle.light,
+          backgroundColor: Theme.of(context).backgroundColor,
+          elevation: 0.0,
+        ),
+        body: SafeArea(
+          child: GestureDetector(
+            onTap: () => Tools.hideKeyboard(context),
+            child: SingleChildScrollView(
+              child: Padding(
+                padding: const EdgeInsets.symmetric(horizontal: 30.0),
+                child: AutofillGroup(
+                  child: Column(
+                    mainAxisAlignment: MainAxisAlignment.center,
+                    crossAxisAlignment: CrossAxisAlignment.stretch,
+                    children: <Widget>[
+                      const SizedBox(height: 10.0),
+                      Center(
+                        child: FluxImage(
+                          imageUrl: themeConfig.logo,
+                          width: MediaQuery.of(context).size.width / 2,
+                          fit: BoxFit.contain,
+                        ),
+                      ),
+                      const SizedBox(
+                        height: 30.0,
+                      ),
+                      CustomTextField(
+                        key: const Key('registerFirstNameField'),
+                        autofillHints: const [AutofillHints.givenName],
+                        onChanged: (value) => firstName = value,
+                        textCapitalization: TextCapitalization.words,
+                        nextNode: lastNameNode,
+                        showCancelIcon: true,
+                        decoration: InputDecoration(
+                          labelText: S.of(context).firstName,
+                          hintText: S.of(context).enterYourFirstName,
+                        ),
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerLastNameField'),
+                        autofillHints: const [AutofillHints.familyName],
+                        focusNode: lastNameNode,
+                        nextNode: usernameNode,
+                        showCancelIcon: true,
+                        textCapitalization: TextCapitalization.words,
+                        onChanged: (value) => lastName = value,
+                        decoration: InputDecoration(
+                          labelText: S.of(context).lastName,
+                          hintText: S.of(context).enterYourLastName,
+                        ),
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerUsernameField'),
+                        autofillHints: const [AutofillHints.familyName],
+                        focusNode: usernameNode,
+                        nextNode: emailNode,
+                        showCancelIcon: true,
+                        keyboardType: TextInputType.emailAddress,
+                        onChanged: (value) => username = value,
+                        decoration:
+                            InputDecoration(labelText: S.of(context).username),
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerEmailField'),
+                        focusNode: emailNode,
+                        autofillHints: const [AutofillHints.email],
+                        nextNode: passwordNode,
+                        controller: _emailController,
+                        onChanged: (value) => emailAddress = value,
+                        keyboardType: TextInputType.emailAddress,
+                        decoration: InputDecoration(
+                            labelText: S.of(context).enterYourEmail),
+                        hintText: S.of(context).enterYourEmail,
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerPasswordField'),
+                        focusNode: passwordNode,
+                        autofillHints: const [AutofillHints.password],
+                        showEyeIcon: true,
+                        obscureText: true,
+                        onChanged: (value) => password = value,
+                        decoration: InputDecoration(
+                          labelText: S.of(context).enterYourPassword,
+                          hintText: S.of(context).enterYourPassword,
+                        ),
+                      ),
+                      const SizedBox(height: 20.0),
+                      if (double.parse(widget.plan.price!) > 0 &&
+                          payments != null &&
+                          payments!.keys.isNotEmpty)
+                        SelectPayment(
+                          payments: payments!,
+                          value: selectedPayment,
+                          onChanged: (val) {
+                            setState(() {
+                              selectedPayment = val;
+                            });
+                          },
+                        ),
+                      const SizedBox(height: 20.0),
+                      Row(
+                        children: <Widget>[
+                          Checkbox(
+                            key: const Key('registerConfirmCheckbox'),
+                            value: isChecked,
+                            activeColor: Theme.of(context).primaryColor,
+                            checkColor: Colors.white,
+                            onChanged: (value) {
+                              isChecked = !isChecked;
+                              setState(() {});
+                            },
+                          ),
+                          InkWell(
+                            onTap: () {
+                              isChecked = !isChecked;
+                              setState(() {});
+                            },
+                            child: Text(
+                              S.of(context).iwantToCreateAccount,
+                              style: Theme.of(context).textTheme.bodyText1,
+                            ),
+                          ),
+                        ],
+                      ),
+                      InkWell(
+                        onTap: () {
+                          isChecked = !isChecked;
+                          setState(() {});
+                        },
+                        child: Row(
+                          children: <Widget>[
+                            Checkbox(
+                              value: isChecked,
+                              activeColor: Theme.of(context).primaryColor,
+                              checkColor: Colors.white,
+                              onChanged: (value) {
+                                isChecked = !isChecked;
+                                setState(() {});
+                              },
+                            ),
+                            Expanded(
+                              child: RichText(
+                                maxLines: 2,
+                                text: TextSpan(
+                                  text: S.of(context).iAgree,
+                                  style: Theme.of(context).textTheme.bodyText1,
+                                  children: <TextSpan>[
+                                    const TextSpan(text: ' '),
+                                    TextSpan(
+                                      text: S.of(context).agreeWithPrivacy,
+                                      style: TextStyle(
+                                          color: Theme.of(context).primaryColor,
+                                          decoration: TextDecoration.underline),
+                                      recognizer: TapGestureRecognizer()
+                                        ..onTap = () => Navigator.push(
+                                              context,
+                                              MaterialPageRoute(
+                                                builder: (context) =>
+                                                    const PrivacyTermScreen(),
+                                              ),
+                                            ),
+                                    ),
+                                  ],
+                                ),
+                              ),
+                            ),
+                          ],
+                        ),
+                      ),
+                      const SizedBox(height: 10.0),
+                      Padding(
+                        padding: const EdgeInsets.symmetric(vertical: 16.0),
+                        child: Material(
+                          color: Theme.of(context).primaryColor,
+                          borderRadius:
+                              const BorderRadius.all(Radius.circular(5.0)),
+                          elevation: 0,
+                          child: MaterialButton(
+                            key: const Key('registerSubmitButton'),
+                            onPressed: isLoading == true
+                                ? null
+                                : () async {
+                                    await _submitRegister(
+                                        firstName: firstName,
+                                        lastName: lastName,
+                                        emailAddress: emailAddress,
+                                        password: password,
+                                        username: username);
+                                  },
+                            minWidth: 200.0,
+                            elevation: 0.0,
+                            height: 42.0,
+                            child: Text(
+                              isLoading == true
+                                  ? S.of(context).loading
+                                  : S.of(context).createAnAccount,
+                              style: const TextStyle(
+                                  color: Colors.white,
+                                  fontWeight: FontWeight.bold),
+                            ),
+                          ),
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
+
+class SelectPayment extends StatelessWidget {
+  final String? value;
+  final Function? onChanged;
+  final Map<String, dynamic> payments;
+
+  const SelectPayment({this.value, this.onChanged, required this.payments});
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Text(S.of(context).paymentMethod,
+            style: Theme.of(context).textTheme.headline6),
+        ...payments.keys
+            .toList()
+            .map((key) => Row(children: [
+                  Radio(
+                    value: key,
+                    groupValue: value,
+                    onChanged: (val) {
+                      onChanged!(val);
+                    },
+                  ),
+                  Text(payments[key])
+                ]))
+            .toList(),
+      ],
+    );
+  }
+}
diff --git a/lib/modules_ext/native_payment/myfatoorah/index.dart b/lib/modules_ext/native_payment/myfatoorah/index.dart
new file mode 100644
index 00000000..6cc38b3a
--- /dev/null
+++ b/lib/modules_ext/native_payment/myfatoorah/index.dart
@@ -0,0 +1,318 @@
+import 'dart:io';
+import 'dart:io' show Platform;
+
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:myfatoorah_flutter/embeddedapplepay/MFApplePayButton.dart';
+import 'package:myfatoorah_flutter/myfatoorah_flutter.dart';
+import 'package:myfatoorah_flutter/utils/MFEnvironment.dart';
+
+import '../../../common/config.dart';
+import '../../../common/tools/image_tools.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/entities/credit_card.dart';
+import '../../../modules/native_payment/credit_card/credit_card_form.dart';
+import 'utils.dart';
+
+class MyFatoorahScreen extends StatefulWidget {
+  const MyFatoorahScreen({Key? key, required this.amount, required this.customerName, required this.onFinish, this.currency}) : super(key: key);
+  final double amount;
+  final String customerName;
+  final String? currency;
+  final Function(String?) onFinish;
+
+  @override
+  State<MyFatoorahScreen> createState() => _MyFatoorahScreenState();
+}
+
+class _MyFatoorahScreenState extends State<MyFatoorahScreen> {
+
+  final List<PaymentMethods> _paymentMethods = [];
+  PaymentMethods? _selectedPaymentMethod;
+
+  bool _isLoading = true;
+  bool _isPaying = false;
+
+  String cardNumber = '';
+  String expiryMonth = '';
+  String expiryYear = '';
+  String securityCode = '';
+  String cardHolderName = '';
+
+  late MFPaymentCardView mfPaymentCardView;
+  late MFApplePayButton mfApplePayButton;
+
+  @override
+  void initState() {
+    super.initState();
+
+    MFSDK.init(kMyFatoorahConfig['apiToken'], MFUtils.getMFCountryByCountryCode(kMyFatoorahConfig['accountCountry']), kMyFatoorahConfig['production'] == true ? MFEnvironment.LIVE : MFEnvironment.TEST);
+
+    initiatePayment();
+    initiateSession();
+  }
+
+  void initiatePayment() {
+    var request = MFInitiatePaymentRequest(
+        widget.amount, widget.currency?.toUpperCase() ?? MFCurrencyISO.UNITED_STATE_USD);
+
+    MFSDK.initiatePayment(
+        request,
+        MFAPILanguage.EN,
+            (MFResult<MFInitiatePaymentResponse> result) {
+          setState((){
+            _isLoading = false;
+          });
+          if (result.isSuccess()){
+              setState(() {
+                _paymentMethods.addAll(result.response?.paymentMethods ?? []);
+                _selectedPaymentMethod = null;
+              });
+          } else {
+            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(result.error?.message ?? '')));
+          }
+        });
+  }
+
+
+  void executeRegularPayment(int? paymentMethodId) {
+    var request =
+    MFExecutePaymentRequest(paymentMethodId ?? 0, widget.amount);
+    request.displayCurrencyIso = widget.currency?.toUpperCase() ?? MFCurrencyISO.UNITED_STATE_USD;
+
+    setState(() {
+      _isPaying = true;
+    });
+    MFSDK.executePayment(
+        context,
+        request,
+        MFAPILanguage.EN,
+        onInvoiceCreated: (String invoiceId) =>
+        {
+
+        },
+        onPaymentResponse: (String invoiceId,
+            MFResult<MFPaymentStatusResponse> result)
+        {
+          setState(() {
+            _isPaying = false;
+          });
+          if (!result.isSuccess() && result.error?.code != 106){
+              ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(result.error?.message ?? '')));
+          }
+          if(result.isSuccess()){
+            Navigator.pop(context);
+            widget.onFinish(invoiceId);
+          }
+        });
+  }
+
+
+  void executeDirectPayment(int? paymentMethodId) {
+    var request =
+    MFExecutePaymentRequest(paymentMethodId ?? 0, widget.amount);
+
+    setState(() {
+      _isPaying = true;
+    });
+
+    var mfCardInfo = MFCardInfo(
+        cardNumber: cardNumber,
+        expiryMonth: expiryMonth,
+        expiryYear: expiryYear,
+        securityCode: securityCode,
+        cardHolderName: cardHolderName,
+        bypass3DS: false,
+        saveToken: false);
+
+    MFSDK.executeDirectPayment(
+        context,
+        request,
+        mfCardInfo,
+        MFAPILanguage.EN,
+            (String invoiceId, MFResult<MFDirectPaymentResponse> result)  {
+              setState(() {
+                _isPaying = false;
+              });
+              if (!result.isSuccess() && result.error?.code != 106){
+                ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(result.error?.message ?? '')));
+              }
+              if(result.isSuccess()){
+                Navigator.pop(context);
+                widget.onFinish(invoiceId);
+              }
+        });
+  }
+
+  void pay() {
+      if (_selectedPaymentMethod?.isDirectPayment == true) {
+        if (cardNumber.isEmpty ||
+            expiryMonth.isEmpty ||
+            expiryYear.isEmpty ||
+            securityCode.isEmpty){
+          ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(S.of(context).pleaseInputFillAllFields)));
+        }else{
+            executeDirectPayment(
+                _selectedPaymentMethod?.paymentMethodId);
+        }
+      } else {
+          executeRegularPayment(
+              _selectedPaymentMethod?.paymentMethodId);
+      }
+  }
+
+  void initiateSession() {
+    MFSDK.initiateSession(null, (MFResult<MFInitiateSessionResponse> result) => {
+      if (result.isSuccess())
+        {
+          mfPaymentCardView.load(result.response!)
+
+          /// This for Apple pay button
+          // if(Platform.isIOS)
+          //   loadApplePay(result.response)
+        }
+    });
+  }
+
+  void loadApplePay(MFInitiateSessionResponse mfInitiateSessionResponse) {
+    var request = MFExecutePaymentRequest.constructorForApplyPay(
+        0.100, widget.currency?.toUpperCase() ?? MFCurrencyISO.UNITED_STATE_USD);
+    mfApplePayButton.load(
+        mfInitiateSessionResponse,
+        request,
+        MFAPILanguage.EN,
+            (String invoiceId, MFResult<MFPaymentStatusResponse> result)
+        {
+          setState(() {
+            _isPaying = false;
+          });
+          if (!result.isSuccess()){
+            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(result.error?.message ?? '')));
+          }
+        });
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      appBar: AppBar(
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+        leading: IconButton(
+          icon: const Icon(Icons.arrow_back),
+          onPressed: () {
+            widget.onFinish(null);
+            Navigator.of(context).pop();
+          },
+        ),
+        title: Text(S.of(context).paymentMethod, style: Theme.of(context)
+            .textTheme
+            .headline6
+            ?.copyWith(fontWeight: FontWeight.w700),),
+        backgroundColor: Theme.of(context).backgroundColor,
+      ),
+      body: _isLoading ? kLoadingWidget(context) : SafeArea(
+        child: SingleChildScrollView(
+          child: Padding(
+            padding: const EdgeInsets.symmetric(horizontal: 15.0),
+            child: Column(
+                mainAxisAlignment: MainAxisAlignment.center,
+                crossAxisAlignment: CrossAxisAlignment.stretch,
+                children: [
+                  ..._paymentMethods.map((item) => PaymentMethodItem(item: item, isSelected: _selectedPaymentMethod?.paymentMethodId, onSelected: (value){
+                    setState(() {
+                      _selectedPaymentMethod = value;
+                    });
+                  })).toList(),
+                  _selectedPaymentMethod?.isDirectPayment == true
+                      ? CreditCardForm(
+                    padding: const EdgeInsets.symmetric(horizontal: 0),
+                    textColor: Theme.of(context).textTheme.bodyText2!.color,
+                    themeColor: Theme.of(context).primaryColor,
+                    onCreditCardModelChange: (CreditCard? model) {
+                      setState(() {
+                        cardNumber = model?.cardNumber ?? '';
+                        expiryMonth = model?.expiryDate?.split('/')[0] ?? '';
+                        expiryYear = model?.expiryDate?.split('/')[1] ?? '';
+                        securityCode = model?.cvv ?? '';
+                        cardHolderName = model?.cardHolderName ?? '';
+                      });
+                    },
+                  )
+                      : Column(),
+                  const Padding(
+                    padding: EdgeInsets.all(5.0),
+                  ),
+                  ElevatedButton(
+                    style: ElevatedButton.styleFrom(
+                        primary: _selectedPaymentMethod != null ? Theme.of(context).primaryColor : Colors.grey),
+                    onPressed: _isPaying || _selectedPaymentMethod == null ? null : pay,
+                    child: Text(
+                      _isPaying ? S.of(context).loading : S.of(context).payNow,
+                      style: Theme.of(context).textTheme.subtitle2?.copyWith().copyWith(color: Colors.white),
+                    ),
+                  ),
+                  if(Platform.isIOS)
+                    createApplePayButton(),
+                ]),
+          ),
+        ),
+      ),
+    );
+  }
+
+  MFApplePayButton createApplePayButton() {
+    mfApplePayButton = MFApplePayButton(height: 50.0);
+    return mfApplePayButton;
+  }
+}
+
+class PaymentMethodItem extends StatelessWidget {
+  const PaymentMethodItem({Key? key, required this.item, required this.isSelected, required this.onSelected}) : super(key: key);
+  final PaymentMethods item;
+  final int? isSelected;
+  final Function(PaymentMethods) onSelected;
+
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      children: <Widget>[
+        InkWell(
+          onTap: () {
+            onSelected(item);
+          },
+          child: Container(
+            decoration: BoxDecoration(
+                color: isSelected == item.paymentMethodId
+                    ? Theme.of(context).primaryColorLight
+                    : Colors.transparent),
+            child: Padding(
+              padding: const EdgeInsets.symmetric(
+                  vertical: 5),
+              child: Row(
+                children: <Widget>[
+                  Radio<String?>(
+                      value: item.paymentMethodId?.toString() ?? '',
+                      groupValue: isSelected.toString(),
+                      onChanged: (String? value){
+                        onSelected(item);
+                      }),
+                  const SizedBox(width: 10),
+                  ImageTools.image(
+                    url: item.imageUrl ?? '',
+                    width: 40.0,
+                    fit: BoxFit.contain,
+                  ),
+                  const SizedBox(width: 10),
+                  if(item.paymentMethodEn?.isNotEmpty ?? false) Expanded(child: Text(item.paymentMethodEn!))
+                ],
+              ),
+            ),
+          ),
+        ),
+        const Divider(height: 1)
+      ],
+    );
+  }
+}
diff --git a/lib/modules_ext/native_payment/myfatoorah/utils.dart b/lib/modules_ext/native_payment/myfatoorah/utils.dart
new file mode 100644
index 00000000..e76e400f
--- /dev/null
+++ b/lib/modules_ext/native_payment/myfatoorah/utils.dart
@@ -0,0 +1,26 @@
+import 'package:myfatoorah_flutter/utils/MFCountry.dart';
+
+class MFUtils {
+  static MFCountry getMFCountryByCountryCode(String? code) {
+    switch (code) {
+      case 'KW':
+        return MFCountry.KUWAIT;
+      case 'SA':
+        return MFCountry.SAUDI_ARABIA;
+      case 'BH':
+        return MFCountry.BAHRAIN;
+      case 'AR':
+        return MFCountry.UNITED_ARAB_EMIRATES;
+      case 'QA':
+        return MFCountry.QATAR;
+      case 'OM':
+        return MFCountry.OMAN;
+      case 'JO':
+        return MFCountry.JORDAN;
+      case 'EG':
+        return MFCountry.EGYPT;
+      default:
+        return MFCountry.KUWAIT;
+    }
+  }
+}
\ No newline at end of file
diff --git a/lib/modules_ext/native_payment/stripe/index.dart b/lib/modules_ext/native_payment/stripe/index.dart
new file mode 100644
index 00000000..62c9b8d1
--- /dev/null
+++ b/lib/modules_ext/native_payment/stripe/index.dart
@@ -0,0 +1,221 @@
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+import 'package:provider/provider.dart';
+import 'package:stripe_sdk/stripe_sdk_ui.dart' as stripe_sdk_ui;
+
+import '../../../generated/l10n.dart';
+import '../../../models/app_model.dart';
+import '../../../models/cart/cart_model.dart';
+import '../../../models/entities/credit_card.dart';
+import '../../../modules/native_payment/credit_card/index.dart';
+import 'services.dart';
+
+class StripePayment extends StatefulWidget {
+  final Function? onFinish;
+
+  const StripePayment({
+    Key? key,
+    this.onFinish,
+  }) : super(key: key);
+
+  @override
+  StripePaymentState createState() => StripePaymentState();
+}
+
+class StripePaymentState extends State<StripePayment> {
+  StripeServices services = StripeServices();
+
+  String? cardNumber = '';
+  String? cardHolderName = '';
+  String? expiryDate = '';
+  String? cvv = '';
+  bool? showBackView = false;
+
+  bool isChecking = false;
+
+  bool get areFieldsValid =>
+      cardHolderName!.isNotEmpty &&
+      cvv!.isNotEmpty &&
+      expiryDate!.isNotEmpty &&
+      cardNumber!.isNotEmpty;
+
+  String formatPrice(String price) {
+    final formatCurrency = NumberFormat.currency(symbol: '', decimalDigits: 1);
+    var number = '';
+    number = formatCurrency.format(price.isNotEmpty ? double.parse(price) : 0);
+    return number;
+  }
+
+  Future<void> handlePayment(BuildContext context) async {
+    setState(() {
+      isChecking = true;
+    });
+
+    var cartModel = Provider.of<CartModel>(context, listen: false);
+    final totalPrice = cartModel.getTotal()!;
+
+    final appModel = Provider.of<AppModel>(context, listen: false);
+    final currencyCode = appModel.currencyCode;
+    final smallestUnitRate = appModel.smallestUnitRate ?? 1;
+
+    var result = false;
+    try {
+      final expDate = expiryDate!.split('/');
+      result = await services.executePayment(
+        totalPrice: (totalPrice * smallestUnitRate).round().toStringAsFixed(0),
+        currencyCode: currencyCode,
+        emailAddress: cartModel.address?.email,
+        name: cardHolderName,
+        stripeCard: stripe_sdk_ui.StripeCard(
+          expMonth: int.parse(expDate.first),
+          expYear: int.parse(expDate.last),
+          number: cardNumber,
+          cvc: cvv,
+        ),
+        context: context,
+      );
+
+      if (result == true && widget.onFinish != null) {
+        widget.onFinish!(result);
+        Navigator.of(context).pop();
+      }
+
+      if (result == false) {
+        final snackbar = SnackBar(
+          content: Text(S.of(context).transactionCancelled),
+        );
+
+        ScaffoldMessenger.of(context).showSnackBar(snackbar);
+      }
+    } catch (err) {
+      await showDialog(
+        context: context,
+        builder: (BuildContext context) {
+          return AlertDialog(
+            title: Text(S.of(context).orderStatusFailed),
+            content: Text('$err'),
+            actions: <Widget>[
+              TextButton(
+                onPressed: () {
+                  Navigator.of(context).pop();
+                },
+                child: Text(
+                  S.of(context).ok,
+                  style: TextStyle(color: Theme.of(context).primaryColor),
+                ),
+              )
+            ],
+          );
+        },
+      );
+      return;
+    } finally {
+      setState(() {
+        isChecking = false;
+      });
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return WillPopScope(
+      onWillPop: _handleAndroidBack,
+      child: Scaffold(
+        backgroundColor: Theme.of(context).backgroundColor,
+        appBar: AppBar(
+          backgroundColor: Theme.of(context).backgroundColor,
+          leading: GestureDetector(
+            onTap: () {
+              widget.onFinish!(null);
+              Navigator.pop(context);
+            },
+            child: const Icon(Icons.arrow_back_ios),
+          ),
+          title: Row(
+            children: <Widget>[
+              Expanded(
+                child: Text(
+                  S.of(context).payment,
+                  textAlign: TextAlign.center,
+                  style: Theme.of(context).brightness == Brightness.dark
+                      ? Theme.of(context).primaryTextTheme.headline6
+                      : Theme.of(context).textTheme.headline6,
+                ),
+              ),
+              Builder(builder: (BuildContext context) {
+                return ButtonTheme(
+                  padding: EdgeInsets.zero,
+                  shape: RoundedRectangleBorder(
+                      borderRadius: BorderRadius.circular(5.0)),
+                  child: ElevatedButton(
+                    onPressed:
+                        areFieldsValid ? () => handlePayment(context) : null,
+                    child: isChecking
+                        ? const SizedBox(
+                            height: 24,
+                            width: 24,
+                            child: CircularProgressIndicator(
+                              strokeWidth: 2.0,
+                            ),
+                          )
+                        : Text(
+                            S.of(context).checkout,
+                            style: const TextStyle(
+                              color: Colors.white,
+                              fontWeight: FontWeight.w500,
+                            ),
+                          ),
+                  ),
+                );
+              }),
+            ],
+          ),
+        ),
+        body: GestureDetector(
+          onTap: () {
+            final focus = FocusScope.of(context);
+            if (!focus.hasPrimaryFocus) {
+              focus.unfocus();
+            }
+          },
+          child: SafeArea(
+            child: Column(
+              children: [
+                CreditCardWidget(
+                  cardBgColor: Theme.of(context).primaryColor,
+                  expiryDate: expiryDate,
+                  cardHolderName: cardHolderName,
+                  cardNumber: cardNumber!,
+                  cvvCode: cvv,
+                  showBackView: showBackView!,
+                ),
+                Expanded(
+                  child: SingleChildScrollView(
+                    child: CreditCardForm(
+                      textColor: Theme.of(context).textTheme.bodyText2!.color,
+                      themeColor: Theme.of(context).primaryColor,
+                      onCreditCardModelChange: (CreditCard? model) {
+                        setState(() {
+                          cardNumber = model!.cardNumber;
+                          cardHolderName = model.cardHolderName;
+                          cvv = model.cvv;
+                          expiryDate = model.expiryDate;
+                          showBackView = model.isCvvFocused;
+                        });
+                      },
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+
+  Future<bool> _handleAndroidBack() async {
+    widget.onFinish!(null);
+    return true;
+  }
+}
diff --git a/lib/modules_ext/native_payment/stripe/services.dart b/lib/modules_ext/native_payment/stripe/services.dart
new file mode 100644
index 00000000..e03e12d7
--- /dev/null
+++ b/lib/modules_ext/native_payment/stripe/services.dart
@@ -0,0 +1,110 @@
+import 'dart:async';
+
+import 'package:flutter/widgets.dart';
+import 'package:stripe_sdk/stripe_sdk.dart' as stripe_sdk;
+import 'package:stripe_sdk/stripe_sdk_ui.dart' as stripe_sdk_ui;
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+import '../../../services/services.dart';
+
+class StripeServices {
+  stripe_sdk.Stripe? stripe;
+
+  static final StripeServices _instance = StripeServices._internal();
+
+  factory StripeServices() {
+    _instance.stripe ??= stripe_sdk.Stripe(
+      kStripeConfig['publishableKey'],
+    );
+    return _instance;
+  }
+
+  StripeServices._internal();
+
+  Future<Map<String, dynamic>?> createPaymentIntent({
+    required String totalPrice,
+    String? currencyCode,
+    String? emailAddress,
+    String? name,
+    required stripe_sdk_ui.StripeCard stripeCard,
+  }) async {
+    try {
+      final paymentMethod =
+          await stripe!.api.createPaymentMethodFromCard(stripeCard);
+      final clientSecret = await Services().api.createPaymentIntentStripe(
+          totalPrice: totalPrice,
+          currencyCode: currencyCode,
+          emailAddress: emailAddress,
+          name: name,
+          paymentMethodId: paymentMethod['id']);
+
+      if (clientSecret != null) {
+        return await stripe!.api.retrievePaymentIntent(
+          clientSecret,
+        );
+      }
+    } catch (e) {
+      printLog(e);
+      rethrow;
+    }
+    return null;
+  }
+
+  Future<bool> executePayment({
+    required String totalPrice,
+    String? currencyCode,
+    String? emailAddress,
+    String? name,
+    required stripe_sdk_ui.StripeCard stripeCard,
+    required BuildContext context,
+  }) async {
+    try {
+      var paymentIntentRes = await createPaymentIntent(
+        totalPrice: totalPrice,
+        currencyCode: currencyCode,
+        emailAddress: emailAddress,
+        name: name,
+        stripeCard: stripeCard,
+      );
+
+      if (paymentIntentRes == null) {
+        return false;
+      }
+
+      final String? clientSecret = paymentIntentRes['client_secret'];
+      final String? paymentMethodId = paymentIntentRes['payment_method'];
+
+      //3D secure is enable in this card
+      if (paymentIntentRes['status'] == 'requires_action') {
+        paymentIntentRes = await confirmPayment3DSecure(
+            clientSecret!, paymentMethodId, context);
+      }
+      if (paymentIntentRes?['status'] == 'requires_confirmation') {
+        // paymentIntentRes = await stripe!
+        //     .confirmPayment(clientSecret!, paymentMethodId: paymentMethodId);
+      }
+
+      return paymentIntentRes?['status'] == 'succeeded' ||
+          paymentIntentRes?['status'] == 'requires_capture';
+    } catch (e, trace) {
+      printLog(e);
+      printLog(trace);
+      rethrow;
+    }
+  }
+
+  Future<Map<String, dynamic>?> confirmPayment3DSecure(String clientSecret,
+      String? paymentMethodId, BuildContext context) async {
+    try {
+      await stripe!.confirmPayment(clientSecret, context,
+          paymentMethodId: paymentMethodId);
+      final paymentIntentRes3dSecure =
+          await stripe!.api.retrievePaymentIntent(clientSecret);
+      return paymentIntentRes3dSecure;
+    } catch (e) {
+      printLog(e);
+      return null;
+    }
+  }
+}
diff --git a/lib/modules_ext/native_payment/stripe_v2/index.dart b/lib/modules_ext/native_payment/stripe_v2/index.dart
new file mode 100644
index 00000000..913e8b11
--- /dev/null
+++ b/lib/modules_ext/native_payment/stripe_v2/index.dart
@@ -0,0 +1,187 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+import 'package:flutter_stripe/flutter_stripe.dart';
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+import '../../../services/services.dart';
+
+export 'package:flutter_stripe/flutter_stripe.dart';
+
+class StripeServicesV2 {
+  bool _initialized = false;
+
+  static final StripeServicesV2 _instance = StripeServicesV2._internal();
+
+  factory StripeServicesV2() => _instance;
+
+  StripeServicesV2._internal();
+
+  Future<void> init() async {
+    if (_initialized) {
+      return;
+    }
+    Stripe.publishableKey = kStripeConfig['publishableKey'];
+    Stripe.merchantIdentifier = kStripeConfig['merchantIdentifier'] ??
+        'merchant.com.inspireui.mstore.flutter';
+    Stripe.urlScheme =
+        '${kStripeConfig['returnUrl'] ?? 'fluxstore://'}'.split('://').first;
+    await Stripe.instance.applySettings();
+    _initialized = true;
+  }
+
+  Future<bool> handlePayment({
+    required String orderId,
+    required String totalPrice,
+    required String currencyCode,
+    required String emailAddress,
+    required String name,
+    Color? color,
+    bool darkMode = false,
+    bool useApplePay = false,
+    bool useGooglePay = false,
+    String applePayPrice = '0',
+  }) async {
+    try {
+      await init();
+      final isTestEnv =
+          !('${kStripeConfig['publishableKey']}'.startsWith('pk_live'));
+
+      var paymentIntentClientSecret;
+      if (!useApplePay) {
+        paymentIntentClientSecret = await getClientSecret(
+          totalPrice: totalPrice,
+          currencyCode: currencyCode,
+          emailAddress: emailAddress,
+          name: name,
+          orderId: orderId,
+        );
+      }
+
+      if (!useApplePay && paymentIntentClientSecret == null) {
+        return false;
+      }
+
+      if (useApplePay && (await Stripe.instance.checkApplePaySupport())) {
+        await Stripe.instance.presentApplePay(
+          ApplePayPresentParams(
+            cartItems: [
+              ApplePayCartSummaryItem.immediate(
+                label: kStripeConfig['merchantDisplayName'],
+                amount: applePayPrice,
+                isPending: false,
+              ),
+            ],
+            country: kStripeConfig['merchantCountryCode'] ?? 'US',
+            currency: currencyCode,
+            requiredBillingContactFields: [
+              ApplePayContactFieldsType.name,
+              ApplePayContactFieldsType.emailAddress,
+            ],
+          ),
+        );
+
+        paymentIntentClientSecret = await getClientSecret(
+          totalPrice: totalPrice,
+          currencyCode: currencyCode,
+          emailAddress: emailAddress,
+          name: name,
+          orderId: orderId,
+        );
+
+        if (paymentIntentClientSecret == null) {
+          return false;
+        }
+
+        await Stripe.instance.confirmApplePayPayment(paymentIntentClientSecret);
+        return true;
+      }
+
+      if (useGooglePay &&
+          (await Stripe.instance.isGooglePaySupported(
+            IsGooglePaySupportedParams(
+              testEnv: isTestEnv,
+              existingPaymentMethodRequired: false,
+            ),
+          ))) {
+        await Stripe.instance.initGooglePay(
+          GooglePayInitParams(
+            merchantName: kStripeConfig['merchantDisplayName'],
+            countryCode: kStripeConfig['merchantCountryCode'] ?? 'US',
+            isEmailRequired: true,
+            testEnv: isTestEnv,
+            existingPaymentMethodRequired: false,
+          ),
+        );
+        final param = PresentGooglePayParams(
+          currencyCode: currencyCode,
+          clientSecret: paymentIntentClientSecret,
+        );
+        await Stripe.instance.presentGooglePay(param);
+        return true;
+      }
+
+      final billingDetails = BillingDetails(
+        email: emailAddress,
+        name: name,
+      );
+
+      await Stripe.instance.initPaymentSheet(
+        paymentSheetParameters: SetupPaymentSheetParameters(
+          paymentIntentClientSecret: paymentIntentClientSecret,
+          merchantDisplayName: kStripeConfig['merchantDisplayName'],
+          returnURL: kStripeConfig['returnUrl'],
+          style: darkMode ? ThemeMode.dark : ThemeMode.light,
+          appearance: PaymentSheetAppearance(
+            colors: PaymentSheetAppearanceColors(
+              primary: color,
+            ),
+            primaryButton: PaymentSheetPrimaryButtonAppearance(
+              colors: PaymentSheetPrimaryButtonTheme(
+                light: PaymentSheetPrimaryButtonThemeColors(
+                  background: color,
+                ),
+                dark: PaymentSheetPrimaryButtonThemeColors(
+                  background: color,
+                ),
+              ),
+            ),
+          ),
+          billingDetails: billingDetails,
+        ),
+      );
+
+      await Stripe.instance.presentPaymentSheet();
+
+      return true;
+    } catch (err, trace) {
+      printLog(err);
+      printLog(trace);
+      rethrow;
+    }
+  }
+
+  Future<String?> getClientSecret({
+    required String totalPrice,
+    required String currencyCode,
+    required String emailAddress,
+    required String name,
+    required String orderId,
+  }) async {
+    try {
+      final clientSecret = await Services().api.createPaymentIntentStripeV3(
+            totalPrice: totalPrice,
+            currencyCode: currencyCode,
+            emailAddress: emailAddress,
+            name: name,
+            orderId: orderId,
+          );
+
+      return clientSecret;
+    } catch (e) {
+      printLog(e);
+      rethrow;
+    }
+  }
+}
diff --git a/lib/modules_ext/native_payment/tap/index.dart b/lib/modules_ext/native_payment/tap/index.dart
new file mode 100644
index 00000000..8b7b7c9f
--- /dev/null
+++ b/lib/modules_ext/native_payment/tap/index.dart
@@ -0,0 +1,136 @@
+import 'dart:core';
+
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:provider/provider.dart';
+import 'package:webview_flutter/webview_flutter.dart';
+
+import '../../../common/config.dart';
+import '../../../models/cart/cart_model.dart';
+import 'services.dart';
+
+const kRedirectUrl = 'http://your_website.com/redirect_url';
+
+class TapPayment extends StatefulWidget {
+  final Map<String, dynamic>? params;
+  final Function? onFinish;
+
+  const TapPayment({this.params, this.onFinish});
+
+  @override
+  State<StatefulWidget> createState() {
+    return TapPaymentState();
+  }
+}
+
+class TapPaymentState extends State<TapPayment> {
+  String? checkoutUrl;
+  TapServices services = TapServices();
+
+  @override
+  void initState() {
+    super.initState();
+    // final flutterWebviewPlugin = FlutterWebviewPlugin();
+    // flutterWebviewPlugin.onUrlChanged.listen((String url) async {
+    //   if (url.startsWith('http://your_website.com/redirect_url')) {
+    //     final uri = Uri.parse(url);
+    //     final tapId = uri.queryParameters['tap_id'];
+    //     widget.onFinish!(tapId);
+    //     Navigator.of(context).pop();
+    //   }
+    // });
+
+    Future.delayed(Duration.zero, () async {
+      try {
+        final params = getOrderParams();
+        final url = await services.getCheckoutUrl(params);
+        setState(() {
+          checkoutUrl = url;
+        });
+      } catch (e) {
+        ScaffoldMessenger.of(context)
+          ..removeCurrentSnackBar()
+          ..showSnackBar(SnackBar(
+            content: Text(e.toString()),
+          ));
+        widget.onFinish!(null);
+        Navigator.of(context).pop();
+      }
+    });
+  }
+
+  Map<String, dynamic> getOrderParams() {
+    var cartModel = Provider.of<CartModel>(context, listen: false);
+    return {
+      'amount': cartModel.getTotal(),
+      'currency': kAdvanceConfig.defaultCurrency?.currencyDisplay,
+      'threeDSecure': true,
+      'save_card': false,
+      'receipt': {'email': false, 'sms': true},
+      'customer': {
+        'first_name': cartModel.address?.firstName ?? '',
+        'last_name': cartModel.address?.lastName ?? '',
+        'email': cartModel.address?.email ?? '',
+      },
+      'source': {'id': 'src_card'},
+      'post': {'url': kRedirectUrl},
+      'redirect': {'url': kRedirectUrl}
+    };
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    if (checkoutUrl != null) {
+      return WillPopScope(
+        onWillPop: _handleAndroidBack,
+        child: Scaffold(
+          appBar: AppBar(
+            backgroundColor: Theme.of(context).backgroundColor,
+            leading: GestureDetector(
+              onTap: () {
+                widget.onFinish!(null);
+                Navigator.pop(context);
+              },
+              child: const Icon(Icons.arrow_back_ios),
+            ),
+          ),
+          body: WebView(
+            initialUrl: checkoutUrl,
+            javascriptMode: JavascriptMode.unrestricted,
+            navigationDelegate: (NavigationRequest request) {
+              if (request.url.startsWith(kRedirectUrl)) {
+                final uri = Uri.parse(request.url);
+                final tapId = uri.queryParameters['tap_id'];
+                widget.onFinish!(tapId);
+                Navigator.of(context).pop();
+              }
+              return NavigationDecision.navigate;
+            },
+          ),
+        ),
+      );
+    } else {
+      return WillPopScope(
+        onWillPop: _handleAndroidBack,
+        child: Scaffold(
+          appBar: AppBar(
+            systemOverlayStyle: SystemUiOverlayStyle.light,
+            leading: IconButton(
+                icon: const Icon(Icons.arrow_back),
+                onPressed: () {
+                  Navigator.of(context).pop();
+                }),
+            backgroundColor: Theme.of(context).backgroundColor,
+            elevation: 0.0,
+          ),
+          body: Container(child: kLoadingWidget(context)),
+        ),
+      );
+    }
+  }
+
+  Future<bool> _handleAndroidBack() async {
+    widget.onFinish!(null);
+    return true;
+  }
+}
diff --git a/lib/modules_ext/native_payment/tap/services.dart b/lib/modules_ext/native_payment/tap/services.dart
new file mode 100644
index 00000000..f37501ca
--- /dev/null
+++ b/lib/modules_ext/native_payment/tap/services.dart
@@ -0,0 +1,33 @@
+import 'dart:async';
+import 'dart:convert' as convert;
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+
+class TapServices {
+  Future<String?> getCheckoutUrl(params) async {
+    try {
+      var response = await httpPost(
+        'https://api.tap.company/v2/charges'.toUri()!,
+        body: convert.jsonEncode(params),
+        headers: {
+          'content-type': 'application/json',
+          'Authorization': 'Bearer ${kTapConfig['SecretKey']}'
+        },
+      );
+
+      final body = convert.jsonDecode(response.body);
+      if (response.statusCode == 200) {
+        return body['transaction'] != null ? body['transaction']['url'] : null;
+      } else if (body['errors'] != null) {
+        var errors = List<Map<String, dynamic>>.from(body['errors']);
+        if (errors.isNotEmpty) {
+          throw errors[0]['description'];
+        }
+      }
+      return null;
+    } catch (e) {
+      rethrow;
+    }
+  }
+}
diff --git a/lib/modules_ext/paid_membership_pro/common/constants.dart b/lib/modules_ext/paid_membership_pro/common/constants.dart
new file mode 100644
index 00000000..0e0332ae
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/common/constants.dart
@@ -0,0 +1,3 @@
+const kReturnUrl = 'https://mstore.io/return';
+const kCancelReturnUrl = 'https://mstore.io/cancel_return';
+const kNotifyUrl = 'https://mstore.io/notify';
diff --git a/lib/modules_ext/paid_membership_pro/models/invoice.dart b/lib/modules_ext/paid_membership_pro/models/invoice.dart
new file mode 100644
index 00000000..8bc5c2e7
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/models/invoice.dart
@@ -0,0 +1,43 @@
+class Invoice {
+  final dynamic id;
+  final String? code;
+  final String? accountNumber;
+  final String? cardType;
+  final String? expirationMonth;
+  final String? expirationYear;
+  final double total;
+  final String? confirmMessage;
+  final String? username;
+  final String? email;
+  final String? membershipLevel;
+
+  Invoice(
+      {this.id,
+      this.code,
+      this.accountNumber,
+      this.cardType,
+      this.expirationMonth,
+      this.expirationYear,
+      this.total = 0.0,
+      this.confirmMessage,
+      this.username,
+      this.email,
+      this.membershipLevel});
+
+  factory Invoice.fromJson(Map<String, dynamic> parsedJson,
+          {String? confirmMessage}) =>
+      Invoice(
+          id: parsedJson['id'].toString(),
+          code: parsedJson['code'],
+          accountNumber: parsedJson['accountnumber'],
+          cardType: parsedJson['cardtype'],
+          expirationMonth: parsedJson['expirationmonth'],
+          expirationYear: parsedJson['expirationyear'],
+          total: double.tryParse('${parsedJson['total']}') != null
+              ? double.parse('${parsedJson['total']}')
+              : 0.0,
+          confirmMessage: confirmMessage,
+          username: parsedJson['user']['user_nicename'],
+          email: parsedJson['user']['user_email'],
+          membershipLevel: parsedJson['membership_level']['name']);
+}
diff --git a/lib/modules_ext/paid_membership_pro/models/plan.dart b/lib/modules_ext/paid_membership_pro/models/plan.dart
new file mode 100644
index 00000000..d12c74f8
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/models/plan.dart
@@ -0,0 +1,26 @@
+class Plan {
+  final dynamic id;
+  final String? name;
+  final String? description;
+  final String? cost;
+  final double initialPayment;
+  final bool? isFree;
+
+  Plan(
+      {this.id,
+      this.name,
+      this.description,
+      this.cost,
+      this.initialPayment = 0.0,
+      this.isFree = false});
+
+  factory Plan.fromJson(Map<String, dynamic> parsedJson) => Plan(
+      id: parsedJson['id'].toString(),
+      name: parsedJson['name'],
+      cost: parsedJson['cost_text'],
+      description: parsedJson['description'],
+      initialPayment:
+          double.tryParse('${parsedJson['initial_payment']}') != null
+              ? double.parse('${parsedJson['initial_payment']}')
+              : 0.0,isFree: parsedJson['is_free_level'] as bool?);
+}
diff --git a/lib/modules_ext/paid_membership_pro/route.dart b/lib/modules_ext/paid_membership_pro/route.dart
new file mode 100644
index 00000000..562d2364
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/route.dart
@@ -0,0 +1,40 @@
+import 'package:flutter/material.dart';
+
+import '../../common/constants.dart';
+import 'models/invoice.dart';
+import 'models/plan.dart';
+import 'views/confirmation_screen.dart';
+import 'views/plans_screen.dart';
+import 'views/signup_screen.dart';
+
+class PaidMembershipProRoute {
+  static dynamic getRoutesWithSettings(RouteSettings settings) {
+    final routes = {
+      RouteList.paidMemberShipProPlans: (context) => PlansScreen(),
+      RouteList.paidMemberShipProSignUp: (context) {
+        final arguments = settings.arguments;
+        if (arguments is Plan) {
+          return MembershipSignUpScreen(plan: arguments);
+        }
+        return errorPage('planId is required');
+      },
+      RouteList.paidMemberShipProConfirmation: (context) {
+        final arguments = settings.arguments;
+        if (arguments is Invoice) {
+          return ConfirmationScreen(invoice: arguments);
+        }
+        return errorPage('invoice is required');
+      },
+    };
+    return routes;
+  }
+
+  static Widget errorPage(String title) => Scaffold(
+        appBar: AppBar(
+          title: const Text('Error'),
+        ),
+        body: Center(
+          child: Text(title),
+        ),
+      );
+}
diff --git a/lib/modules_ext/paid_membership_pro/services/index.dart b/lib/modules_ext/paid_membership_pro/services/index.dart
new file mode 100644
index 00000000..9bf1aac2
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/services/index.dart
@@ -0,0 +1,79 @@
+import 'dart:convert' as convert;
+
+import 'package:inspireui/utils/logs.dart';
+import 'package:quiver/strings.dart';
+
+import '../../../services/services.dart';
+import '../models/invoice.dart';
+import '../models/plan.dart';
+
+class PaidMembershipProServices {
+  final domain = Services().api.domain;
+  Future<List<Plan>> getPlans() async {
+    try {
+      var list = <Plan>[];
+      var response = await httpGet(
+          Uri.parse('$domain/wp-json/api/flutter_paid_memberships_pro/plans'));
+      var jsonDecode = convert.jsonDecode(response.body);
+      if (jsonDecode is Map && isNotBlank(jsonDecode['message'])) {
+        throw jsonDecode['message'];
+      } else {
+        for (var item in jsonDecode) {
+          list.add(Plan.fromJson(item));
+        }
+        return list;
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
+  Future<Invoice> signUp(
+      {required String username,
+      required String email,
+      required String firstName,
+      required String lastName,
+      required String password,
+       String? cardNumber,
+       String? expiryDate,
+       String? cvv,
+      required Plan plan}) async {
+    try {
+      final expDate = expiryDate?.split('/');
+      var bodyReq = {
+        'username': username,
+        'email': email,
+        'firstname': firstName,
+        'lastname': lastName,
+        'password': password,
+
+        'plan': plan.id
+      };
+      if(plan.isFree == false){
+        bodyReq['card'] =  {
+          'number': cardNumber,
+          'exp_month': expDate?.first,
+          'exp_year': expDate?.last,
+          'cvc': cvv
+        };
+      }
+
+      var response = await httpPost(
+          Uri.parse(
+              '$domain/wp-json/api/flutter_paid_memberships_pro/register'),
+          body: convert.jsonEncode(bodyReq),
+          headers: {'Content-Type': 'application/json'});
+      var jsonDecode = convert.jsonDecode(response.body);
+      if (jsonDecode is Map && isNotBlank(jsonDecode['message'])) {
+        throw Exception(jsonDecode['message']);
+      } else {
+        return Invoice.fromJson(jsonDecode['invoice'],
+            confirmMessage: jsonDecode['confirmation_message']);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+}
diff --git a/lib/modules_ext/paid_membership_pro/services/paid_membership_service_mixin.dart b/lib/modules_ext/paid_membership_pro/services/paid_membership_service_mixin.dart
new file mode 100644
index 00000000..42544d86
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/services/paid_membership_service_mixin.dart
@@ -0,0 +1,9 @@
+import 'package:flutter/cupertino.dart';
+
+import '../route.dart';
+
+mixin PaidMembershipProServiceMixin {
+  dynamic getPaidMembershipProRoutesWithSettings(RouteSettings settings) {
+    return PaidMembershipProRoute.getRoutesWithSettings(settings);
+  }
+}
diff --git a/lib/modules_ext/paid_membership_pro/views/confirmation_screen.dart b/lib/modules_ext/paid_membership_pro/views/confirmation_screen.dart
new file mode 100644
index 00000000..eb9be6b9
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/views/confirmation_screen.dart
@@ -0,0 +1,116 @@
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/constants.dart';
+import '../../../common/tools/price_tools.dart';
+import '../../../models/app_model.dart';
+import '../../../widgets/html/index.dart';
+import '../models/invoice.dart';
+
+class ConfirmationScreen extends StatefulWidget {
+  final Invoice invoice;
+  const ConfirmationScreen({required this.invoice});
+
+  @override
+  State<ConfirmationScreen> createState() => _ConfirmationScreenState();
+}
+
+class _ConfirmationScreenState extends State<ConfirmationScreen> {
+  @override
+  Widget build(BuildContext context) {
+    final currency = Provider.of<AppModel>(context, listen: false).currency;
+    final currencyRate =
+        Provider.of<AppModel>(context, listen: false).currencyRate;
+
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      appBar: AppBar(
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+        backgroundColor: Colors.transparent,
+        elevation: 0.0,
+        leading: IconButton(
+            icon: const Icon(Icons.arrow_back),
+            onPressed: () {
+              Navigator.of(context)
+                  .popUntil(ModalRoute.withName(RouteList.login));
+            }),
+      ),
+      body: SafeArea(
+        child: Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 15.0),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              HtmlWidget(
+                widget.invoice.confirmMessage ?? '',
+                textStyle: const TextStyle(color: Colors.black, fontSize: 17.0),
+              ),
+              const SizedBox(height: 20.0),
+              Text(
+                'Invoice #${widget.invoice.code}',
+                style: Theme.of(context).textTheme.headline5!.copyWith(
+                      color: Theme.of(context).colorScheme.secondary,
+                      fontWeight: FontWeight.bold,
+                    ),
+              ),
+              const SizedBox(height: 10.0),
+              Item(
+                  label: 'Account',
+                  value:
+                      '${widget.invoice.username} (${widget.invoice.email})'),
+              Item(
+                  label: 'Membership Level',
+                  value: widget.invoice.membershipLevel ?? ''),
+              if(widget.invoice.accountNumber?.isNotEmpty ?? false) Item(
+                  label: 'Account Number',
+                  value: widget.invoice.accountNumber ?? ''),
+              if(widget.invoice.expirationMonth?.isNotEmpty ?? false) Item(
+                  label: 'Expiration',
+                  value:
+                      '${widget.invoice.expirationMonth}/${widget.invoice.expirationYear}'),
+              Item(
+                  label: 'Total Billed',
+                  value: PriceTools.getCurrencyFormatted(
+                          widget.invoice.total, currencyRate,
+                          currency: currency) ??
+                      '0.0'),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
+
+class Item extends StatelessWidget {
+  const Item({Key? key, required this.label, required this.value})
+      : super(key: key);
+  final String label;
+  final String value;
+
+  @override
+  Widget build(BuildContext context) {
+    return Padding(
+      padding: const EdgeInsets.symmetric(vertical: 5.0),
+      child: Row(
+        children: [
+          Text(
+            '$label:',
+            style: Theme.of(context).textTheme.headline6!.copyWith(
+                  color: Theme.of(context).colorScheme.secondary,
+                  fontWeight: FontWeight.w700,
+                ),
+          ),
+          const SizedBox(width: 10.0),
+          Text(
+            value,
+            style: Theme.of(context).textTheme.headline6!.copyWith(
+                  color: Theme.of(context).colorScheme.secondary,
+                ),
+          )
+        ],
+      ),
+    );
+  }
+}
diff --git a/lib/modules_ext/paid_membership_pro/views/plans_screen.dart b/lib/modules_ext/paid_membership_pro/views/plans_screen.dart
new file mode 100644
index 00000000..395ebe88
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/views/plans_screen.dart
@@ -0,0 +1,232 @@
+import 'package:async/async.dart';
+import 'package:flutter/material.dart';
+
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
+import '../../../generated/l10n.dart';
+import '../../../widgets/html/index.dart';
+import '../models/plan.dart';
+import '../services/index.dart';
+
+List<Map<String, dynamic>> kPlanItemDesign = [
+  /// isRecommended should be supported via GET APIs, not here.
+  {
+    'isTextColorAccent': true,
+    'backgroundColor': Colors.grey.withOpacity(0.5),
+    'textColor': Colors.black12.withOpacity(0.7),
+    'isRecommended': false,
+  },
+  {
+    'isTextColorAccent': false,
+    'backgroundColor': Colors.indigoAccent.withOpacity(0.9),
+    'textColor': Colors.white70.withOpacity(0.9),
+    'isRecommended': true,
+  },
+  {
+    'isTextColorAccent': false,
+    'backgroundColor': Colors.indigo.withOpacity(0.9),
+    'textColor': Colors.white,
+    'isRecommended': false,
+  }
+];
+
+class PlansScreen extends StatefulWidget {
+  @override
+  State<PlansScreen> createState() => _PlansScreenState();
+}
+
+class _PlansScreenState extends State<PlansScreen> {
+  final AsyncMemoizer<List<Plan>?> _memoizer = AsyncMemoizer<List<Plan>?>();
+  final PaidMembershipProServices _services = PaidMembershipProServices();
+  Future<List<Plan>?> getPlans() {
+    return _memoizer.runOnce(
+      _services.getPlans,
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      appBar: AppBar(
+        systemOverlayStyle: Theme.of(context).appBarTheme.systemOverlayStyle,
+        backgroundColor: Colors.transparent,
+        elevation: 0.0,
+        title: Text(
+          S.of(context).choosePlan,
+          style: Theme.of(context)
+              .textTheme
+              .headline6!
+              .copyWith(fontWeight: FontWeight.bold),
+        ),
+      ),
+      body: FutureBuilder<List<Plan>?>(
+        future: getPlans(),
+        builder: (BuildContext context, AsyncSnapshot<List<Plan>?> snapshot) {
+          switch (snapshot.connectionState) {
+            case ConnectionState.none:
+            case ConnectionState.active:
+            case ConnectionState.waiting:
+              return Center(child: kLoadingWidget(context));
+            case ConnectionState.done:
+            default:
+              if (snapshot.hasError ||
+                  snapshot.data == null ||
+                  snapshot.data!.isEmpty) {
+                if (snapshot.hasError) {
+                  return Padding(
+                    padding: const EdgeInsets.symmetric(horizontal: 20.0),
+                    child: Center(
+                      child: Text(
+                        '${snapshot.error}',
+                        style: const TextStyle(color: kErrorRed),
+                      ),
+                    ),
+                  );
+                }
+                return const SizedBox();
+              }
+              return SafeArea(
+                child: ListView.builder(
+                    padding: const EdgeInsets.all(8),
+                    itemCount: snapshot.data!.length,
+                    itemBuilder: (BuildContext context, int index) {
+                      return PlanItem(
+                        item: snapshot.data![index],
+                        textColor: kPlanItemDesign[index]['textColor'],
+                        backgroundColor: kPlanItemDesign[index]
+                            ['backgroundColor'],
+                        isRecommended: kPlanItemDesign[index]['isRecommended'],
+                        isTextColorAccent: kPlanItemDesign[index]
+                            ['isTextColorAccent'],
+                      );
+                    }),
+              );
+          }
+        },
+      ),
+    );
+  }
+}
+
+class PlanItem extends StatelessWidget {
+  final Plan item;
+  final Color backgroundColor;
+  final Color textColor;
+  final bool? isRecommended;
+  final bool isTextColorAccent;
+  const PlanItem(
+      {required this.item,
+      required this.backgroundColor,
+      required this.textColor,
+      this.isRecommended = false,
+      required this.isTextColorAccent});
+
+  @override
+  Widget build(BuildContext context) {
+    return Padding(
+      padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 10.0),
+      child: InkWell(
+        splashColor: backgroundColor,
+        onTap: () {
+          Navigator.of(context)
+              .pushNamed(RouteList.paidMemberShipProSignUp, arguments: item);
+        },
+        borderRadius: const BorderRadius.all(
+          Radius.circular(10.0),
+        ),
+        child: Stack(
+          children: [
+            Container(
+              decoration: BoxDecoration(
+                  borderRadius: const BorderRadius.all(
+                    Radius.circular(10.0),
+                  ),
+                  color: backgroundColor),
+              child: Column(
+                children: [
+                  SizedBox(
+                    height: 100,
+                    child: Center(
+                      child: Text(
+                        item.name!,
+                        style: Theme.of(context).textTheme.headline2!.copyWith(
+                              color: isTextColorAccent
+                                  ? Theme.of(context).colorScheme.secondary
+                                  : textColor,
+                              fontWeight: FontWeight.w700,
+                            ),
+                      ),
+                    ),
+                  ),
+                  Padding(
+                    padding: const EdgeInsets.symmetric(
+                        horizontal: 15.0, vertical: 15.0),
+                    child: HtmlWidget(
+                      item.cost!,
+                      textStyle:
+                          Theme.of(context).textTheme.bodyText2!.copyWith(
+                                color: isTextColorAccent
+                                    ? Theme.of(context).colorScheme.secondary
+                                    : textColor,
+                              ),
+                    ),
+                  ),
+                  SizedBox(
+                    width: double.maxFinite,
+                    child: Padding(
+                      padding: const EdgeInsets.symmetric(
+                          vertical: 20.0, horizontal: 20.0),
+                      child: HtmlWidget(
+                        item.description!,
+                        textStyle:
+                            Theme.of(context).textTheme.bodyText2!.copyWith(
+                                  color: isTextColorAccent
+                                      ? Theme.of(context).colorScheme.secondary
+                                      : textColor,
+                                ),
+                      ),
+                    ),
+                  ),
+                ],
+              ),
+            ),
+            if (isRecommended!)
+              const Positioned(
+                top: 10,
+                right: 10,
+                child: _RecommendedSign(),
+              )
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+class _RecommendedSign extends StatelessWidget {
+  const _RecommendedSign({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      width: 90,
+      height: 20,
+      decoration: const BoxDecoration(
+        color: Colors.green,
+        borderRadius: BorderRadius.all(
+          Radius.circular(4.0),
+        ),
+      ),
+      child: Center(
+        child: Text(
+          S.of(context).recommended,
+          style: Theme.of(context)
+              .textTheme
+              .bodyText2!
+              .copyWith(fontSize: 12.0, fontWeight: FontWeight.bold),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/modules_ext/paid_membership_pro/views/signup_screen.dart b/lib/modules_ext/paid_membership_pro/views/signup_screen.dart
new file mode 100644
index 00000000..08400db7
--- /dev/null
+++ b/lib/modules_ext/paid_membership_pro/views/signup_screen.dart
@@ -0,0 +1,379 @@
+import 'package:flutter/gestures.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/constants.dart';
+import '../../../common/tools.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/index.dart' show AppModel, CreditCard;
+import '../../../modules/native_payment/credit_card/index.dart';
+import '../../../screens/home/privacy_term_screen.dart';
+import '../../../widgets/common/custom_text_field.dart';
+import '../../../widgets/common/flux_image.dart';
+import '../models/plan.dart';
+import '../services/index.dart';
+
+class MembershipSignUpScreen extends StatefulWidget {
+  final Plan plan;
+
+  const MembershipSignUpScreen({required this.plan});
+
+  @override
+  State<MembershipSignUpScreen> createState() => _RegistrationScreenState();
+}
+
+class _RegistrationScreenState extends State<MembershipSignUpScreen> {
+  final GlobalKey<ScaffoldMessengerState> _scaffoldMessengerKey =
+      GlobalKey<ScaffoldMessengerState>();
+  final TextEditingController _emailController = TextEditingController();
+  final PaidMembershipProServices _services = PaidMembershipProServices();
+
+  Map<String, dynamic>? payments;
+  String? selectedPayment;
+
+  String? firstName,
+      lastName,
+      emailAddress,
+      username,
+      password,
+      cardNumber,
+      expiryDate,
+      cvv;
+
+  bool isChecked = false;
+  bool isLoading = false;
+
+  final firstNameNode = FocusNode();
+  final lastNameNode = FocusNode();
+  final usernameNode = FocusNode();
+  final emailNode = FocusNode();
+  final passwordNode = FocusNode();
+
+  bool get isCardValid => widget.plan.isFree == true || (
+      cvv!.isNotEmpty &&
+      expiryDate!.isNotEmpty &&
+      cardNumber!.isNotEmpty &&
+      expiryDate!.contains('/'));
+
+  @override
+  void dispose() {
+    _emailController.dispose();
+    firstNameNode.dispose();
+    lastNameNode.dispose();
+    emailNode.dispose();
+    passwordNode.dispose();
+    usernameNode.dispose();
+    super.dispose();
+  }
+
+  void _snackBar(String text) {
+    if (mounted) {
+      final snackBar = SnackBar(
+        content: Text(text),
+        duration: const Duration(seconds: 10),
+        action: SnackBarAction(
+          label: S.of(context).close,
+          onPressed: () {
+            // Some code to undo the change.
+          },
+        ),
+      );
+
+      _scaffoldMessengerKey.currentState?.showSnackBar(snackBar);
+    }
+  }
+
+  void goBackLogin() {
+    Navigator.of(context).popUntil(ModalRoute.withName(RouteList.login));
+  }
+
+  Future<void> _submitRegister(
+      {String? firstName,
+      String? lastName,
+      String? emailAddress,
+      String? password,
+      String? username}) async {
+    if (firstName == null ||
+        lastName == null ||
+        emailAddress == null ||
+        password == null ||
+        username == null ||
+        !isCardValid) {
+      _snackBar(S.of(context).pleaseInputFillAllFields);
+    } else if (isChecked == false) {
+      _snackBar(S.of(context).pleaseAgreeTerms);
+    } else {
+      if (!emailAddress.validateEmail()) {
+        _snackBar(S.of(context).errorEmailFormat);
+        return;
+      }
+
+      if (password.length < 8) {
+        _snackBar(S.of(context).errorPasswordFormat);
+        return;
+      }
+      try {
+        setState(() {
+          isLoading = true;
+        });
+        final invoice = await _services.signUp(
+            username: username,
+            email: emailAddress,
+            firstName: firstName,
+            lastName: lastName,
+            password: password,
+            cardNumber: cardNumber,
+            expiryDate: expiryDate,
+            cvv: cvv,
+            plan: widget.plan);
+        setState(() {
+          isLoading = false;
+        });
+        await Navigator.of(context).pushNamed(
+            RouteList.paidMemberShipProConfirmation,
+            arguments: invoice);
+      } catch (e) {
+        setState(() {
+          isLoading = false;
+        });
+        _snackBar(e.toString());
+      }
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final appModel = Provider.of<AppModel>(context, listen: true);
+    final themeConfig = appModel.themeConfig;
+
+    return ScaffoldMessenger(
+      key: _scaffoldMessengerKey,
+      child: Scaffold(
+        backgroundColor: Theme.of(context).backgroundColor,
+        appBar: AppBar(
+          systemOverlayStyle: SystemUiOverlayStyle.light,
+          backgroundColor: Theme.of(context).backgroundColor,
+          elevation: 0.0,
+        ),
+        body: SafeArea(
+          child: GestureDetector(
+            onTap: () => Tools.hideKeyboard(context),
+            child: SingleChildScrollView(
+              child: Padding(
+                padding: const EdgeInsets.symmetric(horizontal: 30.0),
+                child: AutofillGroup(
+                  child: Column(
+                    mainAxisAlignment: MainAxisAlignment.center,
+                    crossAxisAlignment: CrossAxisAlignment.stretch,
+                    children: <Widget>[
+                      const SizedBox(height: 10.0),
+                      Center(
+                        child: FluxImage(
+                          imageUrl: themeConfig.logo,
+                          width: MediaQuery.of(context).size.width / 2,
+                          fit: BoxFit.contain,
+                        ),
+                      ),
+                      const SizedBox(
+                        height: 30.0,
+                      ),
+                      CustomTextField(
+                        key: const Key('registerFirstNameField'),
+                        autofillHints: const [AutofillHints.givenName],
+                        onChanged: (value) => firstName = value,
+                        textCapitalization: TextCapitalization.words,
+                        nextNode: lastNameNode,
+                        showCancelIcon: true,
+                        decoration: InputDecoration(
+                          labelText: S.of(context).firstName,
+                          hintText: S.of(context).enterYourFirstName,
+                        ),
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerLastNameField'),
+                        autofillHints: const [AutofillHints.familyName],
+                        focusNode: lastNameNode,
+                        nextNode: usernameNode,
+                        showCancelIcon: true,
+                        textCapitalization: TextCapitalization.words,
+                        onChanged: (value) => lastName = value,
+                        decoration: InputDecoration(
+                          labelText: S.of(context).lastName,
+                          hintText: S.of(context).enterYourLastName,
+                        ),
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerUsernameField'),
+                        autofillHints: const [AutofillHints.familyName],
+                        focusNode: usernameNode,
+                        nextNode: emailNode,
+                        showCancelIcon: true,
+                        keyboardType: TextInputType.emailAddress,
+                        onChanged: (value) => username = value,
+                        decoration:
+                            InputDecoration(labelText: S.of(context).username),
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerEmailField'),
+                        focusNode: emailNode,
+                        autofillHints: const [AutofillHints.email],
+                        nextNode: passwordNode,
+                        controller: _emailController,
+                        onChanged: (value) => emailAddress = value,
+                        keyboardType: TextInputType.emailAddress,
+                        decoration: InputDecoration(
+                            labelText: S.of(context).enterYourEmail),
+                        hintText: S.of(context).enterYourEmail,
+                      ),
+                      const SizedBox(height: 20.0),
+                      CustomTextField(
+                        key: const Key('registerPasswordField'),
+                        focusNode: passwordNode,
+                        autofillHints: const [AutofillHints.password],
+                        showEyeIcon: true,
+                        obscureText: true,
+                        onChanged: (value) => password = value,
+                        decoration: InputDecoration(
+                          labelText: S.of(context).enterYourPassword,
+                          hintText: S.of(context).enterYourPassword,
+                        ),
+                      ),
+                      if(widget.plan.isFree == false)const SizedBox(height: 15.0),
+                      if(widget.plan.isFree == false)Text(
+                        'Payment Information',
+                        style: Theme.of(context).textTheme.headline6!.copyWith(
+                              color: Theme.of(context).colorScheme.secondary,
+                              fontWeight: FontWeight.w700,
+                            ),
+                      ),
+                      if(widget.plan.isFree == false)CreditCardForm(
+                        padding: const EdgeInsets.symmetric(horizontal: 0),
+                        textColor: Theme.of(context).textTheme.bodyText2!.color,
+                        themeColor: Theme.of(context).primaryColor,
+                        onCreditCardModelChange: (CreditCard? model) {
+                          setState(() {
+                            cardNumber = model?.cardNumber;
+                            expiryDate = model?.expiryDate;
+                            cvv = model?.cvv;
+                          });
+                        },
+                      ),
+                      const SizedBox(height: 20.0),
+                      Row(
+                        children: <Widget>[
+                          Checkbox(
+                            key: const Key('registerConfirmCheckbox'),
+                            value: isChecked,
+                            activeColor: Theme.of(context).primaryColor,
+                            checkColor: Colors.white,
+                            onChanged: (value) {
+                              isChecked = !isChecked;
+                              setState(() {});
+                            },
+                          ),
+                          InkWell(
+                            onTap: () {
+                              isChecked = !isChecked;
+                              setState(() {});
+                            },
+                            child: Text(
+                              S.of(context).iwantToCreateAccount,
+                              style: Theme.of(context).textTheme.bodyText1,
+                            ),
+                          ),
+                        ],
+                      ),
+                      InkWell(
+                        onTap: () {
+                          isChecked = !isChecked;
+                          setState(() {});
+                        },
+                        child: Row(
+                          children: <Widget>[
+                            Checkbox(
+                              value: isChecked,
+                              activeColor: Theme.of(context).primaryColor,
+                              checkColor: Colors.white,
+                              onChanged: (value) {
+                                isChecked = !isChecked;
+                                setState(() {});
+                              },
+                            ),
+                            Expanded(
+                              child: RichText(
+                                maxLines: 2,
+                                text: TextSpan(
+                                  text: S.of(context).iAgree,
+                                  style: Theme.of(context).textTheme.bodyText1,
+                                  children: <TextSpan>[
+                                    const TextSpan(text: ' '),
+                                    TextSpan(
+                                      text: S.of(context).agreeWithPrivacy,
+                                      style: TextStyle(
+                                          color: Theme.of(context).primaryColor,
+                                          decoration: TextDecoration.underline),
+                                      recognizer: TapGestureRecognizer()
+                                        ..onTap = () => Navigator.push(
+                                              context,
+                                              MaterialPageRoute(
+                                                builder: (context) =>
+                                                    const PrivacyTermScreen(),
+                                              ),
+                                            ),
+                                    ),
+                                  ],
+                                ),
+                              ),
+                            ),
+                          ],
+                        ),
+                      ),
+                      const SizedBox(height: 10.0),
+                      Padding(
+                        padding: const EdgeInsets.symmetric(vertical: 16.0),
+                        child: Material(
+                          color: Theme.of(context).primaryColor,
+                          borderRadius:
+                              const BorderRadius.all(Radius.circular(5.0)),
+                          elevation: 0,
+                          child: MaterialButton(
+                            key: const Key('registerSubmitButton'),
+                            onPressed: isLoading == true
+                                ? null
+                                : () async {
+                                    await _submitRegister(
+                                        firstName: firstName,
+                                        lastName: lastName,
+                                        emailAddress: emailAddress,
+                                        password: password,
+                                        username: username);
+                                  },
+                            minWidth: 200.0,
+                            elevation: 0.0,
+                            height: 42.0,
+                            child: Text(
+                              isLoading == true
+                                  ? S.of(context).loading
+                                  : S.of(context).createAnAccount,
+                              style: const TextStyle(
+                                  color: Colors.white,
+                                  fontWeight: FontWeight.bold),
+                            ),
+                          ),
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/routes/flux_navigate.dart b/lib/routes/flux_navigate.dart
index 3346aa4e..9b619fab 100644
--- a/lib/routes/flux_navigate.dart
+++ b/lib/routes/flux_navigate.dart
@@ -58,6 +58,20 @@ class FluxNavigate {
     return _navigator.pushReplacementNamed(routeName);
   }
 
+  static Future pushNamedAndRemoveUntil(
+    String routeName,
+    RoutePredicate predicate, {
+    Object? arguments,
+    bool forceRootNavigator = false,
+  }) {
+    if (forceRootNavigator) {
+      return _rootNavigator.pushNamedAndRemoveUntil(routeName, predicate,
+          arguments: arguments);
+    }
+    return _navigator.pushNamedAndRemoveUntil(routeName, predicate,
+        arguments: arguments);
+  }
+
   static Future<dynamic> push(Route<dynamic> route,
       {bool forceRootNavigator = false}) {
     if (forceRootNavigator) {
diff --git a/lib/routes/route.dart b/lib/routes/route.dart
index f5d6d61f..5e38baa7 100644
--- a/lib/routes/route.dart
+++ b/lib/routes/route.dart
@@ -20,6 +20,7 @@ import '../modules/dynamic_layout/helper/helper.dart';
 import '../modules/dynamic_layout/index.dart';
 import '../screens/brand/brand_backdrop.dart';
 import '../screens/index.dart';
+import '../screens/login_sms/login_sms_viewmodel.dart';
 import '../screens/order_history/index.dart';
 import '../screens/pages/static_page.dart';
 import '../screens/subcategories/models/subcategory_model.dart';
@@ -47,7 +48,11 @@ class Routes {
         loginGoogle: userModel.loginGoogle,
       );
     },
-    RouteList.loginSMS: (context) => const LoginSMSScreen(),
+    RouteList.loginSMS: (context) =>
+        ChangeNotifierProvider<LoginSmsViewModel>.value(
+          value: LoginSmsViewModel(Services().firebase),
+          child: const LoginSMSScreen(),
+        ),
     RouteList.products: (context) => const ProductsScreen(),
     RouteList.wishlist: (context) => Services().widget.renderWishListScreen(),
     RouteList.notify: (context) => NotificationScreen(),
@@ -104,11 +109,11 @@ class Routes {
             });
           }
 
-          if (config != null && !Config().isWordPress) {
+          if (config != null && !ServerConfig().isWordPress) {
             /// Navigate from "See All" in dynamic_blog
             isWordpressBlog = config['type'] == 'blog';
           } else {
-            isWordpressBlog = Config().isWordPress;
+            isWordpressBlog = ServerConfig().isWordPress;
           }
 
           /// is Wordpress Blog list
@@ -209,7 +214,7 @@ class Routes {
 
               /// for caching current products list from HomeCache
               if (products != null && products.isNotEmpty) {
-                productModel.setProductsList(products);
+                productModel.setProductsList(products, notify: false);
 
                 return ProductsScreen(
                   products: products,
@@ -528,7 +533,7 @@ class Routes {
         }
         return _errorRoute();
       case RouteList.updateUser:
-        if (Config().isWooType) {
+        if (ServerConfig().isWooType) {
           return _buildRoute(settings, (context) => UserUpdateWooScreen());
         }
         return _buildRoute(settings, (context) => UserUpdateScreen());
@@ -541,6 +546,7 @@ class Routes {
           settings,
           (context) => DeleteAccountScreen(
             confirmCaptcha: arguments.confirmCaptcha,
+            userToken: arguments.userToken,
           ),
         );
       default:
@@ -559,7 +565,7 @@ class Routes {
           );
         }
 
-        if (Config().isVendorType()) {
+        if (ServerConfig().isVendorType()) {
           return _buildRoute(settings, Services().getVendorRoute(settings));
         }
         return _errorRoute();
diff --git a/lib/screens/base_screen.dart b/lib/screens/base_screen.dart
index 9d858fec..b1fc0192 100644
--- a/lib/screens/base_screen.dart
+++ b/lib/screens/base_screen.dart
@@ -26,8 +26,11 @@ abstract class BaseScreen<T extends StatefulWidget> extends State<T> {
       });
     }
 
-    WidgetsBinding.instance
-        .addPostFrameCallback((_) => afterFirstLayout(context));
+    WidgetsBinding.instance.endOfFrame.then(
+      (_) {
+        if (mounted) afterFirstLayout(context);
+      },
+    );
   }
 
   void afterFirstLayout(BuildContext context) {}
diff --git a/lib/screens/brand/brand_backdrop.dart b/lib/screens/brand/brand_backdrop.dart
index 7ba6c840..b70cc4f9 100644
--- a/lib/screens/brand/brand_backdrop.dart
+++ b/lib/screens/brand/brand_backdrop.dart
@@ -1,11 +1,17 @@
+import 'dart:async';
+
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
+import '../../common/config.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/app_model.dart';
 import '../../models/brand_model.dart';
 import '../../models/entities/filter_sorty_by.dart';
 import '../../models/entities/product.dart';
+import '../../modules/firebase/dynamic_link_service.dart';
+import '../../services/services.dart';
 import '../../widgets/backdrop/backdrop.dart';
 import '../../widgets/backdrop/backdrop_menu.dart';
 import '../../widgets/common/flux_image.dart';
@@ -34,6 +40,7 @@ class _BrandPageState extends State<BrandPage>
   List<Product> products = [];
 
   late AnimationController _controller;
+
   @override
   void initState() {
     super.initState();
@@ -138,6 +145,7 @@ class _BrandPageState extends State<BrandPage>
               isFetching: isFetching,
               errMsg: errMsg,
               isEnd: isEnd,
+              productListItemHeight: kProductDetail.productListItemHeight,
             ),
             backLayer: BackdropMenu(
               onFilter: onFilter,
@@ -163,6 +171,22 @@ class _BrandPageState extends State<BrandPage>
             backTitle: Text(S.of(context).filter),
             controller: _controller,
             showFilter: false,
+            onTapShareButton: () async {
+              unawaited(
+                FlashHelper.message(
+                  context,
+                  message: S.of(context).generatingLink,
+                  duration: const Duration(seconds: 2),
+                ),
+              );
+              var currentCateId =
+                  Provider.of<BrandModel>(context, listen: false).brandId;
+              var cateUrl = await DynamicLinkService()
+                  .generateProductBrandUrl(currentCateId);
+              Services().firebase.shareDynamicLinkProduct(
+                    itemUrl: cateUrl,
+                  );
+            },
           ),
         );
 
diff --git a/lib/screens/cart/my_cart_screen.dart b/lib/screens/cart/my_cart_screen.dart
index 4637efee..8740b149 100644
--- a/lib/screens/cart/my_cart_screen.dart
+++ b/lib/screens/cart/my_cart_screen.dart
@@ -1,4 +1,3 @@
-import 'package:flash/flash.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:inspireui/inspireui.dart' show AutoHideKeyboard, printLog;
@@ -7,6 +6,7 @@ import 'package:provider/provider.dart';
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../menu/index.dart' show MainTabControlDelegate;
 import '../../models/index.dart' show AppModel, CartModel, Product, UserModel;
@@ -119,7 +119,7 @@ class _MyCartState extends State<MyCart> with SingleTickerProviderStateMixin {
                 : () {
                     if (kAdvanceConfig.alwaysShowTabBar) {
                       MainTabControlDelegate.getInstance()
-                          .changeTab(RouteList.cart);
+                          .changeTab(RouteList.cart, allowPush: false);
                       // return;
                     }
                     onCheckout(cartModel);
@@ -385,7 +385,7 @@ class _MyCartState extends State<MyCart> with SingleTickerProviderStateMixin {
     }
 
     if ((kVendorConfig['DisableMultiVendorCheckout'] ?? false) &&
-        Config().isVendorType()) {
+        ServerConfig().isVendorType()) {
       if (!model.isDisableMultiVendorCheckoutValid(
           model.productsInCart, model.getProductById)) {
         message = S.of(context).youCanOnlyOrderSingleStore;
@@ -393,37 +393,7 @@ class _MyCartState extends State<MyCart> with SingleTickerProviderStateMixin {
     }
 
     if (message != null) {
-      showFlash(
-        context: context,
-        duration: const Duration(seconds: 3),
-        persistent: !Config().isBuilder,
-        builder: (context, controller) {
-          return SafeArea(
-            child: Flash(
-              borderRadius: BorderRadius.circular(3.0),
-              backgroundColor: Theme.of(context).errorColor,
-              controller: controller,
-              behavior: FlashBehavior.fixed,
-              position: FlashPosition.top,
-              horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-              child: FlashBar(
-                icon: const Icon(
-                  Icons.check,
-                  color: Colors.white,
-                ),
-                content: Text(
-                  message,
-                  style: const TextStyle(
-                    color: Colors.white,
-                    fontSize: 18.0,
-                    fontWeight: FontWeight.w700,
-                  ),
-                ),
-              ),
-            ),
-          );
-        },
-      );
+      FlashHelper.errorMessage(context, message: message);
 
       return;
     }
diff --git a/lib/screens/cart/widgets/shopping_cart_sumary.dart b/lib/screens/cart/widgets/shopping_cart_sumary.dart
index b88a8b44..ef9ee95c 100644
--- a/lib/screens/cart/widgets/shopping_cart_sumary.dart
+++ b/lib/screens/cart/widgets/shopping_cart_sumary.dart
@@ -33,21 +33,23 @@ class _ShoppingCartSummaryState extends State<ShoppingCartSummary> {
 
   final couponController = TextEditingController();
 
-  final bool _showCouponList =
-      kAdvanceConfig.showCouponList && Config().type != ConfigType.magento;
+  final bool _showCouponList = kAdvanceConfig.showCouponList &&
+      ServerConfig().type != ConfigType.magento;
 
   @override
   void initState() {
     super.initState();
     getCoupon();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      // if (cartModel.couponObj != null && cartModel.couponObj!.amount! > 0) {
-      //   final savedCoupon = cartModel.savedCoupon;
-      //   couponController.text = savedCoupon ?? '';
-      // }
-      final savedCoupon = cartModel.savedCoupon;
-      couponController.text = savedCoupon ?? '';
-      _productsInCartJson = jsonEncode(cartModel.productsInCart);
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        // if (cartModel.couponObj != null && cartModel.couponObj!.amount! > 0) {
+        //   final savedCoupon = cartModel.savedCoupon;
+        //   couponController.text = savedCoupon ?? '';
+        // }
+        final savedCoupon = cartModel.savedCoupon;
+        couponController.text = savedCoupon ?? '';
+        _productsInCartJson = jsonEncode(cartModel.productsInCart);
+      }
     });
   }
 
diff --git a/lib/screens/cart/widgets/wishlist.dart b/lib/screens/cart/widgets/wishlist.dart
index 1eff53b6..9177c769 100644
--- a/lib/screens/cart/widgets/wishlist.dart
+++ b/lib/screens/cart/widgets/wishlist.dart
@@ -31,16 +31,21 @@ class WishList extends StatelessWidget {
                         height: MediaQuery.of(context).size.width * 0.8,
                         child: SingleChildScrollView(
                           scrollDirection: Axis.horizontal,
-                          child: Row(
-                            children: [
-                              for (var item in value.products)
-                                ProductCard(
-                                    item: item,
-                                    width: constraints.maxWidth * 0.35,
-                                    config: ProductConfig.empty()
-                                      ..showCartIcon = true
-                                      ..enableBottomAddToCart = true)
-                            ],
+                          child: Padding(
+                            padding: const EdgeInsets.symmetric(horizontal: 10),
+                            child: Row(
+                              mainAxisSize: MainAxisSize.min,
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              children: [
+                                for (var item in value.products)
+                                  ProductCard(
+                                      item: item,
+                                      width: constraints.maxWidth * 0.35,
+                                      config: ProductConfig.empty()
+                                        ..showCartIcon = true
+                                        ..enableBottomAddToCart = true)
+                              ],
+                            ),
                           ),
                         ))
                   ],
diff --git a/lib/screens/categories/categories_screen.dart b/lib/screens/categories/categories_screen.dart
index fb9b8e3a..81dab600 100644
--- a/lib/screens/categories/categories_screen.dart
+++ b/lib/screens/categories/categories_screen.dart
@@ -1,3 +1,4 @@
+import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
@@ -88,7 +89,7 @@ class CategoriesScreenState extends State<CategoriesScreen>
               elevation: 0,
               automaticallyImplyLeading: false,
               backgroundColor: Theme.of(context).backgroundColor,
-              title: FluxAppBar(),
+              title: const FluxAppBar(),
             )
           : null,
       backgroundColor: Theme.of(context).backgroundColor,
@@ -211,7 +212,7 @@ class _HeaderCategory extends StatelessWidget {
               if (showSearch)
                 IconButton(
                   icon: Icon(
-                    Icons.search,
+                    CupertinoIcons.search,
                     color: Theme.of(context)
                         .colorScheme
                         .secondary
diff --git a/lib/screens/categories/category_search_screen.dart b/lib/screens/categories/category_search_screen.dart
index c3fb3e4e..21bca374 100644
--- a/lib/screens/categories/category_search_screen.dart
+++ b/lib/screens/categories/category_search_screen.dart
@@ -66,16 +66,15 @@ class _CategorySearchState<T> extends State<CategorySearch> {
         backgroundColor: theme.backgroundColor,
         resizeToAvoidBottomInset: false,
         appBar: AppBar(
+          automaticallyImplyLeading: false,
           backgroundColor: theme.backgroundColor,
           iconTheme: theme.primaryIconTheme,
           // textTheme: theme.primaryTextTheme,
           // brightness: theme.primaryColorBrightness,
           titleSpacing: 0,
-          leading: IconButton(
-            icon: const Icon(Icons.arrow_back_ios, size: 20),
-            onPressed: close,
-          ),
+          leading: null,
           title: SearchBox(
+            showQRCode: false,
             showSearchIcon: false,
             showCancelButton: false,
             autoFocus: true,
diff --git a/lib/screens/categories/layouts/side_menu.dart b/lib/screens/categories/layouts/side_menu.dart
index 3e55d366..46d7de9f 100644
--- a/lib/screens/categories/layouts/side_menu.dart
+++ b/lib/screens/categories/layouts/side_menu.dart
@@ -2,6 +2,7 @@ import 'package:async/async.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
+import '../../../common/config.dart';
 import '../../../models/index.dart' show AppModel, Category, Product;
 import '../../../modules/dynamic_layout/index.dart';
 import '../../../services/index.dart';
@@ -100,6 +101,7 @@ class SideMenuCategoriesState extends State<SideMenuCategories> {
 class FetchProductLayout extends StatefulWidget {
   final Category? category;
   final List<Category>? subCategories;
+
   const FetchProductLayout({this.category, this.subCategories, Key? key})
       : super(key: key);
 
@@ -226,6 +228,7 @@ class _StateFetchProductLayout extends BaseScreen<FetchProductLayout> {
       padding: 4.0,
       layout: 'list',
       ratioProductImage: ProductConfig.empty().imageRatio,
+      productListItemHeight: kProductDetail.productListItemHeight,
     );
   }
 }
diff --git a/lib/screens/categories/layouts/sub.dart b/lib/screens/categories/layouts/sub.dart
index 4957ec92..b4f753e8 100644
--- a/lib/screens/categories/layouts/sub.dart
+++ b/lib/screens/categories/layouts/sub.dart
@@ -2,6 +2,7 @@ import 'package:async/async.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
+import '../../../common/config.dart';
 import '../../../models/index.dart' show AppModel, Category, Product, UserModel;
 import '../../../services/index.dart';
 import '../../../widgets/product/product_list.dart';
@@ -52,7 +53,7 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
       isFetching = true;
       completer = CancelableCompleter();
     });
-    List<Product>? products;
+    List<Product>? newProducts;
     final userId = Provider.of<UserModel>(context, listen: false).user?.id;
     completer.complete(_service.api.fetchProductsByCategory(
         lang: Provider.of<AppModel>(context, listen: false).langCode,
@@ -60,15 +61,15 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
         page: page + 1,
         userId: userId));
     completer.operation.then((value) {
-      products = value;
-      if (products!.length < 2) {
+      newProducts = value;
+      if (newProducts!.length < 2) {
         setState(() {
           isEnd = true;
         });
       }
       setState(() {
         isFetching = false;
-        products = [...products!, ...products!];
+        products = [...products!, ...newProducts!];
         page = page + 1;
       });
     });
@@ -163,6 +164,7 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
                     .productListLayout,
                 ratioProductImage: Provider.of<AppModel>(context, listen: false)
                     .ratioProductImage,
+                productListItemHeight: kProductDetail.productListItemHeight,
               );
             },
           ),
diff --git a/lib/screens/chat/bottom_sheet_smart_chat.dart b/lib/screens/chat/bottom_sheet_smart_chat.dart
index ae218bd5..5f3b13ea 100644
--- a/lib/screens/chat/bottom_sheet_smart_chat.dart
+++ b/lib/screens/chat/bottom_sheet_smart_chat.dart
@@ -28,8 +28,10 @@ class _BottomSheetSmartChatState extends State<BottomSheetSmartChat>
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      options = getSmartChatOptions();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        options = getSmartChatOptions();
+      }
     });
   }
 
@@ -44,7 +46,7 @@ class _BottomSheetSmartChatState extends State<BottomSheetSmartChat>
       onPressed: () async {
         if ((config.kConfigChat['UseRealtimeChat'] ?? false) &&
                 Services().firebase.isEnabled ||
-            Config().isBuilder) {
+            ServerConfig().isBuilder) {
           final userModel = Provider.of<UserModel>(context, listen: false);
           if (userModel.user == null) {
             await Navigator.of(context).pushNamed(RouteList.login);
@@ -92,7 +94,7 @@ class _BottomSheetSmartChatState extends State<BottomSheetSmartChat>
     for (var i = 0; i < optionData.length; i++) {
       switch (optionData[i]['app']) {
         case 'firebase':
-          if (Services().firebase.isEnabled || Config().isBuilder) {
+          if (Services().firebase.isEnabled || ServerConfig().isBuilder) {
             result.add({
               'app': 'firebase',
               'description': optionData[i]['description'] ?? S.of(context).chat,
diff --git a/lib/screens/chat/chat_mixin.dart b/lib/screens/chat/chat_mixin.dart
index a505eef3..b70f1335 100644
--- a/lib/screens/chat/chat_mixin.dart
+++ b/lib/screens/chat/chat_mixin.dart
@@ -9,6 +9,7 @@ import '../../generated/l10n.dart';
 import '../../models/index.dart';
 import '../../services/service_config.dart';
 import '../../services/services.dart';
+import '../../widgets/common/flux_image.dart';
 import '../../widgets/common/webview.dart';
 import 'chat_screen.dart';
 
@@ -25,7 +26,7 @@ class ChatMixin {
     for (var i = 0; i < options.length; i++) {
       switch (options[i]['app']) {
         case 'firebase':
-          if (Services().firebase.isEnabled || Config().isBuilder) {
+          if (Services().firebase.isEnabled || ServerConfig().isBuilder) {
             listWidget.add(
               CupertinoActionSheetAction(
                 onPressed: () async {
@@ -157,7 +158,7 @@ class ChatMixin {
       mainAxisAlignment: MainAxisAlignment.center,
       children: [
         if (imageData.isNotEmpty)
-          Image.network(imageData, width: 24, fit: BoxFit.contain),
+          FluxImage(imageUrl: imageData, width: 24, fit: BoxFit.contain),
         if (imageData.isEmpty)
           Icon(
             iconData,
diff --git a/lib/screens/chat/fab_circle_smart_chat.dart b/lib/screens/chat/fab_circle_smart_chat.dart
index 59fdf86c..754237f6 100644
--- a/lib/screens/chat/fab_circle_smart_chat.dart
+++ b/lib/screens/chat/fab_circle_smart_chat.dart
@@ -18,16 +18,10 @@ class FabCircleSmartChat extends StatefulWidget {
 }
 
 class _FabCircleSmartChatState extends State<FabCircleSmartChat>
-    with ChatMixin, WidgetsBindingObserver {
+    with ChatMixin {
   @override
   List<Map> get options => widget.options ?? config.smartChat;
 
-  @override
-  void initState() {
-    super.initState();
-    WidgetsBinding.instance.addObserver(this);
-  }
-
   IconButton getIconButton(
     IconData? iconData,
     double iconSize,
diff --git a/lib/screens/chat/vendor_chat.dart b/lib/screens/chat/vendor_chat.dart
index 650d9d96..8405d612 100644
--- a/lib/screens/chat/vendor_chat.dart
+++ b/lib/screens/chat/vendor_chat.dart
@@ -31,8 +31,10 @@ class _VendorChatState extends State<VendorChat>
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      options = getSmartChatOptions();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        options = getSmartChatOptions();
+      }
     });
   }
 
diff --git a/lib/screens/checkout/review_screen.dart b/lib/screens/checkout/review_screen.dart
index fb1e2a3f..5e020067 100644
--- a/lib/screens/checkout/review_screen.dart
+++ b/lib/screens/checkout/review_screen.dart
@@ -105,7 +105,7 @@ class _ReviewState extends BaseScreen<ReviewScreen> {
                             Text(
                               PriceTools.getCurrencyFormatted(
                                   model.getSubTotal(), currencyRate,
-                                  currency: model.currency)!,
+                                  currency: model.currencyCode)!,
                               style: Theme.of(context)
                                   .textTheme
                                   .subtitle1!
@@ -170,7 +170,7 @@ class _ReviewState extends BaseScreen<ReviewScreen> {
                             Text(
                               PriceTools.getCurrencyFormatted(
                                   model.getTotal(), currencyRate,
-                                  currency: model.currency)!,
+                                  currency: model.currencyCode)!,
                               style: Theme.of(context)
                                   .textTheme
                                   .subtitle1!
diff --git a/lib/screens/checkout/widgets/payment_method_item.dart b/lib/screens/checkout/widgets/payment_method_item.dart
index bc0a562d..871995c7 100644
--- a/lib/screens/checkout/widgets/payment_method_item.dart
+++ b/lib/screens/checkout/widgets/payment_method_item.dart
@@ -3,6 +3,7 @@ import 'package:flutter/material.dart';
 import '../../../common/config.dart';
 import '../../../models/index.dart' show PaymentMethod;
 import '../../../services/index.dart';
+import '../../../widgets/common/flux_image.dart';
 
 class PaymentMethodItem extends StatelessWidget {
   const PaymentMethodItem(
@@ -46,9 +47,8 @@ class PaymentMethodItem extends StatelessWidget {
                           crossAxisAlignment: CrossAxisAlignment.start,
                           children: <Widget>[
                             if (kPayments[paymentMethod.id] != null)
-                              Image.asset(
-                                kPayments[paymentMethod.id],
-                                width: 120,
+                              FluxImage(
+                                imageUrl: kPayments[paymentMethod.id],
                                 height: 30,
                               ),
                             if (kPayments[paymentMethod.id] == null)
diff --git a/lib/screens/checkout/widgets/payment_methods.dart b/lib/screens/checkout/widgets/payment_methods.dart
index 09eb9f04..2e1829e9 100644
--- a/lib/screens/checkout/widgets/payment_methods.dart
+++ b/lib/screens/checkout/widgets/payment_methods.dart
@@ -1,7 +1,9 @@
+import 'dart:async';
 import 'dart:convert' as convert;
 
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
 import 'package:provider/provider.dart';
 import 'package:quiver/strings.dart';
 import 'package:razorpay_flutter/razorpay_flutter.dart';
@@ -9,15 +11,30 @@ import 'package:razorpay_flutter/razorpay_flutter.dart';
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
 import '../../../common/tools.dart';
+import '../../../common/tools/flash.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/booking/booking_model.dart';
 import '../../../models/index.dart'
-    show AppModel, CartModel, Order, PaymentMethodModel, TaxModel, UserModel;
+    show
+        AppModel,
+        CartModel,
+        Order,
+        PaymentMethodModel,
+        TaxModel,
+        UserModel,
+        kStripeApplePayMethod,
+        kStripeGooglePayMethod;
 import '../../../modules/native_payment/credit_card/index.dart';
+import '../../../modules/native_payment/flutterwave/services.dart';
 import '../../../modules/native_payment/mercado_pago/index.dart';
 import '../../../modules/native_payment/paypal/index.dart';
+import '../../../modules/native_payment/paystack/services.dart';
 import '../../../modules/native_payment/paytm/services.dart';
 import '../../../modules/native_payment/razorpay/services.dart';
+import '../../../modules_ext/native_payment/myfatoorah/index.dart';
+import '../../../modules_ext/native_payment/stripe/index.dart';
+import '../../../modules_ext/native_payment/stripe_v2/index.dart';
+import '../../../modules_ext/native_payment/tap/index.dart';
 import '../../../services/index.dart';
 import '../../../widgets/common/common_safe_area.dart';
 
@@ -131,6 +148,10 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                                     setState(() {
                                       selectedId = i;
                                     });
+                                    final paymentMethod = paymentMethodModel
+                                        .paymentMethods
+                                        .firstWhere((item) => item.id == i);
+                                    cartModel.setPaymentMethod(paymentMethod);
                                   }, selectedId)
                                 : const SizedBox()
                         ],
@@ -157,7 +178,7 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                           Text(
                               PriceTools.getCurrencyFormatted(
                                   cartModel.getSubTotal(), currencyRate,
-                                  currency: cartModel.currency)!,
+                                  currency: cartModel.currencyCode)!,
                               style: const TextStyle(
                                   fontSize: 14, color: kGrey400))
                         ],
@@ -201,6 +222,7 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                     Services().widget.renderTaxes(taxModel, context),
                     Services().widget.renderRewardInfo(context),
                     Services().widget.renderCheckoutWalletInfo(context),
+                    Services().widget.renderCODExtraFee(context),
                     Padding(
                       padding: const EdgeInsets.symmetric(
                           vertical: 8, horizontal: 20),
@@ -217,7 +239,7 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                           Text(
                             PriceTools.getCurrencyFormatted(
                                 cartModel.getTotal(), currencyRate,
-                                currency: cartModel.currency)!,
+                                currency: cartModel.currencyCode)!,
                             style: TextStyle(
                               fontSize: 20,
                               color: Theme.of(context).colorScheme.secondary,
@@ -320,19 +342,19 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
       /// Use Credit card. For Shopify only.
       if (!isSubscriptionProduct &&
           kPaymentConfig.enableCreditCard &&
-          serverConfig['type'] == 'shopify') {
+          ServerConfig().isShopify) {
         Navigator.push(
           context,
           MaterialPageRoute(
             builder: (context) => CreditCardPayment(
               onFinish: (number) {
                 if (number == null) {
-                  widget.onLoading!(false);
+                  widget.onLoading?.call(false);
                   isPaying = false;
                   return;
                 } else {
                   createOrder(paid: true).then((value) {
-                    widget.onLoading!(false);
+                    widget.onLoading?.call(false);
                     isPaying = false;
                   });
                 }
@@ -349,7 +371,7 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
       /// Direct bank transfer (BACS)
 
       if (!isSubscriptionProduct && paymentMethod.id!.contains('bacs')) {
-        widget.onLoading!(false);
+        widget.onLoading?.call(false);
         isPaying = false;
 
         showModalBottomSheet(
@@ -409,11 +431,11 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                                 }
                               }
                               widget.onFinish!(order);
-                              widget.onLoading!(false);
+                              widget.onLoading?.call(false);
                               isPaying = false;
                             },
                             error: (message) {
-                              widget.onLoading!(false);
+                              widget.onLoading?.call(false);
                               if (message != null) {
                                 Tools.showSnackBar(
                                     ScaffoldMessenger.of(context), message);
@@ -449,12 +471,12 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
             builder: (context) => PaypalPayment(
               onFinish: (number) {
                 if (number == null) {
-                  widget.onLoading!(false);
+                  widget.onLoading?.call(false);
                   isPaying = false;
                   return;
                 } else {
                   createOrder(paid: true, transactionId: number).then((value) {
-                    widget.onLoading!(false);
+                    widget.onLoading?.call(false);
                     isPaying = false;
                   });
                 }
@@ -474,14 +496,14 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
           context,
           MaterialPageRoute(
             builder: (context) => MercadoPagoPayment(
-              onFinish: (number) {
+              onFinish: (number, paid) {
                 if (number == null) {
-                  widget.onLoading!(false);
+                  widget.onLoading?.call(false);
                   isPaying = false;
                   return;
                 } else {
-                  createOrder(paid: true).then((value) {
-                    widget.onLoading!(false);
+                  createOrder(paid: paid).then((value) {
+                    widget.onLoading?.call(false);
                     isPaying = false;
                   });
                 }
@@ -492,6 +514,140 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
         return;
       }
 
+      /// Tap Payment
+      if (!isSubscriptionProduct &&
+          isNotBlank(kTapConfig['paymentMethodId']) &&
+          paymentMethod.id!.contains(kTapConfig['paymentMethodId']) &&
+          kTapConfig['enabled'] == true) {
+        Navigator.push(
+          context,
+          MaterialPageRoute(
+              builder: (context) => TapPayment(onFinish: (number) {
+                    if (number != null) {
+                      createOrder(paid: true).then((value) {
+                        widget.onLoading?.call(false);
+                        isPaying = false;
+                      });
+                    } else {
+                      isPaying = false;
+                      widget.onLoading?.call(false);
+                    }
+                  })),
+        );
+        return;
+      }
+
+      /// Stripe payment
+      if (!isSubscriptionProduct &&
+          [
+            kStripeConfig['paymentMethodId'],
+            kStripeApplePayMethod,
+            kStripeGooglePayMethod,
+          ].contains(paymentMethod.id) &&
+          kStripeConfig['enabled'] == true) {
+        if (kStripeConfig['useV1'] == true &&
+            paymentMethod.id == kStripeConfig['paymentMethodId']) {
+          Navigator.push(
+            context,
+            MaterialPageRoute(
+              builder: (_) => StripePayment(
+                onFinish: (success) {
+                  if (success == true) {
+                    createOrder(paid: true).then((value) {
+                      widget.onLoading?.call(false);
+                      isPaying = false;
+                    });
+                  } else {
+                    widget.onLoading?.call(false);
+                    isPaying = false;
+                    return;
+                  }
+                },
+              ),
+            ),
+          );
+
+          return;
+        }
+
+        createOrderOnWebsite(
+          paid: false,
+          onFinish: (Order? order) async {
+            final orderId = order?.id;
+            if (orderId != null) {
+              try {
+                final totalPrice = cartModel.getTotal()!;
+                final appModel = Provider.of<AppModel>(context, listen: false);
+                final currencyCode = appModel.currencyCode!;
+                final smallestUnitRate = appModel.smallestUnitRate ?? 1;
+                final finalPrice =
+                    (totalPrice * smallestUnitRate).round().toStringAsFixed(0);
+                final success = await StripeServicesV2().handlePayment(
+                  orderId: orderId,
+                  totalPrice: finalPrice,
+                  applePayPrice: totalPrice.toString(),
+                  useApplePay: paymentMethod.id == kStripeApplePayMethod,
+                  useGooglePay: paymentMethod.id == kStripeGooglePayMethod,
+                  currencyCode: currencyCode,
+                  emailAddress: cartModel.address?.email ?? '',
+                  name:
+                      '${cartModel.address?.firstName} ${cartModel.address?.lastName}'
+                          .trim(),
+                  color: Theme.of(context).primaryColor,
+                  darkMode:
+                      Provider.of<AppModel>(context, listen: false).darkTheme,
+                );
+
+                if (!success) {
+                  unawaited(
+                    FlashHelper.errorMessage(
+                      context,
+                      message: S.of(context).transactionCancelled,
+                    ),
+                  );
+                  isPaying = false;
+                  widget.onLoading?.call(false);
+                  return;
+                }
+
+                widget.onLoading?.call(false);
+                isPaying = false;
+              } on StripeException catch (e) {
+                unawaited(
+                  FlashHelper.errorMessage(
+                    context,
+                    message: e.error.localizedMessage ??
+                        S.of(context).transactionCancelled,
+                  ),
+                );
+                isPaying = false;
+                widget.onLoading?.call(false);
+              } on PlatformException catch (e) {
+                unawaited(
+                  FlashHelper.errorMessage(
+                    context,
+                    message: e.message ?? S.of(context).transactionCancelled,
+                  ),
+                );
+                isPaying = false;
+                widget.onLoading?.call(false);
+              } catch (e) {
+                unawaited(
+                  FlashHelper.errorMessage(
+                    context,
+                    message: e.toString(),
+                  ),
+                );
+                isPaying = false;
+                widget.onLoading?.call(false);
+              }
+            }
+          },
+        );
+
+        return;
+      }
+
       /// RazorPay payment
       /// Check below link for parameters:
       /// https://razorpay.com/docs/payment-gateway/web-integration/standard/#step-2-pass-order-id-and-other-options
@@ -500,15 +656,15 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
           kRazorpayConfig['enabled'] == true) {
         Services().api.createRazorpayOrder({
           'amount': (PriceTools.getPriceValueByCurrency(cartModel.getTotal()!,
-                      cartModel.currency!, currencyRate) *
+                      cartModel.currencyCode!, currencyRate) *
                   100)
               .toInt()
               .toString(),
-          'currency': cartModel.currency,
+          'currency': cartModel.currencyCode,
         }).then((value) {
           final razorServices = RazorServices(
             amount: (PriceTools.getPriceValueByCurrency(cartModel.getTotal()!,
-                        cartModel.currency!, currencyRate) *
+                        cartModel.currencyCode!, currencyRate) *
                     100)
                 .toInt()
                 .toString(),
@@ -523,9 +679,9 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                       .trim(),
             ),
           );
-          razorServices.openPayment(cartModel.currency!);
+          razorServices.openPayment(cartModel.currencyCode!);
         }).catchError((e) {
-          widget.onLoading!(false);
+          widget.onLoading?.call(false);
           Tools.showSnackBar(ScaffoldMessenger.of(context), e);
           isPaying = false;
         });
@@ -561,6 +717,98 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
         return;
       }
 
+      /// PayStack payment.
+      final availablePayStack = kPayStackConfig['paymentMethodId'] != null &&
+          (kPayStackConfig['enabled'] ?? false) &&
+          paymentMethod.id!.contains(kPayStackConfig['paymentMethodId']);
+      if (!isSubscriptionProduct && availablePayStack) {
+        createOrderOnWebsite(
+            paid: false,
+            onFinish: (Order? order) async {
+              if (order != null) {
+                final payStackServices = PayStackServices(
+                  amount: cartModel.getTotal()!.toString(),
+                  orderId: order.id!,
+                  email: cartModel.address?.email,
+                );
+                try {
+                  await payStackServices.openPayment(
+                      context, widget.onLoading!);
+                  widget.onFinish!(order);
+                } catch (e) {
+                  Tools.showSnackBar(
+                      ScaffoldMessenger.of(context), e.toString());
+                  isPaying = false;
+                }
+              }
+            });
+        return;
+      }
+
+      /// Flutterwave payment.
+      final availableFlutterwave =
+          kFlutterwaveConfig['paymentMethodId'] != null &&
+              (kFlutterwaveConfig['enabled'] ?? false) &&
+              paymentMethod.id!.contains(kFlutterwaveConfig['paymentMethodId']);
+      if (!isSubscriptionProduct && availableFlutterwave) {
+        createOrderOnWebsite(
+            paid: false,
+            onFinish: (Order? order) async {
+              if (order != null) {
+                final flutterwaveServices = FlutterwaveServices(
+                    amount: cartModel.getTotal()!.toString(),
+                    orderId: order.id!,
+                    email: cartModel.address?.email,
+                    name: cartModel.address?.fullName,
+                    phone: cartModel.address?.phoneNumber,
+                    currency: cartModel.currencyCode,
+                    paymentMethod: paymentMethod.title);
+                try {
+                  await flutterwaveServices.openPayment(
+                      context, widget.onLoading!);
+                  widget.onFinish!(order);
+                } catch (e) {
+                  Tools.showSnackBar(
+                      ScaffoldMessenger.of(context), e.toString());
+                  isPaying = false;
+                }
+              }
+            });
+        return;
+      }
+
+      final availableMyFatoorah =
+          kMyFatoorahConfig['paymentMethodId'] != null &&
+              (kMyFatoorahConfig['enabled'] ?? false) &&
+              paymentMethod.id!.contains(kMyFatoorahConfig['paymentMethodId']);
+      if (!isSubscriptionProduct && availableMyFatoorah) {
+        Navigator.push(
+          context,
+          MaterialPageRoute(
+            builder: (context) => MyFatoorahScreen(
+              amount: PriceTools.getPriceByRate(
+                  cartModel.getTotal(), currencyRate,
+                  currency: cartModel.currencyCode)!,
+              currency: cartModel.currencyCode,
+              customerName: cartModel.address?.email ?? '',
+              onFinish: (String? invoiceId) {
+                if (invoiceId != null) {
+                  createOrder(paid: true).then((value) {
+                    widget.onLoading?.call(false);
+                    isPaying = false;
+                  });
+                } else {
+                  widget.onLoading?.call(false);
+                  isPaying = false;
+                }
+              },
+            ),
+          ),
+        );
+
+        return;
+      }
+
       /// Use WebView Payment per frameworks
       Services().widget.placeOrder(
         context,
@@ -581,11 +829,11 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
             }
             widget.onFinish!(order);
           }
-          widget.onLoading!(false);
+          widget.onLoading?.call(false);
           isPaying = false;
         },
         error: (message) {
-          widget.onLoading!(false);
+          widget.onLoading?.call(false);
           if (message != null) {
             Tools.showSnackBar(ScaffoldMessenger.of(context), message);
           }
@@ -636,20 +884,20 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
         Tools.showSnackBar(ScaffoldMessenger.of(context), message);
       },
     );
-    widget.onLoading!(false);
+    widget.onLoading?.call(false);
   }
 
   @override
   void handlePaymentSuccess(PaymentSuccessResponse response) {
     createOrder(paid: true, transactionId: response.paymentId).then((value) {
-      widget.onLoading!(false);
+      widget.onLoading?.call(false);
       isPaying = false;
     });
   }
 
   @override
   void handlePaymentFailure(PaymentFailureResponse response) {
-    widget.onLoading!(false);
+    widget.onLoading?.call(false);
     isPaying = false;
     final body = convert.jsonDecode(response.message!);
     if (body['error'] != null &&
diff --git a/lib/screens/checkout/widgets/shipping_method.dart b/lib/screens/checkout/widgets/shipping_method.dart
index 5c4d9cfd..c58a1f3f 100644
--- a/lib/screens/checkout/widgets/shipping_method.dart
+++ b/lib/screens/checkout/widgets/shipping_method.dart
@@ -14,6 +14,7 @@ import '../../../models/shipping_method_model.dart';
 import '../../../services/index.dart';
 import '../../../widgets/common/common_safe_area.dart';
 import 'date_time_picker.dart';
+import 'delivery_calendar.dart';
 
 class ShippingMethods extends StatefulWidget {
   final Function? onBack;
@@ -59,7 +60,7 @@ class _ShippingMethodsState extends State<ShippingMethods> {
   @override
   Widget build(BuildContext context) {
     final shippingMethodModel = Provider.of<ShippingMethodModel>(context);
-    final currency = Provider.of<CartModel>(context).currency;
+    final currency = Provider.of<CartModel>(context).currencyCode;
     final currencyRates = Provider.of<CartModel>(context).currencyRates;
     return Column(
       children: [
@@ -96,6 +97,16 @@ class _ShippingMethodsState extends State<ShippingMethods> {
                           );
                         }
 
+                        if (model.shippingMethods?.isEmpty ?? true) {
+                          return Center(
+                            child: Image.asset(
+                              'assets/images/empty_shipping.png',
+                              width: 120,
+                              height: 120,
+                            ),
+                          );
+                        }
+
                         return Column(
                           crossAxisAlignment: CrossAxisAlignment.start,
                           children: <Widget>[
@@ -235,7 +246,10 @@ class _ShippingMethodsState extends State<ShippingMethods> {
                   Provider.of<CartModel>(context, listen: false)
                       .setShippingMethod(
                           shippingMethodModel.shippingMethods![selectedIndex!]);
-
+                  widget.onNext!();
+                } else if ((shippingMethodModel.shippingMethods?.isEmpty ??
+                        true) &&
+                    (shippingMethodModel.message?.isEmpty ?? true)) {
                   widget.onNext!();
                 }
               },
@@ -271,10 +285,10 @@ class _ShippingMethodsState extends State<ShippingMethods> {
       border: const OutlineInputBorder(),
     );
 
-    // if (shippingMethodModel.deliveryDates?.isNotEmpty ?? false) {
-    //   deliveryWidget =
-    //       DeliveryCalendar(dates: shippingMethodModel.deliveryDates!);
-    // }
+    if (shippingMethodModel.deliveryDates?.isNotEmpty ?? false) {
+      deliveryWidget =
+          DeliveryCalendar(dates: shippingMethodModel.deliveryDates!);
+    }
 
     return Column(
       crossAxisAlignment: CrossAxisAlignment.start,
diff --git a/lib/screens/common/app_bar_mixin.dart b/lib/screens/common/app_bar_mixin.dart
index f2f4c330..636cac34 100644
--- a/lib/screens/common/app_bar_mixin.dart
+++ b/lib/screens/common/app_bar_mixin.dart
@@ -20,7 +20,7 @@ mixin AppBarMixin<T extends StatefulWidget> on State<T> {
         elevation: appBar?.elevation.toDouble() ?? 0,
         automaticallyImplyLeading: false,
         backgroundColor: Theme.of(context).backgroundColor,
-        title: FluxAppBar(),
+        title: const FluxAppBar(),
       );
 
   /// [snap] is always false if [float] is false.
@@ -33,7 +33,7 @@ mixin AppBarMixin<T extends StatefulWidget> on State<T> {
         forceElevated: true,
         automaticallyImplyLeading: false,
         backgroundColor: Theme.of(context).backgroundColor,
-        title: FluxAppBar(),
+        title: const FluxAppBar(),
       );
 
   Widget renderScaffold({
@@ -53,7 +53,9 @@ mixin AppBarMixin<T extends StatefulWidget> on State<T> {
         floatingActionButton: floatingActionButton,
       );
     }
-    if (resizeToAvoidBottomInset != null || backgroundColor != null || floatingActionButton != null) {
+    if (resizeToAvoidBottomInset != null ||
+        backgroundColor != null ||
+        floatingActionButton != null) {
       return Scaffold(
         resizeToAvoidBottomInset: resizeToAvoidBottomInset,
         backgroundColor: backgroundColor,
diff --git a/lib/screens/common/delete_account_mixin.dart b/lib/screens/common/delete_account_mixin.dart
new file mode 100644
index 00000000..e7f45201
--- /dev/null
+++ b/lib/screens/common/delete_account_mixin.dart
@@ -0,0 +1,34 @@
+import 'package:flutter/cupertino.dart';
+
+import '../../generated/l10n.dart';
+
+mixin DeleteAccountMixin {
+  Future<bool> showConfirmDeleteAccountDialog(BuildContext context) async {
+    return await showCupertinoDialog(
+          context: context,
+          barrierDismissible: false,
+          useRootNavigator: false,
+          builder: (ctx) => CupertinoAlertDialog(
+            title: Text(S.current.deleteAccount),
+            content: Text(S.current.areYouSureDeleteAccount),
+            actions: [
+              CupertinoDialogAction(
+                isDefaultAction: true,
+                isDestructiveAction: true,
+                onPressed: () {
+                  Navigator.of(ctx).pop(true);
+                },
+                child: Text(S.current.ok),
+              ),
+              CupertinoDialogAction(
+                isDefaultAction: false,
+                isDestructiveAction: false,
+                onPressed: () => Navigator.of(ctx).pop(false),
+                child: Text(S.current.cancel),
+              )
+            ],
+          ),
+        ) ??
+        false;
+  }
+}
diff --git a/lib/screens/common/permission_request_mixin.dart b/lib/screens/common/permission_request_mixin.dart
new file mode 100644
index 00000000..702207fa
--- /dev/null
+++ b/lib/screens/common/permission_request_mixin.dart
@@ -0,0 +1,74 @@
+import 'package:flutter/material.dart';
+
+import '../../generated/l10n.dart';
+
+mixin PermissionRequestMixin<T extends StatefulWidget> on State<T> {
+  String get permissionRequestTitle;
+
+  String get permissionRequestSubtitle;
+
+  IconData get permissionIcon;
+
+  Future<void> onAcceptPermission();
+
+  Future<void> onDeclinePermission();
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Theme.of(context).cardColor,
+      bottomNavigationBar: SafeArea(
+        minimum: const EdgeInsets.symmetric(vertical: 8, horizontal: 16),
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          crossAxisAlignment: CrossAxisAlignment.stretch,
+          children: [
+            ElevatedButton(
+              onPressed: onAcceptPermission,
+              child: Text(
+                S.current.allow.toUpperCase(),
+                style: const TextStyle(
+                  color: Colors.white,
+                ),
+              ),
+            ),
+            OutlinedButton(
+              onPressed: onDeclinePermission,
+              child: Text(S.current.decline.toUpperCase()),
+            ),
+          ],
+        ),
+      ),
+      body: SingleChildScrollView(
+        child: Column(
+          mainAxisSize: MainAxisSize.max,
+          children: <Widget>[
+            Container(
+              height: MediaQuery.of(context).size.height * 0.5,
+              color: Theme.of(context).scaffoldBackgroundColor,
+              child: Center(
+                child: Icon(permissionIcon, size: 120),
+              ),
+            ),
+            const SizedBox(height: 20),
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 16.0),
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.center,
+                children: [
+                  Text(
+                    permissionRequestTitle,
+                    textAlign: TextAlign.center,
+                    style: Theme.of(context).textTheme.headline5,
+                  ),
+                  const SizedBox(height: 20),
+                  Text(permissionRequestSubtitle),
+                ],
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/screens/custom/static_site.dart b/lib/screens/custom/static_site.dart
index d5dfaeae..d10a2218 100644
--- a/lib/screens/custom/static_site.dart
+++ b/lib/screens/custom/static_site.dart
@@ -21,11 +21,13 @@ class _StaticSiteState extends State<StaticSite> with AppBarMixin {
       routeName: RouteList.html,
       body: !isMobile
           ? const PlatformError()
-          : WebView(
-              onWebViewCreated: (controller) async {
-                await controller
-                    .loadUrl('data:text/html;base64,${widget.data}');
-              },
+          : SafeArea(
+              child: WebView(
+                onWebViewCreated: (controller) async {
+                  await controller
+                      .loadUrl('data:text/html;base64,${widget.data}');
+                },
+              ),
             ),
     );
   }
diff --git a/lib/screens/detail/product_detail_screen.dart b/lib/screens/detail/product_detail_screen.dart
index 3c1a2c17..011f2a08 100644
--- a/lib/screens/detail/product_detail_screen.dart
+++ b/lib/screens/detail/product_detail_screen.dart
@@ -1,9 +1,12 @@
+import 'dart:async';
+
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart'
     show AppModel, Product, ProductWishListModel, UserModel;
@@ -32,7 +35,7 @@ class ProductDetailScreen extends StatefulWidget {
           mainAxisSize: MainAxisSize.min,
           children: <Widget>[
             if (Services().widget.enableShoppingCart(null) &&
-                !Config().isListingType)
+                !ServerConfig().isListingType)
               ListTile(
                 title: Text(
                   S.of(modalContext).myCart,
@@ -75,11 +78,18 @@ class ProductDetailScreen extends StatefulWidget {
               ),
 
             /// Share feature not supported in Strapi.
-            if (!Config().isStrapi && !Config().isNotion)
+            if (!ServerConfig().isStrapi && !ServerConfig().isNotion)
               ListTile(
                 title:
                     Text(S.of(modalContext).share, textAlign: TextAlign.center),
                 onTap: () {
+                  unawaited(
+                    FlashHelper.message(
+                      context,
+                      message: S.of(context).generatingLink,
+                      duration: const Duration(seconds: 1),
+                    ),
+                  );
                   Services().firebase.shareDynamicLinkProduct(
                         itemUrl: product?.permalink,
                       );
@@ -120,24 +130,27 @@ class _ProductDetailPageState extends BaseScreen<ProductDetailScreen>
 
   @override
   void initState() {
-    WidgetsBinding.instance.addPostFrameCallback((_) async {
-      if (widget.product is Product) {
-        /// Get more detail info from product
-        setState(() {
-          product = widget.product;
-        });
-        final check = await _checkProductPermission(widget.product);
-        if (check) {
-          product = await Services().widget.getProductDetail(context, product);
-        }
-      } else {
-        /// Request the product by Product ID which is using for web param
-        product = await Services().api.getProduct(widget.id);
-        await _checkProductPermission(product);
-      }
-      isLoading = false;
+    WidgetsBinding.instance.endOfFrame.then((_) async {
       if (mounted) {
-        setState(() {});
+        if (widget.product is Product) {
+          /// Get more detail info from product
+          setState(() {
+            product = widget.product;
+          });
+          final check = await _checkProductPermission(widget.product);
+          if (check) {
+            product =
+                await Services().widget.getProductDetail(context, product);
+          }
+        } else {
+          /// Request the product by Product ID which is using for web param
+          product = await Services().api.getProduct(widget.id);
+          await _checkProductPermission(product);
+        }
+        isLoading = false;
+        if (mounted) {
+          setState(() {});
+        }
       }
     });
     super.initState();
@@ -175,8 +188,19 @@ class _ProductDetailPageState extends BaseScreen<ProductDetailScreen>
 
   @override
   Widget build(BuildContext context) {
-    if (product == null) {
-      return const SizedBox();
+    if (product?.id == null) {
+      return Scaffold(
+          backgroundColor: Theme.of(context).backgroundColor,
+          appBar: AppBar(
+            systemOverlayStyle: SystemUiOverlayStyle.light,
+            backgroundColor: Colors.transparent,
+            elevation: 0.0,
+          ),
+          body: Center(
+            child: isLoading
+                ? kLoadingWidget(context)
+                : Text(S.of(context).notFound),
+          ));
     }
 
     if (_isChecking || (_checkingErrorMessage?.isNotEmpty ?? false)) {
diff --git a/lib/screens/detail/themes/half_size_image_type.dart b/lib/screens/detail/themes/half_size_image_type.dart
index c95af124..63ed46f3 100644
--- a/lib/screens/detail/themes/half_size_image_type.dart
+++ b/lib/screens/detail/themes/half_size_image_type.dart
@@ -5,6 +5,7 @@ import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 import 'package:smooth_page_indicator/smooth_page_indicator.dart';
 
+import '../../../common/config.dart';
 import '../../../models/index.dart' show CartModel, Product, ProductModel;
 import '../../../services/services.dart';
 import '../../cart/cart_screen.dart';
@@ -210,7 +211,11 @@ class _HalfSizeLayoutState extends State<HalfSizeLayout>
                       Services()
                           .widget
                           .productReviewWidget(widget.product!.id!),
-                      RelatedProduct(widget.product),
+                      if (kProductDetail.showRelatedProductFromSameStore &&
+                          widget.product?.store?.id != null)
+                        RelatedProductFromSameStore(widget.product),
+                      if (kProductDetail.showRelatedProduct)
+                        RelatedProduct(widget.product),
                       const SizedBox(
                         height: 100,
                       )
diff --git a/lib/screens/detail/themes/simple_type.dart b/lib/screens/detail/themes/simple_type.dart
index c5d2baac..46339ff6 100644
--- a/lib/screens/detail/themes/simple_type.dart
+++ b/lib/screens/detail/themes/simple_type.dart
@@ -83,7 +83,10 @@ class _SimpleLayoutState extends State<SimpleLayout>
     return SliverToBoxAdapter(
       child: Padding(
         padding: const EdgeInsets.symmetric(horizontal: 15.0),
-        child: body,
+        child: AnimatedSize(
+          duration: const Duration(milliseconds: 300),
+          child: body,
+        ),
       ),
     );
   }
@@ -104,7 +107,7 @@ class _SimpleLayoutState extends State<SimpleLayout>
           child: Stack(
             children: <Widget>[
               Scaffold(
-                floatingActionButton: (!Config().isVendorType() ||
+                floatingActionButton: (!ServerConfig().isVendorType() ||
                         !kConfigChat['EnableSmartChat'])
                     ? null
                     : Padding(
@@ -243,7 +246,13 @@ class _SimpleLayoutState extends State<SimpleLayout>
                                 ],
                               ),
                             ),
-                            RelatedProduct(product),
+                            if (kProductDetail
+                                    .showRelatedProductFromSameStore &&
+                                product.store?.id != null)
+                              RelatedProductFromSameStore(product),
+                            if (kProductDetail.showRelatedProduct)
+                              RelatedProduct(product),
+                            const SizedBox(height: 100),
                           ],
                         ),
                       ),
diff --git a/lib/screens/detail/widgets/index.dart b/lib/screens/detail/widgets/index.dart
index 9fd79091..efa4222e 100644
--- a/lib/screens/detail/widgets/index.dart
+++ b/lib/screens/detail/widgets/index.dart
@@ -11,5 +11,6 @@ export 'product_tag.dart';
 export 'product_title.dart';
 export 'product_variant.dart';
 export 'related_product.dart';
+export 'related_product_from_same_store.dart';
 export 'review.dart';
 export 'variant_image_feature.dart';
diff --git a/lib/screens/detail/widgets/listing_booking.dart b/lib/screens/detail/widgets/listing_booking.dart
index 82aef47b..2955abd8 100644
--- a/lib/screens/detail/widgets/listing_booking.dart
+++ b/lib/screens/detail/widgets/listing_booking.dart
@@ -62,7 +62,7 @@ class _StateProductBooking extends State<ListingBooking> {
 
   Future<void> getBookingData() async {
     var response = await httpGet(
-        '${Config().url}/wp-json/wc-bookings/v1/products/${widget.product!.id}'
+        '${ServerConfig().url}/wp-json/wc-bookings/v1/products/${widget.product!.id}'
             .toUri()!);
     var body = jsonDecode(response.body);
     setState(() {
@@ -92,7 +92,7 @@ class _StateProductBooking extends State<ListingBooking> {
 
   Future<bool> checkField() async {
     var response = await httpPost(
-        '${Config().url}/wp-admin/admin-ajax.php'.toUri()!,
+        '${ServerConfig().url}/wp-admin/admin-ajax.php'.toUri()!,
         headers: {
           'Accept': 'application/json',
           'Content-Type': 'application/x-www-form-urlencoded'
diff --git a/lib/screens/detail/widgets/product_detail_categories.dart b/lib/screens/detail/widgets/product_detail_categories.dart
index 5a33f9e6..877dec4e 100644
--- a/lib/screens/detail/widgets/product_detail_categories.dart
+++ b/lib/screens/detail/widgets/product_detail_categories.dart
@@ -36,7 +36,7 @@ class ProductDetailCategories extends StatelessWidget {
                     );
                   },
                   child: Text(
-                    ' ${category.name!.toUpperCase()}  ',
+                    ' ${category.name?.toUpperCase()}  ',
                     style: const TextStyle(
                       fontSize: 14,
                       fontWeight: FontWeight.w600,
diff --git a/lib/screens/detail/widgets/product_grouped.dart b/lib/screens/detail/widgets/product_grouped.dart
index b02aa262..273e1e94 100644
--- a/lib/screens/detail/widgets/product_grouped.dart
+++ b/lib/screens/detail/widgets/product_grouped.dart
@@ -1,14 +1,13 @@
 import 'package:async/async.dart';
-import 'package:flash/flash.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
 import '../../../common/tools.dart';
+import '../../../common/tools/flash.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/index.dart'
     show AppModel, CartModel, Product, ProductModel;
-import '../../../services/index.dart';
 import 'product_title.dart';
 
 class GroupedProduct extends StatefulWidget {
@@ -41,38 +40,12 @@ class _GroupedProductState extends State<GroupedProduct> {
         product: lstGroupedProducts[index], quantity: productCount);
 
     if (message.isNotEmpty) {
-      Tools.showSnackBar(ScaffoldMessenger.of(context), message);
+      FlashHelper.message(context, message: message);
     } else {
-      showFlash(
-          context: context,
-          persistent: !Config().isBuilder,
-          duration: const Duration(milliseconds: 1200),
-          builder: (context, controller) {
-            return Flash(
-              borderRadius: BorderRadius.circular(20.0),
-              backgroundColor: const Color(0xFF80FF72).withOpacity(0.5),
-              controller: controller,
-              behavior: FlashBehavior.floating,
-              boxShadows: kElevationToShadow[4],
-              position: FlashPosition.top,
-              horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-              child: FlashBar(
-                icon: const Icon(
-                  Icons.check,
-                  color: Colors.white,
-                ),
-                content: Center(
-                  child: Text(
-                    S.of(context).addedSuccessfully,
-                    style: const TextStyle(
-                      color: Colors.white,
-                      fontSize: 20.0,
-                    ),
-                  ),
-                ),
-              ),
-            );
-          });
+      FlashHelper.message(
+        context,
+        message: S.of(context).addedSuccessfully,
+      );
     }
   }
 
diff --git a/lib/screens/detail/widgets/product_image_slider.dart b/lib/screens/detail/widgets/product_image_slider.dart
index 7773b36b..77b3833d 100644
--- a/lib/screens/detail/widgets/product_image_slider.dart
+++ b/lib/screens/detail/widgets/product_image_slider.dart
@@ -102,8 +102,11 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance
-        .addPostFrameCallback((_) => afterFirstLayout(context));
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        afterFirstLayout(context);
+      }
+    });
 
     final url = widget.product.videoUrl;
     if (url != null && url.isNotEmpty) {
@@ -249,14 +252,17 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
               if (_currentPage != 0 && kProductDetail.sliderShowGoBackButton)
                 Positioned(
                   bottom: 4.0,
-                  left: 5.0,
+                  left: 2.0,
                   child: GestureDetector(
                     onTap: () {
                       _pageController.goTo(0);
                       widget.onChange(0);
                     },
                     child: Padding(
-                      padding: const EdgeInsets.all(10),
+                      padding: const EdgeInsets.symmetric(
+                        vertical: 10,
+                        horizontal: 4,
+                      ),
                       child: Icon(
                         CupertinoIcons.arrow_left_square_fill,
                         color: Theme.of(context).primaryColor,
@@ -268,19 +274,20 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
               if (kProductDetail.sliderIndicatorType ==
                   SliderIndicatorType.number) ...[
                 Positioned(
-                  bottom: 14.0,
-                  right: 10.0,
+                  bottom: 8.0,
+                  right: 4.0,
                   child: Container(
                     decoration: BoxDecoration(
-                      color: Theme.of(context).primaryColorLight,
-                      borderRadius: BorderRadius.circular(23.0),
+                      color: Colors.white12,
+                      borderRadius: BorderRadius.circular(6.0),
                     ),
                     padding: const EdgeInsets.symmetric(
-                        horizontal: 8.0, vertical: 4.0),
+                        horizontal: 6.0, vertical: 2.0),
                     child: Text(
                       '${_currentPage + 1}/${itemList.length}',
-                      style: const TextStyle(
-                        color: Colors.black87,
+                      style: TextStyle(
+                        color: Theme.of(context).primaryColor,
+                        fontWeight: FontWeight.w700,
                       ),
                     ),
                   ),
diff --git a/lib/screens/detail/widgets/product_image_thumbnail.dart b/lib/screens/detail/widgets/product_image_thumbnail.dart
index 7fba6643..121f3ba6 100644
--- a/lib/screens/detail/widgets/product_image_thumbnail.dart
+++ b/lib/screens/detail/widgets/product_image_thumbnail.dart
@@ -36,7 +36,7 @@ class ProductImageThumbnail extends StatelessWidget {
                 onTap: () => onSelect(index: i),
                 child: AnimatedContainer(
                   duration: const Duration(milliseconds: 200),
-                  padding: const EdgeInsets.all(4),
+                  padding: const EdgeInsets.all(1),
                   margin: const EdgeInsets.only(right: 10, top: 4),
                   decoration: BoxDecoration(
                     borderRadius: BorderRadius.circular(5),
@@ -53,7 +53,7 @@ class ProductImageThumbnail extends StatelessWidget {
                     height: height * (kIsWeb ? 1.2 : 1),
                     width: height,
                     isResize: true,
-                    fit: BoxFit.contain,
+                    fit: BoxFit.cover,
                   ),
                 ),
               )
diff --git a/lib/screens/detail/widgets/product_variant.dart b/lib/screens/detail/widgets/product_variant.dart
index 5527a926..e82bbab2 100644
--- a/lib/screens/detail/widgets/product_variant.dart
+++ b/lib/screens/detail/widgets/product_variant.dart
@@ -114,13 +114,15 @@ class _StateProductVariant extends State<ProductVariant> {
   void initState() {
     super.initState();
     product = widget.product as Product;
-    WidgetsBinding.instance.addPostFrameCallback(
+    WidgetsBinding.instance.endOfFrame.then(
       (_) {
-        setState(() {
-          quantity = widget.defaultQuantity;
-        });
-        getProductVariations();
-        getProductAddons();
+        if (mounted) {
+          setState(() {
+            quantity = widget.defaultQuantity;
+          });
+          getProductVariations();
+          getProductAddons();
+        }
       },
     );
   }
@@ -237,7 +239,7 @@ class _StateProductVariant extends State<ProductVariant> {
 
   List<Widget> getProductAttributeWidget() {
     final lang = Provider.of<AppModel>(context, listen: false).langCode;
-    if (mapAttribute == null && Config().type != ConfigType.opencart) {
+    if (mapAttribute == null && ServerConfig().type != ConfigType.opencart) {
       return [];
     }
     return services.widget.getProductAttributeWidget(
@@ -273,8 +275,8 @@ class _StateProductVariant extends State<ProductVariant> {
     FlashHelper.init(context);
     final isVariationLoading = productVariation == null &&
         (variations?.isEmpty ?? true) &&
-        Config().type != ConfigType.opencart &&
-        Config().type != ConfigType.notion;
+        ServerConfig().type != ConfigType.opencart &&
+        ServerConfig().type != ConfigType.notion;
 
     return Column(
       children: <Widget>[
diff --git a/lib/screens/detail/widgets/related_product.dart b/lib/screens/detail/widgets/related_product.dart
index 7138fbc2..f032549e 100644
--- a/lib/screens/detail/widgets/related_product.dart
+++ b/lib/screens/detail/widgets/related_product.dart
@@ -33,74 +33,78 @@ class _RelatedProductState extends State<RelatedProduct> {
 
   @override
   Widget build(BuildContext context) {
-    return LayoutBuilder(
-      builder: (context, constraint) {
-        return FutureBuilder<List<Product>?>(
-          future: getRelativeProducts(context),
-          builder:
-              (BuildContext context, AsyncSnapshot<List<Product>?> snapshot) {
-            switch (snapshot.connectionState) {
-              case ConnectionState.none:
-              case ConnectionState.active:
-              case ConnectionState.waiting:
-                return SizedBox(
-                  height: 100,
-                  child: kLoadingWidget(context),
-                );
-              case ConnectionState.done:
-                if (snapshot.hasError) {
+    return AnimatedSize(
+      duration: const Duration(milliseconds: 200),
+      child: LayoutBuilder(
+        builder: (context, constraint) {
+          return FutureBuilder<List<Product>?>(
+            future: getRelativeProducts(context),
+            builder:
+                (BuildContext context, AsyncSnapshot<List<Product>?> snapshot) {
+              switch (snapshot.connectionState) {
+                case ConnectionState.none:
+                case ConnectionState.active:
+                case ConnectionState.waiting:
                   return SizedBox(
                     height: 100,
-                    child: Center(
-                      child: Text(
-                        S.of(context).error(snapshot.error!),
-                        style: TextStyle(
-                            color: Theme.of(context).colorScheme.secondary),
-                      ),
-                    ),
+                    child: kLoadingWidget(context),
                   );
-                } else if (snapshot.data!.isEmpty) {
-                  return const SizedBox();
-                } else {
-                  return Column(
-                    crossAxisAlignment: CrossAxisAlignment.start,
-                    children: <Widget>[
-                      Padding(
-                        padding: const EdgeInsets.symmetric(
-                          vertical: 18.0,
-                          horizontal: 16.0,
-                        ),
+                case ConnectionState.done:
+                  if (snapshot.hasError) {
+                    return SizedBox(
+                      height: 100,
+                      child: Center(
                         child: Text(
-                          S.of(context).youMightAlsoLike,
-                          style: const TextStyle(
-                              fontSize: 20, fontWeight: FontWeight.w600),
+                          S.of(context).error(snapshot.error!),
+                          style: TextStyle(
+                              color: Theme.of(context).colorScheme.secondary),
                         ),
                       ),
-                      SizedBox(
-                        height: constraint.maxWidth * 0.9,
-                        child: ListView(
-                          padding: const EdgeInsets.symmetric(horizontal: 16),
-                          cacheExtent: MediaQuery.of(context).size.width,
-                          scrollDirection: Axis.horizontal,
-                          children: [
-                            for (var item in snapshot.data!)
-                              if (item.id != widget.product!.id)
+                    );
+                  } else {
+                    snapshot.data!.removeWhere(
+                        (element) => element.id == widget.product!.id);
+                    if (snapshot.data!.isEmpty) {
+                      return const SizedBox();
+                    }
+                    return Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: <Widget>[
+                        Padding(
+                          padding: const EdgeInsets.symmetric(
+                            vertical: 18.0,
+                            horizontal: 16.0,
+                          ),
+                          child: Text(
+                            S.of(context).youMightAlsoLike,
+                            style: const TextStyle(
+                                fontSize: 20, fontWeight: FontWeight.w600),
+                          ),
+                        ),
+                        SizedBox(
+                          height: constraint.maxWidth * 1.2,
+                          child: ListView(
+                            padding: const EdgeInsets.symmetric(horizontal: 16),
+                            cacheExtent: MediaQuery.of(context).size.width,
+                            scrollDirection: Axis.horizontal,
+                            children: [
+                              for (var item in snapshot.data!)
                                 ProductCard(
                                   item: item,
                                   width: constraint.maxWidth * 0.35,
                                   config: ProductConfig.empty(),
                                 )
-                          ],
+                            ],
+                          ),
                         ),
-                      ),
-                      const SizedBox(height: 100),
-                    ],
-                  );
-                }
-            }
-          },
-        );
-      },
+                      ],
+                    );
+                  }
+              }
+            },
+          );
+        },
+      ),
     );
   }
 }
diff --git a/lib/screens/detail/widgets/related_product_from_same_store.dart b/lib/screens/detail/widgets/related_product_from_same_store.dart
new file mode 100644
index 00000000..8a8a5f0b
--- /dev/null
+++ b/lib/screens/detail/widgets/related_product_from_same_store.dart
@@ -0,0 +1,119 @@
+import 'package:async/async.dart';
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/config.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/index.dart' show AppModel, Product;
+import '../../../modules/dynamic_layout/config/product_config.dart';
+import '../../../services/index.dart';
+import '../../../widgets/product/product_card_view.dart';
+
+class RelatedProductFromSameStore extends StatefulWidget {
+  final Product? product;
+
+  const RelatedProductFromSameStore(this.product);
+
+  @override
+  State<RelatedProductFromSameStore> createState() =>
+      _RelatedProductFromSameStoreState();
+}
+
+class _RelatedProductFromSameStoreState
+    extends State<RelatedProductFromSameStore> {
+  final _memoizer = AsyncMemoizer<List<Product>?>();
+
+  final services = Services();
+
+  Future<List<Product>?> getProductsFromSameStore(context) =>
+      _memoizer.runOnce(() {
+        return services.api.getProductsByStore(
+            page: 1,
+            storeId: widget.product?.store?.id,
+            catId: int.tryParse(widget.product!.categoryId.toString()),
+            lang: Provider.of<AppModel>(context).langCode);
+      });
+
+  @override
+  Widget build(BuildContext context) {
+    if (widget.product?.store?.id == null) {
+      return const SizedBox();
+    }
+
+    return AnimatedSize(
+      duration: const Duration(milliseconds: 200),
+      child: LayoutBuilder(
+        builder: (context, constraint) {
+          return FutureBuilder<List<Product>?>(
+            future: getProductsFromSameStore(context),
+            builder:
+                (BuildContext context, AsyncSnapshot<List<Product>?> snapshot) {
+              switch (snapshot.connectionState) {
+                case ConnectionState.none:
+                case ConnectionState.active:
+                case ConnectionState.waiting:
+                  return SizedBox(
+                    height: 100,
+                    child: kLoadingWidget(context),
+                  );
+                case ConnectionState.done:
+                  if (snapshot.hasError) {
+                    return SizedBox(
+                      height: 100,
+                      child: Center(
+                        child: Text(
+                          S.of(context).error(snapshot.error!),
+                          style: TextStyle(
+                              color: Theme.of(context).colorScheme.secondary),
+                        ),
+                      ),
+                    );
+                  } else {
+                    snapshot.data!.removeWhere(
+                        (element) => element.id == widget.product!.id);
+                    if (snapshot.data!.isEmpty) {
+                      return const SizedBox();
+                    }
+                    var storeName =
+                        widget.product?.store?.name ?? S.of(context).store;
+                    return Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: <Widget>[
+                        Padding(
+                          padding: const EdgeInsets.symmetric(
+                            vertical: 18.0,
+                            horizontal: 16.0,
+                          ),
+                          child: Text(
+                            S.of(context).moreFromStore(storeName),
+                            style: const TextStyle(
+                                fontSize: 20, fontWeight: FontWeight.w600),
+                          ),
+                        ),
+                        SizedBox(
+                          height: constraint.maxWidth * 0.9,
+                          child: ListView(
+                            padding: const EdgeInsets.symmetric(horizontal: 16),
+                            cacheExtent: MediaQuery.of(context).size.width,
+                            scrollDirection: Axis.horizontal,
+                            children: [
+                              for (var item in snapshot.data!)
+                                ProductCard(
+                                  item: item,
+                                  width: constraint.maxWidth * 0.35,
+                                  config: ProductConfig.empty(),
+                                )
+                            ],
+                          ),
+                        ),
+                      ],
+                    );
+                  }
+              }
+            },
+          );
+        },
+      ),
+    );
+  }
+}
diff --git a/lib/screens/detail/widgets/video_feature.dart b/lib/screens/detail/widgets/video_feature.dart
index 07629f22..20500932 100644
--- a/lib/screens/detail/widgets/video_feature.dart
+++ b/lib/screens/detail/widgets/video_feature.dart
@@ -20,7 +20,7 @@ class FeatureVideoPlayer extends StatefulWidget {
 }
 
 class _FeatureVideoPlayerState extends State<FeatureVideoPlayer> {
-  late VideoPlayerController _controller;
+  VideoPlayerController? _controller;
   bool initialized = false;
   double? aspectRatio;
   bool isYoutube = false;
@@ -37,12 +37,12 @@ class _FeatureVideoPlayerState extends State<FeatureVideoPlayer> {
           if (mounted) {
             setState(() {
               initialized = true;
-              aspectRatio = _controller.value.aspectRatio;
+              aspectRatio = _controller?.value.aspectRatio;
             });
           }
         });
 
-      if (widget.autoPlay == true) _controller.play();
+      if (widget.autoPlay == true) _controller?.play();
     }
 
     /// Enable below to use the youtube video
@@ -62,7 +62,7 @@ class _FeatureVideoPlayerState extends State<FeatureVideoPlayer> {
   @override
   void dispose() {
     if (!isYoutube) {
-      _controller.dispose();
+      _controller?.dispose();
     }
     super.dispose();
   }
@@ -70,10 +70,10 @@ class _FeatureVideoPlayerState extends State<FeatureVideoPlayer> {
   @override
   Widget build(BuildContext context) {
     if (!isYoutube) {
-      return initialized
+      return initialized && _controller != null
           ? AspectRatio(
-              aspectRatio: aspectRatio ?? _controller.value.aspectRatio,
-              child: VideoPlayer(_controller),
+              aspectRatio: aspectRatio ?? _controller!.value.aspectRatio,
+              child: VideoPlayer(_controller!),
             )
           : Container(
               height: MediaQuery.of(context).size.width * 0.8,
diff --git a/lib/screens/home/change_language_mixin.dart b/lib/screens/home/change_language_mixin.dart
index 8ed0907b..d66eb396 100644
--- a/lib/screens/home/change_language_mixin.dart
+++ b/lib/screens/home/change_language_mixin.dart
@@ -7,7 +7,8 @@ import '../../common/config.dart';
 import '../../models/index.dart';
 
 mixin ChangeLanguage<T extends StatefulWidget> on State<T> {
-  List<Map> get languages => getLanguages(context);
+  List<Map> get languages => getLanguages();
+
   AppModel get appModel => Provider.of<AppModel>(context, listen: false);
 
   void onTapChangeLanguage(Map langInfo) {
diff --git a/lib/screens/home/home_screen.dart b/lib/screens/home/home_screen.dart
index 422cbd47..345a33ed 100644
--- a/lib/screens/home/home_screen.dart
+++ b/lib/screens/home/home_screen.dart
@@ -82,7 +82,7 @@ class _HomeScreenState extends BaseScreen<HomeScreen> {
                 configs: appConfig.jsonData,
                 key: Key(langCode),
               ),
-              if (Config().isBuilder) const WrapStatusBar(),
+              if (ServerConfig().isBuilder) const WrapStatusBar(),
             ],
           ),
         );
diff --git a/lib/screens/home/notification_request_screen.dart b/lib/screens/home/notification_request_screen.dart
index 468c8c1f..e88f5546 100644
--- a/lib/screens/home/notification_request_screen.dart
+++ b/lib/screens/home/notification_request_screen.dart
@@ -1,5 +1,6 @@
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:lottie/lottie.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
@@ -7,6 +8,7 @@ import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../models/notification_model.dart';
 import '../../services/services.dart';
+import '../common/permission_request_mixin.dart';
 
 class NotificationRequestScreen extends StatefulWidget {
   const NotificationRequestScreen({Key? key}) : super(key: key);
@@ -16,15 +18,28 @@ class NotificationRequestScreen extends StatefulWidget {
       _NotificationRequestScreenState();
 }
 
-class _NotificationRequestScreenState extends State<NotificationRequestScreen> {
+class _NotificationRequestScreenState extends State<NotificationRequestScreen>
+    with PermissionRequestMixin {
   NotificationModel get _notificationModel => context.read<NotificationModel>();
 
-  void _onTapAccept() async {
+  @override
+  IconData get permissionIcon => CupertinoIcons.bell_fill;
+
+  @override
+  String get permissionRequestTitle => S.of(context).notifyLatestOffer;
+
+  @override
+  String get permissionRequestSubtitle =>
+      S.of(context).weWillSendYouNotification;
+
+  @override
+  Future<void> onAcceptPermission() async {
     await _notificationModel.enableNotification();
     _gotoNextScreen();
   }
 
-  void _onTapDecline() {
+  @override
+  Future<void> onDeclinePermission() async {
     _notificationModel.disableNotification();
     _gotoNextScreen();
   }
@@ -45,51 +60,60 @@ class _NotificationRequestScreenState extends State<NotificationRequestScreen> {
   Widget build(BuildContext context) {
     return Scaffold(
       backgroundColor: Theme.of(context).cardColor,
-      bottomNavigationBar: SafeArea(
-        minimum: const EdgeInsets.symmetric(vertical: 8, horizontal: 16),
-        child: Column(
-          mainAxisSize: MainAxisSize.min,
-          crossAxisAlignment: CrossAxisAlignment.stretch,
-          children: [
-            ElevatedButton(
-              onPressed: _onTapAccept,
-              child: Text(S.current.allow.toUpperCase(),style: const TextStyle(color: Colors.white,),),
-            ),
-            OutlinedButton(
-              onPressed: _onTapDecline,
-              child: Text(S.current.decline.toUpperCase()),
-            ),
-          ],
-        ),
-      ),
-      body: SingleChildScrollView(
-        child: Column(
-          mainAxisSize: MainAxisSize.max,
-          children: <Widget>[
-            Container(
-              height: MediaQuery.of(context).size.height * 0.5,
-              color: Theme.of(context).scaffoldBackgroundColor,
-              child: const Center(
-                child: Icon(CupertinoIcons.bell, size: 120),
+      body: SafeArea(
+        child: Padding(
+          padding: const EdgeInsets.all(24.0),
+          child: Column(
+            mainAxisSize: MainAxisSize.max,
+            children: <Widget>[
+              Expanded(
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.center,
+                  children: [
+                    Icon(
+                      permissionIcon,
+                      size: 48,
+                      color: Colors.amber,
+                    ),
+                    const SizedBox(height: 8),
+                    Text(
+                      S.of(context).getNotified,
+                      textAlign: TextAlign.center,
+                      style: Theme.of(context).textTheme.headline5,
+                    ),
+                    const SizedBox(height: 16),
+                    Text(
+                      permissionRequestSubtitle,
+                      textAlign: TextAlign.center,
+                    ),
+                  ],
+                ),
+              ),
+              const SizedBox(height: 16),
+              Expanded(
+                child: Lottie.asset(
+                  'assets/images/get_notified.json',
+                  alignment: Alignment.center,
+                ),
               ),
-            ),
-            const SizedBox(height: 20),
-            Padding(
-              padding: const EdgeInsets.symmetric(horizontal: 16.0),
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.center,
+              const Spacer(),
+              Row(
                 children: [
-                  Text(
-                    S.current.notifyLatestOffer,
-                    textAlign: TextAlign.center,
-                    style: Theme.of(context).textTheme.headline5,
+                  TextButton(
+                    onPressed: onDeclinePermission,
+                    child: Text(S.of(context).skip),
+                  ),
+                  const Spacer(),
+                  ElevatedButton(
+                    onPressed: onAcceptPermission,
+                    child: Text(
+                      S.of(context).imIn,
+                    ),
                   ),
-                  const SizedBox(height: 20),
-                  Text(S.current.weWillSendYouNotification),
                 ],
               ),
-            ),
-          ],
+            ],
+          ),
         ),
       ),
     );
diff --git a/lib/screens/home/privacy_term_screen.dart b/lib/screens/home/privacy_term_screen.dart
index b5a4f4d8..e96da799 100644
--- a/lib/screens/home/privacy_term_screen.dart
+++ b/lib/screens/home/privacy_term_screen.dart
@@ -9,7 +9,12 @@ import '../../widgets/common/webview.dart';
 import '../posts/post_screen.dart';
 
 class PrivacyTermScreen extends StatefulWidget {
-  const PrivacyTermScreen({Key? key}) : super(key: key);
+  final bool showAgreeButton;
+
+  const PrivacyTermScreen({
+    Key? key,
+    this.showAgreeButton = true,
+  }) : super(key: key);
 
   @override
   State<PrivacyTermScreen> createState() => _PrivacyTermScreenState();
@@ -27,40 +32,42 @@ class _PrivacyTermScreenState extends State<PrivacyTermScreen> {
     final pageUrl = kAdvanceConfig.privacyPoliciesPageUrl;
 
     return Scaffold(
-      bottomNavigationBar: Container(
-        decoration: BoxDecoration(
-          color: Theme.of(context).backgroundColor,
-          boxShadow: [
-            BoxShadow(
-              color: Colors.grey.withOpacity(0.5),
-              spreadRadius: 3,
-              blurRadius: 5,
-              offset: const Offset(0, 3), // changes position of shadow
-            ),
-          ],
-        ),
-        child: SafeArea(
-          minimum: const EdgeInsets.all(8),
-          child: Padding(
-            padding: const EdgeInsets.symmetric(horizontal: 8.0),
-            child: ElevatedButton(
-              onPressed: _onTapAgree,
-              child: Text(
-                S.current.agree.toUpperCase(),
-                style: const TextStyle(
-                  fontWeight: FontWeight.bold,
-                  color: Colors.white,
+      bottomNavigationBar: !widget.showAgreeButton
+          ? null
+          : Container(
+              decoration: BoxDecoration(
+                color: Theme.of(context).backgroundColor,
+                boxShadow: [
+                  BoxShadow(
+                    color: Colors.grey.withOpacity(0.5),
+                    spreadRadius: 3,
+                    blurRadius: 5,
+                    offset: const Offset(0, 3), // changes position of shadow
+                  ),
+                ],
+              ),
+              child: SafeArea(
+                minimum: const EdgeInsets.all(8),
+                child: Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 8.0),
+                  child: ElevatedButton(
+                    onPressed: _onTapAgree,
+                    child: Text(
+                      S.current.agree.toUpperCase(),
+                      style: const TextStyle(
+                        fontWeight: FontWeight.bold,
+                        color: Colors.white,
+                      ),
+                    ),
+                  ),
                 ),
               ),
             ),
-          ),
-        ),
-      ),
       body: Builder(builder: (context) {
         if (pageId != null) {
           return PostScreen(
             pageId: kAdvanceConfig.privacyPoliciesPageId,
-            isLocatedInTabbar: true,
+            isLocatedInTabbar: false,
             pageTitle: S.of(context).agreeWithPrivacy,
           );
         }
diff --git a/lib/screens/login_sms/login_sms_screen.dart b/lib/screens/login_sms/login_sms_screen.dart
index 0913636e..f147adaa 100644
--- a/lib/screens/login_sms/login_sms_screen.dart
+++ b/lib/screens/login_sms/login_sms_screen.dart
@@ -9,9 +9,9 @@ import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart';
-import '../../services/services.dart';
 import '../../widgets/common/flux_image.dart';
 import '../../widgets/common/login_animation.dart';
+import 'login_sms_viewmodel.dart';
 import 'verify.dart';
 
 class LoginSMSScreen extends StatefulWidget {
@@ -26,119 +26,32 @@ class LoginSMSScreenState<T extends LoginSMSScreen> extends State<T>
   late AnimationController _loginButtonController;
   final TextEditingController _controller = TextEditingController(text: '');
 
-  CountryCode? countryCode;
-  String? phoneNumber;
-  String? _phone;
-  bool isLoading = false;
+  LoginSmsViewModel get viewModel => context.read<LoginSmsViewModel>();
 
-  late final verifySuccessStream;
-
-  @override
-  void initState() {
-    super.initState();
-    verifySuccessStream = Services().firebase.getFirebaseStream();
+  void _initScreen() {
+    viewModel.loadConfig(
+      code: LoginSMSConstants.countryCodeDefault,
+      dialCode: LoginSMSConstants.dialCodeDefault,
+      name: LoginSMSConstants.nameDefault,
+    );
 
     _loginButtonController = AnimationController(
       duration: const Duration(milliseconds: 3000),
       vsync: this,
     );
 
-    _phone = '';
-
-    if (LoginSMSConstants.dialCodeDefault.isNotEmpty ||
-        LoginSMSConstants.countryCodeDefault.isNotEmpty ||
-        LoginSMSConstants.nameDefault.isNotEmpty) {
-      countryCode = CountryCode(
-        code: LoginSMSConstants.countryCodeDefault.isNotEmpty
-            ? LoginSMSConstants.countryCodeDefault
-            : null,
-        dialCode: LoginSMSConstants.dialCodeDefault.isNotEmpty
-            ? LoginSMSConstants.dialCodeDefault
-            : null,
-        name: LoginSMSConstants.nameDefault.isNotEmpty
-            ? LoginSMSConstants.nameDefault
-            : null,
-      );
-    }
-
     _controller.addListener(() {
-      if (_controller.text != _phone && _controller.text != '') {
-        _phone = _controller.text;
-        onPhoneNumberChange(
-          _phone,
-          '${countryCode!.dialCode}$_phone',
-          countryCode!.code,
-        );
+      if (_controller.text != '') {
+        viewModel.updatePhone(_controller.text);
       }
     });
   }
 
-  @override
-  void dispose() {
-    _loginButtonController.dispose();
-    super.dispose();
-  }
-
-  Future playAnimation() async {
-    try {
-      setState(() {
-        isLoading = true;
-      });
-      await _loginButtonController.forward();
-    } on TickerCanceled {
-      printLog('[_playAnimation] error');
-    }
-  }
-
-  Future stopAnimation() async {
-    try {
-      await _loginButtonController.reverse();
-      setState(() {
-        isLoading = false;
-      });
-    } on TickerCanceled {
-      printLog('[_stopAnimation] error');
-    }
-  }
-
-  void failMessage(message, context) {
-    /// Showing Error messageSnackBarDemo
-    /// Ability so close message
-    final snackBar = SnackBar(
-      content: Text('⚠️: $message'),
-      duration: const Duration(seconds: 30),
-      action: SnackBarAction(
-        label: S.of(context).close,
-        onPressed: () {
-          // Some code to undo the change.
-        },
-      ),
-    );
-
-    ScaffoldMessenger.of(context)
-      ..removeCurrentSnackBar()
-      ..showSnackBar(snackBar);
-  }
-
-  void onPhoneNumberChange(
-    String? number,
-    String internationalizedPhoneNumber,
-    String? isoCode,
-  ) {
-    if (internationalizedPhoneNumber.isNotEmpty) {
-      phoneNumber = internationalizedPhoneNumber;
-    } else {
-      phoneNumber = null;
-    }
-  }
-
-  Future<void> loginSMS(context) async {
-    if (phoneNumber == null) {
+  void loginSMS(context) {
+    if (viewModel.phoneNumber.isEmpty) {
       Tools.showSnackBar(
           ScaffoldMessenger.of(context), S.of(context).pleaseInput);
     } else {
-      await playAnimation();
-
       Future autoRetrieve(String verId) {
         return stopAnimation();
       }
@@ -150,31 +63,48 @@ class LoginSMSScreenState<T extends LoginSMSScreen> extends State<T>
           MaterialPageRoute(
             builder: (context) => VerifyCode(
               verId: verId,
-              phoneNumber: phoneNumber,
-              verifySuccessStream: verifySuccessStream.stream,
+              phoneNumber: viewModel.phoneFullText,
+              verifySuccessStream: viewModel.getStreamSuccess,
               resendToken: forceCodeResend,
             ),
           ),
         );
       }
 
-      final verifiedSuccess = verifySuccessStream.add;
-
       void verifyFailed(exception) {
         stopAnimation();
         failMessage(exception.message, context);
       }
 
-      Services().firebase.verifyPhoneNumber(
-            phoneNumber: phoneNumber!,
-            codeAutoRetrievalTimeout: autoRetrieve,
-            codeSent: smsCodeSent,
-            verificationCompleted: verifiedSuccess,
-            verificationFailed: verifyFailed,
-          );
+      viewModel.verify(
+        autoRetrieve: autoRetrieve,
+        smsCodeSent: smsCodeSent,
+        verifyFailed: verifyFailed,
+        startVerify: playAnimation,
+      );
+    }
+  }
+
+  void _onTapBackButton() {
+    if (Navigator.of(context).canPop()) {
+      Navigator.of(context).pop();
+    } else {
+      Navigator.of(context).pushNamed(RouteList.home);
     }
   }
 
+  @override
+  void initState() {
+    super.initState();
+    _initScreen();
+  }
+
+  @override
+  void dispose() {
+    _loginButtonController.dispose();
+    super.dispose();
+  }
+
   @override
   Widget build(BuildContext context) {
     final appModel = Provider.of<AppModel>(context, listen: true);
@@ -185,98 +115,133 @@ class LoginSMSScreenState<T extends LoginSMSScreen> extends State<T>
       appBar: AppBar(
         leading: IconButton(
           icon: const Icon(Icons.arrow_back),
-          onPressed: () {
-            if (Navigator.of(context).canPop()) {
-              Navigator.of(context).pop();
-            } else {
-              Navigator.of(context).pushNamed(RouteList.home);
-            }
-          },
+          onPressed: _onTapBackButton,
         ),
         backgroundColor: Theme.of(context).backgroundColor,
         elevation: 0.0,
       ),
       body: SafeArea(
-        child: Builder(
-          builder: (context) => Stack(
-            children: [
-              ListenableProvider.value(
-                value: Provider.of<UserModel>(context),
-                child: Consumer<UserModel>(
-                  builder: (context, model, child) {
-                    return SingleChildScrollView(
-                      padding: const EdgeInsets.symmetric(horizontal: 30.0),
-                      child: Column(
-                        children: <Widget>[
-                          const SizedBox(height: 80.0),
-                          Column(
+        child: Consumer<LoginSmsViewModel>(
+          builder: (context, viewmodel, child) {
+            return Builder(
+              builder: (context) => Stack(
+                children: [
+                  ListenableProvider.value(
+                    value: Provider.of<UserModel>(context),
+                    child: Consumer<UserModel>(
+                      builder: (context, model, child) {
+                        return SingleChildScrollView(
+                          padding: const EdgeInsets.symmetric(horizontal: 30.0),
+                          child: Column(
                             children: <Widget>[
+                              const SizedBox(height: 80.0),
+                              Column(
+                                children: <Widget>[
+                                  Row(
+                                    mainAxisAlignment: MainAxisAlignment.center,
+                                    children: <Widget>[
+                                      SizedBox(
+                                        height: 40.0,
+                                        child: FluxImage(
+                                            imageUrl: themeConfig.logo),
+                                      ),
+                                    ],
+                                  ),
+                                ],
+                              ),
+                              const SizedBox(height: 120.0),
                               Row(
-                                mainAxisAlignment: MainAxisAlignment.center,
+                                crossAxisAlignment: CrossAxisAlignment.center,
                                 children: <Widget>[
-                                  SizedBox(
-                                    height: 40.0,
-                                    child:
-                                        FluxImage(imageUrl: themeConfig.logo),
+                                  CountryCodePicker(
+                                    onChanged: (CountryCode? countryCode) =>
+                                        viewModel.updateCountryCode(
+                                      code: countryCode?.code,
+                                      dialCode: countryCode?.dialCode,
+                                      name: countryCode?.name,
+                                    ),
+                                    // Initial selection and favorite can be one of code ('IT') OR dial_code('+39')
+                                    initialSelection: viewModel.countryCode,
+
+                                    //Get the country information relevant to the initial selection
+                                    onInit: (countryCode) =>
+                                        viewModel.loadConfig(
+                                      code: countryCode?.code,
+                                      dialCode: countryCode?.dialCode,
+                                      name: countryCode?.name,
+                                    ),
+                                    backgroundColor:
+                                        Theme.of(context).backgroundColor,
+                                    dialogBackgroundColor:
+                                        Theme.of(context).dialogBackgroundColor,
                                   ),
+                                  const SizedBox(width: 8.0),
+                                  Expanded(
+                                    child: TextField(
+                                      decoration: InputDecoration(
+                                          labelText: S.of(context).phone),
+                                      keyboardType: TextInputType.phone,
+                                      controller: _controller,
+                                    ),
+                                  )
                                 ],
                               ),
-                            ],
-                          ),
-                          const SizedBox(height: 120.0),
-                          Row(
-                            crossAxisAlignment: CrossAxisAlignment.center,
-                            children: <Widget>[
-                              CountryCodePicker(
-                                onChanged: (country) {
-                                  setState(() {
-                                    countryCode = country;
-                                  });
-                                },
-                                // Initial selection and favorite can be one of code ('IT') OR dial_code('+39')
-                                initialSelection: countryCode!.code,
-
-                                //Get the country information relevant to the initial selection
-                                onInit: (code) {
-                                  countryCode = code;
-                                },
-                                backgroundColor:
-                                    Theme.of(context).backgroundColor,
-                                dialogBackgroundColor:
-                                    Theme.of(context).dialogBackgroundColor,
+                              const SizedBox(height: 60),
+                              StaggerAnimation(
+                                titleButton: S.of(context).sendSMSCode,
+                                buttonController: _loginButtonController.view
+                                    as AnimationController,
+                                onTap: () => loginSMS(context),
                               ),
-                              const SizedBox(width: 8.0),
-                              Expanded(
-                                child: TextField(
-                                  decoration: InputDecoration(
-                                      labelText: S.of(context).phone),
-                                  keyboardType: TextInputType.phone,
-                                  controller: _controller,
-                                ),
-                              )
                             ],
                           ),
-                          const SizedBox(height: 60),
-                          StaggerAnimation(
-                            titleButton: S.of(context).sendSMSCode,
-                            buttonController: _loginButtonController.view
-                                as AnimationController,
-                            onTap: () {
-                              if (!isLoading) {
-                                loginSMS(context);
-                              }
-                            },
-                          ),
-                        ],
-                      ),
-                    );
-                  },
-                ),
+                        );
+                      },
+                    ),
+                  ),
+                ],
               ),
-            ],
-          ),
+            );
+          },
         ),
       ),
     );
   }
+
+  Future playAnimation() async {
+    try {
+      viewModel.enableLoading();
+      await _loginButtonController.forward();
+    } on TickerCanceled {
+      printLog('[_playAnimation] error');
+    }
+  }
+
+  Future stopAnimation() async {
+    try {
+      await _loginButtonController.reverse();
+      viewModel.enableLoading(false);
+    } on TickerCanceled {
+      printLog('[_stopAnimation] error');
+    }
+  }
+
+  void failMessage(message, context) {
+    /// Showing Error messageSnackBarDemo
+    /// Ability so close message
+    final snackBar = SnackBar(
+      content: Text('⚠️: $message'),
+      duration: const Duration(seconds: 30),
+      action: SnackBarAction(
+        label: S.of(context).close,
+        onPressed: () {
+          // Some code to undo the change.
+        },
+      ),
+    );
+
+    ScaffoldMessenger.of(context)
+      ..removeCurrentSnackBar()
+      ..showSnackBar(snackBar);
+  }
 }
diff --git a/lib/screens/login_sms/login_sms_viewmodel.dart b/lib/screens/login_sms/login_sms_viewmodel.dart
new file mode 100644
index 00000000..aaf39c86
--- /dev/null
+++ b/lib/screens/login_sms/login_sms_viewmodel.dart
@@ -0,0 +1,78 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+
+import '../../modules/firebase/firebase_service.dart';
+
+class LoginSmsViewModel extends ChangeNotifier {
+  final FirebaseServices _firebaseServices;
+  late final StreamController _verifySuccessStream;
+
+  String? _code;
+  String? _dialCode;
+  String? _name;
+  String? _phone;
+  var _isLoading = false;
+
+  LoginSmsViewModel(this._firebaseServices)
+      : _verifySuccessStream = _firebaseServices.getFirebaseStream();
+
+  bool get isLoading => _isLoading;
+  String? get countryCode => _code;
+  String? get countryName => _name;
+  String? get countryDialCode => _dialCode;
+  String get phoneFullText => '${_dialCode ?? ''}${_phone ?? ''}';
+  String get phoneNumber => _phone ?? '';
+  Stream get getStreamSuccess => _verifySuccessStream.stream;
+
+  void loadConfig({
+    String? code,
+    String? dialCode,
+    String? name,
+  }) {
+    _code ??= (code?.isEmpty ?? true) ? null : code;
+    _dialCode ??= (dialCode?.isEmpty ?? true) ? null : dialCode;
+    _name ??= (name?.isEmpty ?? true) ? null : name;
+  }
+
+  void updateCountryCode({
+    String? code,
+    String? dialCode,
+    String? name,
+  }) {
+    loadConfig(code: code, dialCode: dialCode, name: name);
+    notifyListeners();
+  }
+
+  void enableLoading([bool isEnable = true]) {
+    _isLoading = isEnable;
+    notifyListeners();
+  }
+
+  Future<void> verify({
+    required Future Function(String verId, [int? forceCodeResend]) smsCodeSent,
+    required Future Function(String verId) autoRetrieve,
+    required Future Function() startVerify,
+    required Function(dynamic exception) verifyFailed,
+  }) async {
+    if (_isLoading) {
+      return;
+    }
+
+    await startVerify();
+
+    _firebaseServices.verifyPhoneNumber(
+      phoneNumber: phoneFullText,
+      codeAutoRetrievalTimeout: autoRetrieve,
+      verificationCompleted: _verifySuccessStream.add,
+      verificationFailed: verifyFailed,
+      codeSent: smsCodeSent,
+    );
+  }
+
+  void updatePhone(String phoneNumber) {
+    if (_phone != phoneNumber) {
+      _phone = phoneNumber;
+    }
+  }
+}
diff --git a/lib/screens/login_sms/pin_code_widget.dart b/lib/screens/login_sms/pin_code_widget.dart
deleted file mode 100644
index 23876676..00000000
--- a/lib/screens/login_sms/pin_code_widget.dart
+++ /dev/null
@@ -1,119 +0,0 @@
-import 'package:flutter/material.dart';
-
-import '../../common/tools.dart';
-
-class PinCodeWidget extends StatefulWidget {
-  final TextEditingController controller;
-  final int length;
-  final Function(String) onChanged;
-  final double borderRadius;
-  final String? code;
-
-  const PinCodeWidget(
-      {Key? key,
-      required this.controller,
-      required this.length,
-      required this.onChanged,
-      this.borderRadius = 0.0,
-      this.code})
-      : super(key: key);
-
-  @override
-  State<PinCodeWidget> createState() => _PinCodeWidgetState();
-}
-
-class _PinCodeWidgetState extends State<PinCodeWidget> {
-  List<FocusNode> listFocusNode = [];
-  int currentIndex = 0;
-  List<TextEditingController> controllers = [];
-
-  @override
-  void initState() {
-    List.generate(widget.length, (index) {
-      listFocusNode.add(FocusNode());
-      controllers.add(TextEditingController());
-    });
-
-    super.initState();
-
-    widget.controller.addListener(() {
-      if (widget.controller.text.length == widget.length &&
-          currentIndex == widget.length - 1) {
-        widget.onChanged(widget.controller.text);
-      }
-      Tools.hideKeyboard(context);
-    });
-    listFocusNode.first.requestFocus();
-  }
-
-  String replaceCharAt(String oldString, int index, String newChar) {
-    return oldString.substring(0, index) +
-        newChar +
-        oldString.substring(index + 1);
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    if (widget.code != null && widget.code!.trim().isNotEmpty) {
-      var index = 0;
-      for (var element in widget.code!.characters) {
-        controllers[index].text = element;
-        index++;
-      }
-    }
-    return Row(
-      mainAxisAlignment: MainAxisAlignment.center,
-      children: List.generate(widget.length, (index) {
-        return Flexible(
-          child: Container(
-              margin: const EdgeInsets.all(10.0),
-              padding: const EdgeInsets.only(left: 3.0, top: 7.0),
-              decoration: BoxDecoration(
-                border: Border.all(
-                    color: listFocusNode[index].hasFocus
-                        ? Theme.of(context).primaryColor
-                        : Theme.of(context).colorScheme.secondary),
-                borderRadius: BorderRadius.circular(widget.borderRadius),
-              ),
-              child: TextField(
-                controller: controllers[index],
-                textDirection: TextDirection.ltr,
-                focusNode: listFocusNode[index],
-                maxLength: 1,
-                textAlign: TextAlign.center,
-                style: Theme.of(context).textTheme.headline5,
-                onTap: () => setState(() => currentIndex = index),
-                onSubmitted: (value) {
-                  if (widget.controller.text.length == widget.length) {
-                    widget.onChanged(widget.controller.text);
-                  }
-                },
-                onChanged: (value) {
-                  if (value.isEmpty) {
-                    return;
-                  }
-                  if (index < widget.controller.text.length) {
-                    widget.controller.text =
-                        replaceCharAt(widget.controller.text, index, value);
-                  } else {
-                    widget.controller.text += value;
-                  }
-
-                  listFocusNode[index].unfocus();
-                  if ((index + 1) < widget.length) {
-                    currentIndex++;
-                    listFocusNode[index + 1].requestFocus();
-                    setState(() {});
-                  }
-                },
-                decoration: const InputDecoration(
-                  counter: SizedBox(),
-                  border: InputBorder.none,
-                  contentPadding: EdgeInsets.all(1),
-                ),
-              )),
-        );
-      }),
-    );
-  }
-}
diff --git a/lib/screens/order_history/views/order_history_detail_screen.dart b/lib/screens/order_history/views/order_history_detail_screen.dart
index 4a068821..f00c2884 100644
--- a/lib/screens/order_history/views/order_history_detail_screen.dart
+++ b/lib/screens/order_history/views/order_history_detail_screen.dart
@@ -80,10 +80,13 @@ class _OrderHistoryDetailScreenState
 
   @override
   Widget build(BuildContext context) {
-    final currencyRate = Provider.of<AppModel>(context).currencyRate;
+
 
     return Consumer<OrderHistoryDetailModel>(builder: (context, model, child) {
       final order = model.order;
+      final currencyCode = order.currencyCode ?? Provider.of<AppModel>(context).currencyCode;
+      final currencyRate = (order.currencyCode?.isEmpty ?? true) ?  Provider.of<AppModel>(context).currencyRate : null;
+
       return Scaffold(
         backgroundColor: Theme.of(context).backgroundColor,
         appBar: AppBar(
@@ -123,6 +126,7 @@ class _OrderHistoryDetailScreenState
                     product: item,
                     index: index,
                     storeDeliveryDates: order.storeDeliveryDates,
+                    currencyCode: order.currencyCode,
                   );
                 },
               ),
@@ -233,7 +237,7 @@ class _OrderHistoryDetailScreenState
                           Expanded(
                             child: Text(
                               PriceTools.getCurrencyFormatted(
-                                  order.totalShipping, currencyRate)!,
+                                  order.totalShipping, currencyRate, currency: currencyCode)!,
                               textAlign: TextAlign.right,
                               style: Theme.of(context)
                                   .textTheme
@@ -246,6 +250,40 @@ class _OrderHistoryDetailScreenState
                         ],
                       ),
                     const SizedBox(height: 10),
+                    ...List.generate(
+                      order.feeLines.length,
+                          (index) {
+                        final item = order.feeLines[index];
+                        return Padding(
+                          padding: const EdgeInsets.only(bottom: 10),
+                          child: Row(
+                            children: <Widget>[
+                              Text(item.name ?? '',
+                                  style: Theme.of(context)
+                                      .textTheme
+                                      .subtitle1!
+                                      .copyWith(
+                                    fontWeight: FontWeight.w400,
+                                  )),
+                              const SizedBox(width: 8),
+                              Expanded(
+                                child: Text(
+                                  PriceTools.getCurrencyFormatted(
+                                      item.total, currencyRate, currency: currencyCode)!,
+                                  textAlign: TextAlign.right,
+                                  style: Theme.of(context)
+                                      .textTheme
+                                      .subtitle1!
+                                      .copyWith(
+                                    fontWeight: FontWeight.w700,
+                                  ),
+                                ),
+                              )
+                            ],
+                          ),
+                        );
+                      },
+                    ),
                     Row(
                       mainAxisAlignment: MainAxisAlignment.spaceBetween,
                       children: <Widget>[
@@ -262,7 +300,7 @@ class _OrderHistoryDetailScreenState
                                   0,
                                   (dynamic sum, e) =>
                                       sum + double.parse(e.total!)),
-                              currencyRate)!,
+                              currencyRate, currency: currencyCode)!,
                           style:
                               Theme.of(context).textTheme.subtitle1!.copyWith(
                                     fontWeight: FontWeight.w700,
@@ -270,33 +308,6 @@ class _OrderHistoryDetailScreenState
                         )
                       ],
                     ),
-                    if (order.paymentMethodTitle != null)
-                      const SizedBox(height: 10),
-                    if (order.paymentMethodTitle != null)
-                      Row(
-                        children: <Widget>[
-                          Text(S.of(context).paymentMethod,
-                              style: Theme.of(context)
-                                  .textTheme
-                                  .subtitle1!
-                                  .copyWith(
-                                    fontWeight: FontWeight.w400,
-                                  )),
-                          const SizedBox(width: 8),
-                          Expanded(
-                            child: Text(
-                              order.paymentMethodTitle!,
-                              textAlign: TextAlign.right,
-                              style: Theme.of(context)
-                                  .textTheme
-                                  .subtitle1!
-                                  .copyWith(
-                                    fontWeight: FontWeight.w700,
-                                  ),
-                            ),
-                          )
-                        ],
-                      ),
                     const SizedBox(height: 10),
                     Row(
                       mainAxisAlignment: MainAxisAlignment.spaceBetween,
diff --git a/lib/screens/order_history/views/widgets/order_list_item.dart b/lib/screens/order_history/views/widgets/order_list_item.dart
index 4afb724b..acfb3a94 100644
--- a/lib/screens/order_history/views/widgets/order_list_item.dart
+++ b/lib/screens/order_history/views/widgets/order_list_item.dart
@@ -5,7 +5,7 @@ import 'package:provider/provider.dart';
 import '../../../../common/constants.dart';
 import '../../../../common/tools.dart';
 import '../../../../generated/l10n.dart';
-import '../../../../models/order/order.dart';
+import '../../../../models/index.dart';
 import '../../index.dart';
 
 class OrderListItem extends StatelessWidget {
@@ -15,6 +15,9 @@ class OrderListItem extends StatelessWidget {
     return Center(
       child: Consumer<OrderHistoryDetailModel>(builder: (_, model, __) {
         final order = model.order;
+        final currencyCode =
+            order.currencyCode ?? Provider.of<AppModel>(context).currencyCode;
+
         return GestureDetector(
           onTap: () {
             Navigator.of(context).pushNamed(
@@ -240,12 +243,14 @@ class OrderListItem extends StatelessWidget {
                           OrderStatusWidget(
                             title: S.of(context).total,
                             detail: PriceTools.getCurrencyFormatted(
-                                order.total, null),
+                                order.total, null,
+                                currency: currencyCode),
                           ),
                           OrderStatusWidget(
                             title: S.of(context).tax,
                             detail: PriceTools.getCurrencyFormatted(
-                                order.totalTax, null),
+                                order.totalTax, null,
+                                currency: currencyCode),
                           ),
                           OrderStatusWidget(
                             title: S.of(context).Qty,
diff --git a/lib/screens/order_history/views/widgets/order_price.dart b/lib/screens/order_history/views/widgets/order_price.dart
index 4f6f1643..4b2f5662 100644
--- a/lib/screens/order_history/views/widgets/order_price.dart
+++ b/lib/screens/order_history/views/widgets/order_price.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
-import '../../../../common/config.dart';
 import '../../../../common/tools/price_tools.dart';
 import '../../../../models/entities/index.dart';
+import '../../../../services/service_config.dart';
 
 class OrderPrice extends StatelessWidget {
   final currencyRate;
@@ -23,7 +23,7 @@ class OrderPrice extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     if (!isTax) {
-      if (serverConfig['type'] == 'wcfm') {
+      if (ServerConfig().typeName.isWcfm) {
         return Text(
           PriceTools.getCurrencyFormatted(
               order.lineItems
@@ -37,7 +37,7 @@ class OrderPrice extends StatelessWidget {
         style: const TextStyle(fontWeight: FontWeight.bold),
       );
     }
-    if (serverConfig['type'] == 'wcfm') {
+    if (ServerConfig().typeName.isWcfm) {
       return Text(
           PriceTools.getCurrencyFormatted(
               order.lineItems
diff --git a/lib/screens/order_history/views/widgets/product_order_item.dart b/lib/screens/order_history/views/widgets/product_order_item.dart
index de2a8dc6..014fc470 100644
--- a/lib/screens/order_history/views/widgets/product_order_item.dart
+++ b/lib/screens/order_history/views/widgets/product_order_item.dart
@@ -19,6 +19,7 @@ class ProductOrderItem extends StatefulWidget {
   final OrderStatus orderStatus;
   final ProductItem product;
   final List<StoreDeliveryDate>? storeDeliveryDates;
+  final String? currencyCode;
 
   /// For prestashop.
   final int index;
@@ -28,6 +29,7 @@ class ProductOrderItem extends StatefulWidget {
     required this.orderStatus,
     required this.product,
     this.storeDeliveryDates,
+    this.currencyCode,
     this.index = 0,
   });
 
@@ -121,9 +123,7 @@ class _StateProductOrderItem extends BaseScreen<ProductOrderItem> {
 
   @override
   Widget build(BuildContext context) {
-    final appModel = Provider.of<AppModel>(context, listen: false);
-    final currency = appModel.currency;
-    final currencyRate = appModel.currencyRate;
+    final currencyCode = widget.currencyCode ?? Provider.of<AppModel>(context).currencyCode;
     final addonsOptions = (widget.product.addonsOptions ?? '')
         .split(', ')
         .map(Tools.getFileNameFromUrl)
@@ -238,8 +238,8 @@ class _StateProductOrderItem extends BaseScreen<ProductOrderItem> {
             S.of(context).itemTotal,
             PriceTools.getCurrencyFormatted(
               widget.product.total,
-              currencyRate,
-              currency: currency,
+              null,
+              currency: currencyCode,
             )!),
         if (deliveryDate != null) ...[
           const SizedBox(height: 2),
diff --git a/lib/screens/posts/posts_backdrop.dart b/lib/screens/posts/posts_backdrop.dart
index 112c11f0..d99ca1a4 100644
--- a/lib/screens/posts/posts_backdrop.dart
+++ b/lib/screens/posts/posts_backdrop.dart
@@ -1,11 +1,11 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
-import '../../common/config.dart';
 import '../../generated/l10n.dart';
 import '../../models/entities/filter_sorty_by.dart';
 import '../../models/index.dart'
     show AppModel, Blog, BlogModel, Category, Product;
+import '../../services/index.dart';
 import '../../widgets/backdrop/backdrop.dart';
 import '../../widgets/backdrop/backdrop_menu.dart';
 import '../../widgets/blog/blog_list_backdrop.dart';
@@ -140,7 +140,7 @@ class _BlogsPageState extends State<BlogsPage>
 
               /// we need to use the Blog menu data inside Woo/Vendor app
               /// apply for the dynamic Blog on home screen.
-              isUseBlog: serverConfig['type'] != 'wordpress',
+              isUseBlog: !ServerConfig().isWordPress,
               isBlog: true,
             ),
             frontTitle: Text(title, style: TextStyle(color: textColor)),
diff --git a/lib/screens/products/products_flatview.dart b/lib/screens/products/products_flatview.dart
index 39561e34..46e933b4 100644
--- a/lib/screens/products/products_flatview.dart
+++ b/lib/screens/products/products_flatview.dart
@@ -1,3 +1,5 @@
+import 'dart:async';
+
 import 'package:easy_debounce/easy_debounce.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
@@ -7,12 +9,13 @@ import 'package:provider/provider.dart';
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../generated/l10n.dart';
-import '../../models/product_model.dart';
 import '../../models/user_model.dart';
-import '../../modules/firebase/dynamic_link_service.dart';
 import '../../services/service_config.dart';
 import '../../services/services.dart';
+import '../../widgets/common/drag_handler.dart';
 import '../cart/cart_screen.dart';
+import 'products_mixin.dart';
+import 'products_searchview.dart';
 
 enum MenuType { cart, wishlist, share, login }
 
@@ -24,6 +27,7 @@ class ProductFlatView extends StatefulWidget {
   final Function? onSort;
   final Function onFilter;
   final Function onSearch;
+  final bool enableSearchHistory;
 
   const ProductFlatView({
     required this.builder,
@@ -33,6 +37,7 @@ class ProductFlatView extends StatefulWidget {
     this.titleFilter,
     this.onSort,
     required this.onFilter,
+    this.enableSearchHistory = false,
     Key? key,
   }) : super(key: key);
 
@@ -40,7 +45,7 @@ class ProductFlatView extends StatefulWidget {
   State<ProductFlatView> createState() => _ProductFlatViewState();
 }
 
-class _ProductFlatViewState extends State<ProductFlatView> {
+class _ProductFlatViewState extends State<ProductFlatView> with ProductsMixin {
   final ScrollController controller = ScrollController();
 
   Color get labelColor => Colors.black;
@@ -120,29 +125,11 @@ class _ProductFlatViewState extends State<ProductFlatView> {
                               ),
                               child: Stack(
                                 children: [
+                                  const DragHandler(),
                                   Padding(
-                                    padding: const EdgeInsets.only(top: 40),
+                                    padding: const EdgeInsets.only(top: 20),
                                     child: widget.filterMenu(scrollController),
                                   ),
-                                  Positioned(
-                                    top: 8,
-                                    right: 12,
-                                    child: TextButton(
-                                      onPressed: () {
-                                        Navigator.of(context).pop();
-                                      },
-                                      child: Text(
-                                        S.of(context).apply,
-                                        style: Theme.of(context)
-                                            .textTheme
-                                            .subtitle1!
-                                            .copyWith(
-                                              color: Theme.of(context)
-                                                  .primaryColor,
-                                            ),
-                                      ),
-                                    ),
-                                  ),
                                 ],
                               ),
                             ),
@@ -162,6 +149,8 @@ class _ProductFlatViewState extends State<ProductFlatView> {
   }
 
   bool _onChangeDirection(scrollNotification) {
+    if (!controller.hasClients) return false;
+
     /// scroll down
     if (controller.position.userScrollDirection == ScrollDirection.reverse &&
         controller.offset > 80 &&
@@ -220,13 +209,7 @@ class _ProductFlatViewState extends State<ProductFlatView> {
         );
         break;
       case MenuType.share:
-        var currentCateId =
-            Provider.of<ProductModel>(context, listen: false).categoryId;
-        var cateUrl = await DynamicLinkService()
-            .generateProductCategoryUrl(currentCateId);
-        Services().firebase.shareDynamicLinkProduct(
-              itemUrl: cateUrl,
-            );
+        await shareProductsLink(context);
         break;
       case MenuType.wishlist:
         await Navigator.of(context).pushNamed(RouteList.wishlist);
@@ -239,7 +222,8 @@ class _ProductFlatViewState extends State<ProductFlatView> {
 
   Widget _buildMoreWidget(bool loggedIn) {
     final sortByData = [
-      if (Services().widget.enableShoppingCart(null) && !Config().isListingType)
+      if (Services().widget.enableShoppingCart(null) &&
+          !ServerConfig().isListingType)
         {
           'type': MenuType.cart.name,
           'title': S.of(context).myCart,
@@ -251,8 +235,8 @@ class _ProductFlatViewState extends State<ProductFlatView> {
         'icon': CupertinoIcons.heart,
       },
       if (firebaseDynamicLinkConfig['isEnabled'] &&
-          Config().isWooType &&
-          !Config().isListingType)
+          ServerConfig().isWooType &&
+          !ServerConfig().isListingType)
         {
           'type': MenuType.share.name,
           'title': S.of(context).share,
@@ -295,19 +279,39 @@ class _ProductFlatViewState extends State<ProductFlatView> {
 
   @override
   Widget build(BuildContext context) {
+    /// using for the Search Screen UX
+    if (widget.enableSearchHistory) {
+      return ProductSearchView(
+        builder: widget.builder,
+        filterMenu: widget.filterMenu,
+        onSearch: widget.onSearch,
+        bottomSheet: widget.bottomSheet,
+        titleFilter: widget.titleFilter,
+        onSort: widget.onSort,
+        onFilter: widget.onFilter,
+      );
+    }
+
     return Scaffold(
       backgroundColor: Theme.of(context).backgroundColor,
       appBar: AppBar(
           titleSpacing: 0,
           backgroundColor: Theme.of(context).backgroundColor,
-          leading: CupertinoButton(
-            padding: EdgeInsets.zero,
-            child: const Icon(CupertinoIcons.back),
-            onPressed: () => Navigator.of(context).pop(),
-          ),
-          title: CupertinoSearchTextField(
-            onChanged: onSearch,
-            onSubmitted: onSearch,
+          leading: Navigator.of(context).canPop()
+              ? CupertinoButton(
+                  padding: EdgeInsets.zero,
+                  child: const Icon(CupertinoIcons.back),
+                  onPressed: () => Navigator.of(context).pop(),
+                )
+              : null,
+          title: Padding(
+            padding:
+                EdgeInsets.only(left: Navigator.of(context).canPop() ? 0 : 15),
+            child: CupertinoSearchTextField(
+              onChanged: onSearch,
+              onSubmitted: onSearch,
+              placeholder: S.of(context).searchForItems,
+            ),
           ),
           actions: [
             Selector<UserModel, bool>(
diff --git a/lib/screens/products/products_mixin.dart b/lib/screens/products/products_mixin.dart
new file mode 100644
index 00000000..45c15f25
--- /dev/null
+++ b/lib/screens/products/products_mixin.dart
@@ -0,0 +1,44 @@
+import 'dart:async';
+
+import 'package:provider/provider.dart';
+
+import '../../common/tools/flash.dart';
+import '../../generated/l10n.dart';
+import '../../models/product_model.dart';
+import '../../modules/firebase/dynamic_link_service.dart';
+import '../../services/services.dart';
+
+mixin ProductsMixin {
+  Future<void> shareProductsLink(context) async {
+    unawaited(
+      FlashHelper.message(
+        context,
+        message: S.of(context).generatingLink,
+        duration: const Duration(seconds: 2),
+      ),
+    );
+    var productModel = Provider.of<ProductModel>(context, listen: false);
+    var currentCategoryId = productModel.categoryId;
+    var currentTagId = productModel.tagId;
+    var url;
+    if (currentCategoryId.isValid) {
+      url = await DynamicLinkService()
+          .generateProductCategoryUrl(currentCategoryId);
+    } else if (currentTagId != null) {
+      url = await DynamicLinkService().generateProductTagUrl(currentTagId);
+    } else {
+      await FlashHelper.errorMessage(
+        context,
+        message: S.of(context).failedToGenerateLink,
+      );
+      return;
+    }
+    Services().firebase.shareDynamicLinkProduct(
+          itemUrl: url,
+        );
+  }
+}
+
+extension on String? {
+  bool get isValid => this != null && this != '-1';
+}
diff --git a/lib/screens/products/products_screen.dart b/lib/screens/products/products_screen.dart
index 21e93480..a74e4552 100644
--- a/lib/screens/products/products_screen.dart
+++ b/lib/screens/products/products_screen.dart
@@ -1,5 +1,9 @@
+import 'dart:async';
+
+import 'package:collection/collection.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:inspireui/widgets/void_widget.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
@@ -17,6 +21,7 @@ import '../../models/index.dart'
         TagModel,
         UserModel;
 import '../../modules/dynamic_layout/helper/countdown_timer.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../../modules/dynamic_layout/index.dart';
 import '../../services/index.dart';
 import '../../widgets/asymmetric/asymmetric_view.dart';
@@ -28,6 +33,7 @@ import '../../widgets/product/product_list.dart';
 import '../common/app_bar_mixin.dart';
 import 'products_backdrop.dart';
 import 'products_flatview.dart';
+import 'products_mixin.dart';
 
 class FilterLabel extends StatelessWidget {
   final String label;
@@ -88,12 +94,14 @@ class ProductsScreen extends StatefulWidget {
   final ProductConfig? config;
   final Duration countdownDuration;
   final String? listingLocation;
+  final bool enableSearchHistory;
 
   const ProductsScreen({
     this.products,
     this.countdownDuration = Duration.zero,
     this.listingLocation,
     this.config,
+    this.enableSearchHistory = false,
   });
 
   @override
@@ -103,7 +111,7 @@ class ProductsScreen extends StatefulWidget {
 }
 
 class ProductsScreenState extends State<ProductsScreen>
-    with SingleTickerProviderStateMixin, AppBarMixin {
+    with SingleTickerProviderStateMixin, AppBarMixin, ProductsMixin {
   late AnimationController _controller;
 
   ProductConfig get productConfig => widget.config ?? ProductConfig.empty();
@@ -126,6 +134,8 @@ class ProductsScreenState extends State<ProductsScreen>
   /// Image ratio from Product Cart
   double get ratioProductImage => appModel.ratioProductImage;
 
+  num get productListItemHeight => kProductDetail.productListItemHeight;
+
   ///
   bool get enableProductBackdrop => kAdvanceConfig.enableProductBackdrop;
 
@@ -147,6 +157,10 @@ class ProductsScreenState extends State<ProductsScreen>
   int _page = 1;
 
   String _currentTitle = '';
+
+  String get currentTitle =>
+      search != null ? S.of(context).results : _currentTitle;
+
   List? include;
 
   FilterSortBy _currentFilterSortBy = const FilterSortBy();
@@ -180,9 +194,11 @@ class ProductsScreenState extends State<ProductsScreen>
 
     /// only request to server if there is empty config params
     // / If there is config, load the products one
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      filterAttrModel.resetFilter();
-      onRefresh(false);
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        filterAttrModel.resetFilter();
+        onRefresh();
+      }
     });
   }
 
@@ -237,9 +253,12 @@ class ProductsScreenState extends State<ProductsScreen>
       newCategoryId = categoryId;
 
       final selectedCat = categoryModel.categories!
-          .singleWhere((element) => element.id == categoryId.toString());
-      productModel.categoryName = selectedCat.name;
-      _currentTitle = selectedCat.name!;
+          .firstWhereOrNull((element) => element.id == categoryId.toString());
+
+      if (selectedCat != null) {
+        productModel.categoryName = selectedCat.name;
+        _currentTitle = selectedCat.name!;
+      }
     }
 
     /// reset paging and clean up product
@@ -271,7 +290,7 @@ class ProductsScreenState extends State<ProductsScreen>
     );
   }
 
-  Future<void> onRefresh([loadingConfig = true]) async {
+  Future<void> onRefresh() async {
     setState(() {
       _page = 1;
     });
@@ -279,6 +298,10 @@ class ProductsScreenState extends State<ProductsScreen>
   }
 
   Widget? renderCategoryMenu({bool imageLayout = false}) {
+    if (widget.enableSearchHistory) {
+      return kVoidWidget;
+    }
+
     var parentCategoryId = newCategoryId;
     if (categoryModel.categories != null &&
         categoryModel.categories!.isNotEmpty) {
@@ -537,6 +560,7 @@ class ProductsScreenState extends State<ProductsScreen>
                 isEnd: isEnd,
                 layout: layout,
                 ratioProductImage: ratioProductImage,
+                productListItemHeight: productListItemHeight,
                 width: width,
               )
             : AsymmetricView(
@@ -558,19 +582,22 @@ class ProductsScreenState extends State<ProductsScreen>
                   Column(
                     crossAxisAlignment: CrossAxisAlignment.start,
                     children: [
-                      Text(_currentTitle),
+                      Text(currentTitle),
                       CountDownTimer(widget.countdownDuration)
                     ],
                   ),
                 ],
               )
-            : Text(_currentTitle),
+            : Text(currentTitle),
         backTitle: Text(S.of(context).filter),
         controller: _controller,
         appbarCategory: renderCategoryMenu(),
+        onTapShareButton: () async {
+          await shareProductsLink(context);
+        },
       ),
       expandingBottomSheet: (Services().widget.enableShoppingCart(null) &&
-              !Config().isListingType &&
+              !ServerConfig().isListingType &&
               kAdvanceConfig.showBottomCornerCart)
           ? ExpandingBottomSheet(hideController: _controller)
           : null,
@@ -581,7 +608,7 @@ class ProductsScreenState extends State<ProductsScreen>
   Widget build(BuildContext context) {
     _currentTitle = productConfig.name ??
         productModel.categoryName ??
-        S.of(context).products;
+        S.of(context).results;
 
     Widget buildMain = LayoutBuilder(
       builder: (context, constraint) {
@@ -589,7 +616,13 @@ class ProductsScreenState extends State<ProductsScreen>
           widthFactor: 1.0,
           child: Selector<AppModel, String>(
             selector: (context, provider) => provider.productListLayout,
-            builder: (context, layout, child) {
+            builder: (context, productListLayout, child) {
+              /// override the layout to listTile if enableSearchUX
+              /// otherwise, using default productListLayout from the Config
+              var layout = widget.enableSearchHistory
+                  ? Layout.simpleList
+                  : productListLayout;
+
               return ListenableProvider.value(
                 value: productModel,
                 child: Consumer<ProductModel>(
@@ -607,6 +640,7 @@ class ProductsScreenState extends State<ProductsScreen>
                           : [];
 
                       return ProductFlatView(
+                        enableSearchHistory: widget.enableSearchHistory,
                         builder: (controller) => layout.isListView
                             ? ProductList(
                                 scrollController: controller,
@@ -618,6 +652,7 @@ class ProductsScreenState extends State<ProductsScreen>
                                 isEnd: model.isEnd,
                                 layout: layout,
                                 ratioProductImage: ratioProductImage,
+                                productListItemHeight: productListItemHeight,
                                 width: constraint.maxWidth,
                                 header: [
                                   const SizedBox(height: 44),
@@ -636,10 +671,10 @@ class ProductsScreenState extends State<ProductsScreen>
                                               CrossAxisAlignment.end,
                                           children: [
                                             Text(
-                                              _currentTitle,
+                                              currentTitle,
                                               style: Theme.of(context)
                                                   .textTheme
-                                                  .headline5!
+                                                  .headline6!
                                                   .copyWith(
                                                     fontWeight: FontWeight.w700,
                                                     height: 0.6,
@@ -754,11 +789,14 @@ class ProductsScreenState extends State<ProductsScreen>
                           controller: scrollController,
                           minPrice: minPrice,
                           maxPrice: maxPrice,
+
+                          /// hide layout filter from Search screen
+                          showLayout: widget.enableSearchHistory ? false : true,
                         ),
                         bottomSheet: (Services()
                                     .widget
                                     .enableShoppingCart(null) &&
-                                !Config().isListingType &&
+                                !ServerConfig().isListingType &&
                                 showBottomCornerCart)
                             ? ExpandingBottomSheet(hideController: _controller)
                             : null,
diff --git a/lib/screens/products/products_searchview.dart b/lib/screens/products/products_searchview.dart
new file mode 100644
index 00000000..897611b0
--- /dev/null
+++ b/lib/screens/products/products_searchview.dart
@@ -0,0 +1,431 @@
+import 'package:easy_debounce/easy_debounce.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/rendering.dart';
+import 'package:inspireui/inspireui.dart' show AutoHideKeyboard;
+import 'package:provider/provider.dart';
+
+import '../../common/constants.dart';
+import '../../generated/l10n.dart';
+import '../../models/app_model.dart';
+import '../../models/category_model.dart';
+import '../../models/filter_attribute_model.dart';
+import '../../models/filter_tags_model.dart';
+import '../../models/user_model.dart';
+import '../../widgets/common/drag_handler.dart';
+import '../search/widgets/recent/recent_search_custom.dart';
+import '../search/widgets/search_box.dart';
+import '../search/widgets/search_results_custom.dart';
+
+class ProductSearchView extends StatefulWidget {
+  final Widget Function(ScrollController) builder;
+  final Widget Function(ScrollController) filterMenu;
+  final Widget? bottomSheet;
+  final Widget? titleFilter;
+  final Function? onSort;
+  final Function onFilter;
+  final Function onSearch;
+  final bool enableSearchHistory;
+
+  const ProductSearchView({
+    required this.builder,
+    required this.filterMenu,
+    required this.onSearch,
+    this.bottomSheet,
+    this.titleFilter,
+    this.onSort,
+    required this.onFilter,
+    this.enableSearchHistory = false,
+    Key? key,
+  }) : super(key: key);
+
+  @override
+  State<ProductSearchView> createState() => _ProductSearchViewState();
+}
+
+class _ProductSearchViewState extends State<ProductSearchView>
+    with AutomaticKeepAliveClientMixin<ProductSearchView> {
+  @override
+  bool get wantKeepAlive => true;
+
+  final ScrollController controller = ScrollController();
+
+  final _searchFieldNode = FocusNode();
+  final _searchFieldController = TextEditingController();
+
+  // bool isVisibleSearch = false;
+  bool _showResult = false;
+  List<String>? _suggestSearch;
+
+  String get _searchKeyword => _searchFieldController.text;
+
+  List<String> get suggestSearch =>
+      _suggestSearch
+          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
+          .toList() ??
+      <String>[];
+
+  void _onFocusChange() {
+    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
+      _showResult = false;
+    } else {
+      _showResult = !_searchFieldNode.hasFocus;
+    }
+
+    // Delayed keyboard hide and show
+    // Future.delayed(const Duration(milliseconds: 120), () {
+    //   setState(() {
+    //     isVisibleSearch = _searchFieldNode.hasFocus;
+    //   });
+    // });
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    printLog('[SearchScreen] initState');
+    _searchFieldNode.addListener(_onFocusChange);
+  }
+
+  @override
+  void dispose() {
+    printLog('[SearchScreen] dispose');
+    _searchFieldNode.dispose();
+    _searchFieldController.dispose();
+    super.dispose();
+  }
+
+  void _onSearchTextChange(String value) {
+    if (value.isEmpty) {
+      _showResult = false;
+      setState(() {});
+      return;
+    }
+    if (_searchFieldNode.hasFocus) {
+      if (suggestSearch.isEmpty) {
+        setState(() {
+          _showResult = true;
+          EasyDebounce.debounce('searchCategory',
+              const Duration(milliseconds: 200), () => widget.onSearch(value));
+        });
+      } else {
+        setState(() {
+          _showResult = false;
+        });
+      }
+    }
+  }
+
+  Color get labelColor => Colors.black;
+
+  bool showSticky = true;
+
+  bool get isLoggedIn =>
+      Provider.of<UserModel>(context, listen: false).loggedIn;
+
+  Widget _getStickyWidget() {
+    return AnimatedCrossFade(
+      duration: const Duration(milliseconds: 200),
+      crossFadeState:
+          showSticky ? CrossFadeState.showFirst : CrossFadeState.showSecond,
+      secondChild: const SizedBox(width: double.maxFinite),
+      firstChild: Container(
+        alignment: Alignment.center,
+        height: 44,
+        margin: const EdgeInsets.only(bottom: 5),
+        decoration: BoxDecoration(
+          color: Theme.of(context).backgroundColor,
+          boxShadow: const [
+            BoxShadow(
+              color: Colors.black12,
+              offset: Offset(0, 1),
+              blurRadius: 2,
+            )
+          ],
+        ),
+        child: Row(
+          children: [
+            const SizedBox(width: 10),
+            widget.titleFilter ?? const SizedBox(),
+            const Spacer(),
+            const SizedBox(width: 5),
+            const VerticalDivider(width: 15, indent: 8, endIndent: 8),
+            const SizedBox(width: 5),
+            CupertinoButton(
+              padding: EdgeInsets.zero,
+              child: Row(
+                children: [
+                  Text(S.of(context).filter,
+                      style: Theme.of(context).textTheme.bodySmall),
+                  const SizedBox(width: 4),
+                  const Icon(CupertinoIcons.chevron_down, size: 13),
+                ],
+              ),
+              onPressed: () => showModalBottomSheet(
+                context: context,
+                isScrollControlled: true,
+                isDismissible: true,
+                backgroundColor: Colors.transparent,
+                builder: (context) => Stack(
+                  children: [
+                    GestureDetector(
+                      onTap: () {
+                        Navigator.of(context).pop();
+                      },
+                      child: Container(color: Colors.transparent),
+                    ),
+                    DraggableScrollableSheet(
+                      initialChildSize: 0.7,
+                      minChildSize: 0.2,
+                      maxChildSize: 0.9,
+                      builder: (BuildContext context,
+                          ScrollController scrollController) {
+                        return Stack(
+                          alignment: Alignment.bottomCenter,
+                          children: [
+                            Container(
+                              decoration: BoxDecoration(
+                                borderRadius: const BorderRadius.only(
+                                  topLeft: Radius.circular(15.0),
+                                  topRight: Radius.circular(15.0),
+                                ),
+                                color: Theme.of(context).backgroundColor,
+                              ),
+                              child: Stack(
+                                children: [
+                                  const DragHandler(),
+                                  Padding(
+                                    padding: const EdgeInsets.only(top: 20),
+                                    child: widget.filterMenu(scrollController),
+                                  ),
+                                ],
+                              ),
+                            ),
+                          ],
+                        );
+                      },
+                    ),
+                  ],
+                ),
+              ),
+            ),
+            const SizedBox(width: 15),
+          ],
+        ),
+      ),
+    );
+  }
+
+  bool _onChangeDirection(scrollNotification) {
+    /// scroll down
+    if (controller.position.userScrollDirection == ScrollDirection.reverse &&
+        controller.offset > 80 &&
+        showSticky == true) {
+      setState(() {
+        showSticky = false;
+      });
+      return true;
+    }
+
+    /// scroll up
+    if (controller.position.userScrollDirection == ScrollDirection.forward &&
+        showSticky == false) {
+      setState(() => showSticky = true);
+    }
+    return true;
+  }
+
+  void onSearch(String value) {
+    EasyDebounce.debounce('searchCategory', const Duration(milliseconds: 200),
+        () => widget.onSearch(value));
+  }
+
+  Material buildResult() {
+    return Material(
+      child: Stack(
+        children: [
+          NotificationListener<ScrollNotification>(
+            onNotification: _onChangeDirection,
+            child: widget.builder(controller),
+          ),
+          _getStickyWidget(),
+          Align(
+            alignment: Alignment.bottomRight,
+            child: widget.bottomSheet,
+          )
+        ],
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    super.build(context);
+
+    _suggestSearch =
+        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
+
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      resizeToAvoidBottomInset: false,
+      // appBar: _renderAppbar(screenSize),
+      body: SafeArea(
+        bottom: false,
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: <Widget>[
+            // _renderHeader(),
+            SearchBox(
+              // width: widthSearchBox,
+              autoFocus: true,
+              controller: _searchFieldController,
+              focusNode: _searchFieldNode,
+              onChanged: _onSearchTextChange,
+              onSubmitted: _onSubmit,
+              onCancel: () {
+                // setState(() {
+                //   isVisibleSearch = false;
+                // });
+              },
+            ),
+            Expanded(
+              child: AutoHideKeyboard(
+                child: Padding(
+                  padding: const EdgeInsets.only(top: 8.0),
+                  child: AnimatedSwitcher(
+                    duration: const Duration(milliseconds: 300),
+                    reverseDuration: const Duration(milliseconds: 300),
+                    child: _showResult
+                        ? buildResult()
+                        : Align(
+                            alignment: Alignment.topCenter,
+                            child: Consumer<FilterTagModel>(
+                              builder: (context, tagModel, child) {
+                                return Consumer<CategoryModel>(
+                                  builder: (context, categoryModel, child) {
+                                    return Consumer<FilterAttributeModel>(
+                                      builder:
+                                          (context, attributeModel, child) {
+                                        var child = _buildRecentSearch();
+
+                                        if (_searchFieldNode.hasFocus &&
+                                            suggestSearch.isNotEmpty) {
+                                          child = _buildSuggestions();
+                                        }
+
+                                        return child;
+                                      },
+                                    );
+                                  },
+                                );
+                              },
+                            ),
+                          ),
+                  ),
+                ),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  // Widget _renderHeader() {
+  //   final screenSize = MediaQuery.of(context).size;
+  //   Widget headerContent = const SizedBox(height: 10.0);
+  //   headerContent = AnimatedContainer(
+  //     height: isVisibleSearch ? 0.1 : 58,
+  //     padding: const EdgeInsets.only(
+  //       left: 10,
+  //       top: 10,
+  //       bottom: 10,
+  //     ),
+  //     duration: const Duration(milliseconds: 150),
+  //     curve: Curves.easeInOut,
+  //     child: Row(
+  //       mainAxisSize: MainAxisSize.max,
+  //       children: <Widget>[
+  //         Text(
+  //           S.of(context).search,
+  //           style: Theme.of(context).textTheme.headline5!.copyWith(
+  //                 fontWeight: FontWeight.w700,
+  //               ),
+  //         ),
+  //       ],
+  //     ),
+  //   );
+  //
+  //   return SizedBox(
+  //     width: screenSize.width / (2 / (screenSize.height / screenSize.width)),
+  //     child: headerContent,
+  //   );
+  // }
+
+  Widget _buildRecentSearch() {
+    return RecentSearchesCustom(onTap: _onSubmit);
+  }
+
+  Widget _buildSuggestions() {
+    return Card(
+      elevation: 0,
+      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
+      color: Theme.of(context).primaryColorLight,
+      child: ListView.builder(
+        physics: const NeverScrollableScrollPhysics(),
+        shrinkWrap: true,
+        padding: const EdgeInsets.only(
+          left: 10,
+          right: 10,
+        ),
+        itemCount: suggestSearch.length,
+        itemBuilder: (_, index) {
+          final keyword = suggestSearch[index];
+
+          if (index == 0 && suggestSearch.length > 1) {
+            return Padding(
+              padding: const EdgeInsets.only(left: 15, right: 15, top: 15),
+              child: Text(
+                keyword,
+                style: Theme.of(context).textTheme.bodySmall!.copyWith(
+                      color: Theme.of(context)
+                          .colorScheme
+                          .secondary
+                          .withOpacity(0.5),
+                    ),
+              ),
+            );
+          }
+          return GestureDetector(
+            onTap: () => _onSubmit(keyword),
+            child: ListTile(
+              title: Text(keyword),
+            ),
+          );
+        },
+      ),
+    );
+  }
+
+  Widget buildResult2() {
+    return SearchResultsCustom(
+      name: _searchKeyword,
+    );
+  }
+
+  void _onSubmit(String name) {
+    _searchFieldController.text = name;
+    // final userId = Provider.of<UserModel>(context, listen: false).user?.id;
+    setState(() {
+      _showResult = true;
+      // _searchModel.loadProduct(name: name, userId: userId);
+
+      EasyDebounce.debounce('searchCategory', const Duration(milliseconds: 200),
+          () => widget.onSearch(name));
+    });
+    var currentFocus = FocusScope.of(context);
+    if (!currentFocus.hasPrimaryFocus) {
+      currentFocus.unfocus();
+    }
+  }
+}
diff --git a/lib/screens/request/camera_permission.dart b/lib/screens/request/camera_permission.dart
new file mode 100644
index 00000000..9d33e771
--- /dev/null
+++ b/lib/screens/request/camera_permission.dart
@@ -0,0 +1,77 @@
+import 'package:flutter/cupertino.dart';
+import 'package:permission_handler/permission_handler.dart';
+
+import '../../generated/l10n.dart';
+import '../common/permission_request_mixin.dart';
+
+class CameraPermissionRequestScreen extends StatefulWidget {
+  final String? reason;
+  final Function(bool) onAppSettingsCallback;
+
+  const CameraPermissionRequestScreen({
+    Key? key,
+    this.reason,
+    required this.onAppSettingsCallback,
+  }) : super(key: key);
+
+  @override
+  State<CameraPermissionRequestScreen> createState() =>
+      _CameraPermissionRequestScreenState();
+}
+
+class _CameraPermissionRequestScreenState
+    extends State<CameraPermissionRequestScreen>
+    with PermissionRequestMixin, WidgetsBindingObserver {
+  @override
+  IconData get permissionIcon => CupertinoIcons.camera;
+
+  @override
+  String get permissionRequestTitle => S.of(context).allowCameraAccess;
+
+  @override
+  String get permissionRequestSubtitle =>
+      widget.reason ?? S.of(context).weNeedCameraAccessTo;
+
+  @override
+  Future<void> onAcceptPermission() async {
+    final result = await Permission.camera.request();
+    if (result == PermissionStatus.permanentlyDenied) {
+      WidgetsBinding.instance.addObserver(this);
+      await openAppSettings();
+      return;
+    }
+    var hasPermission = result == PermissionStatus.granted;
+    Navigator.of(context).pop(hasPermission);
+  }
+
+  @override
+  Future<void> onDeclinePermission() async {
+    Navigator.of(context).pop();
+  }
+
+  @override
+  Future<void> didChangeAppLifecycleState(AppLifecycleState state) async {
+    switch (state) {
+      case AppLifecycleState.resumed:
+        final result = await Permission.camera.status;
+        var hasPermission = result == PermissionStatus.granted;
+        if (mounted && Navigator.of(context).canPop()) {
+          Navigator.of(context).pop(hasPermission);
+        }
+        widget.onAppSettingsCallback.call(hasPermission);
+        break;
+      case AppLifecycleState.inactive:
+      case AppLifecycleState.paused:
+      case AppLifecycleState.detached:
+        break;
+    }
+  }
+
+  @override
+  void dispose() {
+    try {
+      WidgetsBinding.instance.removeObserver(this);
+    } catch (_) {}
+    super.dispose();
+  }
+}
diff --git a/lib/screens/search/search_screen.dart b/lib/screens/search/search_screen.dart
index 29330b9a..0adeda03 100644
--- a/lib/screens/search/search_screen.dart
+++ b/lib/screens/search/search_screen.dart
@@ -1,24 +1,20 @@
 import 'package:flutter/material.dart';
-import 'package:provider/provider.dart';
 
+import '../../common/config.dart';
 import '../../common/constants.dart';
-import '../../generated/l10n.dart';
-import '../../models/app_model.dart';
-import '../../models/category_model.dart';
-import '../../models/filter_attribute_model.dart';
-import '../../models/filter_tags_model.dart';
-import '../../models/search_model.dart';
-import '../../models/user_model.dart';
+import '../../modules/dynamic_layout/config/product_config.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../common/app_bar_mixin.dart';
-import 'widgets/filters/filter_search.dart';
-import 'widgets/recent/recent_search_custom.dart';
-import 'widgets/search_box.dart';
-import 'widgets/search_results_custom.dart';
+import '../products/products_screen.dart';
+import 'widgets/search_widget.dart';
 
 class SearchScreen extends StatefulWidget {
   final bool isModal;
 
-  const SearchScreen({Key? key, this.isModal = false}) : super(key: key);
+  const SearchScreen({
+    Key? key,
+    this.isModal = false,
+  }) : super(key: key);
 
   @override
   State<SearchScreen> createState() => _StateSearchScreen();
@@ -29,271 +25,19 @@ class _StateSearchScreen extends State<SearchScreen>
   @override
   bool get wantKeepAlive => true;
 
-  final _searchFieldNode = FocusNode();
-  final _searchFieldController = TextEditingController();
-
-  bool isVisibleSearch = false;
-  bool _showResult = false;
-  List<String>? _suggestSearch;
-
-  SearchModel get _searchModel =>
-      Provider.of<SearchModel>(context, listen: false);
-
-  String get _searchKeyword => _searchFieldController.text;
-
-  List<String> get suggestSearch =>
-      _suggestSearch
-          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
-          .toList() ??
-      <String>[];
-
-  void _onFocusChange() {
-    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
-      _showResult = false;
-    } else {
-      _showResult = !_searchFieldNode.hasFocus;
-    }
-
-    // Delayed keyboard hide and show
-    Future.delayed(const Duration(milliseconds: 120), () {
-      setState(() {
-        isVisibleSearch = _searchFieldNode.hasFocus;
-      });
-    });
-  }
-
-  @override
-  void initState() {
-    super.initState();
-    printLog('[SearchScreen] initState');
-    _searchFieldNode.addListener(_onFocusChange);
-  }
-
-  @override
-  void dispose() {
-    printLog('[SearchScreen] dispose');
-    _searchFieldNode.dispose();
-    _searchFieldController.dispose();
-    super.dispose();
-  }
-
-  void _onSearchTextChange(String value) {
-    if (value.isEmpty) {
-      _showResult = false;
-      setState(() {});
-      return;
-    }
-    if (_searchFieldNode.hasFocus) {
-      if (suggestSearch.isEmpty) {
-        final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-        setState(() {
-          _showResult = true;
-          _searchModel.loadProduct(name: value, userId: userId);
-        });
-      } else {
-        setState(() {
-          _showResult = false;
-        });
-      }
-    }
-  }
-
   @override
   Widget build(BuildContext context) {
     printLog('[SearchScreen] build');
     super.build(context);
-    _suggestSearch =
-        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
-    final screenSize = MediaQuery.of(context).size;
-    // double widthSearchBox =
-    //     screenSize.width / (2 / (screenSize.height / screenSize.width));
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    return Scaffold(
-      backgroundColor: Theme.of(context).backgroundColor,
-      resizeToAvoidBottomInset: false,
-      appBar: _renderAppbar(screenSize),
-      body: SafeArea(
-        bottom: false,
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: <Widget>[
-            _renderHeader(),
-            SearchBox(
-              // width: widthSearchBox,
-              controller: _searchFieldController,
-              focusNode: _searchFieldNode,
-              onChanged: _onSearchTextChange,
-              onSubmitted: _onSubmit,
-              onCancel: () {
-                setState(() {
-                  isVisibleSearch = false;
-                });
-              },
-            ),
-            Align(
-              alignment: Alignment.topLeft,
-              child: Padding(
-                padding: const EdgeInsets.only(left: 15, top: 8),
-                child: SizedBox(
-                  height: 32,
-                  child: FilterSearch(
-                    onChange: (searchFilter) {
-                      _searchModel.searchByFilter(
-                        searchFilter,
-                        _searchKeyword,
-                        userId: userId,
-                      );
-                    },
-                  ),
-                ),
-              ),
-            ),
-            const SizedBox(height: 8),
-            Expanded(
-              child: AnimatedSwitcher(
-                duration: const Duration(milliseconds: 300),
-                reverseDuration: const Duration(milliseconds: 300),
-                child: _showResult
-                    ? buildResult()
-                    : Align(
-                        alignment: Alignment.topCenter,
-                        child: Consumer<FilterTagModel>(
-                          builder: (context, tagModel, child) {
-                            return Consumer<CategoryModel>(
-                              builder: (context, categoryModel, child) {
-                                return Consumer<FilterAttributeModel>(
-                                  builder: (context, attributeModel, child) {
-                                    var child = _buildRecentSearch();
 
-                                    if (_searchFieldNode.hasFocus &&
-                                        suggestSearch.isNotEmpty) {
-                                      child = _buildSuggestions();
-                                    }
-
-                                    return child;
-                                  },
-                                );
-                              },
-                            );
-                          },
-                        ),
-                      ),
-              ),
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  PreferredSizeWidget? _renderAppbar(Size screenSize) {
-    if (widget.isModal) {
-      return AppBar(
-        elevation: 0.1,
-        backgroundColor: Theme.of(context).backgroundColor,
-        title: Text(
-          S.of(context).search,
-          style: Theme.of(context)
-              .textTheme
-              .headline5
-              ?.copyWith(fontWeight: FontWeight.w700),
-        ),
-        leading: Navigator.of(context).canPop()
-            ? Center(
-                child: GestureDetector(
-                  onTap: () => Navigator.pop(context),
-                  child: const Icon(
-                    Icons.arrow_back_ios,
-                  ),
-                ),
-              )
-            : const SizedBox(),
-      );
-    }
-    if (showAppBar(RouteList.search)) {
-      return appBarWidget;
-    }
-    return null;
-  }
-
-  Widget _renderHeader() {
-    final screenSize = MediaQuery.of(context).size;
-    Widget headerContent = const SizedBox(height: 10.0);
-    if (!widget.isModal) {
-      headerContent = AnimatedContainer(
-        height: isVisibleSearch ? 0.1 : 58,
-        padding: const EdgeInsets.only(
-          left: 10,
-          top: 10,
-          bottom: 10,
-        ),
-        duration: const Duration(milliseconds: 150),
-        curve: Curves.easeInOut,
-        child: Row(
-          mainAxisSize: MainAxisSize.max,
-          children: <Widget>[
-            Text(
-              S.of(context).search,
-              style: Theme.of(context).textTheme.headline5!.copyWith(
-                    fontWeight: FontWeight.w700,
-                  ),
-            ),
-          ],
-        ),
-      );
+    /// Use the old Search UX config which is limit Filter
+    if (kAdvanceConfig.enableProductBackdrop) {
+      return SearchWidget(isModal: widget.isModal);
     }
 
-    return SizedBox(
-      width: screenSize.width / (2 / (screenSize.height / screenSize.width)),
-      child: headerContent,
+    return ProductsScreen(
+      enableSearchHistory: true,
+      config: ProductConfig.empty()..layout = Layout.listTile,
     );
   }
-
-  Widget _buildRecentSearch() {
-    return RecentSearchesCustom(onTap: _onSubmit);
-  }
-
-  Widget _buildSuggestions() {
-    return Card(
-      elevation: 0,
-      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
-      color: Theme.of(context).primaryColorLight,
-      child: ListView.builder(
-        shrinkWrap: true,
-        padding: const EdgeInsets.only(
-          left: 10,
-          right: 10,
-        ),
-        itemCount: suggestSearch.length,
-        itemBuilder: (_, index) {
-          final keyword = suggestSearch[index];
-          return GestureDetector(
-            onTap: () => _onSubmit(keyword),
-            child: ListTile(
-              title: Text(keyword),
-            ),
-          );
-        },
-      ),
-    );
-  }
-
-  Widget buildResult() {
-    return SearchResultsCustom(
-      name: _searchKeyword,
-    );
-  }
-
-  void _onSubmit(String name) {
-    _searchFieldController.text = name;
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    setState(() {
-      _showResult = true;
-      _searchModel.loadProduct(name: name, userId: userId);
-    });
-    var currentFocus = FocusScope.of(context);
-    if (!currentFocus.hasPrimaryFocus) {
-      currentFocus.unfocus();
-    }
-  }
 }
diff --git a/lib/screens/search/widgets/filters/filter_search.dart b/lib/screens/search/widgets/filters/filter_search.dart
index 65a3479d..2ca534b6 100644
--- a/lib/screens/search/widgets/filters/filter_search.dart
+++ b/lib/screens/search/widgets/filters/filter_search.dart
@@ -39,7 +39,7 @@ class _FilterSearchState extends BaseScreen<FilterSearch> {
 
 //  final StreamController<double> _streamLocal = StreamController.broadcast();
   final _heightPopup =
-      (Config().isNotion || Config().isBigCommerce) ? 160.0 : 500.0;
+      (ServerConfig().isNotion || ServerConfig().isBigCommerce) ? 160.0 : 500.0;
   String _slugAttribute = '';
   Timer? _debounce;
 
@@ -312,7 +312,7 @@ class _FilterSearchState extends BaseScreen<FilterSearch> {
                   },
                   listSelected: _listCategory,
                 ),
-                if (Config().isListingType) ...[
+                if (ServerConfig().isListingType) ...[
                   Padding(
                     padding: const EdgeInsets.only(
                       top: 25,
@@ -367,105 +367,6 @@ class _FilterSearchState extends BaseScreen<FilterSearch> {
         ),
       ),
     );
-
-//    return GestureDetector(onPanStart: (DragStartDetails details) {
-//      _initial = details.globalPosition.dy;
-//    }, onPanUpdate: (DragUpdateDetails details) {
-//      _currentDy = details.globalPosition.dy - _initial;
-//      _streamLocal?.add(getPosition);
-//    }, onPanEnd: (DragEndDetails details) {
-//      if (getPosition < 0.4) {
-//        Navigator.pop(context);
-//      } else {
-//        _streamLocal?.add(1);
-//      }
-//    }, child: Builder(
-//      builder: (context) {
-//        return Align(
-//          alignment: Alignment.bottomCenter,
-//          child: Container(
-//            height: _heightPopup,
-//            padding: const EdgeInsets.symmetric(vertical: 15),
-//            width: MediaQuery.of(context).size.width,
-//            decoration: BoxDecoration(
-//              boxShadow: kElevationToShadow[12],
-//              color: Theme.of(context).backgroundColor,
-//              borderRadius: const BorderRadius.only(
-//                topLeft: Radius.circular(20.0),
-//                topRight: Radius.circular(20.0),
-//              ),
-//            ),
-//            child: Material(
-//              child: Container(
-//                color: Theme.of(context).backgroundColor,
-//                child: SingleChildScrollView(
-//                  child: Column(
-//                    crossAxisAlignment: CrossAxisAlignment.start,
-//                    children: <Widget>[
-//                      FilterSearchTags(
-//                        onSelect: (tag, currentSlug) {
-//                          if (tag.isEmpty) {
-//                            _listResult.remove('tags');
-//                            return;
-//                          }
-//                          _listTag = tag;
-//                          setState(() {});
-//                        },
-//                        listSelected: _listTag,
-//                      ),
-//                      Padding(
-//                        padding: const EdgeInsets.only(
-//                          top: 25,
-//                          bottom: 10,
-//                          left: 30,
-//                        ),
-//                        child: Text(
-//                          S.of(context).categories,
-//                          style: const TextStyle(
-//                            fontWeight: FontWeight.bold,
-//                            fontSize: 18,
-//                          ),
-//                        ),
-//                      ),
-//                      FilterSearchCategory(
-//                        onSelect: (category, currentSlug) {
-//                          if (category.isEmpty) {
-//                            _listResult.remove('categories');
-//                            return;
-//                          }
-//                          _listCategory = category;
-//                          setState(() {});
-//                        },
-//                        listSelected: _listCategory,
-//                      ),
-//                      FilterSearchAttributes(
-//                        listSelected: _listAttribute,
-//                        slug: _slugAttribute,
-//                        onSelect: (attributes, currentSlug) {
-//                          if (attributes.isEmpty) {
-//                            _listResult.remove(_slugAttribute);
-//                            return;
-//                          }
-//                          _listAttribute = attributes;
-//                          _slugAttribute = currentSlug;
-//                          _listResult.removeWhere((key, value) =>
-//                              !key.contains('categories') &&
-//                              !key.contains('tags') &&
-//                              !key.contains('$currentSlug'));
-//                          if (mounted) {
-//                            setState(() {});
-//                          }
-//                        },
-//                      )
-//                    ],
-//                  ),
-//                ),
-//              ),
-//            ),
-//          ),
-//        );
-//      },
-//    ));
   }
 
   void _showFilter() async {
diff --git a/lib/screens/search/widgets/recent/recent_products_custom.dart b/lib/screens/search/widgets/recent/recent_products_custom.dart
index d5b6bf42..4838b962 100644
--- a/lib/screens/search/widgets/recent/recent_products_custom.dart
+++ b/lib/screens/search/widgets/recent/recent_products_custom.dart
@@ -3,7 +3,7 @@ import 'package:provider/provider.dart';
 
 import '../../../../common/constants.dart';
 import '../../../../generated/l10n.dart';
-import '../../../../models/search_model.dart';
+import '../../../../models/index.dart' show ProductModel;
 import '../../../../modules/dynamic_layout/config/product_config.dart';
 import '../../../../services/index.dart';
 
@@ -14,8 +14,8 @@ class RecentProductsCustom extends StatelessWidget {
       builder: (context, constraints) {
         var screenWidth = constraints.maxWidth;
 
-        return Consumer<SearchModel>(builder: (context, model, child) {
-          if (model.products?.isEmpty ?? true) {
+        return Consumer<ProductModel>(builder: (context, model, child) {
+          if (model.recentSearch?.isEmpty ?? true) {
             return const SizedBox();
           }
 
@@ -44,11 +44,11 @@ class RecentProductsCustom extends StatelessWidget {
                 height: screenWidth * 0.35 + 120,
                 child: ListView.builder(
                   scrollDirection: Axis.horizontal,
-                  itemCount: model.products!.length,
+                  itemCount: model.recentSearch!.length,
                   padding: const EdgeInsets.symmetric(horizontal: 10),
                   itemBuilder: (_, index) => FittedBox(
                     child: Services().widget.renderProductCardView(
-                          item: model.products![index],
+                          item: model.recentSearch![index],
                           width: screenWidth * 0.35,
                           config: ProductConfig.empty(),
                         ),
diff --git a/lib/screens/search/widgets/search_box.dart b/lib/screens/search/widgets/search_box.dart
index 48699892..e0179f17 100644
--- a/lib/screens/search/widgets/search_box.dart
+++ b/lib/screens/search/widgets/search_box.dart
@@ -2,14 +2,17 @@ import 'dart:async';
 
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
-import '../../../generated/l10n.dart';
+import '../../../models/user_model.dart';
+import '../../../widgets/scanner/scanner_button.dart';
 
 class SearchBox extends StatefulWidget {
   final double? width;
   final bool showCancelButton;
   final bool showSearchIcon;
   final bool autoFocus;
+  final bool showQRCode;
   final String? initText;
   final FocusNode? focusNode;
   final TextEditingController? controller;
@@ -29,6 +32,7 @@ class SearchBox extends StatefulWidget {
     this.autoFocus = false,
     this.showSearchIcon = true,
     this.showCancelButton = true,
+    this.showQRCode = true,
   }) : super(key: key);
 
   @override
@@ -80,69 +84,47 @@ class _SearchBoxState extends State<SearchBox> {
 
   @override
   Widget build(BuildContext context) {
+    var canPop = Navigator.of(context).canPop();
+
     return SizedBox(
       width: widget.width,
-      child: Row(children: [
-        Expanded(
-          child: Container(
-            height: 40,
-            decoration: BoxDecoration(
-              color: Theme.of(context).primaryColorLight,
-              borderRadius: BorderRadius.circular(6),
+      child: Row(
+        children: [
+          if (canPop)
+            IconButton(
+              onPressed: () {
+                var currentFocus = FocusScope.of(context);
+                if (!currentFocus.hasPrimaryFocus) {
+                  currentFocus.unfocus();
+                }
+                Navigator.of(context).pop();
+              },
+              icon: const Icon(CupertinoIcons.back),
             ),
-            padding: const EdgeInsets.symmetric(horizontal: 10),
-            margin: const EdgeInsets.only(left: 15, right: 15, bottom: 5),
-            child: Row(
-              crossAxisAlignment: CrossAxisAlignment.center,
-              children: <Widget>[
-                if (widget.showSearchIcon)
-                  Icon(
-                    CupertinoIcons.search,
-                    size: 22,
-                    color: Theme.of(context).colorScheme.secondary,
-                  ),
-                const SizedBox(width: 10),
-                Expanded(
-                  child: TextField(
-                    autocorrect: false,
-                    decoration: InputDecoration(
-                      fillColor: Theme.of(context).colorScheme.secondary,
-                      hintText: S.of(context).searchForItems,
-                      enabledBorder: InputBorder.none,
-                      border: InputBorder.none,
-                    ),
-                    controller: _textController,
-                    autofocus: widget.autoFocus,
-                    focusNode: widget.focusNode,
-                    onSubmitted: (value) => widget.onSubmitted?.call(value),
-                  ),
-                ),
-                if (widget.showCancelButton)
-                  AnimatedContainer(
-                    width: widthButtonCancel,
-                    duration: const Duration(milliseconds: 250),
-                    child: GestureDetector(
-                      onTap: () {
-                        widget.onCancel?.call();
-                        _textController!.clear();
-                        var currentFocus = FocusScope.of(context);
-                        if (!currentFocus.hasPrimaryFocus) {
-                          currentFocus.unfocus();
-                        }
-                      },
-                      child: Center(
-                        child: Text(
-                          S.of(context).cancel,
-                          overflow: TextOverflow.ellipsis,
-                        ),
-                      ),
-                    ),
-                  )
-              ],
+          Expanded(
+            child: Container(
+              padding: const EdgeInsets.symmetric(horizontal: 10),
+              margin: EdgeInsets.only(
+                left: canPop ? 10 : 5,
+                right: 5,
+              ),
+              child: CupertinoSearchTextField(
+                autocorrect: false,
+                controller: _textController,
+                autofocus: widget.autoFocus,
+                focusNode: widget.focusNode,
+                onSubmitted: (value) => widget.onSubmitted?.call(value),
+              ),
             ),
           ),
-        ),
-      ]),
+          if (widget.showQRCode)
+            Consumer<UserModel>(
+              builder: (_, model, __) => ScannerButton(
+                user: model.user,
+              ),
+            ),
+        ],
+      ),
     );
   }
 }
diff --git a/lib/screens/search/widgets/search_widget.dart b/lib/screens/search/widgets/search_widget.dart
new file mode 100644
index 00000000..f8a63524
--- /dev/null
+++ b/lib/screens/search/widgets/search_widget.dart
@@ -0,0 +1,299 @@
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/constants.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/app_model.dart';
+import '../../../models/category_model.dart';
+import '../../../models/filter_attribute_model.dart';
+import '../../../models/filter_tags_model.dart';
+import '../../../models/search_model.dart';
+import '../../../models/user_model.dart';
+import '../../common/app_bar_mixin.dart';
+import 'filters/filter_search.dart';
+import 'recent/recent_search_custom.dart';
+import 'search_box.dart';
+import 'search_results_custom.dart';
+
+class SearchWidget extends StatefulWidget {
+  final bool isModal;
+
+  const SearchWidget({Key? key, this.isModal = false}) : super(key: key);
+
+  @override
+  StateSearchScreen createState() => StateSearchScreen();
+}
+
+class StateSearchScreen extends State<SearchWidget>
+    with AutomaticKeepAliveClientMixin<SearchWidget>, AppBarMixin {
+  @override
+  bool get wantKeepAlive => true;
+
+  final _searchFieldNode = FocusNode();
+  final _searchFieldController = TextEditingController();
+
+  bool isVisibleSearch = false;
+  bool _showResult = false;
+  List<String>? _suggestSearch;
+
+  SearchModel get _searchModel =>
+      Provider.of<SearchModel>(context, listen: false);
+
+  String get _searchKeyword => _searchFieldController.text;
+
+  List<String> get suggestSearch =>
+      _suggestSearch
+          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
+          .toList() ??
+      <String>[];
+
+  void _onFocusChange() {
+    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
+      _showResult = false;
+    } else {
+      _showResult = !_searchFieldNode.hasFocus;
+    }
+
+    // Delayed keyboard hide and show
+    Future.delayed(const Duration(milliseconds: 120), () {
+      setState(() {
+        isVisibleSearch = _searchFieldNode.hasFocus;
+      });
+    });
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    printLog('[SearchScreen] initState');
+    _searchFieldNode.addListener(_onFocusChange);
+  }
+
+  @override
+  void dispose() {
+    printLog('[SearchScreen] dispose');
+    _searchFieldNode.dispose();
+    _searchFieldController.dispose();
+    super.dispose();
+  }
+
+  void _onSearchTextChange(String value) {
+    if (value.isEmpty) {
+      _showResult = false;
+      setState(() {});
+      return;
+    }
+    if (_searchFieldNode.hasFocus) {
+      if (suggestSearch.isEmpty) {
+        final userId = Provider.of<UserModel>(context, listen: false).user?.id;
+        setState(() {
+          _showResult = true;
+          _searchModel.loadProduct(name: value, userId: userId);
+        });
+      } else {
+        setState(() {
+          _showResult = false;
+        });
+      }
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    printLog('[SearchScreen] build');
+    super.build(context);
+    _suggestSearch =
+        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
+    final screenSize = MediaQuery.of(context).size;
+    // double widthSearchBox =
+    //     screenSize.width / (2 / (screenSize.height / screenSize.width));
+    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      resizeToAvoidBottomInset: false,
+      appBar: _renderAppbar(screenSize),
+      body: SafeArea(
+        bottom: false,
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: <Widget>[
+            _renderHeader(),
+            SearchBox(
+              // width: widthSearchBox,
+              controller: _searchFieldController,
+              focusNode: _searchFieldNode,
+              onChanged: _onSearchTextChange,
+              onSubmitted: _onSubmit,
+              onCancel: () {
+                setState(() {
+                  isVisibleSearch = false;
+                });
+              },
+            ),
+            Align(
+              alignment: Alignment.topLeft,
+              child: Padding(
+                padding: const EdgeInsets.only(left: 15, top: 8),
+                child: SizedBox(
+                  height: 32,
+                  child: FilterSearch(
+                    onChange: (searchFilter) {
+                      _searchModel.searchByFilter(
+                        searchFilter,
+                        _searchKeyword,
+                        userId: userId,
+                      );
+                    },
+                  ),
+                ),
+              ),
+            ),
+            const SizedBox(height: 8),
+            Expanded(
+              child: AnimatedSwitcher(
+                duration: const Duration(milliseconds: 300),
+                reverseDuration: const Duration(milliseconds: 300),
+                child: _showResult
+                    ? buildResult()
+                    : Align(
+                        alignment: Alignment.topCenter,
+                        child: Consumer<FilterTagModel>(
+                          builder: (context, tagModel, child) {
+                            return Consumer<CategoryModel>(
+                              builder: (context, categoryModel, child) {
+                                return Consumer<FilterAttributeModel>(
+                                  builder: (context, attributeModel, child) {
+                                    var child = _buildRecentSearch();
+
+                                    if (_searchFieldNode.hasFocus &&
+                                        suggestSearch.isNotEmpty) {
+                                      child = _buildSuggestions();
+                                    }
+
+                                    return child;
+                                  },
+                                );
+                              },
+                            );
+                          },
+                        ),
+                      ),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  PreferredSizeWidget? _renderAppbar(Size screenSize) {
+    if (widget.isModal) {
+      return AppBar(
+        elevation: 0.1,
+        backgroundColor: Theme.of(context).backgroundColor,
+        title: Text(
+          S.of(context).search,
+          style: Theme.of(context)
+              .textTheme
+              .headline5
+              ?.copyWith(fontWeight: FontWeight.w700),
+        ),
+        leading: Navigator.of(context).canPop()
+            ? Center(
+                child: GestureDetector(
+                  onTap: () => Navigator.pop(context),
+                  child: const Icon(
+                    Icons.arrow_back_ios,
+                  ),
+                ),
+              )
+            : const SizedBox(),
+      );
+    }
+    if (showAppBar(RouteList.search)) {
+      return appBarWidget;
+    }
+    return null;
+  }
+
+  Widget _renderHeader() {
+    final screenSize = MediaQuery.of(context).size;
+    Widget headerContent = const SizedBox(height: 10.0);
+    if (!widget.isModal) {
+      headerContent = AnimatedContainer(
+        height: isVisibleSearch ? 0.1 : 58,
+        padding: const EdgeInsets.only(
+          left: 10,
+          top: 10,
+          bottom: 10,
+        ),
+        duration: const Duration(milliseconds: 150),
+        curve: Curves.easeInOut,
+        child: Row(
+          mainAxisSize: MainAxisSize.max,
+          children: <Widget>[
+            Text(
+              S.of(context).search,
+              style: Theme.of(context).textTheme.headline5!.copyWith(
+                    fontWeight: FontWeight.w700,
+                  ),
+            ),
+          ],
+        ),
+      );
+    }
+
+    return SizedBox(
+      width: screenSize.width / (2 / (screenSize.height / screenSize.width)),
+      child: headerContent,
+    );
+  }
+
+  Widget _buildRecentSearch() {
+    return RecentSearchesCustom(onTap: _onSubmit);
+  }
+
+  Widget _buildSuggestions() {
+    return Card(
+      elevation: 0,
+      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
+      color: Theme.of(context).primaryColorLight,
+      child: ListView.builder(
+        shrinkWrap: true,
+        padding: const EdgeInsets.only(
+          left: 10,
+          right: 10,
+        ),
+        itemCount: suggestSearch.length,
+        itemBuilder: (_, index) {
+          final keyword = suggestSearch[index];
+          return GestureDetector(
+            onTap: () => _onSubmit(keyword),
+            child: ListTile(
+              title: Text(keyword),
+            ),
+          );
+        },
+      ),
+    );
+  }
+
+  Widget buildResult() {
+    return SearchResultsCustom(
+      name: _searchKeyword,
+    );
+  }
+
+  void _onSubmit(String name) {
+    _searchFieldController.text = name;
+    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
+    setState(() {
+      _showResult = true;
+      _searchModel.loadProduct(name: name, userId: userId);
+    });
+    var currentFocus = FocusScope.of(context);
+    if (!currentFocus.hasPrimaryFocus) {
+      currentFocus.unfocus();
+    }
+  }
+}
diff --git a/lib/screens/settings/currencies_screen.dart b/lib/screens/settings/currencies_screen.dart
index c3bc3a7c..25796564 100644
--- a/lib/screens/settings/currencies_screen.dart
+++ b/lib/screens/settings/currencies_screen.dart
@@ -3,6 +3,7 @@ import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/app_model.dart';
 import '../../models/entities/currency.dart';
@@ -78,6 +79,14 @@ class _CurrenciesScreenState extends BaseScreen<CurrenciesScreen>
             context,
             code: currency.currencyCode,
           );
+
+          FlashHelper.message(
+            context,
+            message: S.of(context).changedCurrencyTo(
+                  currency.currencyDisplay,
+                ),
+          );
+          context.navigator.pop();
         },
         trailing: currencyDisplay == currency.currencyDisplay
             ? const Icon(Icons.done)
diff --git a/lib/screens/settings/language_screen.dart b/lib/screens/settings/language_screen.dart
index a53b39da..3473a8fc 100644
--- a/lib/screens/settings/language_screen.dart
+++ b/lib/screens/settings/language_screen.dart
@@ -3,9 +3,11 @@ import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/app_model.dart';
 import '../../services/service_config.dart';
+import '../../widgets/common/index.dart' show FluxImage;
 import '../common/app_bar_mixin.dart';
 
 class LanguageScreen extends StatefulWidget {
@@ -14,57 +16,63 @@ class LanguageScreen extends StatefulWidget {
 }
 
 class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
-  final GlobalKey<ScaffoldMessengerState> _scaffoldMessengerKey =
-      GlobalKey<ScaffoldMessengerState>();
-
-  void _showLoading(String language) {
-    final snackBar = SnackBar(
-      content: Text(
-        S.of(context).languageSuccess,
-        style: const TextStyle(
-          fontSize: 15,
-        ),
-      ),
-      duration: const Duration(seconds: 2),
-      backgroundColor: Theme.of(context).primaryColor,
-      action: SnackBarAction(
-        label: language,
-        onPressed: () {},
-      ),
-    );
-
-    _scaffoldMessengerKey.currentState?.showSnackBar(snackBar);
-  }
+  bool isUpdating = false;
 
   @override
   Widget build(BuildContext context) {
     var list = <Widget>[];
-    var languages = getLanguages(this.context);
+    var languages = getLanguages();
+    final currentLanguage =
+        Provider.of<AppModel>(context, listen: false).langCode;
 
     for (var i = 0; i < languages.length; i++) {
-      if (Config().isVendorManagerType()) {
-        if (Configurations.unsupportedLanguages
+      if (ServerConfig().isVendorManagerType()) {
+        if (unsupportedLanguages
             .contains(languages[i]['code'])) {
           continue;
         }
       }
+      final isSelected = currentLanguage == languages[i]['code'];
       list.add(
         ListTile(
-          leading: Image.asset(
-            languages[i]['icon'],
+          leading: FluxImage(
+            imageUrl: languages[i]['icon'],
             width: 30,
             height: 20,
             fit: BoxFit.cover,
           ),
-          title: Text(languages[i]['name']),
-          onTap: () {
-            Provider.of<AppModel>(context, listen: false)
-                .changeLanguage(languages[i]['code'], context)
-                .then((value) {
-              setState(() {});
-              _showLoading(languages[i]['text']);
-            });
-          },
+          title: Text(languages[i]['text']),
+          onTap: isUpdating
+              ? null
+              : () {
+                  if (isSelected) {
+                    return;
+                  }
+                  setState(() {
+                    isUpdating = true;
+                  });
+                  Provider.of<AppModel>(context, listen: false)
+                      .changeLanguage(
+                    languages[i]['code'],
+                    context,
+                  )
+                      .then((_) {
+                    setState(() {
+                      isUpdating = false;
+                    });
+                    FlashHelper.message(
+                      context,
+                      message: S.of(context).languageSuccess,
+                    );
+                    context.navigator.pop();
+                  });
+                },
+          trailing: !isSelected
+              ? null
+              : Icon(
+                  Icons.check,
+                  color: Theme.of(context).primaryColor,
+                ),
         ),
       );
       if (i < languages.length - 1) {
@@ -73,7 +81,7 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
             color: Theme.of(context).primaryColorLight,
             height: 1.0,
             indent: 75,
-            //endIndent: 20,
+            endIndent: 30,
           ),
         );
       }
@@ -81,33 +89,41 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
 
     return renderScaffold(
       routeName: RouteList.language,
-      body: ScaffoldMessenger(
-        key: _scaffoldMessengerKey,
-        child: Scaffold(
-          backgroundColor: Theme.of(context).backgroundColor,
-          appBar: AppBar(
-            title: Text(
-              S.of(context).language,
-              style: const TextStyle(color: Colors.white),
-            ),
-            backgroundColor: Theme.of(context).primaryColor,
-            leading: Center(
-              child: GestureDetector(
-                onTap: () => Navigator.pop(context),
-                child: const Icon(
-                  Icons.arrow_back_ios,
-                  color: Colors.white,
-                ),
-              ),
-            ),
+      body: Scaffold(
+        backgroundColor: Theme.of(context).backgroundColor,
+        appBar: AppBar(
+          title: Text(
+            S.of(context).language,
+            style: const TextStyle(color: Colors.white),
           ),
-          body: SingleChildScrollView(
-            child: Column(
-              children: [
-                ...list,
-                const SizedBox(height: 100),
-              ],
-            ),
+          backgroundColor: Theme.of(context).primaryColor,
+          leading: isUpdating
+              ? const Padding(
+                  padding: EdgeInsets.all(16.0),
+                  child: SizedBox.square(
+                    dimension: 24.0,
+                    child: CircularProgressIndicator(
+                      color: Colors.white,
+                      strokeWidth: 2.0,
+                    ),
+                  ),
+                )
+              : Center(
+                  child: GestureDetector(
+                    onTap: () => Navigator.pop(context),
+                    child: const Icon(
+                      Icons.arrow_back_ios,
+                      color: Colors.white,
+                    ),
+                  ),
+                ),
+        ),
+        body: SingleChildScrollView(
+          child: Column(
+            children: [
+              ...list,
+              SizedBox(height: MediaQuery.of(context).padding.bottom + 32),
+            ],
           ),
         ),
       ),
diff --git a/lib/screens/settings/notification_screen.dart b/lib/screens/settings/notification_screen.dart
index 9a04043a..a10d96b8 100644
--- a/lib/screens/settings/notification_screen.dart
+++ b/lib/screens/settings/notification_screen.dart
@@ -6,6 +6,8 @@ import 'package:provider/provider.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart' show FStoreNotificationItem;
 import '../../models/notification_model.dart';
+import '../../modules/firebase/dynamic_link_service.dart';
+import '../../widgets/common/flux_image.dart';
 
 class NotificationScreen extends StatefulWidget {
   @override
@@ -157,11 +159,21 @@ class _NotificationScreenState extends State<NotificationScreen> {
                         )
                       ],
                     ),
-                    leading: Icon(
-                      Icons.notifications_none,
-                      size: 30,
-                      color: Theme.of(context).colorScheme.secondary,
-                    ),
+                    leading: notificationItem.image != null
+                        ? ClipRRect(
+                            borderRadius: BorderRadius.circular(4.0),
+                            child: FluxImage(
+                              imageUrl: notificationItem.image!,
+                              width: 40,
+                              height: 40,
+                              fit: BoxFit.cover,
+                            ),
+                          )
+                        : Icon(
+                            Icons.notifications_none,
+                            size: 30,
+                            color: Theme.of(context).colorScheme.secondary,
+                          ),
                     trailing: notificationItem.seen
                         ? null
                         : Icon(
@@ -213,8 +225,13 @@ class _NotificationScreenState extends State<NotificationScreen> {
         false;
   }
 
-  void onTapMessage(FStoreNotificationItem data) {
-    showDialog(
+  void onTapMessage(FStoreNotificationItem data) async {
+    final url = data.dynamicLink;
+    if (url != null) {
+      await DynamicLinkService.handleDynamicLink(url, context);
+      return;
+    }
+    await showDialog(
       context: context,
       builder: (context) => AlertDialog(
         title: Container(
diff --git a/lib/screens/settings/rate_myapp_mixin.dart b/lib/screens/settings/rate_myapp_mixin.dart
new file mode 100644
index 00000000..79e58f0f
--- /dev/null
+++ b/lib/screens/settings/rate_myapp_mixin.dart
@@ -0,0 +1,70 @@
+import 'package:flutter/material.dart';
+import 'package:rate_my_app/rate_my_app.dart';
+
+import '../../common/config.dart';
+import '../../common/constants.dart';
+import '../../generated/l10n.dart';
+
+mixin RateMyAppMixin<T extends StatefulWidget> on State<T> {
+  final _rateMyApp = RateMyApp(
+    // rate app on store
+    minDays: 7,
+    minLaunches: 10,
+    remindDays: 7,
+    remindLaunches: 10,
+    googlePlayIdentifier: kStoreIdentifier['android'],
+    appStoreIdentifier: kStoreIdentifier['ios'],
+  );
+
+  void showRateMyApp() {
+    _rateMyApp.showRateDialog(
+      context,
+      title: S.of(context).rateTheApp,
+      // The dialog title.
+      message: S.of(context).rateThisAppDescription,
+      // The dialog message.
+      rateButton: S.of(context).rate.toUpperCase(),
+      // The dialog 'rate' button text.
+      noButton: S.of(context).noThanks.toUpperCase(),
+      // The dialog 'no' button text.
+      laterButton: S.of(context).maybeLater.toUpperCase(),
+      // The dialog 'later' button text.
+      listener: (button) {
+        // The button click listener (useful if you want to cancel the click event).
+        switch (button) {
+          case RateMyAppDialogButton.rate:
+            break;
+          case RateMyAppDialogButton.later:
+            break;
+          case RateMyAppDialogButton.no:
+            break;
+        }
+
+        return true; // Return false if you want to cancel the click event.
+      },
+      // Set to false if you want to show the native Apple app rating dialog on iOS.
+      dialogStyle: const DialogStyle(),
+      // Custom dialog styles.
+      // Called when the user dismissed the dialog (either by taping outside or by pressing the 'back' button).
+      // actionsBuilder: (_) => [], // This one allows you to use your own buttons.
+    );
+  }
+
+  @override
+  void initState() {
+    super.initState();
+
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        await _rateMyApp.init();
+
+        if (isMobile && !kStoreIdentifier['disable']) {
+          // state of rating the app
+          if (_rateMyApp.shouldOpenDialog) {
+            showRateMyApp();
+          }
+        }
+      }
+    });
+  }
+}
diff --git a/lib/screens/settings/settings_screen.dart b/lib/screens/settings/settings_screen.dart
index 761a330b..8499b240 100644
--- a/lib/screens/settings/settings_screen.dart
+++ b/lib/screens/settings/settings_screen.dart
@@ -8,7 +8,6 @@ import 'package:flutter/material.dart';
 import 'package:inspireui/icons/icon_picker.dart';
 import 'package:localstorage/localstorage.dart';
 import 'package:provider/provider.dart';
-import 'package:rate_my_app/rate_my_app.dart';
 
 import '../../app.dart';
 import '../../common/config.dart';
@@ -24,8 +23,10 @@ import '../../services/index.dart';
 import '../../widgets/common/index.dart';
 import '../../widgets/general/index.dart';
 import '../common/app_bar_mixin.dart';
+import '../common/delete_account_mixin.dart';
 import '../index.dart';
 import '../users/user_point_screen.dart';
+import 'rate_myapp_mixin.dart';
 
 const itemPadding = 15.0;
 
@@ -54,6 +55,8 @@ class SettingScreenState extends State<SettingScreen>
     with
         TickerProviderStateMixin,
         AutomaticKeepAliveClientMixin<SettingScreen>,
+        DeleteAccountMixin,
+        RateMyAppMixin,
         AppBarMixin {
   @override
   bool get wantKeepAlive => true;
@@ -62,49 +65,6 @@ class SettingScreenState extends State<SettingScreen>
   bool isAbleToPostManagement = false;
 
   final bannerHigh = 150.0;
-  final RateMyApp _rateMyApp = RateMyApp(
-    // rate app on store
-    minDays: 7,
-    minLaunches: 10,
-    remindDays: 7,
-    remindLaunches: 10,
-    googlePlayIdentifier: kStoreIdentifier['android'],
-    appStoreIdentifier: kStoreIdentifier['ios'],
-  );
-
-  void showRateMyApp() {
-    _rateMyApp.showRateDialog(
-      context,
-      title: S.of(context).rateTheApp,
-      // The dialog title.
-      message: S.of(context).rateThisAppDescription,
-      // The dialog message.
-      rateButton: S.of(context).rate.toUpperCase(),
-      // The dialog 'rate' button text.
-      noButton: S.of(context).noThanks.toUpperCase(),
-      // The dialog 'no' button text.
-      laterButton: S.of(context).maybeLater.toUpperCase(),
-      // The dialog 'later' button text.
-      listener: (button) {
-        // The button click listener (useful if you want to cancel the click event).
-        switch (button) {
-          case RateMyAppDialogButton.rate:
-            break;
-          case RateMyAppDialogButton.later:
-            break;
-          case RateMyAppDialogButton.no:
-            break;
-        }
-
-        return true; // Return false if you want to cancel the click event.
-      },
-      // Set to false if you want to show the native Apple app rating dialog on iOS.
-      dialogStyle: const DialogStyle(),
-      // Custom dialog styles.
-      // Called when the user dismissed the dialog (either by taping outside or by pressing the 'back' button).
-      // actionsBuilder: (_) => [], // This one allows you to use your own buttons.
-    );
-  }
 
   void checkAddPostRole() {
     for (var legitRole in addPostAccessibleRoles) {
@@ -119,16 +79,6 @@ class SettingScreenState extends State<SettingScreen>
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((_) async {
-      await _rateMyApp.init();
-
-      if (isMobile && !kStoreIdentifier['disable']) {
-        // state of rating the app
-        if (_rateMyApp.shouldOpenDialog) {
-          showRateMyApp();
-        }
-      }
-    });
   }
 
   /// Render the Delivery Menu.
@@ -177,7 +127,7 @@ class SettingScreenState extends State<SettingScreen>
   Widget renderVendorAdmin() {
     var isVendor = user?.isVender ?? false;
 
-    if (!isVendor || serverConfig['type'] == 'listeo') {
+    if (!isVendor || ServerConfig().isListeoType) {
       return const SizedBox();
     }
 
@@ -214,8 +164,8 @@ class SettingScreenState extends State<SettingScreen>
   Widget renderVendorVacation() {
     var isVendor = user?.isVender ?? false;
 
-    if ((kFluxStoreMV.contains(serverConfig['type']) && !isVendor) ||
-        serverConfig['type'] != 'wcfm' ||
+    if ((ServerConfig().typeName.isMultiVendor && !isVendor) ||
+        !ServerConfig().typeName.isWcfm ||
         !kVendorConfig['DisableNativeStoreManagement']) {
       return const SizedBox();
     }
@@ -229,8 +179,10 @@ class SettingScreenState extends State<SettingScreen>
           FluxNavigate.push(
             MaterialPageRoute(
               builder: (context) => Services().widget.renderVacationVendor(
-                  user!.id!, user!.cookie!,
-                  isFromMV: true),
+                    user!.id!,
+                    user!.cookie!,
+                    isFromMV: true,
+                  ),
             ),
           );
         },
@@ -270,7 +222,7 @@ class SettingScreenState extends State<SettingScreen>
             MaterialPageRoute(
               builder: (context) => WebView(
                 auth: true,
-                url: '${serverConfig['url']}/my-account',
+                url: '${ServerConfig().url}/my-account',
                 title: S.of(context).updateUserInfor,
               ),
             ),
@@ -299,7 +251,7 @@ class SettingScreenState extends State<SettingScreen>
     String title;
     Widget? trailing;
     Function() onTap;
-    var isMultiVendor = kFluxStoreMV.contains(serverConfig['type']);
+    var isMultiVendor = ServerConfig().typeName.isMultiVendor;
     var subGeneralSetting = widget.subGeneralSetting != null
         ? ConfigurationUtils.loadSubGeneralSetting(widget.subGeneralSetting!)
         : kSubGeneralSetting;
@@ -321,6 +273,26 @@ class SettingScreenState extends State<SettingScreen>
       return GeneralButtonWidget(item: item);
     }
 
+    if (value.contains('product-')) {
+      return GeneralProductWidget(item: item);
+    }
+
+    if (value.contains('category-')) {
+      return GeneralCategoryWidget(item: item);
+    }
+
+    if (value.contains('banner-')) {
+      return GeneralBannerWidget(item: item);
+    }
+
+    if (value.contains('blog-')) {
+      return GeneralBlogWidget(item: item);
+    }
+
+    if (value.contains('blogCategory-')) {
+      return GeneralBlogCategoryWidget(item: item);
+    }
+
     switch (value) {
       case 'products':
         {
@@ -335,7 +307,7 @@ class SettingScreenState extends State<SettingScreen>
 
       case 'chat':
         {
-          if (user == null || Config().isListingType || !isMultiVendor) {
+          if (user == null || ServerConfig().isListingType || !isMultiVendor) {
             return const SizedBox();
           }
           title = S.of(context).conversations;
@@ -345,7 +317,7 @@ class SettingScreenState extends State<SettingScreen>
         }
       case 'wallet':
         {
-          if (user == null || !Config().isWooType) {
+          if (user == null || !ServerConfig().isWooType) {
             return const SizedBox();
           }
           title = S.of(context).myWallet;
@@ -361,17 +333,19 @@ class SettingScreenState extends State<SettingScreen>
           trailing = Row(
             mainAxisSize: MainAxisSize.min,
             children: [
-              Consumer<ProductWishListModel>(builder: (context, model, child) {
-                if (model.products.isNotEmpty) {
-                  return Text(
-                    '${model.products.length} ${S.of(context).items}',
-                    style: TextStyle(
-                        fontSize: 14, color: Theme.of(context).primaryColor),
-                  );
-                } else {
-                  return const SizedBox();
-                }
-              }),
+              Consumer<ProductWishListModel>(
+                builder: (context, model, child) {
+                  if (model.products.isNotEmpty) {
+                    return Text(
+                      '${model.products.length} ${S.of(context).items}',
+                      style: TextStyle(
+                          fontSize: 14, color: Theme.of(context).primaryColor),
+                    );
+                  } else {
+                    return const SizedBox();
+                  }
+                },
+              ),
               const SizedBox(width: 5),
               const Icon(Icons.arrow_forward_ios, size: 18, color: kGrey600)
             ],
@@ -453,60 +427,94 @@ class SettingScreenState extends State<SettingScreen>
         }
       case 'language':
         {
-          icon = CupertinoIcons.globe;
-          title = S.of(context).language;
-          onTap = () => Navigator.of(context).pushNamed(RouteList.language);
-          break;
+          return Selector<AppModel, String?>(
+            selector: (context, model) => model.langCode,
+            builder: (context, langCode, _) {
+              final languages = getLanguages();
+              return _SettingItem(
+                icon: CupertinoIcons.globe,
+                title: S.of(context).language,
+                trailing: Row(
+                  mainAxisSize: MainAxisSize.min,
+                  children: [
+                    Text(
+                      languages.firstWhere(
+                          (element) => langCode == element['code'])['text'],
+                      style: TextStyle(
+                        color: Theme.of(context).colorScheme.secondary,
+                      ),
+                    ),
+                    const SizedBox(width: 16.0),
+                    const Icon(
+                      Icons.arrow_forward_ios,
+                      size: 18,
+                      color: kGrey600,
+                    )
+                  ],
+                ),
+                onTap: () {
+                  Navigator.of(context).pushNamed(RouteList.language);
+                },
+              );
+            },
+          );
         }
       case 'currencies':
         {
-          if (Config().isListingType) {
+          if (ServerConfig().isListingType) {
             return const SizedBox();
           }
-          icon = CupertinoIcons.money_dollar_circle;
-          title = S.of(context).currencies;
-          onTap = () => Navigator.of(context).pushNamed(RouteList.currencies);
-          break;
+          return Selector<AppModel, String?>(
+            selector: (context, model) => model.currency,
+            builder: (context, currency, _) {
+              return _SettingItem(
+                icon: CupertinoIcons.money_dollar_circle,
+                title: S.of(context).currencies,
+                trailing: Row(
+                  mainAxisSize: MainAxisSize.min,
+                  children: [
+                    Text(
+                      '$currency',
+                      style: TextStyle(
+                        color: Theme.of(context).colorScheme.secondary,
+                      ),
+                    ),
+                    const SizedBox(width: 16.0),
+                    const Icon(
+                      Icons.arrow_forward_ios,
+                      size: 18,
+                      color: kGrey600,
+                    )
+                  ],
+                ),
+                onTap: () {
+                  Navigator.of(context).pushNamed(RouteList.currencies);
+                },
+              );
+            },
+          );
         }
       case 'darkTheme':
         {
-          return Column(
-            children: [
-              Card(
-                margin: const EdgeInsets.only(bottom: 2.0),
-                elevation: 0,
-                child: SwitchListTile(
-                  secondary: Icon(
-                    Provider.of<AppModel>(context).darkTheme
-                        ? CupertinoIcons.sun_min
-                        : CupertinoIcons.moon,
+          return Selector<AppModel, bool>(
+            selector: (context, model) => model.darkTheme,
+            builder: (context, darkTheme, _) {
+              return _SettingItem(
+                icon: darkTheme ? CupertinoIcons.moon : CupertinoIcons.sun_min,
+                title: S.of(context).appearance,
+                trailing: Text(
+                  darkTheme
+                      ? S.of(context).darkTheme
+                      : S.of(context).lightTheme,
+                  style: TextStyle(
                     color: Theme.of(context).colorScheme.secondary,
-                    size: 24,
-                  ),
-                  value: Provider.of<AppModel>(context).darkTheme,
-                  activeColor: const Color(0xFF0066B4),
-                  onChanged: (bool value) {
-                    if (value) {
-                      Provider.of<AppModel>(context, listen: false)
-                          .updateTheme(true);
-                    } else {
-                      Provider.of<AppModel>(context, listen: false)
-                          .updateTheme(false);
-                    }
-                  },
-                  title: Text(
-                    S.of(context).darkTheme,
-                    style: const TextStyle(fontSize: 16),
                   ),
                 ),
-              ),
-              const Divider(
-                color: Colors.black12,
-                height: 1.0,
-                indent: 75,
-                //endIndent: 20,
-              ),
-            ],
+                onTap: () {
+                  context.read<AppModel>().updateTheme(!darkTheme);
+                },
+              );
+            },
           );
         }
       case 'order':
@@ -516,7 +524,7 @@ class SettingScreenState extends State<SettingScreen>
           if (user == null && items == null) {
             return const SizedBox();
           }
-          if (Config().isListingType) {
+          if (ServerConfig().isListingType) {
             return const SizedBox();
           }
           icon = CupertinoIcons.time;
@@ -535,7 +543,7 @@ class SettingScreenState extends State<SettingScreen>
           if (!(kAdvanceConfig.enablePointReward && user != null)) {
             return const SizedBox();
           }
-          if (Config().isListingType) {
+          if (ServerConfig().isListingType) {
             return const SizedBox();
           }
           icon = CupertinoIcons.bag_badge_plus;
@@ -655,6 +663,18 @@ class SettingScreenState extends State<SettingScreen>
     );
   }
 
+  void _handleUpdateProfile() async {
+    final hasChangePassword = await FluxNavigate.pushNamed(
+      RouteList.updateUser,
+    ) as bool?;
+
+    /// If change password with Shopify
+    /// need to log out and log in again
+    if (ServerConfig().isShopify && (hasChangePassword ?? false)) {
+      await _showDialogLogout();
+    }
+  }
+
   Widget renderDrawerIcon() {
     var icon = Icons.blur_on;
     if (widget.drawerIcon != null) {
@@ -669,8 +689,6 @@ class SettingScreenState extends State<SettingScreen>
   }
 
   Widget renderUser() {
-    const textStyle = TextStyle(fontSize: 16);
-
     return ListenableProvider.value(
       value: Provider.of<UserModel>(context),
       child: Consumer<UserModel>(
@@ -682,55 +700,42 @@ class SettingScreenState extends State<SettingScreen>
             if (user != null && user.name != null)
               ListTile(
                 leading: (user.picture?.isNotEmpty ?? false)
-                    ? CircleAvatar(
-                        backgroundImage: NetworkImage(user.picture!),
+                    ? Hero(
+                        tag: 'user-avatar-${user.picture}',
+                        child: ClipRRect(
+                          borderRadius: BorderRadius.circular(100),
+                          child: FluxImage(
+                            imageUrl: user.picture!,
+                            fit: BoxFit.cover,
+                            width: 40,
+                            height: 40,
+                          ),
+                        ),
                       )
                     : const Icon(Icons.face),
                 title: Text(
                   user.name ?? '',
-                  style: textStyle,
-                ),
-              ),
-            if (user != null && user.email != null && user.email!.isNotEmpty)
-              ListTile(
-                leading: const Icon(Icons.email),
-                title: Text(
-                  user.email!,
                   style: const TextStyle(fontSize: 16),
                 ),
-              ),
-            if (user != null && !Config().isWordPress)
-              Card(
-                color: Theme.of(context).backgroundColor,
-                margin: const EdgeInsets.only(bottom: 2.0),
-                elevation: 0,
-                child: ListTile(
-                  leading: Icon(
-                    Icons.portrait,
-                    color: Theme.of(context).colorScheme.secondary,
-                    size: 25,
-                  ),
-                  title: Text(
-                    S.of(context).updateUserInfor,
-                    style: const TextStyle(fontSize: 15),
-                  ),
-                  trailing: const Icon(
-                    Icons.arrow_forward_ios,
-                    size: 18,
-                    color: kGrey600,
-                  ),
-                  onTap: () async {
-                    final hasChangePassword = await FluxNavigate.pushNamed(
-                      RouteList.updateUser,
-                    ) as bool?;
-
-                    /// If change password with Shopify
-                    /// need to log out and log in again
-                    if (Config().isShopify && (hasChangePassword ?? false)) {
-                      await _showDialogLogout();
-                    }
-                  },
+                contentPadding: const EdgeInsets.symmetric(
+                  horizontal: 8.0,
                 ),
+                horizontalTitleGap: 24.0,
+                subtitle: (user.email != null && user.email!.isNotEmpty)
+                    ? Text(
+                        '${user.email}',
+                        style: TextStyle(
+                            fontSize: 16,
+                            color: Theme.of(context).colorScheme.secondary),
+                      )
+                    : null,
+                onTap: _handleUpdateProfile,
+                trailing: !ServerConfig().isWordPress
+                    ? IconButton(
+                        onPressed: _handleUpdateProfile,
+                        icon: const Icon(Icons.edit),
+                      )
+                    : null,
               ),
             if (user == null)
               Card(
@@ -807,10 +812,13 @@ class SettingScreenState extends State<SettingScreen>
         ? sliverAppBarWidget
         : SliverAppBar(
             backgroundColor: Theme.of(context).primaryColor,
-            leading: IconButton(
-              icon: renderDrawerIcon(),
-              onPressed: () => NavigateTools.onTapOpenDrawerMenu(context),
-            ),
+            leading: (context.read<AppModel>().appConfig?.drawer?.enable ??
+                    true)
+                ? IconButton(
+                    icon: renderDrawerIcon(),
+                    onPressed: () => NavigateTools.onTapOpenDrawerMenu(context),
+                  )
+                : null,
             expandedHeight: bannerHigh,
             floating: true,
             pinned: true,
@@ -868,7 +876,7 @@ class SettingScreenState extends State<SettingScreen>
 
                       /// Render some extra menu for Vendor.
                       /// Currently support WCFM & Dokan. Will support WooCommerce soon.
-                      if (kFluxStoreMV.contains(serverConfig['type']) &&
+                      if (ServerConfig().typeName.isMultiVendor &&
                           (user?.isVender ?? false)) ...[
                         Services().widget.renderVendorOrder(context),
                         renderVendorVacation(),
@@ -880,7 +888,7 @@ class SettingScreenState extends State<SettingScreen>
                       // renderWebViewProfile(),
 
                       /// render some extra menu for Listing
-                      if (user != null && Config().isListingType) ...[
+                      if (user != null && ServerConfig().isListingType) ...[
                         Services().widget.renderNewListing(context),
                         Services().widget.renderBookingHistory(context),
                       ],
@@ -914,7 +922,7 @@ class SettingScreenState extends State<SettingScreen>
                 ),
                 if (user != null &&
                     kAdvanceConfig.gdprConfig.showDeleteAccount &&
-                    Config().isSupportDeleteAccount)
+                    ServerConfig().isSupportDeleteAccount)
                   Padding(
                     padding:
                         const EdgeInsets.symmetric(horizontal: itemPadding),
@@ -928,7 +936,15 @@ class SettingScreenState extends State<SettingScreen>
                         S.current.deleteAccount,
                         style: const TextStyle(color: kColorRed),
                       ),
-                      onTap: _showConfirmDeleteAccountDialog,
+                      onTap: () async {
+                        final acceptDelete =
+                            await showConfirmDeleteAccountDialog(
+                          App.fluxStoreNavigatorKey.currentContext ?? context,
+                        );
+                        if (acceptDelete) {
+                          _processDeleteAccount();
+                        }
+                      },
                     ),
                   ),
                 const SizedBox(height: 100),
@@ -940,6 +956,21 @@ class SettingScreenState extends State<SettingScreen>
     );
   }
 
+  void _processDeleteAccount() async {
+    final result = await FluxNavigate.pushNamed(
+      RouteList.deleteAccount,
+      arguments: DeleteAccountArguments(
+        confirmCaptcha: kAdvanceConfig.gdprConfig.confirmCaptcha,
+        userToken:
+            Provider.of<UserModel>(context, listen: false).user?.cookie ?? '',
+      ),
+    ) as bool?;
+    if (result ?? false) {
+      _deleteUserOnFirebase();
+      _onLogout();
+    }
+  }
+
   void _onLogout() {
     Provider.of<CartModel>(context, listen: false).clearAddress();
     Provider.of<UserModel>(context, listen: false).logout();
@@ -973,46 +1004,6 @@ class SettingScreenState extends State<SettingScreen>
       ),
     );
   }
-
-  Future<void> _showConfirmDeleteAccountDialog() async {
-    await showCupertinoDialog(
-      context: context,
-      builder: (ctx) => CupertinoAlertDialog(
-        title: Text(S.current.deleteAccount),
-        content: Text(S.current.areYouSureDeleteAccount),
-        actions: [
-          CupertinoDialogAction(
-            isDefaultAction: true,
-            isDestructiveAction: true,
-            onPressed: () {
-              Navigator.of(ctx).pop();
-              _processDeleteAccount();
-            },
-            child: Text(S.current.ok),
-          ),
-          CupertinoDialogAction(
-            isDefaultAction: false,
-            isDestructiveAction: false,
-            onPressed: Navigator.of(ctx).pop,
-            child: Text(S.current.cancel),
-          )
-        ],
-      ),
-    );
-  }
-
-  void _processDeleteAccount() async {
-    final result = await FluxNavigate.pushNamed(
-      RouteList.deleteAccount,
-      arguments: DeleteAccountArguments(
-        confirmCaptcha: kAdvanceConfig.gdprConfig.confirmCaptcha,
-      ),
-    ) as bool?;
-    if (result ?? false) {
-      _deleteUserOnFirebase();
-      _onLogout();
-    }
-  }
 }
 
 class _SettingItem extends StatelessWidget {
diff --git a/lib/screens/user_update/user_update_screen.dart b/lib/screens/user_update/user_update_screen.dart
index e24325cc..fb0711c9 100644
--- a/lib/screens/user_update/user_update_screen.dart
+++ b/lib/screens/user_update/user_update_screen.dart
@@ -228,8 +228,8 @@ class _StateUserUpdate extends BaseScreen<UserUpdateScreen> {
                                         decoration: const InputDecoration(
                                             border: InputBorder.none),
                                         controller: userDisplayName,
-                                        enabled:
-                                            Config().type != ConfigType.magento,
+                                        enabled: ServerConfig().type !=
+                                            ConfigType.magento,
                                       ),
                                     ),
                                     const SizedBox(height: 16),
@@ -320,7 +320,7 @@ class _StateUserUpdate extends BaseScreen<UserUpdateScreen> {
         child: TextField(
             decoration: const InputDecoration(border: InputBorder.none),
             controller: userDisplayName,
-            enabled: Config().type != ConfigType.magento),
+            enabled: ServerConfig().type != ConfigType.magento),
       ),
     ];
   }
diff --git a/lib/screens/user_update/user_update_woo_screen.dart b/lib/screens/user_update/user_update_woo_screen.dart
index 641d5534..aa248509 100644
--- a/lib/screens/user_update/user_update_woo_screen.dart
+++ b/lib/screens/user_update/user_update_woo_screen.dart
@@ -1,10 +1,13 @@
+import 'dart:async';
+import 'dart:ui';
+
 import 'package:flutter/material.dart';
 import 'package:flutter_spinkit/flutter_spinkit.dart';
 import 'package:provider/provider.dart';
 import 'package:wechat_assets_picker/wechat_assets_picker.dart';
 
-import '../../common/constants.dart' show printLog;
 import '../../common/tools.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/entities/user.dart';
 import '../../models/user_model.dart';
@@ -19,8 +22,6 @@ class UserUpdateWooScreen extends StatefulWidget {
 
 class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
   String? avatar;
-  final GlobalKey<ScaffoldMessengerState> _scaffoldMessengerKey =
-      GlobalKey<ScaffoldMessengerState>();
 
   @override
   Widget build(BuildContext context) {
@@ -28,135 +29,155 @@ class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
     return ChangeNotifierProvider<UserUpdateModel>(
       create: (_) => UserUpdateModel(user.user),
       lazy: false,
-      child: ScaffoldMessenger(
-        key: _scaffoldMessengerKey,
-        child: Scaffold(
-          backgroundColor: Theme.of(context).backgroundColor,
-          floatingActionButton: Consumer<UserUpdateModel>(
-            builder: (_, model, __) => ElevatedButton(
-              style: ElevatedButton.styleFrom(
-                  primary: Theme.of(context).primaryColor),
-              onPressed: () {
-                model.updateProfile().then((value) {
-                  if (value == null) {
-                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-                      content: Text(S.of(context).updateFailed),
-                      duration: const Duration(seconds: 2),
-                    ));
-                  } else {
-                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-                      content: Text(S.of(context).updateSuccess),
-                      duration: const Duration(seconds: 2),
-                    ));
-                    user.user = User.fromAuthUser(
-                        value as Map<String, dynamic>, user.user!.cookie);
-                    user.setUser(user.user);
-                    Future.delayed(const Duration(seconds: 2)).then((value) {
-                      if (mounted) {
-                        try {
-                          final navigator = Navigator.of(context);
-                          if (navigator.canPop()) {
-                            navigator.pop();
-                          }
-                        } catch (err) {
-                          printLog(err);
-                        }
-                      }
-                    });
+      child: Scaffold(
+        backgroundColor: Theme.of(context).backgroundColor,
+        floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
+        floatingActionButton: Consumer<UserUpdateModel>(
+          builder: (_, model, __) => FloatingActionButton.extended(
+            backgroundColor: Theme.of(context).primaryColor,
+            foregroundColor: Colors.white,
+            shape: RoundedRectangleBorder(
+              borderRadius: BorderRadius.circular(9.0),
+            ),
+            materialTapTargetSize: MaterialTapTargetSize.padded,
+            onPressed: () async {
+              try {
+                final result = await model.updateProfile();
+                if (result == null) {
+                  return FlashHelper.errorMessage(
+                    context,
+                    message: S.of(context).updateFailed,
+                    duration: const Duration(seconds: 2),
+                  );
+                }
+                unawaited(
+                  FlashHelper.message(
+                    context,
+                    message: S.of(context).updateSuccess,
+                    duration: const Duration(seconds: 2),
+                  ),
+                );
+                user.user = User.fromAuthUser(
+                  result as Map<String, dynamic>,
+                  user.user!.cookie,
+                );
+                await user.setUser(user.user);
+                if (mounted) {
+                  final navigator = Navigator.of(context);
+                  if (navigator.canPop()) {
+                    navigator.pop();
                   }
-                }).catchError((e) {
-                  ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-                    content: Text(e.toString()),
+                }
+              } catch (e) {
+                unawaited(
+                  FlashHelper.errorMessage(
+                    context,
+                    message: '$e',
                     duration: const Duration(seconds: 2),
-                  ));
-                });
-              },
-              child: Text(
-                S.of(context).update,
-                style: Theme.of(context).textTheme.subtitle2,
-              ),
+                  ),
+                );
+              }
+            },
+            label: Text(
+              S.of(context).update,
             ),
           ),
-          floatingActionButtonLocation:
-              FloatingActionButtonLocation.centerDocked,
-          body: GestureDetector(
-            onTap: () {
-              Tools.hideKeyboard(context);
-            },
-            child: Stack(
-              children: [
-                Column(
-                  mainAxisSize: MainAxisSize.min,
-                  crossAxisAlignment: CrossAxisAlignment.stretch,
-                  children: <Widget>[
-                    Consumer<UserUpdateModel>(
-                      builder: (_, model, __) => SizedBox(
-                        height: MediaQuery.of(context).size.height * 0.25,
-                        child: Stack(
-                          children: <Widget>[
-                            Container(
-                              height: MediaQuery.of(context).size.height * 0.20,
-                              width: MediaQuery.of(context).size.width,
-                              decoration: BoxDecoration(
-                                  color: Theme.of(context).primaryColor,
-                                  borderRadius: const BorderRadius.vertical(
-                                    bottom: Radius.elliptical(100, 10),
+        ),
+        body: GestureDetector(
+          onTap: () {
+            Tools.hideKeyboard(context);
+          },
+          child: Stack(
+            children: [
+              Column(
+                mainAxisSize: MainAxisSize.min,
+                crossAxisAlignment: CrossAxisAlignment.stretch,
+                children: <Widget>[
+                  Consumer<UserUpdateModel>(
+                    builder: (_, model, __) => SizedBox(
+                      height: MediaQuery.of(context).size.height * 0.25,
+                      child: Stack(
+                        children: <Widget>[
+                          Container(
+                            height: MediaQuery.of(context).size.height * 0.20,
+                            width: MediaQuery.of(context).size.width,
+                            decoration: BoxDecoration(
+                                color: Theme.of(context).primaryColor,
+                                borderRadius: const BorderRadius.vertical(
+                                  bottom: Radius.elliptical(100, 10),
+                                ),
+                                boxShadow: const [
+                                  BoxShadow(
+                                      color: Colors.black12,
+                                      offset: Offset(0, 2),
+                                      blurRadius: 8)
+                                ]),
+                            child: model.avatar == null ||
+                                    (model.avatar is String &&
+                                        model.avatar.isEmpty)
+                                ? const SizedBox()
+                                : ClipRRect(
+                                    borderRadius: const BorderRadius.vertical(
+                                      bottom: Radius.elliptical(100, 10),
+                                    ),
+                                    child: ImageFiltered(
+                                      imageFilter: ImageFilter.blur(
+                                        sigmaX: 5,
+                                        sigmaY: 5,
+                                      ),
+                                      child: (model.avatar is AssetEntity)
+                                          ? AssetEntityImage(
+                                              model.avatar,
+                                              height: (MediaQuery.of(context)
+                                                          .size
+                                                          .height *
+                                                      0.20)
+                                                  .toDouble(),
+                                              width: MediaQuery.of(context)
+                                                  .size
+                                                  .width
+                                                  .toDouble(),
+                                              fit: BoxFit.cover,
+                                            )
+                                          : FluxImage(
+                                              imageUrl: model.avatar,
+                                              fit: BoxFit.cover,
+                                            ),
+                                    ),
                                   ),
-                                  boxShadow: const [
-                                    BoxShadow(
-                                        color: Colors.black12,
-                                        offset: Offset(0, 2),
-                                        blurRadius: 8)
-                                  ]),
+                          ),
+                          Align(
+                            alignment: Alignment.bottomCenter,
+                            child: Container(
+                              width: 150,
+                              height: 150,
+                              decoration: BoxDecoration(
+                                borderRadius: BorderRadius.circular(150),
+                                color: Theme.of(context).primaryColorLight,
+                                border: Border.all(
+                                  color: Theme.of(context).backgroundColor,
+                                  width: 3,
+                                ),
+                              ),
                               child: model.avatar == null ||
                                       (model.avatar is String &&
                                           model.avatar.isEmpty)
-                                  ? const SizedBox()
+                                  ? const Icon(
+                                      Icons.person,
+                                      size: 120,
+                                    )
                                   : (model.avatar is AssetEntity)
-                                      ? AssetEntityImage(
-                                          model.avatar,
-                                          height: (MediaQuery.of(context)
-                                                      .size
-                                                      .height *
-                                                  0.20)
-                                              .toDouble(),
-                                          width: MediaQuery.of(context)
-                                              .size
-                                              .width
-                                              .toDouble(),
-                                          fit: BoxFit.cover,
+                                      ? ClipRRect(
+                                          borderRadius:
+                                              BorderRadius.circular(150),
+                                          child: AssetEntityImage(model.avatar,
+                                              width: 150,
+                                              height: 150,
+                                              fit: BoxFit.cover),
                                         )
-                                      : FluxImage(
-                                          imageUrl: model.avatar,
-                                          fit: BoxFit.cover,
-                                        ),
-                            ),
-                            Align(
-                              alignment: Alignment.bottomCenter,
-                              child: Container(
-                                width: 150,
-                                height: 150,
-                                decoration: BoxDecoration(
-                                    borderRadius: BorderRadius.circular(150),
-                                    color: Theme.of(context).primaryColorLight),
-                                child: model.avatar == null ||
-                                        (model.avatar is String &&
-                                            model.avatar.isEmpty)
-                                    ? const Icon(
-                                        Icons.person,
-                                        size: 120,
-                                      )
-                                    : (model.avatar is AssetEntity)
-                                        ? ClipRRect(
-                                            borderRadius:
-                                                BorderRadius.circular(150),
-                                            child: AssetEntityImage(
-                                                model.avatar,
-                                                width: 150,
-                                                height: 150,
-                                                fit: BoxFit.cover),
-                                          )
-                                        : ClipRRect(
+                                      : Hero(
+                                          tag: 'user-avatar-${model.avatar}',
+                                          child: ClipRRect(
                                             borderRadius:
                                                 BorderRadius.circular(150),
                                             child: FluxImage(
@@ -166,52 +187,163 @@ class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
                                               height: 150,
                                             ),
                                           ),
-                              ),
+                                        ),
                             ),
-                            Align(
-                              alignment: Alignment.bottomCenter,
-                              child: Container(
-                                decoration: BoxDecoration(
-                                  borderRadius: BorderRadius.circular(150),
-                                  color: Theme.of(context)
-                                      .primaryColorLight
-                                      .withOpacity(0.5),
+                          ),
+                          Align(
+                            alignment: Alignment.bottomCenter,
+                            child: Container(
+                              margin: const EdgeInsets.only(left: 75),
+                              decoration: BoxDecoration(
+                                borderRadius: BorderRadius.circular(150),
+                                color:
+                                    Theme.of(context).colorScheme.onBackground,
+                                border: Border.all(
+                                  color: Theme.of(context).backgroundColor,
+                                  width: 2,
                                 ),
-                                child: IconButton(
-                                  onPressed: () => model.selectImage(context),
-                                  icon: const Icon(Icons.camera_alt),
+                              ),
+                              height: 40.0,
+                              width: 40.0,
+                              child: IconButton(
+                                iconSize: 18.0,
+                                onPressed: () => model.selectImage(context),
+                                icon: Icon(
+                                  Icons.camera_alt,
+                                  color: Theme.of(context).backgroundColor,
                                 ),
                               ),
                             ),
-                            SafeArea(
-                              child: GestureDetector(
-                                onTap: () => Navigator.pop(context),
-                                child: Container(
-                                  padding: const EdgeInsets.all(10),
-                                  margin: const EdgeInsets.only(left: 10),
-                                  child: const Icon(
-                                    Icons.arrow_back_ios,
-                                    color: Colors.white,
-                                  ),
+                          ),
+                          SafeArea(
+                            child: GestureDetector(
+                              onTap: () => Navigator.pop(context),
+                              child: Container(
+                                padding: const EdgeInsets.all(10),
+                                margin: const EdgeInsets.only(left: 10),
+                                child: const Icon(
+                                  Icons.arrow_back_ios,
+                                  color: Colors.white,
                                 ),
                               ),
-                            )
-                          ],
-                        ),
+                            ),
+                          )
+                        ],
                       ),
                     ),
-                    Expanded(
-                      child: SingleChildScrollView(
-                        child: Column(
-                          children: <Widget>[
-                            Padding(
-                              padding: const EdgeInsets.symmetric(
-                                  vertical: 20, horizontal: 15),
-                              child: Column(
-                                crossAxisAlignment: CrossAxisAlignment.start,
-                                children: <Widget>[
-                                  const SizedBox(height: 8),
-                                  Text(S.of(context).email,
+                  ),
+                  Expanded(
+                    child: SingleChildScrollView(
+                      child: Column(
+                        children: <Widget>[
+                          Padding(
+                            padding: const EdgeInsets.symmetric(
+                                vertical: 20, horizontal: 15),
+                            child: Column(
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              children: <Widget>[
+                                const SizedBox(height: 8),
+                                Text(S.of(context).email,
+                                    style: TextStyle(
+                                      fontSize: 16,
+                                      fontWeight: FontWeight.w600,
+                                      color: Theme.of(context)
+                                          .colorScheme
+                                          .secondary,
+                                    )),
+                                Consumer<UserUpdateModel>(
+                                  builder: (_, model, __) => TextField(
+                                    decoration: const InputDecoration(
+                                      border: InputBorder.none,
+                                    ),
+                                    controller: model.userEmail,
+                                    enabled: false,
+                                  ),
+                                ),
+                                const SizedBox(height: 16),
+                                Text(S.of(context).displayName,
+                                    style: TextStyle(
+                                      fontSize: 16,
+                                      fontWeight: FontWeight.w600,
+                                      color: Theme.of(context)
+                                          .colorScheme
+                                          .secondary,
+                                    )),
+                                const SizedBox(height: 8),
+                                Container(
+                                  padding: const EdgeInsets.symmetric(
+                                      horizontal: 10),
+                                  decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                          color: Theme.of(context)
+                                              .primaryColorLight,
+                                          width: 1.5)),
+                                  child: Consumer<UserUpdateModel>(
+                                    builder: (_, model, __) => TextField(
+                                      decoration: const InputDecoration(
+                                          border: InputBorder.none),
+                                      controller: model.userDisplayName,
+                                    ),
+                                  ),
+                                ),
+                                const SizedBox(height: 16),
+                                Text(S.of(context).firstName,
+                                    style: TextStyle(
+                                      fontSize: 16,
+                                      fontWeight: FontWeight.w600,
+                                      color: Theme.of(context)
+                                          .colorScheme
+                                          .secondary,
+                                    )),
+                                const SizedBox(height: 8),
+                                Container(
+                                  padding: const EdgeInsets.symmetric(
+                                      horizontal: 10),
+                                  decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                          color: Theme.of(context)
+                                              .primaryColorLight,
+                                          width: 1.5)),
+                                  child: Consumer<UserUpdateModel>(
+                                    builder: (_, model, __) => TextField(
+                                      decoration: const InputDecoration(
+                                          border: InputBorder.none),
+                                      controller: model.userFirstName,
+                                    ),
+                                  ),
+                                ),
+                                const SizedBox(height: 16),
+                                Text(S.of(context).lastName,
+                                    style: TextStyle(
+                                      fontSize: 16,
+                                      fontWeight: FontWeight.w600,
+                                      color: Theme.of(context)
+                                          .colorScheme
+                                          .secondary,
+                                    )),
+                                const SizedBox(height: 8),
+                                Container(
+                                  padding: const EdgeInsets.symmetric(
+                                      horizontal: 10),
+                                  decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                          color: Theme.of(context)
+                                              .primaryColorLight,
+                                          width: 1.5)),
+                                  child: Consumer<UserUpdateModel>(
+                                    builder: (_, model, __) => TextField(
+                                      decoration: const InputDecoration(
+                                          border: InputBorder.none),
+                                      controller: model.userLastName,
+                                    ),
+                                  ),
+                                ),
+                                if (!ServerConfig().isListingType) ...[
+                                  const SizedBox(height: 16),
+                                  Text(S.of(context).streetName,
                                       style: TextStyle(
                                         fontSize: 16,
                                         fontWeight: FontWeight.w600,
@@ -219,17 +351,28 @@ class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
                                             .colorScheme
                                             .secondary,
                                       )),
-                                  Consumer<UserUpdateModel>(
-                                    builder: (_, model, __) => TextField(
-                                      decoration: const InputDecoration(
-                                        border: InputBorder.none,
+                                  const SizedBox(height: 8),
+                                  Container(
+                                    padding: const EdgeInsets.symmetric(
+                                        horizontal: 10),
+                                    decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
+                                      ),
+                                    ),
+                                    child: Consumer<UserUpdateModel>(
+                                      builder: (_, model, __) => TextField(
+                                        decoration: const InputDecoration(
+                                            border: InputBorder.none),
+                                        controller: model.shippingAddress1,
                                       ),
-                                      controller: model.userEmail,
-                                      enabled: false,
                                     ),
                                   ),
                                   const SizedBox(height: 16),
-                                  Text(S.of(context).displayName,
+                                  Text(S.of(context).streetNameBlock,
                                       style: TextStyle(
                                         fontSize: 16,
                                         fontWeight: FontWeight.w600,
@@ -242,21 +385,23 @@ class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
                                     padding: const EdgeInsets.symmetric(
                                         horizontal: 10),
                                     decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                            color: Theme.of(context)
-                                                .primaryColorLight,
-                                            width: 1.5)),
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
+                                      ),
+                                    ),
                                     child: Consumer<UserUpdateModel>(
                                       builder: (_, model, __) => TextField(
                                         decoration: const InputDecoration(
                                             border: InputBorder.none),
-                                        controller: model.userDisplayName,
+                                        controller: model.shippingAddress2,
                                       ),
                                     ),
                                   ),
                                   const SizedBox(height: 16),
-                                  Text(S.of(context).firstName,
+                                  Text(S.of(context).city,
                                       style: TextStyle(
                                         fontSize: 16,
                                         fontWeight: FontWeight.w600,
@@ -269,21 +414,23 @@ class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
                                     padding: const EdgeInsets.symmetric(
                                         horizontal: 10),
                                     decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                            color: Theme.of(context)
-                                                .primaryColorLight,
-                                            width: 1.5)),
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
+                                      ),
+                                    ),
                                     child: Consumer<UserUpdateModel>(
                                       builder: (_, model, __) => TextField(
                                         decoration: const InputDecoration(
                                             border: InputBorder.none),
-                                        controller: model.userFirstName,
+                                        controller: model.shippingCity,
                                       ),
                                     ),
                                   ),
                                   const SizedBox(height: 16),
-                                  Text(S.of(context).lastName,
+                                  Text(S.of(context).stateProvince,
                                       style: TextStyle(
                                         fontSize: 16,
                                         fontWeight: FontWeight.w600,
@@ -296,252 +443,136 @@ class _UserUpdateScreenState extends State<UserUpdateWooScreen> {
                                     padding: const EdgeInsets.symmetric(
                                         horizontal: 10),
                                     decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                            color: Theme.of(context)
-                                                .primaryColorLight,
-                                            width: 1.5)),
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
+                                      ),
+                                    ),
                                     child: Consumer<UserUpdateModel>(
                                       builder: (_, model, __) => TextField(
                                         decoration: const InputDecoration(
                                             border: InputBorder.none),
-                                        controller: model.userLastName,
+                                        controller: model.shippingState,
                                       ),
                                     ),
                                   ),
-                                  if (!Config().isListingType) ...[
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).streetName,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingAddress1,
-                                        ),
-                                      ),
-                                    ),
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).streetNameBlock,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingAddress2,
-                                        ),
+                                  const SizedBox(height: 16),
+                                  Text(S.of(context).country,
+                                      style: TextStyle(
+                                        fontSize: 16,
+                                        fontWeight: FontWeight.w600,
+                                        color: Theme.of(context)
+                                            .colorScheme
+                                            .secondary,
+                                      )),
+                                  const SizedBox(height: 8),
+                                  Container(
+                                    padding: const EdgeInsets.symmetric(
+                                        horizontal: 10),
+                                    decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
                                       ),
                                     ),
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).city,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingCity,
-                                        ),
+                                    child: Consumer<UserUpdateModel>(
+                                      builder: (_, model, __) => TextField(
+                                        decoration: const InputDecoration(
+                                            border: InputBorder.none),
+                                        controller: model.shippingCountry,
                                       ),
                                     ),
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).stateProvince,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingState,
-                                        ),
+                                  ),
+                                  const SizedBox(height: 16),
+                                  Text(S.of(context).zipCode,
+                                      style: TextStyle(
+                                        fontSize: 16,
+                                        fontWeight: FontWeight.w600,
+                                        color: Theme.of(context)
+                                            .colorScheme
+                                            .secondary,
+                                      )),
+                                  const SizedBox(height: 8),
+                                  Container(
+                                    padding: const EdgeInsets.symmetric(
+                                        horizontal: 10),
+                                    decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
                                       ),
                                     ),
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).country,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingCountry,
-                                        ),
+                                    child: Consumer<UserUpdateModel>(
+                                      builder: (_, model, __) => TextField(
+                                        decoration: const InputDecoration(
+                                            border: InputBorder.none),
+                                        controller: model.shippingPostcode,
                                       ),
                                     ),
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).zipCode,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingPostcode,
-                                        ),
+                                  ),
+                                  const SizedBox(height: 16),
+                                  Text(S.of(context).streetNameApartment,
+                                      style: TextStyle(
+                                        fontSize: 16,
+                                        fontWeight: FontWeight.w600,
+                                        color: Theme.of(context)
+                                            .colorScheme
+                                            .secondary,
+                                      )),
+                                  const SizedBox(height: 8),
+                                  Container(
+                                    padding: const EdgeInsets.symmetric(
+                                        horizontal: 10),
+                                    decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(5),
+                                      border: Border.all(
+                                        color:
+                                            Theme.of(context).primaryColorLight,
+                                        width: 1.5,
                                       ),
                                     ),
-                                    const SizedBox(height: 16),
-                                    Text(S.of(context).streetNameApartment,
-                                        style: TextStyle(
-                                          fontSize: 16,
-                                          fontWeight: FontWeight.w600,
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary,
-                                        )),
-                                    const SizedBox(height: 8),
-                                    Container(
-                                      padding: const EdgeInsets.symmetric(
-                                          horizontal: 10),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(5),
-                                        border: Border.all(
-                                          color: Theme.of(context)
-                                              .primaryColorLight,
-                                          width: 1.5,
-                                        ),
-                                      ),
-                                      child: Consumer<UserUpdateModel>(
-                                        builder: (_, model, __) => TextField(
-                                          decoration: const InputDecoration(
-                                              border: InputBorder.none),
-                                          controller: model.shippingCompany,
-                                        ),
+                                    child: Consumer<UserUpdateModel>(
+                                      builder: (_, model, __) => TextField(
+                                        decoration: const InputDecoration(
+                                            border: InputBorder.none),
+                                        controller: model.shippingCompany,
                                       ),
                                     ),
-                                  ],
-                                  const SizedBox(height: 50),
+                                  ),
                                 ],
-                              ),
+                                const SizedBox(height: 50),
+                              ],
                             ),
-                          ],
-                        ),
+                          ),
+                        ],
                       ),
                     ),
-                  ],
-                ),
-                Consumer<UserUpdateModel>(
-                  builder: (_, model, __) =>
-                      model.state == UserUpdateState.loading
-                          ? Container(
-                              width: MediaQuery.of(context).size.width,
-                              height: MediaQuery.of(context).size.height,
-                              color: Colors.black.withOpacity(0.5),
-                              child: const Center(
-                                child: SpinKitCircle(
-                                  color: Colors.white,
-                                  size: 20.0,
-                                ),
+                  ),
+                ],
+              ),
+              Consumer<UserUpdateModel>(
+                builder: (_, model, __) =>
+                    model.state == UserUpdateState.loading
+                        ? Container(
+                            width: MediaQuery.of(context).size.width,
+                            height: MediaQuery.of(context).size.height,
+                            color: Colors.black.withOpacity(0.5),
+                            child: const Center(
+                              child: SpinKitCircle(
+                                color: Colors.white,
+                                size: 20.0,
                               ),
-                            )
-                          : const SizedBox(),
-                ),
-              ],
-            ),
+                            ),
+                          )
+                        : const SizedBox(),
+              ),
+            ],
           ),
         ),
       ),
diff --git a/lib/screens/users/age_restriction_screen.dart b/lib/screens/users/age_restriction_screen.dart
new file mode 100644
index 00000000..f6670957
--- /dev/null
+++ b/lib/screens/users/age_restriction_screen.dart
@@ -0,0 +1,198 @@
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+
+import '../../common/config/models/age_restriction_config.dart';
+import '../../common/constants.dart';
+import '../../common/tools/flash.dart';
+import '../../generated/l10n.dart';
+import '../../models/app_model.dart';
+import '../../services/dependency_injection.dart';
+import '../../widgets/common/index.dart';
+import 'pin_code_widget.dart';
+
+class AgeRestrictionScreen extends StatefulWidget {
+  final AgeRestrictionConfig config;
+  final VoidCallback? overrideEligibleCallback;
+  final VoidCallback? overrideInvalidAgeCallback;
+
+  const AgeRestrictionScreen({
+    Key? key,
+    required this.config,
+    this.overrideEligibleCallback,
+    this.overrideInvalidAgeCallback,
+  }) : super(key: key);
+
+  @override
+  State<AgeRestrictionScreen> createState() => _AgeRestrictionScreenState();
+}
+
+class _AgeRestrictionScreenState extends State<AgeRestrictionScreen> {
+  final TextEditingController _yearController = TextEditingController();
+
+  int get _currentYear => DateTime.now().year;
+
+  int _year = 0;
+
+  int get _age => _currentYear - _year;
+
+  bool get isDone => _yearController.text.length == 4;
+
+  /// Who is older than 150? 👻
+  bool get isAgeInvalid => isDone && (_age < 0 || _age > 150);
+
+  bool get isEligible => isDone && _age >= widget.config.minimumAge;
+
+  Key _yearFieldKey = UniqueKey();
+
+  @override
+  Widget build(BuildContext context) {
+    return WillPopScope(
+      onWillPop: () async {
+        return isEligible;
+      },
+      child: Scaffold(
+        appBar: null,
+        body: Stack(
+          children: [
+            if (widget.config.backgroundImageUrl.isNotEmpty)
+              Positioned.fill(
+                child: FluxImage(
+                  imageUrl: widget.config.backgroundImageUrl,
+                  fit: BoxFit.cover,
+                ),
+              ),
+            Positioned.fill(
+              child: SafeArea(
+                child: Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 24.0),
+                  child: Column(
+                    mainAxisSize: MainAxisSize.max,
+                    children: [
+                      if (widget.config.useLogo)
+                        Expanded(
+                          child: Padding(
+                            padding: const EdgeInsets.all(16.0),
+                            child: FluxImage(
+                              imageUrl: context
+                                  .select((AppModel _) => _.themeConfig.logo),
+                              fit: BoxFit.contain,
+                            ),
+                          ),
+                        ),
+                      if (!widget.config.useLogo &&
+                          widget.config.imageUrl.isNotEmpty)
+                        Expanded(
+                          child: Padding(
+                            padding: const EdgeInsets.all(16.0),
+                            child: FluxImage(
+                              imageUrl: widget.config.imageUrl,
+                              fit: BoxFit.contain,
+                            ),
+                          ),
+                        ),
+                      Expanded(
+                        child: Column(
+                          children: [
+                            Padding(
+                              padding: const EdgeInsets.only(top: 16.0),
+                              child: Text(
+                                widget.config.title,
+                                textAlign: TextAlign.center,
+                                style: Theme.of(context)
+                                    .textTheme
+                                    .titleMedium
+                                    ?.copyWith(
+                                      fontWeight: FontWeight.w600,
+                                    ),
+                              ),
+                            ),
+                            Padding(
+                              padding: const EdgeInsets.only(top: 16.0),
+                              child: PinCodeWidget(
+                                key: _yearFieldKey,
+                                controller: _yearController,
+                                length: 4,
+                                onChanged: (String value) {
+                                  if (!mounted) {
+                                    return;
+                                  }
+                                  _year = int.tryParse(value) ?? 0;
+                                  setState(() {});
+                                  if (isAgeInvalid) {
+                                    _yearController.clear();
+                                    _yearFieldKey = UniqueKey();
+                                    setState(() {});
+
+                                    if (widget.overrideInvalidAgeCallback !=
+                                        null) {
+                                      widget.overrideInvalidAgeCallback?.call();
+                                      return;
+                                    }
+
+                                    FlashHelper.errorMessage(
+                                      context,
+                                      message: S.of(context).invalidYearOfBirth,
+                                    );
+                                    return;
+                                  }
+
+                                  if (isEligible &&
+                                      widget.overrideEligibleCallback != null) {
+                                    widget.overrideEligibleCallback?.call();
+                                    return;
+                                  }
+
+                                  if (isEligible) {
+                                    injector<SharedPreferences>().setBool(
+                                      LocalStorageKey.askedAgeRestriction,
+                                      true,
+                                    );
+                                    Navigator.of(context).pop();
+                                  }
+                                },
+                              ),
+                            ),
+                            if (isDone && !isEligible && !isAgeInvalid)
+                              Padding(
+                                padding: const EdgeInsets.only(top: 8.0),
+                                child: Text(
+                                  widget.config.deniedMessage,
+                                  style: Theme.of(context)
+                                      .textTheme
+                                      .titleSmall
+                                      ?.copyWith(
+                                        color: Colors.red,
+                                        fontWeight: FontWeight.w600,
+                                      ),
+                                  textAlign: TextAlign.center,
+                                ),
+                              ),
+                            if (_yearController.text.trim().isEmpty)
+                              Padding(
+                                padding: const EdgeInsets.only(top: 8.0),
+                                child: Text(
+                                  widget.config.hintMessage,
+                                  style: Theme.of(context)
+                                      .textTheme
+                                      .titleSmall
+                                      ?.copyWith(
+                                        fontWeight: FontWeight.w600,
+                                      ),
+                                  textAlign: TextAlign.center,
+                                ),
+                              ),
+                          ],
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/screens/users/delete_account_screen.dart b/lib/screens/users/delete_account_screen.dart
index 20e98f2a..b5c738ec 100644
--- a/lib/screens/users/delete_account_screen.dart
+++ b/lib/screens/users/delete_account_screen.dart
@@ -2,26 +2,30 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:inspireui/inspireui.dart';
-import 'package:provider/provider.dart';
 
 import '../../generated/l10n.dart';
-import '../../models/user_model.dart';
 import '../../services/services.dart';
 import '../../widgets/common/loading_body.dart';
 
 class DeleteAccountArguments {
   final String confirmCaptcha;
+  final String userToken;
 
-  DeleteAccountArguments({required this.confirmCaptcha});
+  DeleteAccountArguments({
+    required this.confirmCaptcha,
+    required this.userToken,
+  });
 }
 
 class DeleteAccountScreen extends StatefulWidget {
   const DeleteAccountScreen({
     Key? key,
     required this.confirmCaptcha,
+    required this.userToken,
   }) : super(key: key);
 
   final String confirmCaptcha;
+  final String userToken;
 
   @override
   State<DeleteAccountScreen> createState() => _DeleteAccountScreenState();
@@ -70,8 +74,7 @@ class _DeleteAccountScreenState extends State<DeleteAccountScreen> {
   Future<void> _onTapDelete() async {
     try {
       _loadingNotifier.value = true;
-      final token = context.read<UserModel>().user?.cookie;
-      final success = await Services().api.deleteAccount(token ?? '');
+      final success = await Services().api.deleteAccount(widget.userToken);
       if (!success) throw S.of(context).somethingWrong;
       _loadingNotifier.value = false;
       await _showDialogDeleteAccountSuccess();
@@ -189,7 +192,12 @@ class _DeleteAccountScreenState extends State<DeleteAccountScreen> {
                         builder: (context, enable, child) {
                           return ElevatedButton(
                             onPressed: enable ? _onTapDelete : null,
-                            child: Text(S.current.delete),
+                            child: Text(
+                              S.current.delete.toUpperCase(),
+                              style: const TextStyle(
+                                color: Colors.white,
+                              ),
+                            ),
                           );
                         },
                       ),
diff --git a/lib/screens/users/forgot_password_screen.dart b/lib/screens/users/forgot_password_screen.dart
index 6204d4cd..a9b56192 100644
--- a/lib/screens/users/forgot_password_screen.dart
+++ b/lib/screens/users/forgot_password_screen.dart
@@ -100,6 +100,7 @@ class _ForgotPasswordState extends State<ForgotPasswordScreen> {
                     height: 20.0,
                   ),
                   TextField(
+                    autocorrect: false,
                     controller: forgotPasswordController,
                     keyboardType: TextInputType.emailAddress,
                     decoration: InputDecoration(
diff --git a/lib/screens/users/login_screen.dart b/lib/screens/users/login_screen.dart
index 66437827..f590b285 100644
--- a/lib/screens/users/login_screen.dart
+++ b/lib/screens/users/login_screen.dart
@@ -1,3 +1,5 @@
+import 'dart:async';
+
 import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
@@ -9,6 +11,7 @@ import '../../app.dart';
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart';
 import '../../modules/sms_login/sms_login.dart';
@@ -85,7 +88,7 @@ class _LoginPageState extends BaseScreen<LoginScreen>
     }
     try {
       isAvailableApple =
-          (await TheAppleSignIn.isAvailable()) || Config().isBuilder;
+          (await TheAppleSignIn.isAvailable()) || ServerConfig().isBuilder;
       setState(() {});
     } catch (e) {
       printLog('[Login] afterFirstLayout error');
@@ -137,8 +140,6 @@ class _LoginPageState extends BaseScreen<LoginScreen>
   }
 
   void _failMessage(String message) {
-    /// Showing Error messageSnackBarDemo
-    /// Ability so close message
     if (message.isEmpty) return;
 
     var messageText = message;
@@ -146,20 +147,10 @@ class _LoginPageState extends BaseScreen<LoginScreen>
       messageText = S.of(context).UserNameInCorrect;
     }
 
-    final snackBar = SnackBar(
-      content: Text(S.of(context).warning(messageText)),
-      duration: const Duration(seconds: 30),
-      action: SnackBarAction(
-        label: S.of(context).close,
-        onPressed: () {
-          // Some code to undo the change.
-        },
-      ),
+    FlashHelper.errorMessage(
+      context,
+      message: S.of(context).warning(messageText),
     );
-
-    ScaffoldMessenger.of(context)
-      ..removeCurrentSnackBar()
-      ..showSnackBar(snackBar);
   }
 
   void _loginFacebook(context) async {
@@ -201,7 +192,7 @@ class _LoginPageState extends BaseScreen<LoginScreen>
     final screenSize = MediaQuery.of(context).size;
     final themeConfig = appModel.themeConfig;
 
-    var forgetPasswordUrl = Config().forgetPassword;
+    var forgetPasswordUrl = ServerConfig().forgetPassword;
 
     Future launchForgetPassworddWebView(String url) async {
       await Navigator.push(
@@ -229,8 +220,9 @@ class _LoginPageState extends BaseScreen<LoginScreen>
 
     void _login(context) async {
       if (username.text.isEmpty || password.text.isEmpty) {
-        Tools.showSnackBar(
-            ScaffoldMessenger.of(context), S.of(context).pleaseInput);
+        unawaited(
+          FlashHelper.errorMessage(context, message: S.of(context).pleaseInput),
+        );
       } else {
         await _playAnimation();
         await widget.login(
@@ -260,7 +252,7 @@ class _LoginPageState extends BaseScreen<LoginScreen>
         'vendorAdmin',
         'woo',
         'wordpress'
-      ].contains(serverConfig['type']);
+      ].contains(ServerConfig().typeName);
       if (supportedPlatforms && (kAdvanceConfig.enableNewSMSLogin)) {
         final model = Provider.of<UserModel>(context, listen: false);
         Navigator.of(context).push(
@@ -310,216 +302,232 @@ class _LoginPageState extends BaseScreen<LoginScreen>
       body: SafeArea(
         child: AutoHideKeyboard(
           child: Center(
-            child: Stack(
-              children: [
-                Consumer<UserModel>(builder: (context, model, child) {
-                  return SingleChildScrollView(
-                    padding: const EdgeInsets.symmetric(horizontal: 30.0),
-                    child: Container(
-                      alignment: Alignment.center,
-                      width: screenSize.width /
-                          (2 / (screenSize.height / screenSize.width)),
-                      constraints: const BoxConstraints(maxWidth: 700),
-                      child: AutofillGroup(
-                        child: Column(
-                          children: <Widget>[
-                            const SizedBox(height: 40.0),
-                            SizedBox(
-                              height: 40.0,
-                              child: FluxImage(
-                                imageUrl: themeConfig.logo,
-                              ),
-                            ),
-                            const SizedBox(height: 80.0),
-                            CustomTextField(
-                              key: const Key('loginEmailField'),
-                              controller: username,
-                              autofillHints: const [AutofillHints.email],
-                              showCancelIcon: true,
-                              autocorrect: false,
-                              enableSuggestions: false,
-                              textInputAction: TextInputAction.next,
-                              keyboardType: TextInputType.emailAddress,
-                              nextNode: passwordNode,
-                              decoration: InputDecoration(
-                                labelText: S.of(parentContext).username,
-                                hintText: S
-                                    .of(parentContext)
-                                    .enterYourEmailOrUsername,
+            child: Consumer<UserModel>(builder: (context, model, child) {
+              return Container(
+                padding: const EdgeInsets.symmetric(horizontal: 24.0),
+                alignment: Alignment.center,
+                width: screenSize.width /
+                    (2 / (screenSize.height / screenSize.width)),
+                constraints: const BoxConstraints(maxWidth: 700),
+                child: AutofillGroup(
+                  child: Column(
+                    children: <Widget>[
+                      Expanded(
+                        flex: 1,
+                        child: FluxImage(
+                          imageUrl: themeConfig.logo,
+                          width: MediaQuery.of(context).size.width * 0.6,
+                          fit: BoxFit.contain,
+                        ),
+                      ),
+                      Expanded(
+                        flex: 3,
+                        child: SingleChildScrollView(
+                          physics: const NeverScrollableScrollPhysics(),
+                          child: Column(
+                            mainAxisSize: MainAxisSize.min,
+                            children: [
+                              const SizedBox(height: 20.0),
+                              CustomTextField(
+                                key: const Key('loginEmailField'),
+                                controller: username,
+                                autofillHints: const [AutofillHints.email],
+                                showCancelIcon: true,
+                                autocorrect: false,
+                                enableSuggestions: false,
+                                textInputAction: TextInputAction.next,
+                                keyboardType: TextInputType.emailAddress,
+                                nextNode: passwordNode,
+                                decoration: InputDecoration(
+                                  labelText: S.of(parentContext).username,
+                                  hintText: S
+                                      .of(parentContext)
+                                      .enterYourEmailOrUsername,
+                                ),
                               ),
-                            ),
-                            CustomTextField(
-                              key: const Key('loginPasswordField'),
-                              autofillHints: const [AutofillHints.password],
-                              obscureText: true,
-                              showEyeIcon: true,
-                              textInputAction: TextInputAction.done,
-                              controller: password,
-                              focusNode: passwordNode,
-                              decoration: InputDecoration(
-                                labelText: S.of(parentContext).password,
-                                hintText: S.of(parentContext).enterYourPassword,
+                              CustomTextField(
+                                key: const Key('loginPasswordField'),
+                                autofillHints: const [AutofillHints.password],
+                                obscureText: true,
+                                showEyeIcon: true,
+                                textInputAction: TextInputAction.done,
+                                controller: password,
+                                focusNode: passwordNode,
+                                decoration: InputDecoration(
+                                  labelText: S.of(parentContext).password,
+                                  hintText:
+                                      S.of(parentContext).enterYourPassword,
+                                ),
                               ),
-                            ),
-                            if (kLoginSetting.isResetPasswordSupported)
-                              Padding(
-                                padding:
-                                    const EdgeInsets.symmetric(vertical: 12.0),
-                                child: GestureDetector(
-                                  onTap: () {
-                                    launchForgetPasswordURL(forgetPasswordUrl);
-                                  },
-                                  behavior: HitTestBehavior.opaque,
-                                  child: Padding(
-                                    padding: const EdgeInsets.all(12.0),
-                                    child: Text(
-                                      S.of(context).resetPassword,
-                                      style: TextStyle(
-                                        color: Theme.of(context).primaryColor,
-                                        decoration: TextDecoration.underline,
+                              if (kLoginSetting.isResetPasswordSupported)
+                                Padding(
+                                  padding: const EdgeInsets.symmetric(
+                                      vertical: 12.0),
+                                  child: GestureDetector(
+                                    onTap: () {
+                                      launchForgetPasswordURL(
+                                          forgetPasswordUrl);
+                                    },
+                                    behavior: HitTestBehavior.opaque,
+                                    child: Padding(
+                                      padding: const EdgeInsets.all(12.0),
+                                      child: Text(
+                                        S.of(context).resetPassword,
+                                        style: TextStyle(
+                                          color: Theme.of(context).primaryColor,
+                                          decoration: TextDecoration.underline,
+                                        ),
                                       ),
                                     ),
                                   ),
                                 ),
+                              if (!kLoginSetting.isResetPasswordSupported)
+                                const SizedBox(height: 50.0),
+                              StaggerAnimation(
+                                key: const Key('loginSubmitButton'),
+                                titleButton: S.of(context).signInWithEmail,
+                                buttonController: _loginButtonController.view
+                                    as AnimationController,
+                                onTap: () {
+                                  if (!isLoading) {
+                                    _login(context);
+                                  }
+                                },
                               ),
-                            if (!kLoginSetting.isResetPasswordSupported)
-                              const SizedBox(height: 50.0),
-                            StaggerAnimation(
-                              key: const Key('loginSubmitButton'),
-                              titleButton: S.of(context).signInWithEmail,
-                              buttonController: _loginButtonController.view
-                                  as AnimationController,
-                              onTap: () {
-                                if (!isLoading) {
-                                  _login(context);
-                                }
-                              },
-                            ),
-                            Stack(
-                              alignment: AlignmentDirectional.center,
-                              children: <Widget>[
-                                SizedBox(
-                                    height: 50.0,
-                                    width: 200.0,
-                                    child:
-                                        Divider(color: Colors.grey.shade300)),
-                                Container(
-                                    height: 30,
-                                    width: 40,
-                                    color: Theme.of(context).backgroundColor),
-                                if (kLoginSetting.showFacebook ||
-                                    kLoginSetting.showSMSLogin ||
-                                    kLoginSetting.showGoogleLogin ||
-                                    kLoginSetting.showAppleLogin)
-                                  Text(
-                                    S.of(context).or,
-                                    style: TextStyle(
-                                        fontSize: 12,
-                                        color: Colors.grey.shade400),
-                                  )
-                              ],
-                            ),
-                            Row(
-                              mainAxisAlignment: MainAxisAlignment.spaceAround,
-                              children: <Widget>[
-                                if (kLoginSetting.showAppleLogin &&
-                                    isAvailableApple)
-                                  InkWell(
-                                    onTap: () => _loginApple(context),
-                                    child: Container(
-                                      padding: const EdgeInsets.all(12),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(40),
-                                        color: Colors.black87,
-                                      ),
-                                      child: Image.asset(
-                                        'assets/icons/logins/apple.png',
-                                        width: 26,
-                                        height: 26,
+                              Stack(
+                                alignment: AlignmentDirectional.center,
+                                children: <Widget>[
+                                  SizedBox(
+                                      height: 50.0,
+                                      width: 200.0,
+                                      child:
+                                          Divider(color: Colors.grey.shade300)),
+                                  Container(
+                                      height: 30,
+                                      width: 40,
+                                      color: Theme.of(context).backgroundColor),
+                                  if (kLoginSetting.showFacebook ||
+                                      kLoginSetting.showSMSLogin ||
+                                      kLoginSetting.showGoogleLogin ||
+                                      kLoginSetting.showAppleLogin)
+                                    Text(
+                                      S.of(context).or,
+                                      style: TextStyle(
+                                          fontSize: 12,
+                                          color: Colors.grey.shade400),
+                                    )
+                                ],
+                              ),
+                              Row(
+                                mainAxisAlignment:
+                                    MainAxisAlignment.spaceAround,
+                                children: <Widget>[
+                                  if (kLoginSetting.showAppleLogin &&
+                                      isAvailableApple)
+                                    InkWell(
+                                      onTap: () => _loginApple(context),
+                                      child: Container(
+                                        padding: const EdgeInsets.all(12),
+                                        decoration: BoxDecoration(
+                                          borderRadius:
+                                              BorderRadius.circular(40),
+                                          color: Colors.black87,
+                                        ),
+                                        child: Image.asset(
+                                          'assets/icons/logins/apple.png',
+                                          width: 26,
+                                          height: 26,
+                                        ),
                                       ),
                                     ),
-                                  ),
-                                if (kLoginSetting.showFacebook)
-                                  InkWell(
-                                    onTap: () => _loginFacebook(context),
-                                    child: Container(
-                                      padding: const EdgeInsets.all(8),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(40),
-                                        color: const Color(0xFF4267B2),
-                                      ),
-                                      child: const Icon(
-                                        Icons.facebook_rounded,
-                                        color: Colors.white,
-                                        size: 34.0,
+                                  if (kLoginSetting.showFacebook)
+                                    InkWell(
+                                      onTap: () => _loginFacebook(context),
+                                      child: Container(
+                                        padding: const EdgeInsets.all(8),
+                                        decoration: BoxDecoration(
+                                          borderRadius:
+                                              BorderRadius.circular(40),
+                                          color: const Color(0xFF4267B2),
+                                        ),
+                                        child: const Icon(
+                                          Icons.facebook_rounded,
+                                          color: Colors.white,
+                                          size: 34.0,
+                                        ),
                                       ),
                                     ),
-                                  ),
-                                if (kLoginSetting.showGoogleLogin)
-                                  InkWell(
-                                    onTap: () => _loginGoogle(context),
-                                    child: Container(
-                                      padding: const EdgeInsets.all(12),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(40),
-                                        color: Colors.grey.shade300,
-                                      ),
-                                      child: Image.asset(
-                                        'assets/icons/logins/google.png',
-                                        width: 28,
-                                        height: 28,
+                                  if (kLoginSetting.showGoogleLogin)
+                                    InkWell(
+                                      onTap: () => _loginGoogle(context),
+                                      child: Container(
+                                        padding: const EdgeInsets.all(12),
+                                        decoration: BoxDecoration(
+                                          borderRadius:
+                                              BorderRadius.circular(40),
+                                          color: Colors.grey.shade300,
+                                        ),
+                                        child: Image.asset(
+                                          'assets/icons/logins/google.png',
+                                          width: 28,
+                                          height: 28,
+                                        ),
                                       ),
                                     ),
-                                  ),
-                                if (kLoginSetting.showSMSLogin)
-                                  InkWell(
-                                    onTap: () => _loginSMS(context),
-                                    child: Container(
-                                      padding: const EdgeInsets.all(12),
-                                      decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(40),
-                                        color: Colors.lightBlue.shade50,
-                                      ),
-                                      child: Image.asset(
-                                        'assets/icons/logins/sms.png',
-                                        width: 28,
-                                        height: 28,
+                                  if (kLoginSetting.showSMSLogin)
+                                    InkWell(
+                                      onTap: () => _loginSMS(context),
+                                      child: Container(
+                                        padding: const EdgeInsets.all(12),
+                                        decoration: BoxDecoration(
+                                          borderRadius:
+                                              BorderRadius.circular(40),
+                                          color: Colors.lightBlue.shade50,
+                                        ),
+                                        child: Image.asset(
+                                          'assets/icons/logins/sms.png',
+                                          width: 28,
+                                          height: 28,
+                                        ),
                                       ),
                                     ),
-                                  ),
-                              ],
-                            ),
-                            const SizedBox(height: 30.0),
-                            Column(
-                              children: <Widget>[
-                                Row(
-                                  mainAxisAlignment: MainAxisAlignment.center,
-                                  children: <Widget>[
-                                    Text(S.of(context).dontHaveAccount),
-                                    GestureDetector(
-                                      onTap: () {
-                                        NavigateTools.navigateRegister(context);
-                                      },
-                                      child: Text(
-                                        ' ${S.of(context).signup}',
-                                        style: TextStyle(
-                                          fontWeight: FontWeight.bold,
-                                          color: Theme.of(context).primaryColor,
+                                ],
+                              ),
+                              const SizedBox(height: 30.0),
+                              Column(
+                                children: <Widget>[
+                                  Row(
+                                    mainAxisAlignment: MainAxisAlignment.center,
+                                    children: <Widget>[
+                                      Text(S.of(context).dontHaveAccount),
+                                      GestureDetector(
+                                        onTap: () {
+                                          NavigateTools.navigateRegister(
+                                              context);
+                                        },
+                                        child: Text(
+                                          ' ${S.of(context).signup}',
+                                          style: TextStyle(
+                                            fontWeight: FontWeight.bold,
+                                            color:
+                                                Theme.of(context).primaryColor,
+                                          ),
                                         ),
                                       ),
-                                    ),
-                                  ],
-                                ),
-                              ],
-                            ),
-                          ],
+                                    ],
+                                  ),
+                                ],
+                              ),
+                              const SizedBox(height: 30.0),
+                            ],
+                          ),
                         ),
                       ),
-                    ),
-                  );
-                }),
-              ],
-            ),
+                    ],
+                  ),
+                ),
+              );
+            }),
           ),
         ),
       ),
diff --git a/lib/screens/users/pin_code_widget.dart b/lib/screens/users/pin_code_widget.dart
new file mode 100644
index 00000000..e6188cf1
--- /dev/null
+++ b/lib/screens/users/pin_code_widget.dart
@@ -0,0 +1,142 @@
+import 'package:flutter/material.dart';
+
+import '../../common/tools.dart';
+
+class PinCodeWidget extends StatefulWidget {
+  final TextEditingController controller;
+  final int length;
+  final Function(String) onChanged;
+  final double borderRadius;
+  final String? code;
+
+  const PinCodeWidget({
+    Key? key,
+    required this.controller,
+    required this.length,
+    required this.onChanged,
+    this.borderRadius = 0.0,
+    this.code,
+  }) : super(key: key);
+
+  @override
+  State<PinCodeWidget> createState() => _PinCodeWidgetState();
+}
+
+class _PinCodeWidgetState extends State<PinCodeWidget> {
+  List<FocusNode> listFocusNode = [];
+  int currentIndex = 0;
+  List<TextEditingController> controllers = [];
+
+  @override
+  void initState() {
+    List.generate(widget.length, (index) {
+      listFocusNode.add(FocusNode());
+      controllers.add(TextEditingController());
+    });
+    super.initState();
+
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        widget.controller.addListener(_listener);
+        Future.microtask(() {
+          listFocusNode.first.requestFocus();
+        });
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    widget.controller.removeListener(_listener);
+    super.dispose();
+  }
+
+  String replaceCharAt(String oldString, int index, String newChar) {
+    return oldString.substring(0, index) +
+        newChar +
+        oldString.substring(index + 1);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    if (widget.code != null && widget.code!.trim().isNotEmpty) {
+      var index = 0;
+      for (var element in widget.code!.characters) {
+        controllers[index].text = element;
+        index++;
+      }
+    }
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: List.generate(widget.length, (index) {
+        return Flexible(
+          child: Container(
+            margin: const EdgeInsets.all(10.0),
+            padding: const EdgeInsets.only(left: 3.0, top: 7.0),
+            decoration: BoxDecoration(
+              border: Border.all(
+                  color: listFocusNode[index].hasFocus
+                      ? Theme.of(context).primaryColor
+                      : Theme.of(context).colorScheme.secondary),
+              borderRadius: BorderRadius.circular(widget.borderRadius),
+            ),
+            child: TextField(
+              controller: controllers[index],
+              textDirection: TextDirection.ltr,
+              focusNode: listFocusNode[index],
+              maxLength: 1,
+              keyboardType: TextInputType.number,
+              textAlign: TextAlign.center,
+              style: Theme.of(context).textTheme.headline5,
+              onTap: () {
+                currentIndex = index;
+                controllers[index].selectAll();
+                setState(() {});
+              },
+              onSubmitted: (value) {
+                if (widget.controller.text.length == widget.length) {
+                  widget.onChanged(widget.controller.text);
+                }
+              },
+              onChanged: (value) {
+                if (value.isEmpty) {
+                  return;
+                }
+                if (index < widget.controller.text.length) {
+                  widget.controller.text =
+                      replaceCharAt(widget.controller.text, index, value);
+                } else {
+                  widget.controller.text += value;
+                }
+
+                listFocusNode[index].unfocus();
+                if ((index + 1) < widget.length) {
+                  currentIndex++;
+                  listFocusNode[index + 1].requestFocus();
+                  controllers[index + 1].selectAll();
+                  setState(() {});
+                }
+              },
+              decoration: const InputDecoration(
+                counter: SizedBox(),
+                border: InputBorder.none,
+                contentPadding: EdgeInsets.all(1),
+              ),
+            ),
+          ),
+        );
+      }),
+    );
+  }
+
+  void _listener() {
+    if (mounted) {
+      Tools.hideKeyboard(context);
+    }
+
+    if (widget.controller.text.length == widget.length &&
+        currentIndex == widget.length - 1) {
+      widget.onChanged(widget.controller.text);
+    }
+  }
+}
diff --git a/lib/screens/users/registration_screen.dart b/lib/screens/users/registration_screen.dart
index ea43ef5f..426f5f30 100644
--- a/lib/screens/users/registration_screen.dart
+++ b/lib/screens/users/registration_screen.dart
@@ -6,10 +6,13 @@ import 'package:provider/provider.dart';
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart'
     show AppModel, CartModel, PointModel, User, UserModel;
 import '../../modules/vendor_on_boarding/screen_index.dart';
+import '../../routes/flux_navigate.dart';
+import '../../services/service_config.dart';
 import '../../services/services.dart';
 import '../../widgets/common/custom_text_field.dart';
 import '../../widgets/common/flux_image.dart';
@@ -50,8 +53,7 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
 
     /// Show VendorOnBoarding.
     if (kVendorConfig['VendorRegister'] == true &&
-        Provider.of<AppModel>(context, listen: false).vendorType ==
-            VendorType.multi &&
+        Provider.of<AppModel>(context, listen: false).isMultivendor &&
         user.isVender) {
       Navigator.of(context).pushReplacement(
         MaterialPageRoute(
@@ -60,7 +62,10 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
             onFinish: () {
               model.getUser();
               var email = user.email;
-              _snackBar('${S.of(ctx).welcome} $email!');
+              _showMessage(
+                '${S.of(ctx).welcome} $email!',
+                isError: false,
+              );
               var routeFound = false;
               var routeNames = [RouteList.dashboard, RouteList.productDetail];
               Navigator.popUntil(ctx, (route) {
@@ -82,7 +87,10 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
     }
 
     var email = user.email;
-    _snackBar('${S.of(context).welcome} $email!');
+    _showMessage(
+      '${S.of(context).welcome} $email!',
+      isError: false,
+    );
     if (Services().widget.isRequiredLogin) {
       Navigator.of(context).pushReplacementNamed(RouteList.dashboard);
       return;
@@ -113,21 +121,17 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
     super.dispose();
   }
 
-  void _snackBar(String text) {
-    if (mounted) {
-      final snackBar = SnackBar(
-        content: Text(text),
-        duration: const Duration(seconds: 10),
-        action: SnackBarAction(
-          label: S.of(context).close,
-          onPressed: () {
-            // Some code to undo the change.
-          },
-        ),
-      );
-
-      _scaffoldMessengerKey.currentState?.showSnackBar(snackBar);
+  void _showMessage(
+    String text, {
+    bool isError = true,
+  }) {
+    if (!mounted) {
+      return;
     }
+    FlashHelper.errorMessage(
+      context,
+      message: text,
+    );
   }
 
   Future<void> _submitRegister({
@@ -145,17 +149,17 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
         (showPhoneNumberWhenRegister &&
             requirePhoneNumberWhenRegister &&
             phoneNumber == null)) {
-      _snackBar(S.of(context).pleaseInputFillAllFields);
+      _showMessage(S.of(context).pleaseInputFillAllFields);
     } else if (isChecked == false) {
-      _snackBar(S.of(context).pleaseAgreeTerms);
+      _showMessage(S.of(context).pleaseAgreeTerms);
     } else {
       if (!emailAddress.validateEmail()) {
-        _snackBar(S.of(context).errorEmailFormat);
+        _showMessage(S.of(context).errorEmailFormat);
         return;
       }
 
       if (password.length < 8) {
-        _snackBar(S.of(context).errorPasswordFormat);
+        _showMessage(S.of(context).errorPasswordFormat);
         return;
       }
 
@@ -166,7 +170,7 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
         lastName: lastName,
         phoneNumber: phoneNumber,
         success: _welcomeDiaLog,
-        fail: _snackBar,
+        fail: _showMessage,
         isVendor: isVendor,
       );
     }
@@ -286,8 +290,8 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
                             ),
                             const SizedBox(height: 20.0),
                             if (kVendorConfig['VendorRegister'] == true &&
-                                (appModel.vendorType == VendorType.multi ||
-                                    serverConfig['type'] == 'listeo'))
+                                (appModel.isMultivendor ||
+                                    ServerConfig().isListeoType))
                               Row(
                                 children: <Widget>[
                                   Checkbox(
@@ -329,12 +333,14 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
                                         color: Theme.of(context).primaryColor,
                                         decoration: TextDecoration.underline),
                                     recognizer: TapGestureRecognizer()
-                                      ..onTap = () => Navigator.push(
-                                            context,
+                                      ..onTap = () => FluxNavigate.push(
                                             MaterialPageRoute(
                                               builder: (context) =>
-                                                  const PrivacyTermScreen(),
+                                                  const PrivacyTermScreen(
+                                                showAgreeButton: false,
+                                              ),
                                             ),
+                                            forceRootNavigator: true,
                                           ),
                                   ),
                                 ],
diff --git a/lib/screens/users/user_point_screen.dart b/lib/screens/users/user_point_screen.dart
index 6e24ea88..60ba9efb 100644
--- a/lib/screens/users/user_point_screen.dart
+++ b/lib/screens/users/user_point_screen.dart
@@ -8,7 +8,7 @@ import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart' show UserModel, UserPoints;
-import '../../services/index.dart' show Config;
+import '../../services/index.dart' show ServerConfig;
 
 class UserPointScreen extends StatefulWidget {
   @override
@@ -23,7 +23,7 @@ class _StateUserPoint extends State<UserPointScreen> {
   Future<UserPoints> getUserPoint() async {
     final userModel = Provider.of<UserModel>(context, listen: false);
     final points = await httpGet(
-        '${Config().url}/wp-json/api/flutter_user/get_points/?insecure=cool&user_id=${userModel.user!.id}'
+        '${ServerConfig().url}/wp-json/api/flutter_user/get_points/?insecure=cool&user_id=${userModel.user!.id}'
             .toUri()!);
     return UserPoints.fromJson(json.decode(points.body));
   }
diff --git a/lib/screens/wishlist/empty_wishlist.dart b/lib/screens/wishlist/empty_wishlist.dart
index c512405a..299169fc 100644
--- a/lib/screens/wishlist/empty_wishlist.dart
+++ b/lib/screens/wishlist/empty_wishlist.dart
@@ -94,7 +94,7 @@ class WishlistItem extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     final localTheme = Theme.of(context);
-    final currency = Provider.of<CartModel>(context).currency;
+    final currency = Provider.of<CartModel>(context).currencyCode;
     final currencyRate = Provider.of<AppModel>(context).currencyRate;
 
     return LayoutBuilder(
@@ -152,7 +152,7 @@ class WishlistItem extends StatelessWidget {
                                   if (Services()
                                           .widget
                                           .enableShoppingCart(product) &&
-                                      !Config().isListingType)
+                                      !ServerConfig().isListingType)
                                     ElevatedButton(
                                       style: ElevatedButton.styleFrom(
                                         onPrimary: Colors.white,
diff --git a/lib/services/base_services.dart b/lib/services/base_services.dart
index 273ef2cc..722a89f0 100644
--- a/lib/services/base_services.dart
+++ b/lib/services/base_services.dart
@@ -13,6 +13,7 @@ import '../models/entities/prediction.dart';
 import '../models/entities/vacation_settings.dart';
 import '../models/index.dart';
 import '../modules/dynamic_layout/config/app_config.dart';
+import 'service_config.dart';
 import 'wordpress/blognews_api.dart';
 
 export '../models/entities/paging_response.dart';
@@ -252,6 +253,10 @@ abstract class BaseServices {
 
   Future<Map<String, Tag>>? getTags({String? lang}) => null;
 
+  Future<Tag>? getTagById({required String tagId}) => null;
+
+  Future<Tag?> getTagBySlug(String slug) async => null;
+
   Future? getCountries() => null;
 
   Future? getStatesByCountryId(countryId) => null;
@@ -373,7 +378,7 @@ abstract class BaseServices {
 
   Future<PagingResponse<Blog>>? getBlogs(dynamic cursor) async {
     try {
-      final param = '_embed&page=$cursor';
+      final param = '_embed&page=${cursor ?? 1}';
       final response =
           await httpGet('${blogApi.url}/wp-json/wp/v2/posts?$param'.toUri()!);
       if (response.statusCode != 200) {
@@ -382,7 +387,7 @@ abstract class BaseServices {
       List data = jsonDecode(response.body);
       return PagingResponse(
           data: data.map((e) {
-        return Blog.fromJson(e);
+        return Blog.fromWooJson(e);
       }).toList());
     } on Exception catch (_) {
       return const PagingResponse();
@@ -418,7 +423,7 @@ abstract class BaseServices {
           '${kRazorpayConfig['keyId']}:${kRazorpayConfig['keySecret']}'));
 
       var body = {};
-      if (serverConfig['type'] == 'woo') {
+      if (ServerConfig().isWooType) {
         body = {
           'notes': {'woocommerce_order_id': orderId}
         };
@@ -620,7 +625,7 @@ abstract class BaseServices {
     try {
       var base64Str = EncodeUtils.encodeCookie(cookie);
       var endpoint =
-          '${serverConfig['url']}/wp-json/vendor-admin/vendor-orders?page=$page&per_page=$perPage&token=$base64Str&platform=${serverConfig['platform']}';
+          '$domain/wp-json/vendor-admin/vendor-orders?page=$page&per_page=$perPage&token=$base64Str&platform=${ServerConfig().platform}';
       if (status != null) {
         if (status.toLowerCase() == 'onhold') {
           status = 'on-hold';
@@ -741,6 +746,54 @@ abstract class BaseServices {
     }
   }
 
+  Future<String?> createPaymentIntentStripeV3({
+    required String orderId,
+    required String totalPrice,
+    String? currencyCode,
+    String? emailAddress,
+    String? name,
+  }) async {
+    try {
+      final urlReq = '${kStripeConfig["serverEndpoint"]}/payment-intent-v3';
+      final result = await httpPost(
+        urlReq.toUri()!,
+        body: jsonEncode(
+          {
+            'email': emailAddress,
+            'amount': totalPrice,
+            'currencyCode': currencyCode,
+            'returnUrl': kStripeConfig['returnUrl'],
+            'captureMethod': (kStripeConfig['enableManualCapture'] ?? false)
+                ? 'manual'
+                : 'automatic',
+            'request3dSecure': 'any',
+            'orderId': orderId,
+          },
+        ),
+        headers: {'content-type': 'application/json'},
+      );
+
+      var response = json.decode(result.body);
+      if (result.statusCode == 200) {
+        final body = response is List ? response[0] : response;
+        final success = body['success'];
+        if (success == true) {
+          return body['client_secret'];
+        }
+
+        if (response['message'] != null) {
+          throw Exception(response['message']);
+        }
+      }
+
+      throw Exception('Unknown error. Please try again.');
+    } catch (e, trace) {
+      printLog(e);
+      printLog(trace);
+      rethrow;
+    }
+  }
+
   Future<List<ProductItem>> getListProductItemByOrderId(String orderId) async {
     return const <ProductItem>[];
   }
@@ -754,6 +807,18 @@ abstract class BaseServices {
   }
 
   Future<bool> deleteAccount(String token) async {
-    return false;
+    /// If so fast, Apple will be suspect this action is ambiguous
+    /// And has no effect on the account.
+    /// So we need to wait for a while.
+    /// This is a workaround.
+    return Future.delayed(const Duration(seconds: 2), () => true);
+  }
+
+  Future<Brand?> getBrandById(brandId) async {
+    return null;
+  }
+
+  Future<Brand?> getBrandBySlug(String slug) async {
+    return null;
   }
 }
diff --git a/lib/services/notification/notification_service.dart b/lib/services/notification/notification_service.dart
index 3e2e8ed1..cd4db44c 100644
--- a/lib/services/notification/notification_service.dart
+++ b/lib/services/notification/notification_service.dart
@@ -1,11 +1,13 @@
 import 'package:flutter_local_notifications/flutter_local_notifications.dart';
 import 'package:notification_permissions/notification_permissions.dart';
+// import 'package:permission_handler/permission_handler.dart' as ph;
 
 import '../../common/constants.dart';
 import '../../models/entities/fstore_notification_item.dart';
 
 abstract class NotificationService {
   bool _isInitialized = false;
+
   bool get isInitialized => _isInitialized;
 
   void setIsInitialized() {
@@ -54,18 +56,23 @@ abstract class NotificationService {
     }
 
     /// Case unknown - First time open the app
-    final status = await NotificationPermissions.requestNotificationPermissions(
-      iosSettings: const NotificationSettingsIos(
-        sound: true,
-        badge: true,
-        alert: true,
-      ),
-    );
-    if (status == PermissionStatus.granted) {
-      return true;
-    } else {
-      return false;
-    }
+    var granted = (await NotificationPermissions.requestNotificationPermissions(
+          iosSettings: const NotificationSettingsIos(
+            sound: true,
+            badge: true,
+            alert: true,
+          ),
+        )) ==
+        PermissionStatus.granted;
+
+    /// To support POST_NOTIFICATION on Android 13.
+    /// Requires permission_handler 10+.
+    // if (isAndroid) {
+    //   granted = (await ph.Permission.notification.request()) ==
+    //       ph.PermissionStatus.granted;
+    // }
+
+    return granted;
   }
 
   Future<bool> isGranted() async {
@@ -83,6 +90,7 @@ abstract class NotificationService {
   void enableNotification();
 
   void setExternalId(String? userId);
+
   void removeExternalId();
 }
 
diff --git a/lib/services/paging/base_page_repository.dart b/lib/services/paging/base_page_repository.dart
index a0267444..57f47bbe 100644
--- a/lib/services/paging/base_page_repository.dart
+++ b/lib/services/paging/base_page_repository.dart
@@ -1,4 +1,4 @@
-import '../index.dart' show Config, ConfigType, Services;
+import '../index.dart' show ServerConfig, ConfigType, Services;
 
 abstract class BasePageRepository<T> {
   final service = Services();
@@ -25,7 +25,7 @@ abstract class BasePageRepository<T> {
   bool get cursorIsString => [
         ConfigType.shopify,
         ConfigType.notion,
-      ].contains(Config().type);
+      ].contains(ServerConfig().type);
 
   void initCursor() {
     if (!cursorIsString) {
diff --git a/lib/services/paging/paging_with_user_repository.dart b/lib/services/paging/paging_with_user_repository.dart
index b2dde587..e7889bf5 100644
--- a/lib/services/paging/paging_with_user_repository.dart
+++ b/lib/services/paging/paging_with_user_repository.dart
@@ -21,10 +21,11 @@ abstract class PagingWithUserRepository<T> extends BasePageRepository<T?> {
     final response = await requestApi(
       cursor: cursor,
       user: user,
-    )!;
+    );
 
-    // ignore: unnecessary_null_comparison
-    if (response == null) return <T>[];
+    if (response == null) {
+      return <T>[];
+    }
 
     final data = response.data;
 
diff --git a/lib/services/service_config.dart b/lib/services/service_config.dart
index a8729c39..b04bc3d8 100644
--- a/lib/services/service_config.dart
+++ b/lib/services/service_config.dart
@@ -26,24 +26,29 @@ enum ConfigType {
   bigCommerce
 }
 
-class Config {
-  ConfigType? type;
-  String? url;
+class ServerConfig {
+  late ConfigType type;
+  late String url;
   String? blog;
-  String? consumerKey;
-  String? consumerSecret;
+  late String consumerKey;
+  late String consumerSecret;
+  String? addListingUrl;
   String? forgetPassword;
   String? accessToken;
   bool? isCacheImage;
   bool isBuilder = false;
 
-  static final Config _instance = Config._internal();
+  /// Platform and Type are different
+  /// Platform can be woo, wcfm, dokan
+  late String platform;
 
-  factory Config() => _instance;
+  static final ServerConfig _instance = ServerConfig._internal();
 
-  String get typeName => (type == null ? 'woo' : type!.name);
+  factory ServerConfig() => _instance;
 
-  Config._internal();
+  ServerConfig._internal();
+
+  String get typeName => type.name;
 
   bool get isListingType {
     return [
@@ -82,11 +87,30 @@ class Config {
     return typeName == 'wordpress';
   }
 
+  bool get isListProType => typeName == 'listpro';
+
+  bool get isListeoType => typeName == 'listeo';
+
+  bool get isMyListingType => typeName == 'mylisting';
+
   /// Another framework use the UI of Wordpress blog
   bool get isUseWordPressBlog {
     return typeName != 'wordpress' && blog != null;
   }
 
+  bool get isPayPluginSupported {
+    return [
+      ConfigType.woo,
+      ConfigType.wcfm,
+      ConfigType.dokan,
+      ConfigType.presta,
+      ConfigType.opencart,
+      ConfigType.notion,
+      ConfigType.magento,
+      ConfigType.strapi,
+    ].contains(type);
+  }
+
   bool isVendorManagerType() {
     return ConfigType.vendorAdmin == type;
   }
@@ -101,17 +125,19 @@ class Config {
 
   void setConfig(config) {
     type = ConfigType.values.firstWhere(
-      (element) => element.name == config['type'],
+      (element) => element.name == config['type']?.toString().trim(),
       orElse: () => ConfigType.woo,
     );
-    url = config['url'];
+    url = config['url']?.toString().trim() ?? '';
     blog = config['blog'];
-    consumerKey = config['consumerKey'];
-    consumerSecret = config['consumerSecret'];
+    consumerKey = config['consumerKey'] ?? '';
+    consumerSecret = config['consumerSecret'] ?? '';
     forgetPassword = config['forgetPassword'];
     accessToken = config['accessToken'];
     isCacheImage = config['isCacheImage'];
     isBuilder = config['isBuilder'] ?? false;
+    platform = config['platform'] ?? 'wcfm';
+    addListingUrl = config['addListingUrl'];
   }
 }
 
@@ -163,7 +189,7 @@ mixin ConfigMixin {
   void configPOS(appConfig) {}
 
   void setAppConfig(appConfig) {
-    Config().setConfig(appConfig);
+    ServerConfig().setConfig(appConfig);
     CartInject().init(appConfig);
 
     printLog('[🌍appConfig] ${appConfig['type']} $appConfig');
@@ -261,15 +287,34 @@ mixin ConfigMixin {
       const SizedBox();
 
   Widget renderWalletPayPartialPayment() => const SizedBox();
+
   Widget renderCheckoutWalletInfo() => const SizedBox();
+
   Widget renderWalletPaymentMethodItem(PaymentMethod paymentMethod,
           Function(String? p1) onSelected, String? selectedId) =>
       const SizedBox();
+
   dynamic getWalletRoutesWithSettings(RouteSettings settings) => {};
+
   dynamic getWalletTransaction(String cookie) => null;
 
   dynamic getMembershipUltimateRoutesWithSettings(RouteSettings settings) => {};
+
   dynamic getPaidMembershipProRoutesWithSettings(RouteSettings settings) => {};
+
   dynamic getDigitsMobileLoginRoutesWithSettings(RouteSettings settings) => {};
+
   dynamic getPOSRoutesWithSettings(RouteSettings settings) => {};
 }
+
+extension ConfigMixinExt on String {
+  bool get isWoo => this == 'woo';
+
+  bool get isWcfm => this == 'wcfm';
+
+  bool get isDokan => this == 'dokan';
+
+  bool get isMultiVendor => ['wcfm', 'dokan'].contains(this);
+
+  bool get isPos => this == 'pos';
+}
diff --git a/lib/services/services.dart b/lib/services/services.dart
index 1024505d..6f784315 100644
--- a/lib/services/services.dart
+++ b/lib/services/services.dart
@@ -8,8 +8,9 @@ import '../modules/firebase/firebase_notification_service.dart';
 import '../modules/firebase/firebase_service.dart';
 import '../modules/onesignal/one_signal_notification_service.dart';
 import '../modules/tera_wallet/services/wallet_service_mixin.dart';
-// Enable Audio feature
-// import '../modules_ext/audio/services/audio_service_mixin.dart';
+import '../modules_ext/booking/services/booking_service_mixin.dart';
+import '../modules_ext/membership_ultimate/services/membership_ultimate_service_mixin.dart';
+import '../modules_ext/paid_membership_pro/services/paid_membership_service_mixin.dart';
 import 'advertisement/advertisement_service.dart';
 import 'notification/notification_service.dart';
 import 'notification/notification_service_impl.dart';
@@ -22,9 +23,10 @@ class Services
         ConfigMixin,
         WooMixin,
         WordPressMixin,
-        // Enable Audio feature
-        // FluxAudioHandlerMixin,
+        BookingServiceMixin,
         WalletServiceMixin,
+        PaidMembershipProServiceMixin,
+        MembershipUltimateServiceMixin,
         DigitsMobileLoginServiceMixin {
   static final Services _instance = Services._internal();
 
diff --git a/lib/widgets/asymmetric/asymmetric_columns.dart b/lib/widgets/asymmetric/asymmetric_columns.dart
index b9292c25..9bfd65ea 100644
--- a/lib/widgets/asymmetric/asymmetric_columns.dart
+++ b/lib/widgets/asymmetric/asymmetric_columns.dart
@@ -29,7 +29,7 @@ class ProductCard extends StatelessWidget {
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
     final addProductToCart = Provider.of<CartModel>(context).addProductToCart;
-    final currency = Provider.of<CartModel>(context).currency;
+    final currency = Provider.of<CartModel>(context).currencyCode;
     final currencyRates = Provider.of<CartModel>(context).currencyRates;
     final imageWidget = ImageTools.image(
         url: product!.imageFeature, isResize: true, fit: BoxFit.cover);
@@ -73,7 +73,7 @@ class ProductCard extends StatelessWidget {
               ),
             ],
           ),
-          if (!Config().isListingType &&
+          if (!ServerConfig().isListingType &&
               product!.canBeAddedToCartFromList() &&
               Services().widget.enableShoppingCart(product))
             Padding(
diff --git a/lib/widgets/asymmetric/asymmetric_view.dart b/lib/widgets/asymmetric/asymmetric_view.dart
index b2ef6f95..70951504 100644
--- a/lib/widgets/asymmetric/asymmetric_view.dart
+++ b/lib/widgets/asymmetric/asymmetric_view.dart
@@ -34,9 +34,10 @@ class _AsymmetricViewState extends State<AsymmetricView> {
   }
 
   List<Widget> _buildColumns(BuildContext context) {
-    if (widget.products == null || widget.products!.isEmpty) {
-      return const <Container>[];
-    }
+    final hasNoProduct = widget.products == null || widget.products!.isEmpty;
+    final products = hasNoProduct && (widget.isFetching ?? false)
+        ? [Product.empty('1'), Product.empty('2'), Product.empty('3')]
+        : widget.products;
 
     /// This will return a list of columns. It will oscillate between the two
     /// kinds of columns. Even cases of the index (0, 2, 4, etc) will be
@@ -46,7 +47,7 @@ class _AsymmetricViewState extends State<AsymmetricView> {
     /// some kinda awkward math so we use _evenCasesIndex and _oddCasesIndex as
     /// helpers for creating the index of the product list that will correspond
     /// to the index of the list of columns.
-    var listItemCount = _listItemCount(widget.products!.length);
+    var listItemCount = _listItemCount(products!.length);
     var productsList = List.generate(listItemCount, (int index) {
       var minWidth = math.min(widget.width!, 400);
       var width = .59 * minWidth;
@@ -55,15 +56,15 @@ class _AsymmetricViewState extends State<AsymmetricView> {
         /// Even cases
         var bottom = _evenCasesIndex(index);
         column = TwoProductCardColumn(
-            bottom: widget.products![bottom],
-            top: widget.products!.length - 1 >= bottom + 1
-                ? widget.products![bottom + 1]
+            bottom: products[bottom],
+            top: products.length - 1 >= bottom + 1
+                ? products[bottom + 1]
                 : null);
         width += 32.0;
       } else {
         /// Odd cases
         column = OneProductCardColumn(
-          product: widget.products![_oddCasesIndex(index)],
+          product: products[_oddCasesIndex(index)],
         );
       }
 
diff --git a/lib/widgets/backdrop/backdrop.dart b/lib/widgets/backdrop/backdrop.dart
index 22df7450..5bd8ddb0 100644
--- a/lib/widgets/backdrop/backdrop.dart
+++ b/lib/widgets/backdrop/backdrop.dart
@@ -13,15 +13,11 @@
 // limitations under the License.
 
 import 'package:flutter/material.dart';
-import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
-import '../../models/index.dart';
 import '../../modules/dynamic_layout/helper/helper.dart';
-import '../../modules/firebase/dynamic_link_service.dart';
 import '../../services/service_config.dart';
-import '../../services/services.dart';
 import 'backdrop_constants.dart';
 
 const Cubic _kAccelerateCurve = Cubic(0.548, 0.0, 0.757, 0.464);
@@ -150,6 +146,7 @@ class Backdrop extends StatefulWidget {
   final AnimationController controller;
   final bool showFilter;
   final bool isBlog;
+  final VoidCallback? onTapShareButton;
 
   /// This color is pick from the Horizontal Config on Home Screen
   /// use to override the Backdrop color
@@ -165,6 +162,7 @@ class Backdrop extends StatefulWidget {
     this.showFilter = true,
     this.isBlog = false,
     this.bgColor,
+    this.onTapShareButton,
   });
 
   @override
@@ -362,7 +360,7 @@ class _BackdropState extends State<Backdrop>
       backgroundColor: backgroundColor,
       elevation: 0.0,
       titleSpacing: 0.0,
-      bottom: Config().isListingType
+      bottom: ServerConfig().isListingType
           ? null
           : widget.appbarCategory != null
               ? PreferredSize(
@@ -411,25 +409,17 @@ class _BackdropState extends State<Backdrop>
       actions: <Widget>[
         /// Share product category by dynamic link
         if (firebaseDynamicLinkConfig['isEnabled'] &&
-            Config().isWooType &&
-            !Config().isListingType &&
+            ServerConfig().isWooType &&
+            !ServerConfig().isListingType &&
             !widget.isBlog)
           IconButton(
-              icon: Icon(
-                Icons.share,
-                size: 18.0,
-                color: labelColor,
-              ),
-              onPressed: () async {
-                var currentCateId =
-                    Provider.of<ProductModel>(context, listen: false)
-                        .categoryId;
-                var cateUrl = await DynamicLinkService()
-                    .generateProductCategoryUrl(currentCateId);
-                Services().firebase.shareDynamicLinkProduct(
-                      itemUrl: cateUrl,
-                    );
-              }),
+            icon: Icon(
+              Icons.share,
+              size: 18.0,
+              color: labelColor,
+            ),
+            onPressed: () => widget.onTapShareButton?.call(),
+          ),
         if (widget.showFilter)
           IconButton(
               icon: AnimatedIcon(
diff --git a/lib/widgets/backdrop/backdrop_menu.dart b/lib/widgets/backdrop/backdrop_menu.dart
index 0919008f..acfb5be1 100644
--- a/lib/widgets/backdrop/backdrop_menu.dart
+++ b/lib/widgets/backdrop/backdrop_menu.dart
@@ -40,6 +40,7 @@ class BackdropMenu extends StatefulWidget {
   final double? maxPrice;
   final FilterSortBy? sortBy;
   final bool showSort;
+  final bool showLayout;
 
   const BackdropMenu({
     Key? key,
@@ -56,6 +57,7 @@ class BackdropMenu extends StatefulWidget {
     this.maxPrice,
     this.sortBy,
     this.showSort = true,
+    this.showLayout = true,
   }) : super(key: key);
 
   @override
@@ -161,7 +163,9 @@ class _BackdropMenuState extends State<BackdropMenu> {
                         child: Image.asset(
                           item['image']!,
                           color: selectLayout == item['layout']
-                              ? (widget.isBlog ? Colors.white : Theme.of(context).primaryColor)
+                              ? (widget.isBlog
+                                  ? Colors.white
+                                  : Theme.of(context).primaryColor)
                               : Theme.of(context)
                                   .colorScheme
                                   .secondary
@@ -373,6 +377,8 @@ class _BackdropMenuState extends State<BackdropMenu> {
     return Services().widget.renderFilterSortBy(
       context,
       filterSortBy: _currentSortBy,
+      showDivider: widget.showLayout,
+      isBlog: widget.isBlog,
       onFilterChanged: (filterSortBy) {
         setState(() {
           _currentSortBy = filterSortBy;
@@ -408,7 +414,7 @@ class _BackdropMenuState extends State<BackdropMenu> {
                   ),
                   const SizedBox(width: 20),
                   Text(
-                    Config().isWordPress
+                    ServerConfig().isWordPress
                         ? context.select((BlogModel _) => _.categoryName) ??
                             S.of(context).blog
                         : S.of(context).products,
@@ -422,15 +428,15 @@ class _BackdropMenuState extends State<BackdropMenu> {
               ),
             ),
 
-          ...renderLayout(),
+          if (widget.showLayout) ...renderLayout(),
 
-          if ((!Config().isListingType) ^ (Config().type == ConfigType.shopify))
-            renderFilterSortBy(),
+          if ((!ServerConfig().isListingType)) renderFilterSortBy(),
 
-          if (Config().isListingType) BackDropListingMenu(onFilter: _onFilter),
+          if (ServerConfig().isListingType)
+            BackDropListingMenu(onFilter: _onFilter),
 
-          if (!Config().isListingType &&
-              Config().type != ConfigType.shopify &&
+          if (!ServerConfig().isListingType &&
+              ServerConfig().type != ConfigType.shopify &&
               widget.showPrice) ...[
             renderPriceSlider(),
             renderAttributes(),
@@ -453,7 +459,8 @@ class _BackdropMenuState extends State<BackdropMenu> {
             ),
 
           /// render Apply button
-          if (!Config().isListingType && kAdvanceConfig.enableProductBackdrop)
+          if (!ServerConfig().isListingType &&
+              kAdvanceConfig.enableProductBackdrop)
             Padding(
               padding: const EdgeInsets.only(
                 left: 15,
diff --git a/lib/widgets/blog/banner/blog_list_view.dart b/lib/widgets/blog/banner/blog_list_view.dart
index 71fb477d..ba447e65 100644
--- a/lib/widgets/blog/banner/blog_list_view.dart
+++ b/lib/widgets/blog/banner/blog_list_view.dart
@@ -39,7 +39,9 @@ class _StateBlogListView extends BaseScreen<BlogListView> {
 
   void onRefresh() async {
     var res = await Blog.getBlogs(
-        url: Config().blog ?? Config().url, categories: widget.id, page: 1);
+        url: ServerConfig().blog ?? ServerConfig().url,
+        categories: widget.id,
+        page: 1);
     if (res.isEmpty || res is! List) {
       setState(() {
         isEnd = true;
@@ -62,7 +64,9 @@ class _StateBlogListView extends BaseScreen<BlogListView> {
   void loadMore() async {
     if (isEnd) return;
     var res = await Blog.getBlogs(
-        url: Config().blog ?? Config().url, categories: widget.id, page: page);
+        url: ServerConfig().blog ?? ServerConfig().url,
+        categories: widget.id,
+        page: page);
     if (res.isEmpty || res is! List) {
       setState(() {
         isEnd = true;
diff --git a/lib/widgets/blog/blog_list_backdrop.dart b/lib/widgets/blog/blog_list_backdrop.dart
index 1d69d905..96d9c4ce 100644
--- a/lib/widgets/blog/blog_list_backdrop.dart
+++ b/lib/widgets/blog/blog_list_backdrop.dart
@@ -136,20 +136,20 @@ class _BlogListBackdropState extends State<BlogListBackdrop> {
     Widget typeList = const SizedBox();
 
     switch (widget.layout) {
-      case 'listTile':
+      case Layout.listTile:
         typeList = buildListView(
           blogs: blogsList,
           widthContent: widthContent,
         );
         break;
-      case 'pinterest':
+      case Layout.pinterest:
         typeList = buildStaggeredGridView(
           blogs: blogsList,
           widthContent: widthScreen,
         );
         break;
-      case 'card':
-      case 'columns':
+      case Layout.card:
+      case Layout.columns:
       default:
         typeList = buildGridView(
           childAspectRatio: childAspectRatio,
diff --git a/lib/widgets/blog/blog_share_button.dart b/lib/widgets/blog/blog_share_button.dart
index 70e00dfa..fd34c4dd 100644
--- a/lib/widgets/blog/blog_share_button.dart
+++ b/lib/widgets/blog/blog_share_button.dart
@@ -1,5 +1,9 @@
+import 'dart:async';
+
 import 'package:flutter/material.dart';
 
+import '../../common/tools/flash.dart';
+import '../../generated/l10n.dart';
 import '../../models/entities/blog.dart';
 import '../../services/services.dart';
 
@@ -12,6 +16,13 @@ class ShareButton extends StatelessWidget {
   Widget build(BuildContext context) {
     return GestureDetector(
       onTap: () {
+        unawaited(
+          FlashHelper.message(
+            context,
+            message: S.of(context).generatingLink,
+            duration: const Duration(seconds: 1),
+          ),
+        );
         Services().firebase.shareDynamicLinkProduct(itemUrl: blog.link);
       },
       child: Container(
diff --git a/lib/widgets/blog/detailed_blog_mixin.dart b/lib/widgets/blog/detailed_blog_mixin.dart
index 49159a7c..ed5eb859 100644
--- a/lib/widgets/blog/detailed_blog_mixin.dart
+++ b/lib/widgets/blog/detailed_blog_mixin.dart
@@ -79,24 +79,33 @@ mixin DetailedBlogMixin {
                       kBlogLayout.fullSizeImageType
                   ? Colors.white
                   : Theme.of(context).colorScheme.secondary),
+          customWidgetBuilder: (element) {
+            if (element.attributes['data-instgrm-permalink'] != null) {
+              return renderInstagram(
+                  Videos.getInstagramLink(
+                      element.attributes['data-instgrm-permalink']),
+                  context);
+            }
+            return null;
+          },
           // factoryBuilder: () => InstagramWidgetFactory(),
         );
 
         // support http://instagram.com/p/CTFQP8kq-8W
-        final instagramLink = Videos.getInstagramLink(blog.content);
-        if (instagramLink.isNotEmpty) {
-          return Column(
-            children: [
-              htmlWidget,
-              renderInstagram(instagramLink, context),
-            ],
-          );
-        }
+        // final instagramLink = Videos.getInstagramLink(blog.content);
+        // if (instagramLink.isNotEmpty) {
+        //   return Column(
+        //     children: [
+        //       htmlWidget,
+        //       renderInstagram(instagramLink, context),
+        //     ],
+        //   );
+        // }
         return htmlWidget;
       });
 
   Widget _renderHeartButton(Blog blog, BuildContext context) =>
-      (kBlogDetail['showHeart'] && Config().isWordPress)
+      (kBlogDetail['showHeart'] && ServerConfig().isWordPress)
           ? Container(
               margin: const EdgeInsets.all(8.0),
               padding: const EdgeInsets.all(8.0),
diff --git a/lib/widgets/common/animated_splash.dart b/lib/widgets/common/animated_splash.dart
index df84535d..079e6ecd 100644
--- a/lib/widgets/common/animated_splash.dart
+++ b/lib/widgets/common/animated_splash.dart
@@ -10,26 +10,44 @@ class AnimatedSplash extends StatelessWidget {
     required this.next,
     required this.imagePath,
     this.animationEffect = 'fade-in',
-    this.logoSize,
     this.duration = 1000,
+    this.backgroundColor = Colors.white,
+    this.boxFit = BoxFit.contain,
+    this.paddingTop = 0.0,
+    this.paddingBottom = 0.0,
+    this.paddingLeft = 0.0,
+    this.paddingRight = 0.0,
   }) : super(key: key);
 
   final Function? next;
   final String imagePath;
   final int duration;
   final String animationEffect;
-  final double? logoSize;
+  final Color backgroundColor;
+  final BoxFit boxFit;
+  final double paddingTop;
+  final double paddingBottom;
+  final double paddingLeft;
+  final double paddingRight;
 
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      backgroundColor: Colors.white,
-      body: _AnimatedSplashChild(
-        next: next,
-        imagePath: imagePath,
-        duration: duration,
-        animationEffect: animationEffect,
-        logoSize: logoSize,
+      backgroundColor: backgroundColor,
+      body: Padding(
+        padding: EdgeInsets.only(
+          top: paddingTop,
+          bottom: paddingBottom,
+          left: paddingLeft,
+          right: paddingRight,
+        ),
+        child: _AnimatedSplashChild(
+          next: next,
+          imagePath: imagePath,
+          duration: duration,
+          animationEffect: animationEffect,
+          boxFit: boxFit,
+        ),
       ),
     );
   }
@@ -40,14 +58,14 @@ class _AnimatedSplashChild extends StatefulWidget {
   final String imagePath;
   final int duration;
   final String animationEffect;
-  final double? logoSize;
+  final BoxFit boxFit;
 
   const _AnimatedSplashChild({
     required this.next,
     required this.imagePath,
     required this.animationEffect,
-    this.logoSize,
     this.duration = 1000,
+    this.boxFit = BoxFit.contain,
   });
 
   @override
@@ -95,17 +113,17 @@ class __AnimatedSplashStateChild extends BaseScreen<_AnimatedSplashChild>
     _animationController.dispose();
   }
 
-  Widget _buildAnimation() {
+  Widget _buildAnimation(Size size) {
     switch (widget.animationEffect) {
       case SplashScreenTypeConstants.fadeIn:
         {
           return FadeTransition(
             opacity: _animation,
-            child: Center(
-              child: SizedBox(
-                height: widget.logoSize,
-                child: FluxImage(imageUrl: widget.imagePath),
-              ),
+            child: FluxImage(
+              imageUrl: widget.imagePath,
+              fit: widget.boxFit,
+              height: size.height,
+              width: size.width,
             ),
           );
         }
@@ -113,36 +131,37 @@ class __AnimatedSplashStateChild extends BaseScreen<_AnimatedSplashChild>
         {
           return ScaleTransition(
             scale: _animation,
-            child: Center(
-              child: SizedBox(
-                height: widget.logoSize,
-                child: FluxImage(imageUrl: widget.imagePath),
-              ),
+            child: FluxImage(
+              imageUrl: widget.imagePath,
+              fit: widget.boxFit,
+              height: size.height,
+              width: size.width,
             ),
           );
         }
       case SplashScreenTypeConstants.zoomOut:
         {
           return ScaleTransition(
-              scale: Tween(begin: 1.5, end: 0.6).animate(CurvedAnimation(
-                  parent: _animationController, curve: Curves.easeInCirc)),
-              child: Center(
-                child: SizedBox(
-                  height: widget.logoSize,
-                  child: FluxImage(imageUrl: widget.imagePath),
-                ),
-              ));
+            scale: Tween(begin: 2.1, end: 1.0).animate(CurvedAnimation(
+                parent: _animationController, curve: Curves.easeInCirc)),
+            child: FluxImage(
+              imageUrl: widget.imagePath,
+              fit: widget.boxFit,
+              height: size.height,
+              width: size.width,
+            ),
+          );
         }
       case SplashScreenTypeConstants.topDown:
       default:
         {
           return SizeTransition(
             sizeFactor: _animation,
-            child: Center(
-              child: SizedBox(
-                height: widget.logoSize,
-                child: FluxImage(imageUrl: widget.imagePath),
-              ),
+            child: FluxImage(
+              imageUrl: widget.imagePath,
+              fit: widget.boxFit,
+              height: size.height,
+              width: size.width,
             ),
           );
         }
@@ -151,6 +170,7 @@ class __AnimatedSplashStateChild extends BaseScreen<_AnimatedSplashChild>
 
   @override
   Widget build(BuildContext context) {
-    return _buildAnimation();
+    final size = MediaQuery.of(context).size;
+    return _buildAnimation(size);
   }
 }
diff --git a/lib/widgets/common/common_setting_item.dart b/lib/widgets/common/common_setting_item.dart
index 838c999d..f0b9e4d4 100644
--- a/lib/widgets/common/common_setting_item.dart
+++ b/lib/widgets/common/common_setting_item.dart
@@ -1,21 +1,26 @@
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 
+import '../../common/theme/colors.dart';
+
 class CommonSettingItem extends StatelessWidget {
   final IconData leadingIcon;
   final String title;
   final IconData? actionIcon;
   final bool? isSwitchedOn;
   final Function onTap;
+  final bool isSensitive;
+
+  const CommonSettingItem({
+    Key? key,
+    required this.leadingIcon,
+    required this.title,
+    this.actionIcon,
+    this.isSwitchedOn,
+    required this.onTap,
+    this.isSensitive = false,
+  }) : super(key: key);
 
-  const CommonSettingItem(
-      {Key? key,
-      required this.leadingIcon,
-      required this.title,
-      this.actionIcon,
-      this.isSwitchedOn,
-      required this.onTap})
-      : super(key: key);
   @override
   Widget build(BuildContext context) {
     final size = MediaQuery.of(context).size;
@@ -34,12 +39,17 @@ class CommonSettingItem extends StatelessWidget {
             Icon(
               leadingIcon,
               size: 20,
-              color: Theme.of(context).colorScheme.secondary.withOpacity(0.5),
+              color: isSensitive
+                  ? kColorRed
+                  : Theme.of(context).colorScheme.secondary.withOpacity(0.5),
             ),
             const SizedBox(width: 20),
             Text(
               title,
-              style: Theme.of(context).primaryTextTheme.subtitle1,
+              style: Theme.of(context)
+                  .primaryTextTheme
+                  .subtitle1
+                  ?.copyWith(color: isSensitive ? kColorRed : null),
             ),
             const Expanded(
                 child: SizedBox(
@@ -50,12 +60,12 @@ class CommonSettingItem extends StatelessWidget {
               Icon(
                 actionIcon,
                 size: 15,
-                color: Theme.of(context).colorScheme.secondary.withOpacity(0.5),
+                color: isSensitive
+                    ? kColorRed
+                    : Theme.of(context).colorScheme.secondary.withOpacity(0.5),
               ),
             if (actionIcon == null && isSwitchedOn != null) ...[
-              const SizedBox(
-                width: 10.0,
-              ),
+              const SizedBox(width: 10.0),
               CupertinoSwitch(
                 value: isSwitchedOn!,
                 onChanged: (val) => onTap(),
diff --git a/lib/widgets/common/drag_handler.dart b/lib/widgets/common/drag_handler.dart
new file mode 100644
index 00000000..37215b0c
--- /dev/null
+++ b/lib/widgets/common/drag_handler.dart
@@ -0,0 +1,30 @@
+import 'package:flutter/material.dart';
+
+/// Use to place
+class DragHandler extends StatelessWidget {
+  const DragHandler({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return Positioned(
+      top: 0,
+      left: 0,
+      right: 0,
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          Container(
+            margin: const EdgeInsets.symmetric(vertical: 8.0),
+            alignment: Alignment.center,
+            width: 40.0,
+            height: 4.0,
+            decoration: BoxDecoration(
+              color: Theme.of(context).colorScheme.secondary,
+              borderRadius: BorderRadius.circular(16.0),
+            ),
+          )
+        ],
+      ),
+    );
+  }
+}
diff --git a/lib/widgets/common/edit_product_info_widget.dart b/lib/widgets/common/edit_product_info_widget.dart
index b25be9fe..e9400b48 100644
--- a/lib/widgets/common/edit_product_info_widget.dart
+++ b/lib/widgets/common/edit_product_info_widget.dart
@@ -1,6 +1,6 @@
 import 'package:flutter/material.dart';
 
-import '../../common/config.dart';
+import '../../services/service_config.dart';
 
 class EditProductInfoWidget extends StatelessWidget {
   final TextEditingController controller;
@@ -55,7 +55,7 @@ class EditProductInfoWidget extends StatelessWidget {
             autocorrect: false,
             style: TextStyle(
               color: enable!
-                  ? serverConfig['type'] == 'pos'
+                  ? ServerConfig().typeName.isPos
                       ? Theme.of(context).colorScheme.secondary
                       : Theme.of(context).iconTheme.color
                   : Colors.grey,
diff --git a/lib/widgets/common/flare_loading.dart b/lib/widgets/common/flare_loading.dart
index 49aabaae..88520ee6 100644
--- a/lib/widgets/common/flare_loading.dart
+++ b/lib/widgets/common/flare_loading.dart
@@ -110,11 +110,13 @@ class FlareLoadingState extends State<FlareLoading> with FlareController {
 
   void _finished() {
     if (!_isLoading) {
-      WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-        if (_isSuccessful) {
-          widget.onSuccess(_data);
-        } else {
-          widget.onError(_error, _stack);
+      WidgetsBinding.instance.endOfFrame.then((_) {
+        if (mounted) {
+          if (_isSuccessful) {
+            widget.onSuccess(_data);
+          } else {
+            widget.onError(_error, _stack);
+          }
         }
       });
     }
diff --git a/lib/widgets/common/flare_splash_screen.dart b/lib/widgets/common/flare_splash_screen.dart
index a3305ef9..93e3ce33 100644
--- a/lib/widgets/common/flare_splash_screen.dart
+++ b/lib/widgets/common/flare_splash_screen.dart
@@ -9,7 +9,6 @@ class SplashScreen extends StatelessWidget {
   final Function(dynamic error, dynamic stacktrace)? onError;
   final double? width;
   final double? height;
-  final Color? backgroundColor;
   final Alignment alignment;
   final Future<void> Function()? until;
   final String? loopAnimation;
@@ -17,7 +16,12 @@ class SplashScreen extends StatelessWidget {
   final String? startAnimation;
   final RouteTransitionsBuilder? transitionsBuilder;
   final bool? isLoading;
-  final BoxFit? fit;
+  final Color backgroundColor;
+  final BoxFit boxFit;
+  final double paddingTop;
+  final double paddingBottom;
+  final double paddingLeft;
+  final double paddingRight;
 
   factory SplashScreen.callback({
     required String name,
@@ -26,8 +30,6 @@ class SplashScreen extends StatelessWidget {
     Key? key,
     Future Function()? until,
     bool? isLoading,
-    BoxFit fit = BoxFit.contain,
-    Color? backgroundColor,
     String? loopAnimation,
     Alignment alignment = Alignment.center,
     double? width,
@@ -35,13 +37,17 @@ class SplashScreen extends StatelessWidget {
     String? endAnimation,
     RouteTransitionsBuilder? transitionsBuilder,
     String? startAnimation,
+    BoxFit boxFit = BoxFit.contain,
+    Color backgroundColor = Colors.white,
+    double paddingTop = 0.0,
+    double paddingBottom = 0.0,
+    double paddingLeft = 0.0,
+    double paddingRight = 0.0,
   }) {
     return SplashScreen(
       name,
       null,
       until: until,
-      fit: fit,
-      backgroundColor: backgroundColor,
       loopAnimation: loopAnimation,
       startAnimation: startAnimation,
       isLoading: isLoading,
@@ -52,6 +58,12 @@ class SplashScreen extends StatelessWidget {
       onSuccess: onSuccess,
       onError: onError,
       alignment: alignment,
+      backgroundColor: backgroundColor,
+      boxFit: boxFit,
+      paddingTop: paddingTop,
+      paddingBottom: paddingBottom,
+      paddingLeft: paddingLeft,
+      paddingRight: paddingRight,
     );
   }
 
@@ -60,7 +72,6 @@ class SplashScreen extends StatelessWidget {
     required Function next,
     Key? key,
     bool? isLoading,
-    Color? backgroundColor,
     Future Function()? until,
     String? loopAnimation,
     Alignment alignment = Alignment.center,
@@ -70,13 +81,17 @@ class SplashScreen extends StatelessWidget {
     String? endAnimation,
     RouteTransitionsBuilder? transitionsBuilder,
     String? startAnimation,
+    BoxFit boxFit = BoxFit.contain,
+    Color backgroundColor = Colors.white,
+    double paddingTop = 0.0,
+    double paddingBottom = 0.0,
+    double paddingLeft = 0.0,
+    double paddingRight = 0.0,
   }) {
     return SplashScreen(
       name,
       next,
-      fit: fit,
       until: until,
-      backgroundColor: backgroundColor,
       isLoading: isLoading,
       loopAnimation: loopAnimation,
       startAnimation: startAnimation,
@@ -87,6 +102,12 @@ class SplashScreen extends StatelessWidget {
       onSuccess: (_) {},
       onError: (_, __) {},
       alignment: alignment,
+      backgroundColor: backgroundColor,
+      boxFit: boxFit,
+      paddingTop: paddingTop,
+      paddingBottom: paddingBottom,
+      paddingLeft: paddingLeft,
+      paddingRight: paddingRight,
     );
   }
 
@@ -96,7 +117,6 @@ class SplashScreen extends StatelessWidget {
     this.loopAnimation,
     Key? key,
     this.isLoading,
-    this.backgroundColor,
     this.until,
     this.alignment = Alignment.center,
     this.width,
@@ -106,7 +126,12 @@ class SplashScreen extends StatelessWidget {
     this.startAnimation,
     this.onSuccess,
     this.onError,
-    this.fit,
+    this.backgroundColor = Colors.white,
+    this.boxFit = BoxFit.contain,
+    this.paddingTop = 0.0,
+    this.paddingBottom = 0.0,
+    this.paddingLeft = 0.0,
+    this.paddingRight = 0.0,
   })  : assert(!(isLoading != null && until != null),
             'isLoading and until are exclusive, pick one ;)'),
         assert(!(isLoading == null && until == null),
@@ -117,13 +142,19 @@ class SplashScreen extends StatelessWidget {
   Widget build(BuildContext context) {
     return Container(
       color: backgroundColor,
+      padding: EdgeInsets.only(
+        top: paddingTop,
+        bottom: paddingBottom,
+        left: paddingLeft,
+        right: paddingRight,
+      ),
       child: FlareLoading(
         endAnimation: endAnimation,
         startAnimation: startAnimation,
         loopAnimation: loopAnimation,
         width: width,
         height: height,
-        fit: fit!,
+        fit: boxFit,
         onSuccess: (data) {
           _goToNext(context, data);
         },
diff --git a/lib/widgets/common/lottie_splashscreen.dart b/lib/widgets/common/lottie_splashscreen.dart
index d21ad26e..5ef4e457 100644
--- a/lib/widgets/common/lottie_splashscreen.dart
+++ b/lib/widgets/common/lottie_splashscreen.dart
@@ -5,10 +5,23 @@ class LottieSplashScreen extends StatefulWidget {
   final String imageUrl;
   final int duration;
   final Function? onSuccess;
+  final Color backgroundColor;
+  final BoxFit boxFit;
+  final double paddingTop;
+  final double paddingBottom;
+  final double paddingLeft;
+  final double paddingRight;
+
   const LottieSplashScreen({
     required this.imageUrl,
     this.duration = 1000,
     this.onSuccess,
+    this.backgroundColor = Colors.white,
+    this.boxFit = BoxFit.contain,
+    this.paddingTop = 0.0,
+    this.paddingBottom = 0.0,
+    this.paddingLeft = 0.0,
+    this.paddingRight = 0.0,
   });
 
   @override
@@ -19,10 +32,12 @@ class _StateLottieSplashScreen extends State<LottieSplashScreen> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((_) {
-      Future.delayed(Duration(milliseconds: widget.duration), () {
-        widget.onSuccess?.call();
-      });
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        Future.delayed(Duration(milliseconds: widget.duration), () {
+          widget.onSuccess?.call();
+        });
+      }
     });
   }
 
@@ -31,7 +46,13 @@ class _StateLottieSplashScreen extends State<LottieSplashScreen> {
     return Container(
       width: MediaQuery.of(context).size.width,
       height: MediaQuery.of(context).size.height,
-      color: Colors.white,
+      color: widget.backgroundColor,
+      padding: EdgeInsets.only(
+        top: widget.paddingTop,
+        bottom: widget.paddingBottom,
+        left: widget.paddingLeft,
+        right: widget.paddingRight,
+      ),
       child: Center(
         child: widget.imageUrl.startsWith('http')
             ? Lottie.network(
@@ -39,9 +60,11 @@ class _StateLottieSplashScreen extends State<LottieSplashScreen> {
                 errorBuilder: (_, __, ___) {
                   return const SizedBox();
                 },
+                fit: widget.boxFit,
               )
             : Lottie.asset(
                 widget.imageUrl,
+                fit: widget.boxFit,
                 errorBuilder: (_, __, ___) {
                   return const SizedBox();
                 },
diff --git a/lib/widgets/common/paging_list.dart b/lib/widgets/common/paging_list.dart
index 187092c4..c7d4d467 100644
--- a/lib/widgets/common/paging_list.dart
+++ b/lib/widgets/common/paging_list.dart
@@ -37,14 +37,16 @@ class _PagingListState<M extends PagingDataProvider, T>
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((_) {
-      Provider.of<M>(context, listen: false).getData();
-      scrollController.addListener(() {
-        if (scrollController.position.extentBefore > 200 &&
-            scrollController.position.extentAfter < 500) {
-          model.getData();
-        }
-      });
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        Provider.of<M>(context, listen: false).getData();
+        scrollController.addListener(() {
+          if (scrollController.position.extentBefore > 200 &&
+              scrollController.position.extentAfter < 500) {
+            model.getData();
+          }
+        });
+      }
     });
   }
 
diff --git a/lib/widgets/common/rive_splashscreen.dart b/lib/widgets/common/rive_splashscreen.dart
index 112aa3fb..fbba5d53 100644
--- a/lib/widgets/common/rive_splashscreen.dart
+++ b/lib/widgets/common/rive_splashscreen.dart
@@ -9,6 +9,13 @@ class RiveSplashScreen extends StatefulWidget {
   final Color? color;
   final String animationName;
   final int duration;
+  final Color backgroundColor;
+  final BoxFit boxFit;
+  final double paddingTop;
+  final double paddingBottom;
+  final double paddingLeft;
+  final double paddingRight;
+
   const RiveSplashScreen({
     Key? key,
     required this.onSuccess,
@@ -16,7 +23,14 @@ class RiveSplashScreen extends StatefulWidget {
     required this.animationName,
     this.color,
     this.duration = 1000,
+    this.backgroundColor = Colors.white,
+    this.boxFit = BoxFit.contain,
+    this.paddingTop = 0.0,
+    this.paddingBottom = 0.0,
+    this.paddingLeft = 0.0,
+    this.paddingRight = 0.0,
   }) : super(key: key);
+
   @override
   State<RiveSplashScreen> createState() => _RiveSplashScreenState();
 }
@@ -24,31 +38,34 @@ class RiveSplashScreen extends StatefulWidget {
 class _RiveSplashScreenState extends State<RiveSplashScreen> {
   Artboard? _riveArtboard;
   RiveAnimationController? _controller;
+
   @override
   void initState() {
     super.initState();
 
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) async {
-      var data;
-      if (widget.imageUrl.startsWith('http')) {
-        var readBytes = await http.readBytes(Uri.parse(widget.imageUrl));
-        data = ByteData.sublistView(readBytes);
-      } else {
-        data = await rootBundle.load(widget.imageUrl);
-      }
-      final file = RiveFile.import(data);
-      final artboard = file.mainArtboard;
-      artboard
-          .addController(_controller = SimpleAnimation(widget.animationName));
-      setState(() {
-        _riveArtboard = artboard;
-      });
-      _controller?.isActiveChanged.addListener(() {
-        if (!(_controller?.isActive ?? true)) {
-          Future.delayed(Duration(milliseconds: widget.duration))
-              .then((value) => widget.onSuccess());
+    WidgetsBinding.instance.endOfFrame.then((_) async {
+      if (mounted) {
+        var data;
+        if (widget.imageUrl.startsWith('http')) {
+          var readBytes = await http.readBytes(Uri.parse(widget.imageUrl));
+          data = ByteData.sublistView(readBytes);
+        } else {
+          data = await rootBundle.load(widget.imageUrl);
         }
-      });
+        final file = RiveFile.import(data);
+        final artboard = file.mainArtboard;
+        artboard
+            .addController(_controller = SimpleAnimation(widget.animationName));
+        setState(() {
+          _riveArtboard = artboard;
+        });
+        _controller?.isActiveChanged.addListener(() {
+          if (!(_controller?.isActive ?? true)) {
+            Future.delayed(Duration(milliseconds: widget.duration))
+                .then((value) => widget.onSuccess());
+          }
+        });
+      }
     });
   }
 
@@ -63,11 +80,20 @@ class _RiveSplashScreenState extends State<RiveSplashScreen> {
     return Container(
       width: MediaQuery.of(context).size.width,
       height: MediaQuery.of(context).size.height,
-      color: Colors.white,
+      color: widget.backgroundColor,
+      padding: EdgeInsets.only(
+        top: widget.paddingTop,
+        bottom: widget.paddingBottom,
+        left: widget.paddingLeft,
+        right: widget.paddingRight,
+      ),
       child: Center(
         child: _riveArtboard == null
             ? const SizedBox()
-            : Rive(artboard: _riveArtboard!),
+            : Rive(
+                artboard: _riveArtboard!,
+                fit: widget.boxFit,
+              ),
       ),
     );
   }
diff --git a/lib/widgets/common/splash_screen.dart b/lib/widgets/common/splash_screen.dart
index 09f730fe..4fc0780f 100644
--- a/lib/widgets/common/splash_screen.dart
+++ b/lib/widgets/common/splash_screen.dart
@@ -2,6 +2,8 @@ import 'package:flutter/material.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
+import '../../common/tools.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../../screens/base_screen.dart';
 import 'animated_splash.dart';
 import 'flare_splash_screen.dart';
@@ -26,6 +28,20 @@ class SplashScreenIndex extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     if (kSplashScreen['enable'] ?? true) {
+      final boxFit = ImageTools.boxFit(
+        kSplashScreen['boxFit'],
+        defaultValue: BoxFit.contain,
+      );
+      final backgroundColor = HexColor(
+          kSplashScreen['backgroundColor'] ?? '#ffffff');
+      final paddingTop =
+          Helper.formatDouble(kSplashScreen['paddingTop']) ?? 0.0;
+      final paddingBottom =
+          Helper.formatDouble(kSplashScreen['paddingBottom']) ?? 0.0;
+      final paddingLeft =
+          Helper.formatDouble(kSplashScreen['paddingLeft']) ?? 0.0;
+      final paddingRight =
+          Helper.formatDouble(kSplashScreen['paddingRight']) ?? 0.0;
       switch (splashScreenType) {
         case SplashScreenTypeConstants.rive:
           var animationName = kSplashScreen['animationName'];
@@ -34,12 +50,23 @@ class SplashScreenIndex extends StatelessWidget {
             imageUrl: imageUrl,
             animationName: animationName,
             duration: duration,
+            backgroundColor: backgroundColor,
+            boxFit: boxFit,
+            paddingTop: paddingTop,
+            paddingBottom: paddingBottom,
+            paddingLeft: paddingLeft,
+            paddingRight: paddingRight,
           );
         case SplashScreenTypeConstants.flare:
           return SplashScreen.navigate(
             name: imageUrl,
             startAnimation: kSplashScreen['animationName'],
-            backgroundColor: Colors.white,
+            backgroundColor: backgroundColor,
+            boxFit: boxFit,
+            paddingTop: paddingTop,
+            paddingBottom: paddingBottom,
+            paddingLeft: paddingLeft,
+            paddingRight: paddingRight,
             next: actionDone,
             until: () => Future.delayed(Duration(milliseconds: duration)),
           );
@@ -48,6 +75,12 @@ class SplashScreenIndex extends StatelessWidget {
             imageUrl: imageUrl,
             onSuccess: actionDone,
             duration: duration,
+            backgroundColor: backgroundColor,
+            boxFit: boxFit,
+            paddingTop: paddingTop,
+            paddingBottom: paddingBottom,
+            paddingLeft: paddingLeft,
+            paddingRight: paddingRight,
           );
         case SplashScreenTypeConstants.fadeIn:
         case SplashScreenTypeConstants.topDown:
@@ -58,6 +91,12 @@ class SplashScreenIndex extends StatelessWidget {
             animationEffect: splashScreenType,
             next: actionDone,
             duration: duration,
+            backgroundColor: backgroundColor,
+            boxFit: boxFit,
+            paddingTop: paddingTop,
+            paddingBottom: paddingBottom,
+            paddingLeft: paddingLeft,
+            paddingRight: paddingRight,
           );
         case SplashScreenTypeConstants.static:
         default:
@@ -65,6 +104,12 @@ class SplashScreenIndex extends StatelessWidget {
             imagePath: imageUrl,
             onNextScreen: actionDone,
             duration: duration,
+            backgroundColor: backgroundColor,
+            boxFit: boxFit,
+            paddingTop: paddingTop,
+            paddingBottom: paddingBottom,
+            paddingLeft: paddingLeft,
+            paddingRight: paddingRight,
           );
       }
     } else {
@@ -77,6 +122,7 @@ class SplashScreenIndex extends StatelessWidget {
 
 class _EmptySplashScreen extends StatefulWidget {
   final Function? onNextScreen;
+
   const _EmptySplashScreen({Key? key, this.onNextScreen}) : super(key: key);
 
   @override
diff --git a/lib/widgets/common/static_splashscreen.dart b/lib/widgets/common/static_splashscreen.dart
index e98e069b..0ae8cd03 100644
--- a/lib/widgets/common/static_splashscreen.dart
+++ b/lib/widgets/common/static_splashscreen.dart
@@ -7,12 +7,24 @@ class StaticSplashScreen extends StatefulWidget {
   final String? imagePath;
   final Function? onNextScreen;
   final int duration;
+  final Color backgroundColor;
+  final BoxFit boxFit;
+  final double paddingTop;
+  final double paddingBottom;
+  final double paddingLeft;
+  final double paddingRight;
 
   const StaticSplashScreen({
     this.imagePath,
     key,
     this.onNextScreen,
     this.duration = 2500,
+    this.backgroundColor = Colors.white,
+    this.boxFit = BoxFit.contain,
+    this.paddingTop = 0.0,
+    this.paddingBottom = 0.0,
+    this.paddingLeft = 0.0,
+    this.paddingRight = 0.0,
   }) : super(key: key);
 
   @override
@@ -23,7 +35,7 @@ class _StaticSplashScreenState extends BaseScreen<StaticSplashScreen> {
   @override
   void afterFirstLayout(BuildContext context) {
     Future.delayed(Duration(milliseconds: widget.duration), () {
-      widget.onNextScreen!();
+      widget.onNextScreen?.call();
 //      Navigator.of(context).pushReplacement(
 //          MaterialPageRoute(builder: (context) => widget.onNextScreen));
     });
@@ -32,20 +44,33 @@ class _StaticSplashScreenState extends BaseScreen<StaticSplashScreen> {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      backgroundColor: Colors.white,
-      body: SizedBox(
-        height: double.infinity,
-        width: double.infinity,
-        child: widget.imagePath!.startsWith('http')
-            ? FluxImage(
-                imageUrl: widget.imagePath!,
-                fit: BoxFit.contain,
-              )
-            : Image.asset(
-                widget.imagePath!,
-                gaplessPlayback: true,
-                fit: BoxFit.contain,
-              ),
+      backgroundColor: widget.backgroundColor,
+      body: Container(
+        alignment: Alignment.center,
+        padding: EdgeInsets.only(
+          top: widget.paddingTop,
+          bottom: widget.paddingBottom,
+          left: widget.paddingLeft,
+          right: widget.paddingRight,
+        ),
+        child: LayoutBuilder(
+          builder: (context, constraints) {
+            return widget.imagePath!.startsWith('http')
+                ? FluxImage(
+                    imageUrl: widget.imagePath!,
+                    fit: widget.boxFit,
+                    height: constraints.maxHeight,
+                    width: constraints.maxWidth,
+                  )
+                : Image.asset(
+                    widget.imagePath!,
+                    gaplessPlayback: true,
+                    fit: widget.boxFit,
+                    height: constraints.maxHeight,
+                    width: constraints.maxWidth,
+                  );
+          },
+        ),
       ),
     );
   }
diff --git a/lib/widgets/common/webview_inapp.dart b/lib/widgets/common/webview_inapp.dart
index 20f903ce..727c8159 100644
--- a/lib/widgets/common/webview_inapp.dart
+++ b/lib/widgets/common/webview_inapp.dart
@@ -4,6 +4,7 @@ import 'package:flutter/gestures.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_inappwebview/flutter_inappwebview.dart';
 import 'package:inspireui/widgets/platform_error/platform_error.dart';
+import 'package:permission_handler/permission_handler.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
@@ -173,6 +174,16 @@ class _WebViewInAppState extends State<WebViewInApp> {
               resources: resources,
               action: PermissionRequestResponseAction.GRANT);
         },
+        androidOnGeolocationPermissionsShowPrompt:
+            (InAppWebViewController controller, String origin) async {
+          if (await Permission.locationWhenInUse.isDenied) {
+            await Permission.location.request();
+          } else if (await Permission.locationWhenInUse.isPermanentlyDenied) {
+            await openAppSettings();
+          }
+          return GeolocationPermissionShowPromptResponse(
+              origin: origin, allow: true, retain: true);
+        },
         onLoadError: (controller, url, code, message) {
           pullToRefreshController.endRefreshing();
         },
diff --git a/lib/widgets/general/general_banner_widget.dart b/lib/widgets/general/general_banner_widget.dart
new file mode 100644
index 00000000..d8cb0331
--- /dev/null
+++ b/lib/widgets/general/general_banner_widget.dart
@@ -0,0 +1,49 @@
+import 'package:flutter/material.dart';
+
+import '../../common/config/models/general_setting_item.dart';
+import '../../common/tools.dart';
+import '../common/index.dart';
+
+class GeneralBannerWidget extends StatelessWidget {
+  final GeneralSettingItem? item;
+  const GeneralBannerWidget({required this.item});
+
+  @override
+  Widget build(BuildContext context) {
+    var itemVal = item ?? GeneralSettingItem();
+    var banner = itemVal.banner;
+    var height = itemVal.bannerHeight.toDouble();
+    if (banner == null) {
+      return SizedBox(
+        height: height,
+      );
+    }
+    var tapConfig = {
+      'product': itemVal.product,
+      'category': itemVal.category,
+      'url': itemVal.webViewMode ? itemVal.webUrl : null,
+      'url_launch': itemVal.webViewMode ? null : itemVal.webUrl,
+      'blog': itemVal.blog,
+      'blog_category': itemVal.blogCategory,
+    };
+    tapConfig.removeWhere((key, value) => value == null);
+    return InkWell(
+      onTap: tapConfig.isNotEmpty
+          ? () => NavigateTools.onTapNavigateOptions(
+              config: tapConfig, context: context)
+          : null,
+      child: Container(
+        width: double.infinity,
+        height: height,
+        margin: EdgeInsets.only(
+          left: itemVal.padding.left,
+          right: itemVal.padding.right,
+        ),
+        child: FluxImage(
+          imageUrl: banner,
+          fit: BoxFit.fitWidth,
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/widgets/general/general_blog_category_widget.dart b/lib/widgets/general/general_blog_category_widget.dart
new file mode 100644
index 00000000..d015f613
--- /dev/null
+++ b/lib/widgets/general/general_blog_category_widget.dart
@@ -0,0 +1,36 @@
+import 'package:flutter/material.dart';
+
+import '../../common/config/models/general_setting_item.dart';
+import '../../common/tools.dart';
+import 'general_widget.dart';
+
+class GeneralBlogCategoryWidget extends StatelessWidget {
+  final bool useTile;
+  final Color? iconColor;
+  final TextStyle? textStyle;
+  final GeneralSettingItem? item;
+
+  const GeneralBlogCategoryWidget({
+    required this.item,
+    this.iconColor,
+    this.textStyle,
+    this.useTile = false,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return GeneralWidget(
+      item: item,
+      useTile: useTile,
+      iconColor: iconColor,
+      textStyle: textStyle,
+      onTap: () {
+        if (item?.blogCategory != null) {
+          NavigateTools.onTapNavigateOptions(context: context, config: {
+            'blog_category': item?.blogCategory,
+          });
+        }
+      },
+    );
+  }
+}
diff --git a/lib/widgets/general/general_blog_widget.dart b/lib/widgets/general/general_blog_widget.dart
new file mode 100644
index 00000000..3f256217
--- /dev/null
+++ b/lib/widgets/general/general_blog_widget.dart
@@ -0,0 +1,37 @@
+
+
+import 'package:flutter/material.dart';
+import '../../common/config/models/general_setting_item.dart';
+import '../../common/tools.dart';
+import 'general_widget.dart';
+
+class GeneralBlogWidget extends StatelessWidget {
+  final bool useTile;
+  final Color? iconColor;
+  final TextStyle? textStyle;
+  final GeneralSettingItem? item;
+
+  const GeneralBlogWidget({
+    required this.item,
+    this.iconColor,
+    this.textStyle,
+    this.useTile = false,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return GeneralWidget(
+      item: item,
+      useTile: useTile,
+      iconColor: iconColor,
+      textStyle: textStyle,
+      onTap: () {
+        if (item?.blog != null) {
+          NavigateTools.onTapNavigateOptions(context: context, config: {
+            'blog': item?.blog,
+          });
+        }
+      },
+    );
+  }
+}
\ No newline at end of file
diff --git a/lib/widgets/general/general_category_widget.dart b/lib/widgets/general/general_category_widget.dart
new file mode 100644
index 00000000..45ab0216
--- /dev/null
+++ b/lib/widgets/general/general_category_widget.dart
@@ -0,0 +1,36 @@
+import 'package:flutter/material.dart';
+
+import '../../common/config/models/general_setting_item.dart';
+import '../../common/tools.dart';
+import 'general_widget.dart';
+
+class GeneralCategoryWidget extends StatelessWidget {
+  final bool useTile;
+  final Color? iconColor;
+  final TextStyle? textStyle;
+  final GeneralSettingItem? item;
+
+  const GeneralCategoryWidget({
+    required this.item,
+    this.iconColor,
+    this.textStyle,
+    this.useTile = false,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return GeneralWidget(
+      item: item,
+      useTile: useTile,
+      iconColor: iconColor,
+      textStyle: textStyle,
+      onTap: () {
+        if (item?.category != null) {
+          NavigateTools.onTapNavigateOptions(context: context, config: {
+            'category': item?.category,
+          });
+        }
+      },
+    );
+  }
+}
diff --git a/lib/widgets/general/general_product_widget.dart b/lib/widgets/general/general_product_widget.dart
new file mode 100644
index 00000000..2b55c8a5
--- /dev/null
+++ b/lib/widgets/general/general_product_widget.dart
@@ -0,0 +1,37 @@
+
+
+import 'package:flutter/material.dart';
+import '../../common/config/models/general_setting_item.dart';
+import '../../common/tools.dart';
+import 'general_widget.dart';
+
+class GeneralProductWidget extends StatelessWidget {
+  final bool useTile;
+  final Color? iconColor;
+  final TextStyle? textStyle;
+  final GeneralSettingItem? item;
+
+  const GeneralProductWidget({
+    required this.item,
+    this.iconColor,
+    this.textStyle,
+    this.useTile = false,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return GeneralWidget(
+      item: item,
+      useTile: useTile,
+      iconColor: iconColor,
+      textStyle: textStyle,
+      onTap: () {
+        if (item?.product != null) {
+          NavigateTools.onTapNavigateOptions(context: context, config: {
+            'product': item?.product,
+          });
+        }
+      },
+    );
+  }
+}
\ No newline at end of file
diff --git a/lib/widgets/general/general_title_widget.dart b/lib/widgets/general/general_title_widget.dart
index ff4eb11b..5c293c47 100644
--- a/lib/widgets/general/general_title_widget.dart
+++ b/lib/widgets/general/general_title_widget.dart
@@ -15,7 +15,6 @@ class GeneralTitleWidget extends StatelessWidget {
     var fontSize = item?.fontSize ?? 16.0;
     var titleColor =
         item?.titleColor != null ? HexColor(item!.titleColor) : null;
-    var verticalPadding = item?.verticalPadding;
     var enableDivider = item?.enableDivider ?? false;
 
     return Column(
@@ -31,8 +30,8 @@ class GeneralTitleWidget extends StatelessWidget {
           padding: EdgeInsets.only(
               left: itemPadding,
               right: itemPadding,
-              top: verticalPadding?.dx ?? itemPadding,
-              bottom: verticalPadding?.dy ?? itemPadding),
+              top: item?.padding.top ?? itemPadding,
+              bottom: item?.padding.bottom ?? itemPadding),
           child: Text(
             title,
             style: Theme.of(context).textTheme.bodyText1!.copyWith(
diff --git a/lib/widgets/general/general_widget.dart b/lib/widgets/general/general_widget.dart
new file mode 100644
index 00000000..1f07fbd6
--- /dev/null
+++ b/lib/widgets/general/general_widget.dart
@@ -0,0 +1,75 @@
+import 'package:flutter/material.dart';
+import 'package:inspireui/icons/icon_picker.dart';
+
+import '../../common/config/models/general_setting_item.dart';
+import '../../common/constants.dart';
+import '../../generated/l10n.dart';
+
+class GeneralWidget extends StatelessWidget {
+  final bool useTile;
+  final Color? iconColor;
+  final TextStyle? textStyle;
+  final GeneralSettingItem? item;
+  final void Function()? onTap;
+
+  const GeneralWidget({
+    required this.item,
+    this.iconColor,
+    this.textStyle,
+    this.useTile = false,
+    this.onTap,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    var icon = Icons.error;
+    String title;
+    Widget trailing;
+    title = item?.title ?? S.of(context).dataEmpty;
+    trailing = const Icon(Icons.arrow_forward_ios, size: 18, color: kGrey600);
+    if (item != null) {
+      icon = iconPicker(item!.icon, item!.iconFontFamily) ?? Icons.error;
+    }
+    if (useTile) {
+      return ListTile(
+        leading: Icon(
+          icon,
+          color: iconColor,
+        ),
+        title: Text(
+          title,
+          style: textStyle,
+        ),
+        onTap: onTap,
+      );
+    }
+
+    return Column(
+      children: [
+        Card(
+          margin: const EdgeInsets.only(bottom: 2.0),
+          elevation: 0,
+          child: ListTile(
+            leading: Icon(
+              icon,
+              color: Theme.of(context).colorScheme.secondary,
+              size: 24,
+            ),
+            title: Text(
+              title,
+              style: const TextStyle(fontSize: 16),
+            ),
+            trailing: trailing,
+            onTap: onTap,
+          ),
+        ),
+        const Divider(
+          color: Colors.black12,
+          height: 1.0,
+          indent: 75,
+          //endIndent: 20,
+        ),
+      ],
+    );
+  }
+}
diff --git a/lib/widgets/general/index.dart b/lib/widgets/general/index.dart
index d160df5d..a434ccc6 100644
--- a/lib/widgets/general/index.dart
+++ b/lib/widgets/general/index.dart
@@ -1,4 +1,9 @@
+export 'general_banner_widget.dart';
+export 'general_blog_category_widget.dart';
+export 'general_blog_widget.dart';
 export 'general_button_widget.dart';
+export 'general_category_widget.dart';
 export 'general_post_widget.dart';
+export 'general_product_widget.dart';
 export 'general_title_widget.dart';
-export 'general_web_widget.dart';
+export 'general_web_widget.dart';
\ No newline at end of file
diff --git a/lib/widgets/home/preview_overlay.dart b/lib/widgets/home/preview_overlay.dart
index 7df5f8ba..a67161e3 100644
--- a/lib/widgets/home/preview_overlay.dart
+++ b/lib/widgets/home/preview_overlay.dart
@@ -20,7 +20,7 @@ class PreviewOverlay extends StatefulWidget {
 class _PreviewOverlayState extends State<PreviewOverlay> {
   @override
   Widget build(BuildContext context) {
-    if (!Config().isBuilder) {
+    if (!ServerConfig().isBuilder) {
       return widget.builder(widget.config);
     }
 
diff --git a/lib/widgets/home/preview_reload.dart b/lib/widgets/home/preview_reload.dart
index 1104d5b1..274de413 100644
--- a/lib/widgets/home/preview_reload.dart
+++ b/lib/widgets/home/preview_reload.dart
@@ -26,7 +26,7 @@ class _PreviewReloadState extends State<PreviewReload> {
 
   @override
   void initState() {
-    if (!Config().isBuilder) {
+    if (!ServerConfig().isBuilder) {
       return;
     }
 
@@ -51,7 +51,7 @@ class _PreviewReloadState extends State<PreviewReload> {
   @override
   Widget build(BuildContext context) {
     return widget.builder(
-      Config().isBuilder ? configs : widget.configs,
+      ServerConfig().isBuilder ? configs : widget.configs,
     );
   }
 }
diff --git a/lib/widgets/html/index.dart b/lib/widgets/html/index.dart
index d4930f59..5705d9f6 100644
--- a/lib/widgets/html/index.dart
+++ b/lib/widgets/html/index.dart
@@ -10,8 +10,11 @@ import 'package:fwfh_webview/fwfh_webview.dart';
 class HtmlWidget extends StatelessWidget {
   final String html;
   final TextStyle? textStyle;
+  final core.CustomWidgetBuilder? customWidgetBuilder;
 
-  const HtmlWidget(this.html, {Key? key, this.textStyle}) : super(key: key);
+  const HtmlWidget(this.html,
+      {Key? key, this.textStyle, this.customWidgetBuilder})
+      : super(key: key);
 
   @override
   Widget build(BuildContext context) {
@@ -27,6 +30,7 @@ class HtmlWidget extends StatelessWidget {
       htmlVal,
       textStyle: textStyleVal,
       factoryBuilder: MyWidgetFactory.new,
+      customWidgetBuilder: customWidgetBuilder,
     );
   }
 }
diff --git a/lib/widgets/overlay/custom_overlay_state.dart b/lib/widgets/overlay/custom_overlay_state.dart
index 5dde8590..25a2d665 100644
--- a/lib/widgets/overlay/custom_overlay_state.dart
+++ b/lib/widgets/overlay/custom_overlay_state.dart
@@ -36,19 +36,21 @@ abstract class CustomOverlayState<T extends StatefulWidget>
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      EasyDebounce.debounce(_tag, const Duration(seconds: 2), () {
-        OverlayControlDelegate().emitRoute = _handleBottomBarHeight;
-        OverlayControlDelegate().emitTab =
-            (tabName) => _handleBottomBarHeight(tabName, onBottomBar: true);
-        _overlayEntry = _buildOverlayEntry();
-        Overlay.of(context)?.insert(_overlayEntry!);
-        overlayController.sink.add(true);
-        _handleBottomBarHeight(
-          MainTabControlDelegate.getInstance().currentTabName(),
-          onBottomBar: true,
-        );
-      });
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        EasyDebounce.debounce(_tag, const Duration(seconds: 2), () {
+          OverlayControlDelegate().emitRoute = _handleBottomBarHeight;
+          OverlayControlDelegate().emitTab =
+              (tabName) => _handleBottomBarHeight(tabName, onBottomBar: true);
+          _overlayEntry = _buildOverlayEntry();
+          Overlay.of(context)?.insert(_overlayEntry!);
+          overlayController.sink.add(true);
+          _handleBottomBarHeight(
+            MainTabControlDelegate.getInstance().currentTabName(),
+            onBottomBar: true,
+          );
+        });
+      }
     });
   }
 
@@ -113,7 +115,7 @@ abstract class CustomOverlayState<T extends StatefulWidget>
                     children: [
                       buildSmartChatWidget(),
                       Services().getAudioWidget(),
-                      if (!Config().isBuilder)
+                      if (!ServerConfig().isBuilder)
                         Services().advertisement.getAdWidget(),
                     ],
                   ),
diff --git a/lib/widgets/overlay/mixin/smart_chat_mixin.dart b/lib/widgets/overlay/mixin/smart_chat_mixin.dart
index d149d039..3b77a709 100644
--- a/lib/widgets/overlay/mixin/smart_chat_mixin.dart
+++ b/lib/widgets/overlay/mixin/smart_chat_mixin.dart
@@ -3,7 +3,7 @@ import 'package:flutter/material.dart';
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
 import '../../../screens/chat/smartchat.dart';
-import '../../../services/index.dart' show Config;
+import '../../../services/index.dart' show ServerConfig;
 
 mixin SmartChatMixin<T extends StatefulWidget> on State<T> {
   List<String> _showOnScreens = <String>[];
@@ -11,7 +11,7 @@ mixin SmartChatMixin<T extends StatefulWidget> on State<T> {
 
   late bool _showChat;
 
-  bool get _useVendorChat => Config().isVendorType();
+  bool get _useVendorChat => ServerConfig().isVendorType();
 
   bool get _enableChat =>
       (kConfigChat['EnableSmartChat'] ?? false) &&
diff --git a/lib/widgets/product/action_button_mixin.dart b/lib/widgets/product/action_button_mixin.dart
index adf6505e..df7735d2 100644
--- a/lib/widgets/product/action_button_mixin.dart
+++ b/lib/widgets/product/action_button_mixin.dart
@@ -1,15 +1,14 @@
-import 'package:flash/flash.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/constants.dart';
+import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/cart/cart_base.dart';
 import '../../models/entities/product.dart';
 import '../../models/entities/product_variation.dart';
 import '../../models/recent_product_model.dart';
 import '../../routes/flux_navigate.dart';
-import '../../services/service_config.dart';
 import 'dialog_add_to_cart.dart';
 
 mixin ActionButtonMixin {
@@ -22,77 +21,6 @@ mixin ActionButtonMixin {
     );
   }
 
-  void _showFlashNotification(Product? product, String message, context) {
-    if (message.isNotEmpty) {
-      showFlash(
-        context: context,
-        duration: const Duration(seconds: 3),
-        persistent: !Config().isBuilder,
-        builder: (context, controller) {
-          return Flash(
-            borderRadius: BorderRadius.circular(3.0),
-            backgroundColor: Theme.of(context).errorColor,
-            controller: controller,
-            behavior: FlashBehavior.floating,
-            position: FlashPosition.top,
-            horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-            child: FlashBar(
-              icon: const Icon(
-                Icons.check,
-                color: Colors.white,
-              ),
-              content: Text(
-                message,
-                style: const TextStyle(
-                  color: Colors.white,
-                  fontSize: 18.0,
-                  fontWeight: FontWeight.w700,
-                ),
-              ),
-            ),
-          );
-        },
-      );
-    } else {
-      showFlash(
-        context: context,
-        duration: const Duration(seconds: 3),
-        persistent: !Config().isBuilder,
-        builder: (context, controller) {
-          return Flash(
-            borderRadius: BorderRadius.circular(3.0),
-            backgroundColor: Theme.of(context).primaryColor,
-            controller: controller,
-            behavior: FlashBehavior.floating,
-            position: FlashPosition.top,
-            horizontalDismissDirection: HorizontalDismissDirection.horizontal,
-            child: FlashBar(
-              icon: const Icon(
-                Icons.check,
-                color: Colors.white,
-              ),
-              title: Text(
-                product!.name!,
-                style: const TextStyle(
-                  color: Colors.white,
-                  fontWeight: FontWeight.w700,
-                  fontSize: 15.0,
-                ),
-              ),
-              content: Text(
-                S.of(context).addToCartSucessfully,
-                style: const TextStyle(
-                  color: Colors.white,
-                  fontSize: 15.0,
-                ),
-              ),
-            ),
-          );
-        },
-      );
-    }
-  }
-
   void addToCart(
     BuildContext context, {
     int quantity = 1,
@@ -117,7 +45,12 @@ mixin ActionButtonMixin {
         context: context,
         quantity: quantity,
       );
-      _showFlashNotification(product, message, context);
+      FlashHelper.message(
+        context,
+        title: message.isEmpty ? product.name : null,
+        message: message.isEmpty ? S.of(context).addToCartSucessfully : message,
+        isError: message.isNotEmpty,
+      );
     }
   }
 
diff --git a/lib/widgets/product/product_item_tile.dart b/lib/widgets/product/product_item_tile.dart
index a5ed92f5..03fb67a1 100644
--- a/lib/widgets/product/product_item_tile.dart
+++ b/lib/widgets/product/product_item_tile.dart
@@ -47,7 +47,6 @@ class ProductItemTileView extends StatelessWidget {
                 child: Stack(
                   children: <Widget>[
                     Container(
-                      margin: const EdgeInsets.only(bottom: 15.0),
                       child: getImageFeature(
                         () => onTapProduct(context),
                       ),
@@ -104,7 +103,7 @@ class ProductItemTileView extends StatelessWidget {
         size: kSize.medium,
         isResize: true,
         // height: _height,
-        fit: BoxFit.fitHeight,
+        fit: ImageTools.boxFit(config.imageBoxfit),
       ),
     );
   }
@@ -134,13 +133,15 @@ class _ProductDescription extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Padding(
-      padding: const EdgeInsets.fromLTRB(5.0, 0.0, 0.0, 0.0),
+      padding: EdgeInsets.symmetric(
+        horizontal: config.hPadding,
+        vertical: config.vPadding,
+      ),
       child: SingleChildScrollView(
         physics: const NeverScrollableScrollPhysics(),
         child: Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: <Widget>[
-            const SizedBox(height: 10),
             if (item.categoryName != null)
               Text(
                 item.categoryName!.toUpperCase(),
@@ -169,7 +170,6 @@ class _ProductDescription extends StatelessWidget {
               ),
             ProductPricing(product: item, hide: config.hidePrice),
             StockStatus(product: item, config: config),
-            const SizedBox(height: 6),
             ProductRating(
               product: item,
               config: config,
@@ -179,7 +179,7 @@ class _ProductDescription extends StatelessWidget {
                 alignment:
                     context.isRtl ? Alignment.topLeft : Alignment.topRight,
                 child: Padding(
-                  padding: const EdgeInsets.all(12),
+                  padding: const EdgeInsets.symmetric(horizontal: 12),
                   child: CartIcon(product: item, config: config),
                 ),
               ),
@@ -188,7 +188,6 @@ class _ProductDescription extends StatelessWidget {
                 padding: const EdgeInsets.only(right: 8),
                 child: CartQuantity(product: item, config: config),
               ),
-            const SizedBox(height: 15),
             Row(
               mainAxisAlignment: MainAxisAlignment.spaceBetween,
               children: <Widget>[
@@ -208,7 +207,6 @@ class _ProductDescription extends StatelessWidget {
                 const SizedBox(width: 8),
               ],
             ),
-            const SizedBox(height: 5),
           ],
         ),
       ),
diff --git a/lib/widgets/product/product_list.dart b/lib/widgets/product/product_list.dart
index efdd1c6c..4d918375 100644
--- a/lib/widgets/product/product_list.dart
+++ b/lib/widgets/product/product_list.dart
@@ -2,7 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
 import 'package:pull_to_refresh/pull_to_refresh.dart';
 
-import '../../common/config.dart' show kProductDetail, kSaleOffProduct;
+import '../../common/config.dart' show kProductCard, kProductDetail, kSaleOffProduct;
 import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
@@ -13,6 +13,7 @@ import '../../modules/dynamic_layout/vertical/pinterest_card.dart';
 import '../../services/index.dart';
 import '../backdrop/backdrop_constants.dart';
 import '../common/no_internet_connection.dart';
+import 'product_simple_view.dart';
 
 class ProductList extends StatefulWidget {
   final List<Product>? products;
@@ -25,6 +26,7 @@ class ProductList extends StatefulWidget {
   final Function onRefresh;
   final Function onLoadMore;
   final double? ratioProductImage;
+  final num? productListItemHeight;
   final ScrollController? scrollController;
   final List<Widget>? header;
 
@@ -39,6 +41,7 @@ class ProductList extends StatefulWidget {
     required this.onLoadMore,
     this.layout = 'list',
     this.ratioProductImage,
+    this.productListItemHeight,
     this.scrollController,
     this.header,
   });
@@ -127,10 +130,13 @@ class _ProductListState extends State<ProductList> {
       widthContent =
           isTablet ? widthScreen / 3 : (widthScreen / 2); //two columns
     }
-    var itemHeight = kProductDetail.productListItemHeight;
+    var itemHeight = widget.productListItemHeight ?? 125.0;
     if (kProductDetail.showQuantityInList) {
       itemHeight += 30;
     }
+    if (kProductCard.showCartButton) {
+      itemHeight += 30;
+    }
 
     childAspectRatio = (isTablet ? 0.94 : 1) *
         widthContent /
@@ -158,8 +164,9 @@ class _ProductListState extends State<ProductList> {
 
     Widget typeList = const SizedBox();
 
-    if (widget.layout != 'pinterest') {
-      if (widget.layout == 'listTile') {
+    if (widget.layout != Layout.pinterest) {
+      if (widget.layout == Layout.listTile ||
+          widget.layout == Layout.simpleList) {
         typeList = buildListView(products: productsList);
       } else {
         typeList = buildGridViewProduct(
@@ -262,14 +269,21 @@ class _ProductListState extends State<ProductList> {
     required List<Product>? products,
   }) {
     return ListView.builder(
-      shrinkWrap: true,
-      physics: const NeverScrollableScrollPhysics(),
-      itemCount: products!.length,
-      itemBuilder: (_, index) => Services().widget.renderProductItemTileView(
-            item: products[index],
-            padding: const EdgeInsets.only(),
-            config: ProductConfig.empty(),
-          ),
-    );
+        shrinkWrap: true,
+        physics: const NeverScrollableScrollPhysics(),
+        itemCount: products!.length,
+        itemBuilder: (_, index) {
+          if (widget.layout == Layout.simpleList) {
+            return ProductSimpleView(
+              item: products[index],
+              isFromSearchScreen: true,
+            );
+          }
+          return Services().widget.renderProductItemTileView(
+                item: products[index],
+                padding: const EdgeInsets.only(bottom: 10),
+                config: ProductConfig.empty(),
+              );
+        });
   }
 }
diff --git a/lib/widgets/product/widgets/cart_button_with_quantity.dart b/lib/widgets/product/widgets/cart_button_with_quantity.dart
index 445e7c6c..91fff7ee 100644
--- a/lib/widgets/product/widgets/cart_button_with_quantity.dart
+++ b/lib/widgets/product/widgets/cart_button_with_quantity.dart
@@ -83,8 +83,8 @@ class _CartButtonWithQuantityState extends State<CartButtonWithQuantity> {
       margin: const EdgeInsets.only(bottom: 6, right: 6),
       height: 40,
       decoration: BoxDecoration(
-        color: Colors.white,
-        border: Border.all(),
+        color: Theme.of(context).primaryColorLight,
+        border: Border.all(color: Theme.of(context).colorScheme.secondary),
         borderRadius: BorderRadius.circular(widget.borderRadiusValue),
       ),
       child: Row(
@@ -125,10 +125,10 @@ class _CartButtonWithQuantityState extends State<CartButtonWithQuantity> {
         minimumSize: const Size.square(40),
         padding: EdgeInsets.zero,
       ),
-      child: const Icon(
+      child: Icon(
         Icons.add,
         size: 20,
-        color: Colors.white,
+        color: Theme.of(context).backgroundColor,
       ),
     );
   }
@@ -156,9 +156,11 @@ class _CartButtonWithQuantityState extends State<CartButtonWithQuantity> {
 
   void increaseQuantity() {
     widget.increaseQuantityFunction();
-    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
-      if (_quantity == 0) {
-        hideQuantity();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        if (_quantity == 0) {
+          hideQuantity();
+        }
       }
     });
   }
diff --git a/lib/widgets/product/widgets/pricing.dart b/lib/widgets/product/widgets/pricing.dart
index 5dc755ea..b8d973cf 100644
--- a/lib/widgets/product/widgets/pricing.dart
+++ b/lib/widgets/product/widgets/pricing.dart
@@ -50,7 +50,7 @@ class ProductPricing extends StatelessWidget {
                 )}'
               : priceProduct == '0.0'
                   ? S.of(context).loading
-                  : Config().isListingType
+                  : ServerConfig().isListingType
                       ? PriceTools.getCurrencyFormatted(
                           product.price ?? product.regularPrice ?? '0', null)!
                       : PriceTools.getPriceProduct(
diff --git a/lib/widgets/product/widgets/quantity_selection.dart b/lib/widgets/product/widgets/quantity_selection.dart
index be934760..d434f5f8 100644
--- a/lib/widgets/product/widgets/quantity_selection.dart
+++ b/lib/widgets/product/widgets/quantity_selection.dart
@@ -55,6 +55,9 @@ class _QuantitySelectionState extends State<QuantitySelection> {
     if (oldWidget.limitSelectQuantity != widget.limitSelectQuantity) {
       changeQuantity(widget.value ?? 1, forceUpdate: true);
     }
+    if (oldWidget.value != widget.value) {
+      _textController.text = widget.value?.toString() ?? '';
+    }
   }
 
   @override
@@ -257,7 +260,7 @@ class _QuantitySelectionState extends State<QuantitySelection> {
   void showOptions(context) {
     showModalBottomSheet(
         context: context,
-        useRootNavigator: !Config().isBuilder,
+        useRootNavigator: !ServerConfig().isBuilder,
         builder: (BuildContext context) {
           return Column(
             mainAxisSize: MainAxisSize.min,
diff --git a/lib/widgets/product/widgets/stock_status.dart b/lib/widgets/product/widgets/stock_status.dart
index fa634a70..732e991e 100644
--- a/lib/widgets/product/widgets/stock_status.dart
+++ b/lib/widgets/product/widgets/stock_status.dart
@@ -1,6 +1,6 @@
 import 'package:flutter/material.dart';
 
-import '../../../common/theme/colors.dart';
+import '../../../common/config.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/index.dart' show Product;
 import '../../../modules/dynamic_layout/config/product_config.dart';
@@ -21,8 +21,8 @@ class StockStatus extends StatelessWidget {
       if (product.backordersAllowed) {
         return Text(
           S.of(context).backOrder,
-          style: const TextStyle(
-            color: kColorBackOrder,
+          style: TextStyle(
+            color: kStockColor.backorder,
             fontWeight: FontWeight.w500,
             fontSize: 12,
           ),
@@ -33,7 +33,8 @@ class StockStatus extends StatelessWidget {
         return Text(
           product.inStock! ? S.of(context).inStock : S.of(context).outOfStock,
           style: TextStyle(
-            color: product.inStock! ? Theme.of(context).primaryColor : kColorOutOfStock,
+            color:
+                product.inStock! ? kStockColor.inStock : kStockColor.outOfStock,
             fontWeight: FontWeight.w500,
             fontSize: 12,
           ),
diff --git a/lib/widgets/scanner/scanner.dart b/lib/widgets/scanner/scanner.dart
index c85febe2..df6e3a29 100644
--- a/lib/widgets/scanner/scanner.dart
+++ b/lib/widgets/scanner/scanner.dart
@@ -1,3 +1,4 @@
+import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 import 'package:qr_code_scanner/qr_code_scanner.dart';
@@ -11,6 +12,7 @@ import 'scanner_model.dart';
 
 class Scanner extends StatelessWidget {
   final User? user;
+
   const Scanner({Key? key, this.user}) : super(key: key);
 
   @override
@@ -26,6 +28,7 @@ class Scanner extends StatelessWidget {
 
 class ScannerIndex extends StatefulWidget {
   final User? user;
+
   const ScannerIndex({Key? key, this.user}) : super(key: key);
 
   @override
@@ -38,11 +41,16 @@ class _ScannerIndexState extends State<ScannerIndex> {
 
   var _isScanning = false;
 
+  bool _didCallback = false;
+
   // In order to get hot reload to work we need to pause the camera if the platform
   // is android, or resume the camera if the platform is iOS.
   @override
   void reassemble() {
     super.reassemble();
+    if (kReleaseMode) {
+      return;
+    }
     if (isAndroid) {
       controller?.pauseCamera();
     } else if (isIos) {
@@ -106,9 +114,13 @@ class _ScannerIndexState extends State<ScannerIndex> {
     _isScanning = false;
   }
 
-  void _onQRViewCreated(QRViewController controller) {
+  Future<void> _onQRViewCreated(QRViewController controller) async {
     this.controller = controller;
     final model = Provider.of<ScannerModel>(context, listen: false);
+    if (isAndroid) {
+      // Android not open camera on first time.
+      await controller.resumeCamera();
+    }
     controller.scannedDataStream.listen((scanData) {
       if (_isScanning) {
         return;
@@ -154,8 +166,13 @@ class _ScannerIndexState extends State<ScannerIndex> {
           QRView(
             key: qrKey,
             onQRViewCreated: _onQRViewCreated,
-            onPermissionSet: (controller, result) {
-              if (!result) {
+            onPermissionSet: (controller, result) async {
+              if (_didCallback) {
+                return;
+              }
+              _didCallback = true;
+
+              if (!result && Navigator.of(context).canPop()) {
                 Navigator.of(context).pop();
               }
             },
diff --git a/lib/widgets/scanner/scanner_button.dart b/lib/widgets/scanner/scanner_button.dart
index e2736239..05d7cad2 100644
--- a/lib/widgets/scanner/scanner_button.dart
+++ b/lib/widgets/scanner/scanner_button.dart
@@ -1,39 +1,75 @@
+import 'dart:async';
+
+import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:permission_handler/permission_handler.dart';
 
 import '../../common/constants.dart';
+import '../../common/tools/flash.dart';
+import '../../generated/l10n.dart';
 import '../../models/entities/user.dart';
 import '../../routes/flux_navigate.dart';
+import '../../screens/request/camera_permission.dart';
 import '../../services/service_config.dart';
 import 'scanner.dart';
 
 class ScannerButton extends StatelessWidget {
   final User? user;
   final IconData? customIcon;
+
   const ScannerButton({Key? key, this.user, this.customIcon}) : super(key: key);
 
+  Future navigateToScanner() {
+    return FluxNavigate.push(
+      MaterialPageRoute(
+        builder: (_) => Scanner(
+          key: UniqueKey(),
+          user: user,
+        ),
+      ),
+    );
+  }
+
   @override
   Widget build(BuildContext context) {
-    if (!Config().isWooType || Config().isListingType) {
+    if (!ServerConfig().isWooType || ServerConfig().isListingType) {
       return const SizedBox();
     }
     return IconButton(
-        onPressed: () {
-          if (isIos || isAndroid) {
-            FluxNavigate.push(
+        onPressed: () async {
+          if (!isIos && !isAndroid) {
+            return FluxNavigate.push(
+              MaterialPageRoute(builder: (_) => const FakeBarcodeScreen()),
+            );
+          }
+          final hasPermission =
+              await Permission.camera.status == PermissionStatus.granted;
+          if (!hasPermission) {
+            final result = await FluxNavigate.push(
               MaterialPageRoute(
-                builder: (_) => Scanner(
-                  key: UniqueKey(),
-                  user: user,
+                builder: (_) => CameraPermissionRequestScreen(
+                  onAppSettingsCallback: (bool hasPermission) {
+                    if (!hasPermission) {
+                      unawaited(
+                        FlashHelper.errorBar(
+                          context,
+                          message: S.of(context).noCameraPermissionIsGranted,
+                        ),
+                      );
+                      return;
+                    }
+                  },
                 ),
               ),
             );
-          } else {
-            FluxNavigate.push(
-              MaterialPageRoute(builder: (_) => const FakeBarcodeScreen()),
-            );
+            if (result != true) {
+              /// User pressed back or denied.
+              return;
+            }
           }
+          return navigateToScanner();
         },
-        icon: Icon(customIcon ?? Icons.qr_code));
+        icon: Icon(customIcon ?? CupertinoIcons.barcode_viewfinder));
   }
 }
 
@@ -49,7 +85,7 @@ class FakeBarcodeScreen extends StatelessWidget {
       ),
       body: const Center(
         child: Icon(
-          Icons.qr_code,
+          CupertinoIcons.barcode_viewfinder,
           size: 200.0,
         ),
       ),
diff --git a/lib/widgets/web_layout/appbar_web.dart b/lib/widgets/web_layout/appbar_web.dart
index 0514eb19..b3c304b5 100644
--- a/lib/widgets/web_layout/appbar_web.dart
+++ b/lib/widgets/web_layout/appbar_web.dart
@@ -61,16 +61,10 @@ class _AppBarWebState extends State<AppBarWeb> with WebLayoutMixin {
 
   void _onTapCart() => FluxNavigate.pushNamed(RouteList.cart);
 
-  void _onTapLogo() {
-    if (Navigator.of(context).canPop()) {
-      Navigator.of(context).pushNamedAndRemoveUntil(
+  void _onTapLogo() => FluxNavigate.pushNamedAndRemoveUntil(
         RouteList.home,
         (route) => false,
       );
-    } else {
-      widget.onRefresh?.call();
-    }
-  }
 
   @override
   Widget build(BuildContext context) {
diff --git a/lib/widgets/web_layout/widgets/button_language.dart b/lib/widgets/web_layout/widgets/button_language.dart
index 397de437..c2b601af 100644
--- a/lib/widgets/web_layout/widgets/button_language.dart
+++ b/lib/widgets/web_layout/widgets/button_language.dart
@@ -9,84 +9,177 @@ import '../../../services/service_config.dart';
 class ButtonChooseLanguage extends StatefulWidget {
   final TextStyle? style;
   final double width;
-  const ButtonChooseLanguage({Key? key, this.style, this.width = 95})
+  const ButtonChooseLanguage({Key? key, this.style, this.width = 120})
       : super(key: key);
 
   @override
   State<ButtonChooseLanguage> createState() => _ButtonChooseLanguageState();
 }
 
-class _ButtonChooseLanguageState extends BaseScreen<ButtonChooseLanguage> {
-  var dropdownValue = <dynamic, dynamic>{};
+class _ButtonChooseLanguageState extends BaseScreen<ButtonChooseLanguage>
+    with TickerProviderStateMixin {
+  final _listLanguage = <Map<dynamic, dynamic>>[];
+  var _dropdownValue = <dynamic, dynamic>{};
+  OverlayEntry? overlayEntry;
+
   @override
   void afterFirstLayout(BuildContext context) {
-    initApp();
+    Future.delayed(const Duration(seconds: 1)).then((value) => _loadLanguage());
     super.afterFirstLayout(context);
   }
 
-  void onChanged(Map? lang) async {
-    if (lang != null) {
-      await Provider.of<AppModel>(context, listen: false)
-          .changeLanguage(lang['code'], context);
+  void _onChanged(Map? lang) {
+    _hide();
 
-      WidgetsBinding.instance.addPostFrameCallback((_) => initApp());
+    if (lang != null && lang != _dropdownValue) {
+      setState(() {
+        _dropdownValue = lang;
+      });
+      Provider.of<AppModel>(context, listen: false)
+          .changeLanguage(lang['code'], context)
+          .then((value) => _loadLanguage());
     }
   }
 
-  var listLanguage = <Map<dynamic, dynamic>>[];
-
-  void initApp() async {
-    var languages = getLanguages(context);
-    listLanguage.clear();
-
+  void _loadLanguage() {
+    var languages = getLanguages();
+    _listLanguage.clear();
     for (var i = 0; i < languages.length; i++) {
-      if (Config().isVendorManagerType()) {
-        if (Configurations.unsupportedLanguages
+      if (ServerConfig().isVendorManagerType()) {
+        if (unsupportedLanguages
             .contains(languages[i]['code'])) {
           continue;
         }
       }
       if (Provider.of<AppModel>(context, listen: false).langCode ==
           languages[i]['code']) {
-        dropdownValue = languages[i];
+        _dropdownValue = languages[i];
       }
 
-      listLanguage.add(languages[i]);
+      _listLanguage.add(languages[i]);
     }
+
     setState(() {});
   }
 
   @override
   Widget build(BuildContext context) {
-    return DropdownButton<Map>(
-      key: ValueKey('${listLanguage.length}${dropdownValue['text']}'),
-      value: dropdownValue,
-      onChanged: onChanged,
-      items: List.generate(
-        listLanguage.length,
-        (index) => DropdownMenuItem<Map>(
-          value: listLanguage[index],
-          child: SizedBox(
-            width: widget.width,
-            child: Row(
-              children: [
-                Image.asset(listLanguage[index]['icon'],
+    return SizedBox(
+      width: widget.width,
+      child: GestureDetector(
+        key: globalKeyCenterButton,
+        onTap: _showOverLay,
+        child: Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          children: [
+            _dropdownValue['icon'] == null
+                ? const SizedBox(width: 30, height: 20)
+                : Image.asset(
+                    _dropdownValue['icon'],
                     width: 30,
                     height: 20,
-                    fit: BoxFit.cover, errorBuilder: (_, __, ___) {
-                  return const SizedBox(width: 30, height: 20);
-                }),
-                const SizedBox(width: 5),
-                Expanded(
-                    child: Text(
-                  listLanguage[index]['text'],
+                    fit: BoxFit.cover,
+                    errorBuilder: (_, __, ___) {
+                      return const SizedBox(width: 30, height: 20);
+                    },
+                  ),
+            Expanded(
+              child: Padding(
+                padding: const EdgeInsets.only(left: 5),
+                child: Text(
+                  _dropdownValue['text'] ?? 'Language',
                   style: widget.style,
-                )),
-              ],
+                ),
+              ),
             ),
-          ),
+            const Icon(Icons.keyboard_arrow_down_rounded, size: 20)
+          ],
         ),
       ),
     );
   }
+
+  GlobalKey globalKeyCenterButton = GlobalKey();
+
+  Future<void> _showOverLay() async {
+    var renderBox =
+        globalKeyCenterButton.currentContext!.findRenderObject() as RenderBox?;
+    var offset = renderBox!.localToGlobal(Offset.zero);
+
+    var overlayState = Overlay.of(context);
+    if (overlayState == null) {
+      return;
+    }
+
+    overlayEntry = OverlayEntry(
+      builder: (context) => Stack(
+        children: [
+          GestureDetector(
+            onTap: _hide,
+            child: Container(
+              color: Colors.transparent,
+            ),
+          ),
+          Positioned(
+            left: offset.dx,
+            top: offset.dy,
+            child: Material(
+              child: Card(
+                child: Container(
+                  height: MediaQuery.of(context).size.height * 0.4,
+                  padding: const EdgeInsets.only(left: 5),
+                  child: SingleChildScrollView(
+                    child: Column(
+                      mainAxisSize: MainAxisSize.min,
+                      mainAxisAlignment: MainAxisAlignment.center,
+                      children: List.generate(
+                        _listLanguage.length,
+                        (index) => GestureDetector(
+                          onTap: () => _onChanged(_listLanguage[index]),
+                          child: Container(
+                            margin: const EdgeInsets.only(bottom: 10),
+                            color: _listLanguage[index]['code'] ==
+                                    _dropdownValue['code']
+                                ? Theme.of(context)
+                                    .primaryColor
+                                    .withOpacity(0.5)
+                                : Colors.transparent,
+                            width: widget.width,
+                            child: Center(
+                              child: Row(
+                                children: [
+                                  Image.asset(_listLanguage[index]['icon'],
+                                      width: 30, height: 20, fit: BoxFit.cover,
+                                      errorBuilder: (_, __, ___) {
+                                    return const SizedBox(
+                                        width: 30, height: 20);
+                                  }),
+                                  const SizedBox(width: 5),
+                                  Expanded(
+                                      child: Text(
+                                    _listLanguage[index]['text'],
+                                    style: widget.style,
+                                  )),
+                                ],
+                              ),
+                            ),
+                          ),
+                        ),
+                      ),
+                    ),
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+
+    overlayState.insert(overlayEntry!);
+  }
+
+  void _hide() {
+    overlayEntry!.remove();
+  }
 }
diff --git a/pubspec.yaml b/pubspec.yaml
index ed64cd46..90b76936 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -12,10 +12,10 @@ description: Mobile commerce app by Flutter
 # In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
 # Read more about iOS versioning at
 # https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
-version: 3.0.2+3022
+version: 3.0.5+3022
 
 environment:
-  sdk: ">=2.16.0 <=3.0.0"
+  sdk: ">=2.17.6 <3.0.0"
 
 dependencies:
   flutter:
@@ -23,46 +23,61 @@ dependencies:
   flutter_localizations:
     sdk: flutter
 
-  inspireui: 1.1.4
+  inspireui: 1.1.7
 
   # Base
   intl: 0.17.0
   crypto: 3.0.2
   path_provider: 2.0.11
-  url_launcher: 6.1.2
+  url_launcher: 6.1.5
   localstorage: 4.0.0+1
-  http: 0.13.4
+  http: 0.13.5
   http_auth: 1.0.1
   share: 2.0.4
   tuple: 2.0.0
   shared_preferences: 2.0.15
   collection: 1.16.0
   quiver: 3.1.0
-  async: 2.9.0
+  async: 2.8.2
   html: 0.15.0
   vector_math: 2.1.2
   path: 1.8.1
-  flutter_svg: 1.1.0
+  flutter_svg: 1.1.2
 
   # FIREBASE PACKAGES
-  firebase_core: 1.17.1
-  firebase_analytics: 9.1.9
-  firebase_auth: 3.3.19
-  firebase_remote_config: 2.0.8
-  firebase_dynamic_links: 4.2.5
-  cloud_firestore: 3.1.17
+  firebase_core: 1.20.0
+  firebase_analytics: 9.3.0
+  firebase_auth: 3.6.2
+  firebase_remote_config: 2.0.13
+  firebase_dynamic_links: 4.3.3
+  cloud_firestore: 3.4.3
+
+  # Additional Firebase packages. To prevent unexpected upgrade.
+  firebase_core_platform_interface: 4.5.0
+  firebase_analytics_platform_interface: 3.3.0
+  firebase_auth_platform_interface: 6.5.2
+  firebase_dynamic_links_platform_interface: 0.2.3+8
+  firebase_messaging_platform_interface: 4.1.0
+  firebase_remote_config_platform_interface: 1.1.12
+
+  # PUSH NOTIFICATION
+  firebase_messaging: 12.0.1
+  notification_permissions: 0.6.1
+  flutter_local_notifications: 9.7.0
+  onesignal_flutter: 3.4.0
 
   # STATE MANAGEMENT
   provider: 6.0.3
   get_it: 7.2.0
 
   # SPLASH SCREEN, ONBOARD
-  lottie: 1.3.0
+  lottie: 1.4.0
+  rive: 0.9.1
 
   # WEB TOOLS
   html_unescape: 2.0.0
   webview_flutter: 3.0.4
-  webview_flutter_web: 0.1.0+3
+  webview_flutter_web: 0.1.0+4
   responsive_builder: 0.4.2
   flutter_inappwebview: 5.4.3+7
 
@@ -74,79 +89,75 @@ dependencies:
   fwfh_chewie: 0.7.0+1
 
   # MAP
-  google_maps_flutter: 2.1.7
-  geocode: 1.0.1
+  google_maps_flutter: 2.1.10
+  geocode: 1.0.2
   location: 4.4.0
 
   # AUTHENTICATION
   the_apple_sign_in: 1.1.1
-  flutter_facebook_auth: 4.3.4+2
-  google_sign_in: 5.3.3
+  flutter_facebook_auth: 4.4.0+1
+  google_sign_in: 5.4.0
   sms_autofill: 2.2.0
 
-  # PUSH NOTIFICATION
-  firebase_messaging: 11.4.1
-  notification_permissions: 0.6.1
-  flutter_local_notifications: 9.6.0
-  onesignal_flutter: 3.3.1
+  # PERMISSION
+  # Don't upgrade permission_handler to 10+ version. file_picker is not ready for Android 13.
+  permission_handler: 9.2.0
 
   # FILES, IMAGES
-  file_picker: 4.6.1
+  file_picker: 5.0.1
   cached_network_image: 3.2.1
   image: 3.2.0
   transparent_image: 2.0.0
   image_picker: 0.8.5+3
   flutter_native_image: 0.0.6+1
   flutter_cache_manager: 3.3.0
-  wechat_assets_picker: 7.3.2
-  photo_manager: 2.1.2
-
-  # ADS
-  google_mobile_ads: 1.2.0
+  wechat_assets_picker: 7.3.4
+  photo_manager: 2.1.4
 
   # TOOLS
   google_fonts: 3.0.1
   random_string: 2.3.1
-  json_annotation: 4.5.0
+  json_annotation: 4.6.0
   timeago: 3.2.2
   universal_platform: 1.0.0+1
   uuid: 3.0.6
   easy_debounce: 2.0.2+1
-  devicelocale: 0.5.2
+  devicelocale: 0.5.2 # update new version require new compileSdkVersion
   visibility_detector: 0.3.3
   rate_my_app: 1.1.3
   flutter_linkify: 5.0.2
   gms_check: 1.0.0
   new_version: 0.3.1
-  video_player: 2.4.4
+  video_player: 2.4.5
+  in_app_update: 3.0.0
+  google_mobile_ads: 2.0.0
 
   # UI
   flutter_spinkit: 5.1.0
   smooth_page_indicator: 1.0.0+2
   animated_text_kit: 4.2.2
-  flash: 2.0.3+2
-  flutter_staggered_grid_view: 0.6.1
+  flash: 2.0.3+3
+  flutter_staggered_grid_view: 0.6.2
   pin_code_fields: 7.4.0
   country_code_picker: 2.0.2
   country_pickers: 2.0.0
-  intro_slider: 3.0.7
   dropdown_search: 5.0.2
-  flutter_zoom_drawer: 3.0.2
+  intro_slider: 3.0.9
+  flutter_zoom_drawer: 3.0.3
   extended_image: 6.2.1
   dotted_decoration: 2.0.0
   awesome_card: 1.1.7
   maps_launcher: 2.0.1
   qr_code_scanner: 1.0.0
+  flutter_calendar_carousel: 2.4.0
+
 
   ### Native Payment
-  razorpay_flutter: 1.3.0
+  razorpay_flutter: 1.3.2
   paytm_allinonesdk: 1.1.7
-
-  #### For Listing App
-  carousel_slider: 4.1.1
-
-  #### For Shopify GraphQL
-  graphql: 5.1.1
+  flutter_paystack:
+    git: https://github.com/inspireui/flutter_paystack
+  flutterwave_standard: 1.0.4
 
   ### Flutter 3 fix warning
   charts_flutter:
@@ -160,20 +171,30 @@ dependencies:
       path: packages/fwfh_webview
   flutter_swiper_null_safety:
     git: https://github.com/inspireui/flutter_swiper_null_safety
-  
   flare_flutter:
     git:
       url: https://github.com/inspireui/Flare-Flutter.git
       ref: fd4bcba22aae4c028286e453deeb78f3311e689a
       path: flare_flutter
-  rive:
-    git: https://github.com/inspireui/rive-flutter
   pull_to_refresh:
     git: https://github.com/inspireui/flutter_pulltorefresh
-  flutter_calendar_carousel:
+
+
+  ##---- Extended features ------ ###
+  ## Native payment
+  pay: 1.0.10
+  flutter_stripe: 4.0.0
+  stripe_android: 4.0.0
+  stripe_ios: 4.0.0
+  stripe_platform_interface: 4.0.0
+  stripe_sdk:
+    git:
+      url: https://github.com/inspireui/stripe-sdk
+      ref: 73acb5aea148b1c442f739037557e1cdf9339ba0
+  myfatoorah_flutter:
     git:
-      url: https://github.com/inspireui/flutter_calendar_carousel.git
-      ref: 7e1249dfdbd8cb61b7b7e1d0a48cae0eba7ad3ca
+      url: https://github.com/inspireui/myfatoorah_flutter.git
+      ref: 9e6b4c1af37751a80d70ca896ef02b7b0ce19b04
 
   ###---- Some extra featureen is disable by default -----###
   ### 💳 Facebook Ads
@@ -183,7 +204,7 @@ dependencies:
 
 dev_dependencies:
   flutter_lints: 2.0.1
-  flutter_native_splash: 2.2.3
+  flutter_native_splash: 2.2.7
 
 ### Enable to use Flutter Test Driver
 #  flutter_driver:
@@ -216,6 +237,12 @@ flutter:
     - assets/images/favicon/
     - assets/html/
     - google_fonts/
+    -
+### Uncomment to use custom font
+#  fonts:
+#    - family: Your Custom Font
+#      fonts:
+#      - asset: google_fonts/GE-Hili-Book.ttf
 
 flutter_intl:
   enabled: true
diff --git a/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/generated_plugin_registrant.cc
index f5f16c31..740d7ec0 100644
--- a/windows/flutter/generated_plugin_registrant.cc
+++ b/windows/flutter/generated_plugin_registrant.cc
@@ -7,11 +7,14 @@
 #include "generated_plugin_registrant.h"
 
 #include <maps_launcher/maps_launcher_plugin.h>
+#include <permission_handler_windows/permission_handler_windows_plugin.h>
 #include <url_launcher_windows/url_launcher_windows.h>
 
 void RegisterPlugins(flutter::PluginRegistry* registry) {
   MapsLauncherPluginRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("MapsLauncherPlugin"));
+  PermissionHandlerWindowsPluginRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("PermissionHandlerWindowsPlugin"));
   UrlLauncherWindowsRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("UrlLauncherWindows"));
 }
diff --git a/windows/flutter/generated_plugins.cmake b/windows/flutter/generated_plugins.cmake
index 4cdcc3e8..cd4769e4 100644
--- a/windows/flutter/generated_plugins.cmake
+++ b/windows/flutter/generated_plugins.cmake
@@ -4,6 +4,7 @@
 
 list(APPEND FLUTTER_PLUGIN_LIST
   maps_launcher
+  permission_handler_windows
   url_launcher_windows
 )
 
-- 
2.37.0

